<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>42th openheart</title>
    <link>https://www.openheart.icu/</link>
    <description>Recent content on 42th openheart</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>ALL RIGHTS RESERVED KRIS NIE</copyright>
    <lastBuildDate>Sun, 17 Oct 2021 11:35:34 +0000</lastBuildDate>
    
        <atom:link href="https://www.openheart.icu/index.xml" rel="self" type="application/rss+xml" />
    
    
    
        <item>
        <title>Dependency Injection</title>
        <link>https://www.openheart.icu/cs/dependency-injection/</link>
        <pubDate>Thu, 15 Oct 2020 23:28:00 +0000</pubDate>
        
        <guid>https://www.openheart.icu/cs/dependency-injection/</guid>
        <description>42th openheart https://www.openheart.icu/cs/dependency-injection/ -&lt;h1 id=&#34;dependency-injection&#34;&gt;Dependency Injection&lt;/h1&gt;
&lt;h2 id=&#34;ioc&#34;&gt;IOC&lt;/h2&gt;
&lt;p&gt;Spring 框架为Java提供了IOC（Inversion of Control），只是提供了一个服务容器，程序控制我们需要的对象，而不是在使用对象时我们亲自直接控制。既然提到了IOC就详细了解一下这种设计思想：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.openheart.icu/image/Coupling-20200808133032885.png&#34; alt=&#34;Coupling-20200808133032885.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;为了解决对象间耦合度过高的问题，软件专家Michael Mattson提出了IOC理论，用来实现对象之间的“解耦”。&lt;/p&gt;
&lt;p&gt;控制反转是一种是面向对象编程中的一种设计原则，用来减低计算机代码之间的耦合度。其基本思想是：借助于“第三方”实现具有依赖关系的对象之间的解耦。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.openheart.icu/image/IOC-20200808134840983.png&#34; alt=&#34;IOC-20200808134840983&#34;&gt;&lt;/p&gt;
&lt;p&gt;软件系统在没有引入IOC容器之前，对象A依赖于对象B，那么对象A在初始化或者运行到某一点的时候，自己必须主动去创建对象B或者使用已经创建的对象B。无论是创建还是使用对象B，控制权都在自己手上。&lt;/p&gt;
&lt;p&gt;软件系统在引入IOC容器之后，这种情形就完全改变了，由于IOC容器的加入，对象A与对象B之间失去了直接联系，所以，当对象A运行到需要对象B的时候，IOC容器会主动创建一个对象B注入到对象A需要的地方。&lt;/p&gt;
&lt;p&gt;通过前后的对比，我们不难看出来：对象A获得依赖对象B的过程，由主动行为变为了被动行为，控制权颠倒过来了，这就是“控制反转”这个名称的由来。&lt;/p&gt;
&lt;p&gt;控制反转可以用来减低计算机代码之间的耦合度。 其中最常见的方式叫做依赖注入（Dependency Injection，简称DI），还有一种方式叫“依赖查找”（Dependency Lookup）。&lt;/p&gt;
&lt;h2 id=&#34;dip&#34;&gt;DIP&lt;/h2&gt;
&lt;p&gt;要了解控制反转( Inversion of Control ), 我觉得有必要先了解软件设计的一个重要思想：依赖倒置原则（Dependency Inversion Principle ）。&lt;/p&gt;
&lt;p&gt;依赖倒置原则（Dependence Inversion Principle）是程序要依赖于抽象接口，不要依赖于具体实现。 简单的说就是要求对抽象进行编程，不要对实现进行编程，这样就降低了客户与实现模块间的耦合。&lt;/p&gt;
&lt;p&gt;在&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B&#34;&gt;面向对象编程&lt;/a&gt;领域中，&lt;strong&gt;依赖反转原则&lt;/strong&gt;（Dependency inversion principle，DIP）是指一种特定的&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E8%80%A6%E5%90%88%E6%80%A7_(%E8%A8%88%E7%AE%97%E6%A9%9F%E7%A7%91%E5%AD%B8)&#34;&gt;解耦&lt;/a&gt;（传统的&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E8%80%A6%E5%90%88%E6%80%A7_(%E8%A8%88%E7%AE%97%E6%A9%9F%E7%A7%91%E5%AD%B8)&#34;&gt;依赖&lt;/a&gt;关系创建在高层次上，而具体的策略设置则应用在低层次的模块上）形式，使得高层次的模块不依赖于低层次的模块的实现细节，依赖关系被颠倒（反转），从而使得低层次模块依赖于高层次模块的需求抽象。&lt;/p&gt;
&lt;p&gt;该原则规定：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;高层次的模块不应该依赖于低层次的模块，两者都应该依赖于&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E6%8A%BD%E8%B1%A1%E5%8C%96_(%E8%A8%88%E7%AE%97%E6%A9%9F%E7%A7%91%E5%AD%B8)&#34;&gt;抽象接口&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;抽象接口不应该依赖于具体实现。而具体实现则应该依赖于抽象接口。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;该原则颠倒了一部分人对于面向对象设计的认识方式。如高层次和低层次对象都应该依赖于相同的抽象接口。控制反转就是依赖倒置原则的一种代码设计的思路。具体采用的方法就是所谓的依赖注入（Dependency Injection）。&lt;/p&gt;
&lt;p&gt;设计模式中的五大原则 &lt;a href=&#34;https://zh.wikipedia.org/wiki/SOLID_(%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%AE%BE%E8%AE%A1)&#34;&gt;SOLID&lt;/a&gt; 中的 D 指代的就是依赖反转原则。&lt;/p&gt;
&lt;p&gt;eg: &lt;a href=&#34;https://flylib.com/books/en/4.444.1.71/1/&#34;&gt;Lamp and Button：A Simple DIP Example&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;di&#34;&gt;DI&lt;/h2&gt;
&lt;h3 id=&#34;ioc与di的区别&#34;&gt;IOC与DI的区别&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;控制反转是一种在软件工程中解耦合的思想，调用类只依赖接口，而不依赖具体的实现类，减少了耦合。控制权交给了容器，在运行的时候才由容器决定将具体的实现动态的“注入”到调用类的对象中。&lt;/li&gt;
&lt;li&gt;依赖注入是一种设计模式，可以作为控制反转的一种实现方式。依赖注入就是将实例变量传入到一个对象中去(Dependency injection means giving an object its instance variables)。&lt;/li&gt;
&lt;li&gt;通过IOC框架，类A依赖类B的强耦合关系可以在运行时通过容器建立，也就是说把创建B实例的工作移交给容器，类A只管使用就可以。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;.net core 框架自带&lt;a href=&#34;https://docs.microsoft.com/en-us/dotnet/api/system.iserviceprovider&#34;&gt;IServiceProvider&lt;/a&gt;以实现依赖注入&lt;/p&gt;
&lt;h3 id=&#34;lifetime&#34;&gt;LifeTime&lt;/h3&gt;
&lt;p&gt;MSDN指出了有关&lt;code&gt;AddTransient&lt;/code&gt;/&lt;code&gt;AddScoped&lt;/code&gt;/&lt;code&gt;AddSingleton&lt;/code&gt;的区别，并带有一个小示例：&lt;/p&gt;
&lt;p&gt;创建一个Operation接口然后分别对应实现上述三种依赖注入，为Operation添加属性&lt;code&gt;Guid OperationId&lt;/code&gt;，凭借此属性值，我们可以在逻辑层与controller控制器中分别implement，对比两处implement的OperationId可以发现这三种模式的lifetime。（&lt;em&gt;The &lt;code&gt;IOperationSingletonInstance&lt;/code&gt; service is using a specific instance with a known ID of &lt;code&gt;Guid.Empty&lt;/code&gt;. It&amp;rsquo;s clear when this type is in use (its GUID is all zeroes).&lt;/em&gt;）&lt;/p&gt;
&lt;p&gt;IOperation：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-c#&#34; data-lang=&#34;c#&#34;&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;interface&lt;/span&gt; IOperation
{
  Guid OperationId { &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;get&lt;/span&gt;; }
}

&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;interface&lt;/span&gt; IOperationTransient : IOperation
{
}
&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;interface&lt;/span&gt; IOperationScoped : IOperation
{
}
&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;interface&lt;/span&gt; IOperationSingleton : IOperation
{
}
&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;interface&lt;/span&gt; IOperationSingletonInstance : IOperation
{
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Operation:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-c#&#34; data-lang=&#34;c#&#34;&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#008b45;font-weight:bold&#34;&gt;Operation&lt;/span&gt; : IOperation, IOperationTransient, IOperationScoped, IOperationSingleton, IOperationSingletonInstance
{
  &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; Guid OperationId { &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;get&lt;/span&gt;; }

  &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; Operation(Guid operationId)
  {
    OperationId = operationId;
  }

  &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; Operation() : &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;this&lt;/span&gt;(Guid.NewGuid())
  {
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;OperationSercice:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-c#&#34; data-lang=&#34;c#&#34;&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#008b45;font-weight:bold&#34;&gt;OperationService&lt;/span&gt;
{
  &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; IOperationTransient TransientOperation { &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;get&lt;/span&gt;; }
  &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; IOperationScoped ScopedOperation { &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;get&lt;/span&gt;; }
  &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; IOperationSingleton SingletonOperation { &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;get&lt;/span&gt;; }
  &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; IOperationSingletonInstance SingletonInstanceOperation { &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;get&lt;/span&gt;; }

  &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; OperationService(IOperationTransient transientOperation,
                          IOperationScoped scopedOperation,
                          IOperationSingleton singletonOperation,
                          IOperationSingletonInstance instanceOperation)
  {
    TransientOperation = transientOperation;
    ScopedOperation = scopedOperation;
    SingletonOperation = singletonOperation;
    SingletonInstanceOperation = instanceOperation;
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;OperationController:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-C#&#34; data-lang=&#34;C#&#34;&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#008b45;font-weight:bold&#34;&gt;OperationsController&lt;/span&gt; : Controller
{
  &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;readonly&lt;/span&gt; OperationService _operationService;
  &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;readonly&lt;/span&gt; IOperationTransient _transientOperation;
  &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;readonly&lt;/span&gt; IOperationScoped _scopedOperation;
  &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;readonly&lt;/span&gt; IOperationSingleton _singletonOperation;
  &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;readonly&lt;/span&gt; IOperationSingletonInstance _singletonInstanceOperation;

  &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; OperationsController(OperationService operationService,
                              IOperationTransient transientOperation,
                              IOperationScoped scopedOperation,
                              IOperationSingleton singletonOperation,
                              IOperationSingletonInstance singletonInstanceOperation)
  {
    _operationService = operationService;
    _transientOperation = transientOperation;
    _scopedOperation = scopedOperation;
    _singletonOperation = singletonOperation;
    _singletonInstanceOperation = singletonInstanceOperation;
  }

  &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; IActionResult Index()
  {
    &lt;span style=&#34;color:#228b22&#34;&gt;// viewbag contains controller-requested services
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;    ViewBag.Transient = _transientOperation;
    ViewBag.Scoped = _scopedOperation;
    ViewBag.Singleton = _singletonOperation;
    ViewBag.SingletonInstance = _singletonInstanceOperation;

    &lt;span style=&#34;color:#228b22&#34;&gt;// operation service has its own requested services
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;    ViewBag.Service = _operationService;
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; View();
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;两次请求对比如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.openheart.icu/image/DI-20200809140803.png&#34; alt=&#34;DI-20200809140803&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.openheart.icu/image/DI-20200809140837.png&#34; alt=&#34;DI-20200809140837&#34;&gt;&lt;/p&gt;
&lt;p&gt;观察在请求中以及请求之间的哪个&lt;code&gt;OperationId&lt;/code&gt;值有所不同。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Transient 对象总是不同的; 每个控制器和每个服务都提供了一个新的实例。&lt;/li&gt;
&lt;li&gt;Scoped 对象在请求中是相同的，但在不同的请求中是不同的。&lt;/li&gt;
&lt;li&gt;Singleton 对象对于每个对象和每个请求都是一样的（不管&lt;code&gt;ConfigureServices&lt;/code&gt;中是否提供一个实例）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;reference&#34;&gt;Reference&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E4%BE%9D%E8%B5%96%E5%8F%8D%E8%BD%AC%E5%8E%9F%E5%88%99&#34;&gt;依赖反转原则&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.jianshu.com/p/07af9dbbbc4b&#34;&gt;控制反转（IOC）与依赖注入（DI）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/91218464&#34;&gt;.NET Core中的IoC和DI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.martinfowler.com/articles/injection.html&#34;&gt;Inversion of Control Containers and the Dependency Injection pattern&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://flylib.com/books/en/4.444.1.71/1/&#34;&gt;A Simple DIP Example&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/aspnet/core/fundamentals/dependency-injection?view=aspnetcore-3.1&#34;&gt;Dependency injection in ASP.NET Core&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
- https://www.openheart.icu/cs/dependency-injection/ - ALL RIGHTS RESERVED KRIS NIE</description>
        </item>
    
    
    
        <item>
        <title>Dot Net Issue</title>
        <link>https://www.openheart.icu/cs/dot-net-issue/</link>
        <pubDate>Thu, 10 Sep 2020 11:00:35 +0000</pubDate>
        
        <guid>https://www.openheart.icu/cs/dot-net-issue/</guid>
        <description>42th openheart https://www.openheart.icu/cs/dot-net-issue/ -&lt;h1 id=&#34;hot-reload-razor-views&#34;&gt;Hot-Reload Razor Views&lt;/h1&gt;
&lt;p&gt;在mac上使用Rider创建 .net core mvc项目后发现run和debug，都无法热加载razor页面。经过Google后发现，这并不是Rider的bug，这得需要知道mvc到底是如何运行的（&lt;em&gt;it&amp;rsquo;s fundamentally how ASP.NET MVC Core works&lt;/em&gt;）。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Razor files are compiled at both &lt;strong&gt;build&lt;/strong&gt; and &lt;strong&gt;publish&lt;/strong&gt; time using the Razor SDK. Runtime compilation may be optionally enabled by configuring your application.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;使用Razor SDK在构建和发布时都会编译Razor文件。通过配置您的应用程序，可以选择启用&lt;strong&gt;运行时编译&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note that run time is not included in this list by default.&lt;/strong&gt; To change this behaviour:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Add the Nuget package &lt;a href=&#34;https://www.nuget.org/packages/Microsoft.AspNetCore.Mvc.Razor.RuntimeCompilation/&#34;&gt;&lt;code&gt;Microsoft.AspNetCore.Mvc.Razor.RuntimeCompilation&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Change your &lt;code&gt;Startup.ConfigureServices&lt;/code&gt; code to include runtime compilation:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-c#&#34; data-lang=&#34;c#&#34;&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;void&lt;/span&gt; ConfigureServices(IServiceCollection services)
{
  services
    .AddControllersWithViews()
    .AddRazorRuntimeCompilation();
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;reference&#34;&gt;Reference&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/58300922/how-to-enable-the-view-hot-reloading-in-rider&#34;&gt;How to enable the view hot-reloading in Rider? &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/zh-cn/aspnet/core/mvc/views/view-compilation?view=aspnetcore-3.0&amp;amp;tabs=visual-studio#runtime-compilation&#34;&gt;Razor file compilation in ASP.NET Core&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h1 id=&#34;watch-out-project-on-rider&#34;&gt;Watch out Project On Rider&lt;/h1&gt;
&lt;p&gt;To let Project hot-reload, we can use the &amp;ldquo;Before launch&amp;rdquo; option as a run configuration to make this happen. To do so:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Select Run -&amp;gt; Edit Configuration from the menu options&lt;/li&gt;
&lt;li&gt;Add a new &lt;code&gt;Before launch&lt;/code&gt;Click the + icon and select the &amp;ldquo;Run Executnal Tool &amp;quot; option from the list&lt;/li&gt;
&lt;li&gt;In the options that are displayed, provide the following&amp;hellip;
&lt;ul&gt;
&lt;li&gt;Name: Watch (or whatever you prefer)&lt;/li&gt;
&lt;li&gt;Exe path: /usr/local/share/dotnet/dotnet&lt;/li&gt;
&lt;li&gt;Program Arguments: watch run&lt;/li&gt;
&lt;li&gt;Working directory: [path to your project where .csproj file resides]&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Click &amp;ldquo;OK&amp;rdquo; to apply/save the changes.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;reference-1&#34;&gt;Reference&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/46349038/jetbrains-rider-run-with-watch&#34;&gt;JetBrains Rider run with watch&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h1 id=&#34;newguid&#34;&gt;NewGuid()&lt;/h1&gt;
&lt;h2 id=&#34;guid&#34;&gt;GUID&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;全局唯一标识符&lt;/strong&gt;（Globally Unique &lt;strong&gt;Id&lt;/strong&gt;entifier，缩写：&lt;strong&gt;GUID&lt;/strong&gt;；发音为/ˈɡuːɪd/或/ˈɡwɪd/）是一种由&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E7%AE%97%E6%B3%95&#34;&gt;算法&lt;/a&gt;生成的唯一标识，通常表示成32个16进制数字（0－9，A－F）组成的字符串，如：&lt;code&gt;{21EC2020-3AEA-1069-A2DD-08002B30309D}&lt;/code&gt;，它实质上是一个128位长的二进制整数。GUID一词有时也专指微软对UUID标准的实现。&lt;/p&gt;
&lt;p&gt;GUID的主要目的是产生完全唯一的数字。在理想情况下，任何计算机和计算机集群都不会生成两个相同的GUID。GUID的总数也足够大，达到了2128（3.4×1038）个，所以随机生成两个相同GUID的可能性是非常小的，但并不为0。所以，用于生成GUID的算法通常都加入了非随机的参数（时间），以保证这种重复的情况不会发生。&lt;/p&gt;
&lt;p&gt;GUID 主要用于在拥有多个节点、多台计算机的网络或系统中，分配必须具有唯一性的标识符。在 Windows 平台上，GUID 应用非常广泛：注册表、类及接口标识、数据库、甚至自动生成的机器名、目录名等。&lt;/p&gt;
&lt;p&gt;与自增长id相比较：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;缺点&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;优点&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;GUID&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;1. GUID过长，看表现形式，至少都有32位，长的38位，浪费存储空间 2. GUID是根据硬件设备相关ID以及时间戳生成的 3. GUID不利于检索、外键关联&lt;/td&gt;
&lt;td&gt;1. 一般来说不担心有冲突的影响，而且，根据GUID的生成规则，还能大致知道生成的计算机硬件设备、时间等信息（但这个有多少意义呢）2. 能在业务层就知道目标ID，而不是数据提交给数据库系统后才确定&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;自增长&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;1. 多数据库同步、读写分离十分不方便。&lt;/td&gt;
&lt;td&gt;1. 使用简单&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;systemguidnewguidtostring&#34;&gt;System.Guid.NewGuid().ToString()&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Guid.NewGuid()是指生成唯一码的规则&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;systemguidnewguidtostringformat&#34;&gt;System.Guid.NewGuid().ToString(format)&lt;/h3&gt;
&lt;p&gt;说明符 返回值的格式&lt;/p&gt;
&lt;p&gt;N 32 位字符：xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&lt;/p&gt;
&lt;p&gt;D 由连字符分隔的 32 位数字：xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx&lt;/p&gt;
&lt;p&gt;B 括在大括号中、由连字符分隔的 32 位数字：{xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx}&lt;/p&gt;
&lt;p&gt;P 括在圆括号中、由连字符分隔的 32 位数字：(xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)&lt;/p&gt;
&lt;p&gt;Guid.NewGuid().ToString()		  : 1f13a943-4c7e-4bfc-aac5-935886591424&lt;/p&gt;
&lt;p&gt;Guid.NewGuid().ToString(&amp;ldquo;N&amp;rdquo;)	: 3a81013f9ee549b38f11ee3d50f5bd78&lt;/p&gt;
&lt;p&gt;Guid.NewGuid().ToString(&amp;ldquo;D&amp;rdquo;)	: c4219375-c2c8-4639-86e8-8d910ed12186 &amp;ndash; 默认为：D&lt;/p&gt;
&lt;p&gt;Guid.NewGuid().ToString(&amp;ldquo;B&amp;rdquo;)	: {a793927d-9a1b-4d25-9562-0a59522db9c0}&lt;/p&gt;
&lt;p&gt;Guid.NewGuid().ToString(&amp;ldquo;P&amp;rdquo;)	: (a99839b9-da94-40fd-87a5-4a5e73677b1f)&lt;/p&gt;
&lt;p&gt;Guid.NewGuid().ToString(&amp;ldquo;X&amp;rdquo;)	: {0xb294a44e,0x43d9,0x4b60,{0xb5,0xb9,0x32,0x29,0xae,0x46,0x45,0x17}}&lt;/p&gt;
&lt;p&gt;&lt;em&gt;如果在程序中使用&lt;strong&gt;D&lt;/strong&gt;，则需要注意数据库字段长应为&lt;code&gt;36&lt;/code&gt;而不是32&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;model--entity--dto--viewmodel&#34;&gt;model &amp;amp; entity &amp;amp; dto &amp;amp; viewmodel&lt;/h1&gt;
&lt;h2 id=&#34;model&#34;&gt;model&lt;/h2&gt;
&lt;p&gt;model是一个模型，里面装了各种数据，将一个model传递给view，在试图页面就可以使用model里面的数据来呈现到页面上。&lt;/p&gt;
&lt;h2 id=&#34;entity&#34;&gt;entity&lt;/h2&gt;
&lt;p&gt;entity是实体，就是和数据表一一对应的，一个实体一张表&lt;/p&gt;
&lt;p&gt;官方的demo没有entity这个说法，他只有model，model就是表，也是传递给view的model，就是说他的model即是model又是entity。而我们实际运用需要将model分成ViewModel和Entity，甚至还要加入Dto。&lt;/p&gt;
&lt;h2 id=&#34;viewmodel&#34;&gt;viewmodel&lt;/h2&gt;
&lt;p&gt;MSDOC详细介绍页面直接返回一个model，这个model就是表中的一条数据。但是在我们实际建站需求中页面上怎么可能只需要一条数据就完了，很多时候还需要其他的数据。比如一个&lt;code&gt;List&amp;lt;entity&amp;gt;&lt;/code&gt;，此时就需要使用ViewModel。&lt;/p&gt;
&lt;h2 id=&#34;dtodata-transfer-object&#34;&gt;dto(Data transfer object)&lt;/h2&gt;
&lt;p&gt;entity里包含的是表所有的字段，但在实际应用的时候我们可能不会使用到所有的字段，可能只需要一个名称和编号即可，所以就需要使用dto（数据传输对象）。此时ViewModel就可以使用&lt;code&gt;List&amp;lt;dto&amp;gt;&lt;/code&gt;返回我们部分数据而不是整个表数据。&lt;/p&gt;
&lt;h2 id=&#34;final&#34;&gt;Final&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;我们可以花一部分精力去考虑这方面问题，但也不用纠结太多，头大且对项目也没太大帮助。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;reference-2&#34;&gt;Reference&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://www.zhihu.com/question/25256772/answer/194493331&#34;&gt;什么时候用Model，什么时候用Entity？ - 虚若影的回答 - 知乎&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.zhihu.com/question/25256772/answer/30290376&#34;&gt;什么时候用Model，什么时候用Entity？ - 赵劼的回答 - 知乎&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h1 id=&#34;iviewlocationexpander&#34;&gt;IViewLocationExpander&lt;/h1&gt;
&lt;p&gt;实现&lt;code&gt;IViewLocationExpander&lt;/code&gt;接口，&lt;code&gt;location&lt;/code&gt;为build时程序检查的views层路径&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-c#&#34; data-lang=&#34;c#&#34;&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#008b45;font-weight:bold&#34;&gt;ViewLocationExpander&lt;/span&gt;: IViewLocationExpander
{
  &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; IEnumerable&amp;lt;String&amp;gt; ExpandViewLocations(ViewLocationExpanderContext context, IEnumerable&amp;lt;String&amp;gt; locations)
  {
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt; (RazorViewEngine.GetNormalizedRouteValue(context.ActionContext, &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;area&amp;#34;&lt;/span&gt;) != &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;null&lt;/span&gt;)
    {
      &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;new&lt;/span&gt;[]
      {
        &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;/Views/{2}/Shared/{0}.cshtml&amp;#34;&lt;/span&gt;,
        &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;/Views/{2}/{1}/{0}.cshtml&amp;#34;&lt;/span&gt;,
        &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;/Views/Shared/{0}.cshtml&amp;#34;&lt;/span&gt;
      };
    }

    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;new&lt;/span&gt;[]
    {
      &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;/Views/{1}/{0}.cshtml&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;/Views/Shared/{0}.cshtml&amp;#34;&lt;/span&gt;
    };
  }
  &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;void&lt;/span&gt; PopulateValues(ViewLocationExpanderContext context)
  {
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在Startup注册我们的implement&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-c#&#34; data-lang=&#34;c#&#34;&gt;services.AddMvc()
  .AddRazorOptions(options =&amp;gt; options.ViewLocationExpanders.Add(&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;new&lt;/span&gt; ViewLocationExpander()));
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;reference-3&#34;&gt;Reference&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://www.c-sharpcorner.com/article/expanding-razor-view-location-and-sub-areas-in-asp-net-core/&#34;&gt;Expanding Razor View Location And Sub Areas In ASP.NET Core&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/NonFactors/AspNetCore.Template/blob/378d64f6900f0cc95eee921b5caf81d2bc9efc11/src/MvcTemplate.Components/Mvc/Razor/ViewLocationExpander.cs&#34;&gt;AspNetCore.Template/src/MvcTemplate.Components/Mvc/Razor/ViewLocationExpander.cs&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h1 id=&#34;error-the-database-provider-attempted-to-register-an-implementation&#34;&gt;Error: The database provider attempted to register an implementation&amp;hellip;&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;The database provider attempted to register an implementation of the &amp;lsquo;IRelationalTypeMappingSource&amp;rsquo; service. This is not a service defined by EF and as such must be registered as a provider-specific service using the &amp;lsquo;TryAddProviderSpecificServices&amp;rsquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;检查一下EF版本！！！&lt;/p&gt;
&lt;p&gt;You are mixing different versions of EF Core!!!&lt;/p&gt;
&lt;h2 id=&#34;reference-4&#34;&gt;Reference&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/npgsql/efcore.pg/issues/1441&#34;&gt;Cannot register IRelationalTypeMappingSource #1441&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;framework-design-guidelines&#34;&gt;Framework Design Guidelines&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/dotnet/standard/design-guidelines/naming-guidelines&#34;&gt;Naming Guidelines&lt;/a&gt;
Provides guidelines for naming assemblies, namespaces, types, and members in class libraries.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/dotnet/standard/design-guidelines/type&#34;&gt;Type Design Guidelines&lt;/a&gt;
Provides guidelines for using static and abstract classes, interfaces, enumerations, structures, and other types.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/dotnet/standard/design-guidelines/member&#34;&gt;Member Design Guidelines&lt;/a&gt;
Provides guidelines for designing and using properties, methods, constructors, fields, events, operators, and parameters.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/dotnet/standard/design-guidelines/designing-for-extensibility&#34;&gt;Designing for Extensibility&lt;/a&gt;
Discusses extensibility mechanisms such as subclassing, using events, virtual members, and callbacks, and explains how to choose the mechanisms that best meet your framework&amp;rsquo;s requirements.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/dotnet/standard/design-guidelines/exceptions&#34;&gt;Design Guidelines for Exceptions&lt;/a&gt;
Describes design guidelines for designing, throwing, and catching exceptions.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/dotnet/standard/design-guidelines/usage-guidelines&#34;&gt;Usage Guidelines&lt;/a&gt;
Describes guidelines for using common types such as arrays, attributes, and collections, supporting serialization, and overloading equality operators.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/dotnet/standard/design-guidelines/common-design-patterns&#34;&gt;Common Design Patterns&lt;/a&gt;
Provides guidelines for choosing and implementing dependency properties.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;reference-5&#34;&gt;Reference&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/dotnet/standard/design-guidelines/&#34;&gt;Framework Design Guidelines&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h1 id=&#34;analyze-code-in-visual-studio&#34;&gt;Analyze code in Visual Studio&lt;/h1&gt;
&lt;h2 id=&#34;source-code-analysis&#34;&gt;Source code analysis&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;.NET Compiler Platform (Roslyn) Analyzers inspect your C# or Visual Basic code for style, quality, maintainability, design, and other issues. This inspection or analysis is done during design time in all open files.&lt;/p&gt;
&lt;p&gt;Analyzers can be divided into the following groups:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/code-style-rule-options?preserve-view=true&amp;amp;view=vs-2019#convention-categories&#34;&gt;Code style&lt;/a&gt; analyzers are built in to Visual Studio.&lt;/strong&gt; The diagnostic ID, or code, for these analyzers is of the format IDExxxx, for example, IDE0067. You can configure preferences in the &lt;a href=&#34;https://docs.microsoft.com/en-us/visualstudio/ide/code-styles-and-code-cleanup?view=vs-2019&#34;&gt;text editor options page&lt;/a&gt; or in an &lt;a href=&#34;https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/code-style-rule-options&#34;&gt;EditorConfig file&lt;/a&gt;. Starting in .NET 5.0, code style analyzers are included with the .NET SDK and can be strictly enforced as build warnings or errors. For more information, see &lt;a href=&#34;https://docs.microsoft.com/en-us/dotnet/fundamentals/productivity/code-analysis#code-style-analysis&#34;&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/index&#34;&gt;Code quality&lt;/a&gt; analyzers are now included with the .NET 5 SDK and enabled by default. The diagnostic ID, or code, for these analyzers is of the format CAxxxx, for example, CA1822. For more information, see &lt;a href=&#34;https://docs.microsoft.com/en-us/dotnet/fundamentals/productivity/code-analysis#code-quality-analysis&#34;&gt;Overview of .NET code quality analysis&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Third party analyzers can be installed as a NuGet package or a Visual Studio extension. Third party analyzers, such as &lt;a href=&#34;https://www.nuget.org/packages/StyleCop.Analyzers/&#34;&gt;StyleCop&lt;/a&gt;, &lt;a href=&#34;https://www.nuget.org/packages/Roslynator.Analyzers/&#34;&gt;Roslynator&lt;/a&gt;, &lt;a href=&#34;https://www.nuget.org/packages/xunit.analyzers/&#34;&gt;XUnit Analyzers&lt;/a&gt;, and &lt;a href=&#34;https://www.nuget.org/packages/SonarAnalyzer.CSharp/&#34;&gt;Sonar Analyzer&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;legacy-analysis-for-managed-code&#34;&gt;Legacy analysis for managed code&lt;/h2&gt;
&lt;blockquote&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;attention&#34;&gt;Attention&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;✔️ DO name collection properties with a plural phrase describing the items in the collection instead of using a singular phrase followed by &amp;ldquo;List&amp;rdquo; or &amp;ldquo;Collection&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;✔️ DO name Boolean properties with an affirmative phrase (&lt;code&gt;CanSeek&lt;/code&gt; instead of &lt;code&gt;CantSeek&lt;/code&gt;). Optionally, you can also prefix Boolean properties with &amp;ldquo;Is&amp;rdquo;, &amp;ldquo;Can&amp;rdquo;, or &amp;ldquo;Has&amp;rdquo;, but only where it adds value.&lt;/p&gt;
&lt;p&gt;✔️ CONSIDER defining a struct instead of a class if instances of the type are small and commonly short-lived or are commonly embedded in other objects.&lt;/p&gt;
&lt;p&gt;❌ DO NOT add members to an interface that has previously shipped.&lt;/p&gt;
&lt;p&gt;Doing so would break implementations of the interface. You should create a new interface in order to avoid versioning problems.&lt;/p&gt;
&lt;p&gt;Except for the situations described in these guidelines, you should, in general, choose classes rather than interfaces in designing managed code reusable libraries.&lt;/p&gt;
&lt;p&gt;✔️ DO ensure that a state where all instance data is set to zero, false, or null (as appropriate) is valid.（Struct Design）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;controversy&#34;&gt;Controversy&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Fields Naming between &lt;em&gt;_lowerCamelCase&lt;/em&gt; and &lt;em&gt;PascalCasing&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;_camelCase&lt;/code&gt; for fields is common from what I&amp;rsquo;ve seen (it&amp;rsquo;s what we use at our place and Microsoft &lt;a href=&#34;https://github.com/dotnet/runtime/blob/main/.editorconfig&#34;&gt;prefer for the .NET Runtime&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;My personal justification for using this standard is that is is easier to type &lt;code&gt;_&lt;/code&gt; to identify a private field than &lt;code&gt;this.&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;void&lt;/span&gt; Foo(String a, String b)
{
    _a = a;
    _b = b;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Versus&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;void&lt;/span&gt; Foo(String a, String b)
{
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;this&lt;/span&gt;.a = a;
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;this&lt;/span&gt;.b = b;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;I find the first much easier to type and it prevents me from ever accidentally assigning to the parameter called &lt;code&gt;a&lt;/code&gt; instead of &lt;code&gt;this.a&lt;/code&gt;. This is reinforced by a &lt;a href=&#34;http://msdn.microsoft.com/en-us/library/dd264939.aspx&#34;&gt;Code Analysis&lt;/a&gt; Maintainability Rule that states:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://msdn.microsoft.com/en-us/library/ms182216.aspx&#34;&gt;CA1500&lt;/a&gt; Variable names should not match field names.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;My other reason, is that &lt;code&gt;this.&lt;/code&gt; is optional (Visual Studio / Code prompts you to remove them) if it doesn&amp;rsquo;t collide with a local variable or parameter name, making knowing which variable you are using harder. If you have an &lt;code&gt;_&lt;/code&gt; at the start of all private fields, then you always know which is a field and which is has local scope.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Tabs or Spaces&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;4 spaces or tabs, it&amp;rsquo;s a question.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Abbreviation&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;There is a convention, and it specifies initial uppercase, the rest lowercase, for all acronyms that are more than 2 characters long. Hence &lt;code&gt;HttpContext&lt;/code&gt; and &lt;code&gt;ClientID&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://twitter.com/brendaneich/status/1316377408027594753&#34;&gt;Chris Wilson&lt;/a&gt; （&lt;a href=&#34;https://www.linkedin.com/in/cwilso/&#34;&gt;LinkedIn&lt;/a&gt;）前微软员工如是说。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;&lt;a href=&#34;https://rads.stackoverflow.com/amzn/click/com/0321545613&#34;&gt;Framework Design Guidelines&lt;/a&gt;&amp;rdquo; 2nd edition by Krzysztof Cwalina and Brad Abrams pp.40-42&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3.1.2 Capitalizing Acronyms&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;DO&lt;/strong&gt; capitalize both characters on two-character acronyms, except the first word of a camel-cased identifier.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt;System.IO
&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;void&lt;/span&gt; StartIO(Stream ioStream)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;DO&lt;/strong&gt; capitalize only the first character of acronyms with three or more characters, except the first word of a camel-cased identifier.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt;System.Xml
&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;void&lt;/span&gt; ProcessHtmlTag(&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;string&lt;/span&gt; htmlTag)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;DO NOT&lt;/strong&gt; capitalize any of the characters of any acronyms, whatever their length, at the beginning of a camel-cased identifier.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;h2 id=&#34;using-abbreviations-and-acronyms&#34;&gt;Using Abbreviations and Acronyms&lt;/h2&gt;
&lt;p&gt;❌ DO NOT use abbreviations or contractions as part of identifier names.&lt;/p&gt;
&lt;p&gt;For example, use &lt;code&gt;GetWindow&lt;/code&gt; rather than &lt;code&gt;GetWin&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;❌ DO NOT use any acronyms that are not widely accepted, and even if they are, only when necessary.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;The PascalCasing convention, used for all identifiers except parameter names, capitalizes the first character of each word (including acronyms over two letters in length), as shown in the following examples:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;PropertyDescriptor` `HtmlTag
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;A special case is made for two-letter acronyms in which both letters are capitalized, as shown in the following identifier:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;IOStream
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The camelCasing convention, used only for parameter names, capitalizes the first character of each word except the first word, as shown in the following examples. As the example also shows, two-letter acronyms that begin a camel-cased identifier are both lowercase.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;propertyDescriptor` `ioStream` `htmlTag
&lt;/code&gt;&lt;/pre&gt;&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Guideline limit&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;80 characters&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;NameSpace&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Should the folders in a solution match the namespace?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CRUD Method Naming
&lt;ul&gt;
&lt;li&gt;CreateXXXX or InsertXXXX&lt;/li&gt;
&lt;li&gt;ReadXXXX or GetXXXXX&lt;/li&gt;
&lt;li&gt;UpdateXXXX&lt;/li&gt;
&lt;li&gt;DeleteXXXX&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;reference-6&#34;&gt;Reference&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/visualstudio/code-quality&#34;&gt;Analyze code in Visual Studio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/overview&#34;&gt;.NET source code analysis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/3186853/c-sharp-field-naming-guidelines&#34;&gt;C# Field Naming Guidelines?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/StyleCop/StyleCop&#34;&gt;StyleCop/StyleCop: Analyzes C# source code to enforce a set of style and consistency rules. &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/dotnet/csharp/fundamentals/coding-style/coding-conventions&#34;&gt;C# Coding Conventions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/dotnet/standard/design-guidelines/capitalization-conventions#capitalizing-compound-words-and-common-terms&#34;&gt;Capitalizing Compound Words and Common Terms&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/479596/what-makes-code-legacy&#34;&gt;What makes code legacy?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://softwareengineering.stackexchange.com/questions/148677/why-is-80-characters-the-standard-limit-for-code-width&#34;&gt;Why is 80 characters the &amp;lsquo;standard&amp;rsquo; limit for code width?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/4664/should-the-folders-in-a-solution-match-the-namespace&#34;&gt;Should the folders in a solution match the namespace?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/360321/crud-vs-agud-vs-afud-whats-your-naming-convention-of-preference&#34;&gt;what&amp;rsquo;s your naming convention of preference&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h1 id=&#34;http-error-50019---internal-server-error&#34;&gt;HTTP Error 500.19 - Internal Server Error&lt;/h1&gt;
&lt;p&gt;The requested page cannot be accessed because the related configuration data for the page is invalid.&lt;/p&gt;
&lt;h2 id=&#34;detailed-error-information&#34;&gt;Detailed Error Information:&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:right&#34;&gt;Module&lt;/th&gt;
&lt;th&gt;IIS Web Core&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right&#34;&gt;Notification&lt;/td&gt;
&lt;td&gt;BeginRequest&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right&#34;&gt;Handler&lt;/td&gt;
&lt;td&gt;Not yet determined&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right&#34;&gt;Error Code&lt;/td&gt;
&lt;td&gt;0x80070021&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right&#34;&gt;Config Error&lt;/td&gt;
&lt;td&gt;This configuration section cannot be used at this path. This happens when the section is locked at a parent level. Locking is either by default (overrideModeDefault=&amp;ldquo;Deny&amp;rdquo;), or set explicitly by a location tag with overrideMode=&amp;ldquo;Deny&amp;rdquo; or the legacy allowOverride=&amp;ldquo;false&amp;rdquo;.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;solution&#34;&gt;Solution&lt;/h2&gt;
&lt;p&gt;Heres what worked for me, had a similar problem on my new laptop which had windows 10.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Search for &amp;ldquo;Turn windows features on or off&amp;rdquo;&lt;/li&gt;
&lt;li&gt;Check &amp;ldquo;Internet Information Services&amp;rdquo;&lt;/li&gt;
&lt;li&gt;Check &amp;ldquo;World Wide Web Services&amp;rdquo;&lt;/li&gt;
&lt;li&gt;Check &amp;ldquo;Application Development Features&amp;rdquo;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Enable all items under this&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;try again, now it should work.&lt;/p&gt;
&lt;h2 id=&#34;reference-7&#34;&gt;Reference&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://stackoverflow.com/questions/34199976/iis-config-error-this-configuration-section-cannot-be-used-at-this-path&#34;&gt;IIS Config Error - This configuration section cannot be used at this path&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;excel-break-long-lines-when-importing-csv-filehttpsstackoverflowcomquestions43976092excel-break-long-lines-when-importing-csv-file&#34;&gt;&lt;a href=&#34;https://stackoverflow.com/questions/43976092/excel-break-long-lines-when-importing-csv-file&#34;&gt;Excel break long lines when importing csv file&lt;/a&gt;&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;Each instance of Microsoft Excel 2007, Excel 2010, and Excel 2013 32-bit is limited to 2 gigabyte (GB) of memory (internal heap space). &lt;strong&gt;Each instance is also limited to 32,760 source cells&lt;/strong&gt; when you perform a smart fill operation. When you copy or fill large sections of a worksheet, one or both of these limitations may affect the result.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;reference-8&#34;&gt;Reference&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/office/troubleshoot/excel/copy-formulas-over-large-area&#34;&gt;&amp;ldquo;Not enough memory&amp;rdquo; when you copy formulas over large area in Excel&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;httplistener-access-deniedhttpsstackoverflowcomquestions4019466httplistener-access-denied&#34;&gt;&lt;a href=&#34;https://stackoverflow.com/questions/4019466/httplistener-access-denied&#34;&gt;HttpListener Access Denied&lt;/a&gt;&lt;/h1&gt;
&lt;blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;netsh http add urlacl &lt;span style=&#34;color:#00688b&#34;&gt;url&lt;/span&gt;=&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;http://+:3032/&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#00688b&#34;&gt;user&lt;/span&gt;=everyone
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Documentation is &lt;a href=&#34;http://msdn.microsoft.com/en-us/library/ms733768.aspx&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h1 id=&#34;internalsvisibleto&#34;&gt;internalsvisibleto&lt;/h1&gt;
&lt;p&gt;To make interal type class/method or other object be visible in Tests project. In this way, we can use those object in our Unit Test.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-c#&#34; data-lang=&#34;c#&#34;&gt;&lt;span style=&#34;color:#658b00&#34;&gt;[assembly: InternalsVisibleTo(&amp;#34;UnitTests&amp;#34;)]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;.csproj:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-XML&#34; data-lang=&#34;XML&#34;&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;&amp;lt;ItemGroup&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;&amp;lt;InternalsVisibleToSuffix&lt;/span&gt; &lt;span style=&#34;color:#658b00&#34;&gt;Include=&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;.Tests&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;/&amp;gt;&lt;/span&gt; 
&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;&amp;lt;/ItemGroup&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;reference-9&#34;&gt;Reference&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/dotnet/api/system.runtime.compilerservices.internalsvisibletoattribute?view=net-5.0&#34;&gt;InternalsVisibleToAttribute Class&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://stackoverflow.com/questions/1211707/how-to-access-classes-in-another-assembly-for-unit-testing-purposes&#34;&gt;How to access classes in another assembly for unit-testing purposes?&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;use-fake-method-in-unit-test-to-implement-the-non-mockable-object&#34;&gt;Use Fake Method in Unit Test to implement the non-mockable Object.&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;Microsoft Fakes helps you isolate the code you are testing by replacing other parts of the application with &lt;em&gt;stubs&lt;/em&gt; or &lt;em&gt;shims&lt;/em&gt;. These are small pieces of code that are under the control of your tests. By isolating your code for testing, you know that if the test fails, the cause is there and not somewhere else. Stubs and shims also let you test your code even if other parts of your application are not working yet.&lt;/p&gt;
&lt;p&gt;Fakes come in two flavors:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A &lt;a href=&#34;https://docs.microsoft.com/en-us/visualstudio/test/isolating-code-under-test-with-microsoft-fakes?view=vs-2019#get-started-with-stubs&#34;&gt;stub&lt;/a&gt; replaces a class with a small substitute that implements the same interface. To use stubs, you have to design your application so that each component depends only on interfaces, and not on other components. (By &amp;ldquo;component&amp;rdquo; we mean a class or group of classes that are designed and updated together and typically contained in an assembly.)&lt;/li&gt;
&lt;li&gt;A &lt;a href=&#34;https://docs.microsoft.com/en-us/visualstudio/test/isolating-code-under-test-with-microsoft-fakes?view=vs-2019#get-started-with-shims&#34;&gt;shim&lt;/a&gt; modifies the compiled code of your application at run time so that instead of making a specified method call, it runs the shim code that your test provides. Shims can be used to replace calls to assemblies that you cannot modify, such as .NET assemblies.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.microsoft.com/en-us/visualstudio/test/media/fakes-2.png?view=vs-2019&#34; alt=&#34;Fakes replace other components&#34;&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;reference-10&#34;&gt;Reference&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/visualstudio/test/isolating-code-under-test-with-microsoft-fakes?view=vs-2019&#34;&gt;Isolate code under test with Microsoft Fakes&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;what-difference-is-there-between-webclient-and-httpwebrequest-classes-in-nethttpsstackoverflowcomquestions4988286what-difference-is-there-between-webclient-and-httpwebrequest-classes-in-net&#34;&gt;&lt;a href=&#34;https://stackoverflow.com/questions/4988286/what-difference-is-there-between-webclient-and-httpwebrequest-classes-in-net&#34;&gt;What difference is there between WebClient and HTTPWebRequest classes in .NET?&lt;/a&gt;&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;WebClient is a higher-level abstraction built on top of HttpWebRequest to simplify the most common tasks. For instance, if you want to get the content out of an HttpWebResponse, you have to read from the response stream:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt;&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;var&lt;/span&gt; http = (HttpWebRequest)WebRequest.Create(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;http://example.com&amp;#34;&lt;/span&gt;);
&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;var&lt;/span&gt; response = http.GetResponse();

&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;var&lt;/span&gt; stream = response.GetResponseStream();
&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;var&lt;/span&gt; sr = &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;new&lt;/span&gt; StreamReader(stream);
&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;var&lt;/span&gt; content = sr.ReadToEnd();
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;With WebClient, you just do &lt;code&gt;DownloadString&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt;&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;var&lt;/span&gt; client = &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;new&lt;/span&gt; WebClient();
&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;var&lt;/span&gt; content = client.DownloadString(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;http://example.com&amp;#34;&lt;/span&gt;);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;Note: I left out the &lt;code&gt;using&lt;/code&gt; statements from both examples for brevity. You should definitely take care to dispose your web request objects properly.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;In general, WebClient is good for quick and dirty simple requests and HttpWebRequest is good for when you need more control over the entire request.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h1 id=&#34;consolewriteline-cannot--write-unicode-characters-to-the-console&#34;&gt;Console.WriteLine() cannot  write Unicode characters to the console&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;However there&amp;rsquo;s a &lt;em&gt;&amp;ldquo;Beta: Use Unicode UTF-8 for worldwide language support&amp;rdquo;&lt;/em&gt; checkbox since Windows 10 insider build 17035 for setting the locale code page to UTF-8&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;https://i.stack.imgur.com/heCud.png&#34; alt=&#34;Beta: Use Unicode UTF-8 for worldwide language support&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;reference-11&#34;&gt;Reference&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/5750203/how-to-write-unicode-characters-to-the-console&#34;&gt;How to write Unicode characters to the console?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://superuser.com/questions/1033088/is-it-possible-to-set-locale-of-a-windows-application-to-utf-8&#34;&gt;Is it possible to set “locale” of a Windows application to UTF-8?&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h1 id=&#34;how-to-use-await-in-a-loophttpsstackoverflowcomquestions19431494how-to-use-await-in-a-loop&#34;&gt;&lt;a href=&#34;https://stackoverflow.com/questions/19431494/how-to-use-await-in-a-loop&#34;&gt;How to use await in a loop&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;The way you&amp;rsquo;re using the &lt;code&gt;await&lt;/code&gt; keyword tells C# that you want to wait each time you pass through the loop, which isn&amp;rsquo;t parallel. You can rewrite your method like this to do what you want, by storing a list of &lt;code&gt;Task&lt;/code&gt;s and then &lt;code&gt;await&lt;/code&gt;ing them all with &lt;a href=&#34;http://msdn.microsoft.com/en-us/library/hh194766.aspx&#34;&gt;&lt;code&gt;Task.WhenAll&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-csharp&#34; data-lang=&#34;csharp&#34;&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;async&lt;/span&gt; Task&amp;lt;&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;bool&lt;/span&gt;&amp;gt; Init()
{
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;var&lt;/span&gt; series = Enumerable.Range(&lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#b452cd&#34;&gt;5&lt;/span&gt;).ToList();
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;var&lt;/span&gt; tasks = &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;new&lt;/span&gt; List&amp;lt;Task&amp;lt;Tuple&amp;lt;&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt;, &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;bool&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt;();
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;foreach&lt;/span&gt; (&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;var&lt;/span&gt; i &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;in&lt;/span&gt; series)
    {
        Console.WriteLine(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;Starting Process {0}&amp;#34;&lt;/span&gt;, i);
        tasks.Add(DoWorkAsync(i));
    }
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;foreach&lt;/span&gt; (&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;var&lt;/span&gt; task &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;await&lt;/span&gt; Task.WhenAll(tasks))
    {
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt; (task.Item2)
        {
            Console.WriteLine(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;Ending Process {0}&amp;#34;&lt;/span&gt;, task.Item1);
        }
    }
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;true&lt;/span&gt;;
}

&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;async&lt;/span&gt; Task&amp;lt;Tuple&amp;lt;&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt;, &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;bool&lt;/span&gt;&amp;gt;&amp;gt; DoWorkAsync(&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; i)
{
    Console.WriteLine(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;working..{0}&amp;#34;&lt;/span&gt;, i);
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;await&lt;/span&gt; Task.Delay(&lt;span style=&#34;color:#b452cd&#34;&gt;1000&lt;/span&gt;);
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; Tuple.Create(i, &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;true&lt;/span&gt;);
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h1 id=&#34;what-is-the-difference-between-asynchronous-programming-and-multithreadinghttpsstackoverflowcomquestions34680985what-is-the-difference-between-asynchronous-programming-and-multithreading&#34;&gt;&lt;a href=&#34;https://stackoverflow.com/questions/34680985/what-is-the-difference-between-asynchronous-programming-and-multithreading&#34;&gt;What is the difference between asynchronous programming and multithreading?&lt;/a&gt;&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;Your misunderstanding is extremely common. Many people are taught that multithreading and asynchrony are the same thing, but they are not.&lt;/p&gt;
&lt;p&gt;An analogy usually helps. You are cooking in a restaurant. An order comes in for eggs and toast.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Synchronous: you cook the eggs, then you cook the toast.&lt;/li&gt;
&lt;li&gt;Asynchronous, single threaded: you start the eggs cooking and set a timer. You start the toast cooking, and set a timer. While they are both cooking, you clean the kitchen. When the timers go off you take the eggs off the heat and the toast out of the toaster and serve them.&lt;/li&gt;
&lt;li&gt;Asynchronous, multithreaded: you hire two more cooks, one to cook eggs and one to cook toast. Now you have the problem of coordinating the cooks so that they do not conflict with each other in the kitchen when sharing resources. And you have to pay them.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Now does it make sense that multithreading is only one kind of asynchrony? &lt;strong&gt;Threading is about workers; asynchrony is about tasks&lt;/strong&gt;. In multithreaded workflows you assign tasks to workers. In asynchronous single-threaded workflows you have a graph of tasks where some tasks depend on the results of others; as each task completes it invokes the code that schedules the next task that can run, given the results of the just-completed task. But you (hopefully) only need one worker to perform all the tasks, not one worker per task.&lt;/p&gt;
&lt;p&gt;It will help to realize that many tasks are not processor-bound. For processor-bound tasks it makes sense to hire as many workers (threads) as there are processors, assign one task to each worker, assign one processor to each worker, and have each processor do the job of nothing else but computing the result as quickly as possible. But for tasks that are not waiting on a processor, you don&amp;rsquo;t need to assign a worker at all. You just wait for the message to arrive that the result is available and &lt;em&gt;do something else while you&amp;rsquo;re waiting&lt;/em&gt;. When that message arrives then you can schedule the continuation of the completed task as the next thing on your to-do list to check off.&lt;/p&gt;
&lt;p&gt;So let&amp;rsquo;s look at Jon&amp;rsquo;s example in more detail. What happens?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Someone invokes DisplayWebSiteLength. Who? We don&amp;rsquo;t care.&lt;/li&gt;
&lt;li&gt;It sets a label, creates a client, and asks the client to fetch something. The client returns an object representing the task of fetching something. That task is in progress.&lt;/li&gt;
&lt;li&gt;Is it in progress on another thread? Probably not. Read &lt;a href=&#34;http://blog.stephencleary.com/2013/11/there-is-no-thread.html&#34;&gt;Stephen&amp;rsquo;s article&lt;/a&gt; on why there is no thread.&lt;/li&gt;
&lt;li&gt;Now we await the task. What happens? We check to see if the task has completed between the time we created it and we awaited it. If yes, then we fetch the result and keep running. Let&amp;rsquo;s suppose it has not completed. &lt;strong&gt;We sign up the remainder of this method as the continuation of that task and return&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Now control has returned to the caller. What does it do? Whatever it wants.&lt;/li&gt;
&lt;li&gt;Now suppose the task completes. How did it do that? Maybe it was running on another thread, or maybe the caller that we just returned to allowed it to run to completion on the current thread. Regardless, we now have a completed task.&lt;/li&gt;
&lt;li&gt;The completed task asks the correct thread &amp;ndash; again, likely the &lt;em&gt;only&lt;/em&gt; thread &amp;ndash; to run the continuation of the task.&lt;/li&gt;
&lt;li&gt;Control passes immediately back into the method we just left at the point of the await. Now there &lt;em&gt;is&lt;/em&gt; a result available so we can assign &lt;code&gt;text&lt;/code&gt; and run the rest of the method.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It&amp;rsquo;s just like in my analogy. Someone asks you for a document. You send away in the mail for the document, and keep on doing other work. When it arrives in the mail you are signalled, and when you feel like it, you do the rest of the workflow &amp;ndash; open the envelope, pay the delivery fees, whatever. You don&amp;rsquo;t need to hire another worker to do all that for you.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h1 id=&#34;tuple-vs-class&#34;&gt;Tuple VS Class&lt;/h1&gt;
&lt;blockquote&gt;
&lt;h2 id=&#34;tuples-are-values-so-are-copied-by-value-rather-than-by-reference&#34;&gt;Tuples are values, so are copied by value, rather than by reference.&lt;/h2&gt;
&lt;p&gt;Most of the time, this should not be an issue. However, if you are passing around tuples of large structs, this might have an impact on performance. Ref locals/returns can be used to work around these performance issues, though.&lt;/p&gt;
&lt;p&gt;Additionally, because they are values, modifying a copy remotely will not change the original copy. This is a good thing, but could catch some folk out.&lt;/p&gt;
&lt;h2 id=&#34;tuple-element-names-are-not-persisted&#34;&gt;Tuple element names are not persisted&lt;/h2&gt;
&lt;p&gt;The names given to elements are used by the compiler and (in most cases) are not available at run-time. This means that reflection cannot be used to discover their names; they cannot be accessed dynamically and they cannot be used in razor views.&lt;/p&gt;
&lt;p&gt;Also this is an important consideration with APIs. A tuple returned from a method is the exception to the rule regarding after-compilation name discoverability. The compiler adds attributes to the method that hold information on the tuple names. This means you can safely return a tuple from a public method in one assembly and access its names in another.&lt;/p&gt;
&lt;h2 id=&#34;tuples-are-lightweight&#34;&gt;Tuples are lightweight&lt;/h2&gt;
&lt;p&gt;Tuples are much simpler to write than types as they are less verbose and the declaration can be &amp;ldquo;inlined&amp;rdquo; (ie declared at the point of use). This works well when declaring a method that returns multiple values, for example.&lt;/p&gt;
&lt;p&gt;However, because they are declared at the point of use, if you have &lt;code&gt;MethodA&lt;/code&gt; that calls &lt;code&gt;MethodB&lt;/code&gt; that calls &lt;code&gt;MethodC&lt;/code&gt; and each returns a tuple, you&amp;rsquo;ll need to redefine the tuple at every stage. There isn&amp;rsquo;t (&lt;a href=&#34;https://github.com/dotnet/csharplang/issues/423&#34;&gt;yet&lt;/a&gt;) a way of creating an alias of a tuple and re-using it across multiple methods.&lt;/p&gt;
&lt;h2 id=&#34;just-use-common-sense&#34;&gt;Just use common sense&lt;/h2&gt;
&lt;p&gt;For any situation where you might consider using a tuple: simply ask yourself the question: &amp;ldquo;will a tuple simplify the code here&amp;rdquo;. If the answer is &amp;ldquo;yes&amp;rdquo;, then use one. And that ultimately is the primary consideration over whether to use a tuple or a custom class.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;reference-12&#34;&gt;Reference:&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/44650636/when-to-use-tuple-vs-class-in-c-sharp-7-0&#34;&gt;When to use: Tuple vs Class in C# 7.0&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h1 id=&#34;in-net-which-loop-runs-faster-for-or-foreachhttpsstackoverflowcomquestions365615in-net-which-loop-runs-faster-for-or-foreach&#34;&gt;&lt;a href=&#34;https://stackoverflow.com/questions/365615/in-net-which-loop-runs-faster-for-or-foreach&#34;&gt;In .NET, which loop runs faster, &amp;lsquo;for&amp;rsquo; or &amp;lsquo;foreach&amp;rsquo;?&lt;/a&gt;&lt;/h1&gt;
&lt;hr&gt;
&lt;h1 id=&#34;c-enumhttpsdocsmicrosoftcomen-usdotnetapisystemenumviewnet-50&#34;&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/dotnet/api/system.enum?view=net-5.0&#34;&gt;C# Enum&lt;/a&gt;&lt;/h1&gt;
&lt;h2 id=&#34;get-value-of-enum-member-by-its-name&#34;&gt;Get value of enum member by its name&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-C#&#34; data-lang=&#34;C#&#34;&gt;Console.WriteLine((&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt;)Enum.Parse(&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;typeof&lt;/span&gt;(ConsoleColor), &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;Blue&amp;#34;&lt;/span&gt;)); &lt;span style=&#34;color:#228b22&#34;&gt;// 9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;c---returning-an-enum-from-a-static-extension-methodhttpsstackoverflowcomquestions1556952c-sharp-returning-an-enum-from-a-static-extension-method&#34;&gt;&lt;a href=&#34;https://stackoverflow.com/questions/1556952/c-sharp-returning-an-enum-from-a-static-extension-method&#34;&gt;C# - Returning an Enum? from a static extension method&lt;/a&gt;&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-c#&#34; data-lang=&#34;c#&#34;&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;static&lt;/span&gt; T? ToEnumSafe&amp;lt;T&amp;gt;(&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;this&lt;/span&gt; &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;string&lt;/span&gt; s) &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;where&lt;/span&gt; T : &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;struct&lt;/span&gt;
{
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; (IsEnum&amp;lt;T&amp;gt;(s) ? (T?)Enum.Parse(&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;typeof&lt;/span&gt;(T), s) : &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;null&lt;/span&gt;);
}

Console.WriteLine((ConsoleColor) Enum.Parse(&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;typeof&lt;/span&gt;(ConsoleColor), &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;Blue&amp;#34;&lt;/span&gt;) == ConsoleColor.Blue); &lt;span style=&#34;color:#228b22&#34;&gt;// True
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;enumeration-format-stringshttpsdocsmicrosoftcomen-usdotnetstandardbase-typesenumeration-format-strings&#34;&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/dotnet/standard/base-types/enumeration-format-strings&#34;&gt;Enumeration format strings&lt;/a&gt;&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-C#&#34; data-lang=&#34;C#&#34;&gt;Console.WriteLine(ConsoleColor.Red.ToString(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;G&amp;#34;&lt;/span&gt;));         &lt;span style=&#34;color:#228b22&#34;&gt;// Displays Red
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;Console.WriteLine(ConsoleColor.Blue.ToString(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;F&amp;#34;&lt;/span&gt;));       &lt;span style=&#34;color:#228b22&#34;&gt;// Displays Blue
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;Console.WriteLine(ConsoleColor.Cyan.ToString(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;D&amp;#34;&lt;/span&gt;));         &lt;span style=&#34;color:#228b22&#34;&gt;// Displays 11
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;Console.WriteLine(ConsoleColor.Cyan.ToString(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;X&amp;#34;&lt;/span&gt;));   &lt;span style=&#34;color:#228b22&#34;&gt;// Displays 0000000B
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;
nameof(RelevantTableName.DocumentObjectReference);  &lt;span style=&#34;color:#228b22&#34;&gt;// suggest*
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;how-can-i-cast-int-to-enumhttpsstackoverflowcomquestions29482how-can-i-cast-int-to-enum&#34;&gt;&lt;a href=&#34;https://stackoverflow.com/questions/29482/how-can-i-cast-int-to-enum&#34;&gt;How can I cast int to enum?&lt;/a&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;From an int:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt;YourEnum foo = (YourEnum)yourInt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;From a string:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt;YourEnum foo = (YourEnum) Enum.Parse(&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;typeof&lt;/span&gt;(YourEnum), yourString);

&lt;span style=&#34;color:#228b22&#34;&gt;// The foo.ToString().Contains(&amp;#34;,&amp;#34;) check is necessary for enumerations marked with an [Flags] attribute
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt; (!Enum.IsDefined(&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;typeof&lt;/span&gt;(YourEnum), foo) &amp;amp;&amp;amp; !foo.ToString().Contains(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;,&amp;#34;&lt;/span&gt;))
{
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;throw&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;new&lt;/span&gt; InvalidOperationException(&lt;span style=&#34;color:#cd5555&#34;&gt;$&amp;#34;{yourString} is not an underlying value of the YourEnum enumeration.&amp;#34;&lt;/span&gt;)
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;From number you can also&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt;YourEnum foo = (YourEnum)Enum.ToObject(&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;typeof&lt;/span&gt;(YourEnum) , yourInt);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/blockquote&gt;
&lt;h2 id=&#34;naming-enumerations&#34;&gt;Naming Enumerations&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Names of enumeration types (also called enums) in general should follow the standard type-naming rules (PascalCasing, etc.). However, there are additional guidelines that apply specifically to enums.&lt;/p&gt;
&lt;p&gt;✔️ DO use a singular type name for an enumeration unless its values are bit fields.&lt;/p&gt;
&lt;p&gt;✔️ DO use a plural type name for an enumeration with bit fields as values, also called flags enum.&lt;/p&gt;
&lt;p&gt;❌ DO NOT use an &amp;ldquo;Enum&amp;rdquo; suffix in enum type names.&lt;/p&gt;
&lt;p&gt;❌ DO NOT use &amp;ldquo;Flag&amp;rdquo; or &amp;ldquo;Flags&amp;rdquo; suffixes in enum type names.&lt;/p&gt;
&lt;p&gt;❌ DO NOT use a prefix on enumeration value names (e.g., &amp;ldquo;ad&amp;rdquo; for ADO enums, &amp;ldquo;rtf&amp;rdquo; for rich text enums, etc.).&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Portions © 2005, 2009 Microsoft Corporation. All rights reserved.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Reprinted by permission of Pearson Education, Inc. from &lt;a href=&#34;https://www.informit.com/store/framework-design-guidelines-conventions-idioms-and-9780321545619&#34;&gt;Framework Design Guidelines: Conventions, Idioms, and Patterns for Reusable .NET Libraries, 2nd Edition&lt;/a&gt; by Krzysztof Cwalina and Brad Abrams, published Oct 22, 2008 by Addison-Wesley Professional as part of the Microsoft Windows Development Series.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;reference-13&#34;&gt;Reference:&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/dotnet/standard/design-guidelines/enum&#34;&gt;Enum Design&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/21561684/get-value-of-enum-member-by-its-name&#34;&gt;Get value of enum member by its name?&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h1 id=&#34;moq-a-function-with-5-parameters-and-access-invocation-argumentshttpsstackoverflowcomquestions2540931moq-a-function-with-5-parameters-and-access-invocation-arguments&#34;&gt;&lt;a href=&#34;https://stackoverflow.com/questions/2540931/moq-a-function-with-5-parameters-and-access-invocation-arguments&#34;&gt;Moq a function with 5+ parameters and access invocation arguments&lt;/a&gt;&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;This is supported in the final release of Moq 4.0 (4.0.10827), which was released on April 12, 2011. If you&amp;rsquo;re using .NET 4, you&amp;rsquo;ll be able to mock up to 16 parameters.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;むだ！むだ！むだ！むだ！&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-C#&#34; data-lang=&#34;C#&#34;&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;delegate&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;void&lt;/span&gt; SubmitCallback(Bar bar1,Bar bar2,Bar bar3,Bar bar4,Bar bar5);

mock.Setup(foo =&amp;gt; foo.Submit(It.IsAny&amp;lt;Bar&amp;gt;(),It.IsAny&amp;lt;Bar&amp;gt;(),It.IsAny&amp;lt;Bar&amp;gt;(),It.IsAny&amp;lt;Bar&amp;gt;(),It.IsAny&amp;lt;Bar&amp;gt;()))
    .Callback(&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;new&lt;/span&gt; SubmitCallback((Bar bar1,Bar bar2,Bar bar3,Bar bar4,Bar bar5) =&amp;gt; Console.WriteLine(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;Submitting a Bar!&amp;#34;&lt;/span&gt;)));
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h1 id=&#34;net-testing-naming-conventionshttpsstackoverflowcomquestions84717net-testing-naming-conventions&#34;&gt;&lt;a href=&#34;https://stackoverflow.com/questions/84717/net-testing-naming-conventions&#34;&gt;.NET Testing Naming Conventions&lt;/a&gt;&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;-Code Folder&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-c#&#34; data-lang=&#34;c#&#34;&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;namespace&lt;/span&gt; &lt;span style=&#34;color:#008b45;text-decoration:underline&#34;&gt;Company.Website&lt;/span&gt;{}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;-Tests Folder&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-c#&#34; data-lang=&#34;c#&#34;&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;namespace&lt;/span&gt; &lt;span style=&#34;color:#008b45;text-decoration:underline&#34;&gt;Company.Website.Tests&lt;/span&gt;{}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h1 id=&#34;just-in-time-compilation&#34;&gt;Just-in-time compilation&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/dotnet/api/system.codedom.compiler.codedomprovider?view=net-5.0&#34;&gt;CodeDomProvider&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/dotnet/roslyn&#34;&gt;Roslyn&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Reference:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Just-in-time_compilation&#34;&gt;Just-in-time compilation Wiki&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h1 id=&#34;regex-for-ip-addresshttpsstackoverflowcomquestions9165922regex-for-ip-address&#34;&gt;&lt;a href=&#34;https://stackoverflow.com/questions/9165922/regex-for-ip-address&#34;&gt;Regex for IP address&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;IPv4 &amp;amp; IPv6 both are okay!&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I would use &lt;a href=&#34;http://msdn.microsoft.com/en-us/library/system.net.ipaddress.tryparse.aspx&#34;&gt;&lt;code&gt;IPAddress.TryParse&lt;/code&gt;&lt;/a&gt; static method instead.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt;IPAddress ip;
&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;bool&lt;/span&gt; b = IPAddress.TryParse(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;1234.12.12.12&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;out&lt;/span&gt; ip);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/blockquote&gt;
&lt;h2 id=&#34;reference-14&#34;&gt;Reference:&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/dotnet/api/system.text.regularexpressions.regex?view=net-5.0&#34;&gt;Regex Class&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;encode--decode&#34;&gt;Encode &amp;amp; Decode&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;WebUtility&lt;/li&gt;
&lt;li&gt;Server.UrlEncode&lt;/li&gt;
&lt;li&gt;Uri.EscapeDataString&lt;/li&gt;
&lt;li&gt;Uri.EscapeUriString&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;To encode or decode values outside of a web application, use the &lt;a href=&#34;https://docs.microsoft.com/en-us/dotnet/api/system.net.webutility?view=net-5.0&#34;&gt;WebUtility&lt;/a&gt; class.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;We found that in some cases you need to consider using Uri.EscapeDataString. In our case we are encrypting the querystring and found that UrlDecode is converting a plus (+) to space. This was causing us errors during decryption. Using Uri’s Escape and UnescapeDataString makes sense for us when constructing a custom querystring in the URL.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;I had significant headaches with these methods before, &lt;strong&gt;I recommend you *avoid* any variant of &lt;code&gt;UrlEncode&lt;/code&gt;, and instead use &lt;a href=&#34;http://msdn.microsoft.com/en-us/library/system.uri.escapedatastring.aspx&#34;&gt;&lt;code&gt;Uri.EscapeDataString&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; - at least that one has a comprehensible behavior.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s see&amp;hellip;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-dart&#34; data-lang=&#34;dart&#34;&gt;HttpUtility.UrlEncode(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;) == &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;+&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#228b22&#34;&gt;//breaks ASP.NET when used in paths, non-
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;                                  &lt;span style=&#34;color:#228b22&#34;&gt;//standard, undocumented.
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;Uri.EscapeUriString(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;a?b=e&amp;#34;&lt;/span&gt;) == &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;a?b=e&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#228b22&#34;&gt;// makes sense, but rarely what you
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;                                        &lt;span style=&#34;color:#228b22&#34;&gt;// want, since you still need to
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;                                        &lt;span style=&#34;color:#228b22&#34;&gt;// escape special characters yourself
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;But my personal favorite has got to be &lt;strong&gt;HttpUtility.UrlPathEncode&lt;/strong&gt; - this thing is really incomprehensible. It encodes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;quot; &amp;quot; ==&amp;gt; &amp;ldquo;%20&amp;rdquo;&lt;/li&gt;
&lt;li&gt;&amp;ldquo;100% true&amp;rdquo; ==&amp;gt; &amp;ldquo;100%%20true&amp;rdquo; (ok, your url is broken now)&lt;/li&gt;
&lt;li&gt;&amp;ldquo;test A.aspx#anchor B&amp;rdquo; ==&amp;gt; &amp;ldquo;test%20A.aspx**#anchor%20B**&amp;rdquo;&lt;/li&gt;
&lt;li&gt;&amp;ldquo;test A.aspx?hmm#anchor B&amp;rdquo; ==&amp;gt; &amp;ldquo;test%20A.aspx?hmm**#anchor B**&amp;rdquo; (*note the difference with the previous escape sequence!*)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It also has the lovelily specific MSDN documentation &amp;ldquo;Encodes the path portion of a URL string for reliable HTTP transmission from the Web server to a client.&amp;rdquo; - without actually explaining what it does. You are less likely to shoot yourself in the foot with an Uzi&amp;hellip;&lt;/p&gt;
&lt;p&gt;In short, stick to &lt;strong&gt;&lt;a href=&#34;http://msdn.microsoft.com/en-us/library/system.uri.escapedatastring.aspx&#34;&gt;Uri.EscapeDataString&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;reference-15&#34;&gt;Reference:&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/dotnet/api/system.web.httputility.urldecode?view=net-5.0&#34;&gt;HttpUtility.UrlDecode Method&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/dotnet/api/system.net.webutility?view=net-5.0&#34;&gt;WebUtility Class&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/4396598/whats-the-difference-between-escapeuristring-and-escapedatastring&#34;&gt;What&amp;rsquo;s the difference between EscapeUriString and EscapeDataString?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/602642/server-urlencode-vs-httputility-urlencode&#34;&gt;Server.UrlEncode vs. HttpUtility.UrlEncode&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;side-effect&#34;&gt;Side effect&lt;/h1&gt;
&lt;h2 id=&#34;reference-16&#34;&gt;Reference&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Side_effect_(computer_science)&#34;&gt;Side effect&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;how-do-you-unit-test-regular-expressionshttpsstackoverflowcomquestions488601how-do-you-unit-test-regular-expressions&#34;&gt;&lt;a href=&#34;https://stackoverflow.com/questions/488601/how-do-you-unit-test-regular-expressions&#34;&gt;How do you unit test regular expressions?&lt;/a&gt;&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;You should always test your regexen, much like any other chunk of code. They&amp;rsquo;re at the most simple a function that takes a string and returns a bool, or returns an array of values.&lt;/p&gt;
&lt;p&gt;Here are some suggestions on what to think about when it comes to designing unit tests for regexen. These are not not hard and fast prescriptions for unit test design, but some guidelines to shape your thinking. As always, weigh the needs of your testing versus cost of failure balanced with the time required to implement them all. (I find that &amp;lsquo;implementing&amp;rsquo; the test is the easy part! :-] )&lt;/p&gt;
&lt;p&gt;Points to consider:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Think of every group (the parentheses) as a curly brace.&lt;/li&gt;
&lt;li&gt;Think of every | as a condition. Make sure to test for each branch.&lt;/li&gt;
&lt;li&gt;Think of every modifier (*, +, ? ) as a different path.&lt;/li&gt;
&lt;li&gt;(side note to the above: remember the difference between *, +, ? and *?, +?, and ??.)&lt;/li&gt;
&lt;li&gt;for \d, \s, \w, and their negations, give several in each range a try.&lt;/li&gt;
&lt;li&gt;For * and +, you need to test for the &amp;lsquo;no value&amp;rsquo;, &amp;lsquo;one of&amp;rsquo;, and &amp;lsquo;one or more&amp;rsquo; for each.&lt;/li&gt;
&lt;li&gt;For important &amp;lsquo;control&amp;rsquo; characters (eg, strings in the regex you look for) test to see what happens if they show up in the wrong places. This may surprise you.&lt;/li&gt;
&lt;li&gt;If you have real world data, use as much of it as you can.&lt;/li&gt;
&lt;li&gt;If you don&amp;rsquo;t, make sure to test both the simple and complex forms that should be valid.&lt;/li&gt;
&lt;li&gt;Make sure to test what regex control characters do when inserted.&lt;/li&gt;
&lt;li&gt;Make sure to verify that the empty string is properly accepted/rejected.&lt;/li&gt;
&lt;li&gt;Make sure to verify that a string of each of the different kind of space characters are properly accepted or rejected.&lt;/li&gt;
&lt;li&gt;Make sure that proper handling of case insensitivity is done (the i flag). This has bit me more times than almost anything else in text parsing (other than spaces).&lt;/li&gt;
&lt;li&gt;If you have the x, m or s options, make sure you understand what they do and test for it (the behavior here can be different)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For a regex that returns lists, also remember:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Verify that the data you expect is returned, in the right order, in the right fields.&lt;/li&gt;
&lt;li&gt;Verify that slight modifications do not return good data.&lt;/li&gt;
&lt;li&gt;Verify that mixed anonymous groups and named groups parse correctly (eg, &lt;code&gt;(?&amp;lt;name&amp;gt; thing1 ( thing2) )&lt;/code&gt;) - this behavior can be different based on the regex engine you&amp;rsquo;re using.&lt;/li&gt;
&lt;li&gt;Once again, give lots of real world trials.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you use any advanced features, such as non-backtracking groups, make sure you understand completely how the feature works, and using the guidelines above, build example strings that should work for and against each of them.&lt;/p&gt;
&lt;p&gt;Depending on your regex library implementation, the way groups are captured may be different as well. Perl 5 has a &amp;lsquo;open paren order&amp;rsquo; ordering, C# has that partially except for named groups and so on. Make sure to experiment with your flavor to know exactly what it does.&lt;/p&gt;
&lt;p&gt;Then, integrate them right in with your other unit tests, either in their own module or alongside the module that contains the regex. For particularly nasty regexen, you may find you need lots and lots of tests to verify that the pattern and all the features you use are correct. If the regex makes up a large (or nearly all) of the work that the method is doing, I will use the advice above to fashion inputs to test that function and not the regex directly. That way, if later you decide that the regex is not the way to go, or you want to break it up, you can capture the behavior the regex provided without changing the interface - ie, the method that invokes the regex.&lt;/p&gt;
&lt;p&gt;As long as you really know how a regex feature is supposed to work in your flavor of regex, you should be able to develop decent test cases for it. Just make sure you really, really, really do understand how the feature works!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;heading&#34;&gt;&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;In terms of ascii code, it&amp;rsquo;s 3 &amp;ndash; since they&amp;rsquo;re 10 and 13 respectively;-).&lt;/p&gt;
&lt;p&gt;But seriously, there are many:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;in Unix and all Unix-like systems, &lt;code&gt;\n&lt;/code&gt; is the code for end-of-line, &lt;code&gt;\r&lt;/code&gt; means nothing special&lt;/li&gt;
&lt;li&gt;as a consequence, in C and most languages that somehow copy it (even remotely), &lt;code&gt;\n&lt;/code&gt; is the standard escape sequence for end of line (translated to/from OS-specific sequences as needed)&lt;/li&gt;
&lt;li&gt;in old Mac systems (pre-OS X), &lt;code&gt;\r&lt;/code&gt; was the code for end-of-line instead&lt;/li&gt;
&lt;li&gt;in Windows (and many old OSs), the code for end of line is 2 characters, &lt;code&gt;\r\n&lt;/code&gt;, in this order&lt;/li&gt;
&lt;li&gt;as a (surprising;-) consequence (harking back to OSs much older than Windows), &lt;code&gt;\r\n&lt;/code&gt; is the standard line-termination for text formats on the Internet&lt;/li&gt;
&lt;li&gt;for electromechanical teletype-like &amp;ldquo;terminals&amp;rdquo;, &lt;code&gt;\r&lt;/code&gt; commands the carriage to go back leftwards until it hits the leftmost stop (a slow operation), &lt;code&gt;\n&lt;/code&gt; commands the roller to roll up one line (a much faster operation) &amp;ndash; that&amp;rsquo;s the reason you always have &lt;code&gt;\r&lt;/code&gt; &lt;strong&gt;before&lt;/strong&gt; &lt;code&gt;\n&lt;/code&gt;, so that the roller can move while the carriage is still going leftwards!-) Wikipedia has a &lt;a href=&#34;https://en.wikipedia.org/wiki/Newline#History&#34;&gt;more detailed explanation&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;for character-mode terminals (typically emulating even-older printing ones as above), in raw mode, &lt;code&gt;\r&lt;/code&gt; and &lt;code&gt;\n&lt;/code&gt; act similarly (except both in terms of the cursor, as there &lt;strong&gt;is&lt;/strong&gt; no carriage or roller;-)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In practice, in the modern context of writing to a text file, you should always use &lt;code&gt;\n&lt;/code&gt; (the underlying runtime will translate that if you&amp;rsquo;re on a weird OS, e.g., Windows;-). The only reason to use &lt;code&gt;\r&lt;/code&gt; is if you&amp;rsquo;re writing to a character terminal (or more likely a &amp;ldquo;console window&amp;rdquo; emulating it) and want the next line you write to overwrite the last one you just wrote (sometimes used for goofy &amp;ldquo;ascii animation&amp;rdquo; effects of e.g. progress bars) &amp;ndash; this is getting pretty obsolete in a world of GUIs, though;-).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;\r&lt;/code&gt;&lt;/strong&gt; = CR (Carriage Return) → Used as a new line character in Mac OS before X&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;\n&lt;/code&gt;&lt;/strong&gt; = LF (Line Feed) → Used as a new line character in Unix/Mac OS X&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;\r\n&lt;/code&gt;&lt;/strong&gt; = CR + LF → Used as a new line character in Windows&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;The problem is not with the splitting but rather with the &lt;code&gt;WriteLine&lt;/code&gt;. A &lt;code&gt;\n&lt;/code&gt; in a string printed with &lt;code&gt;WriteLine&lt;/code&gt; will produce an &amp;ldquo;extra&amp;rdquo; line.&lt;/p&gt;
&lt;p&gt;Example&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt;&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;var&lt;/span&gt; text = 
  &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;somet interesting text\n&amp;#34;&lt;/span&gt; +
  &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;some text that should be in the same line\r\n&amp;#34;&lt;/span&gt; +
  &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;some text should be in another line&amp;#34;&lt;/span&gt;;

&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;string&lt;/span&gt;[] stringSeparators = &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;string&lt;/span&gt;[] { &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;\r\n&amp;#34;&lt;/span&gt; };
&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;string&lt;/span&gt;[] lines = text.Split(stringSeparators, StringSplitOptions.None);
Console.WriteLine(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;Nr. Of items in list: &amp;#34;&lt;/span&gt; + lines.Length); &lt;span style=&#34;color:#228b22&#34;&gt;// 2 lines
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;foreach&lt;/span&gt; (&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;string&lt;/span&gt; s &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;in&lt;/span&gt; lines)
{
   Console.WriteLine(s); &lt;span style=&#34;color:#228b22&#34;&gt;//But will print 3 lines in total.
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;To fix the problem remove &lt;code&gt;\n&lt;/code&gt; before you print the string.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt;Console.WriteLine(s.Replace(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;\n&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;));
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/blockquote&gt;
&lt;h2 id=&#34;reference-17&#34;&gt;Reference&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/1761051/difference-between-n-and-r&#34;&gt;Difference between \n and \r?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/15433188/what-is-the-difference-between-r-n-r-and-n&#34;&gt;What is the difference between \r\n, \r, and \n?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/22185009/split-text-with-r-n&#34;&gt;Split text with &amp;lsquo;\r\n&amp;rsquo;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
- https://www.openheart.icu/cs/dot-net-issue/ - ALL RIGHTS RESERVED KRIS NIE</description>
        </item>
    
    
    
        <item>
        <title>SQLserver</title>
        <link>https://www.openheart.icu/cs/sqlserver/</link>
        <pubDate>Sat, 15 Aug 2020 16:27:30 +0000</pubDate>
        
        <guid>https://www.openheart.icu/cs/sqlserver/</guid>
        <description>42th openheart https://www.openheart.icu/cs/sqlserver/ -&lt;h1 id=&#34;common-operation&#34;&gt;Common Operation&lt;/h1&gt;
&lt;h2 id=&#34;sqlcmd&#34;&gt;SQLCMD&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sqlcmd -S localhost -d CSI10 -q &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;SELECT * FROM SITE&amp;#34;&lt;/span&gt;
sqlcmd -S localhost -d CSI10 -Q &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;SELECT * FROM SITE&amp;#34;&lt;/span&gt;
sqlcmd -S localhost -U SA -Q &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;select @@VERSION&amp;#39;&lt;/span&gt;
sqlcmd -S localhost
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h1 id=&#34;issues&#34;&gt;Issues&lt;/h1&gt;
&lt;h2 id=&#34;cannot-insert-explicit-value-for-identity-column-in-table-table-when-identity_insert-is-set-to-offhttpsstackoverflowcomquestions1334012cannot-insert-explicit-value-for-identity-column-in-table-table-when-identity&#34;&gt;&lt;a href=&#34;https://stackoverflow.com/questions/1334012/cannot-insert-explicit-value-for-identity-column-in-table-table-when-identity&#34;&gt;Cannot insert explicit value for identity column in table &amp;lsquo;table&amp;rsquo; when IDENTITY_INSERT is set to OFF&lt;/a&gt;&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;SET&lt;/span&gt; IDENTITY_INSERT Table1 &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;ON&lt;/span&gt;

&lt;span style=&#34;color:#228b22&#34;&gt;--Do INSERT
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;SET&lt;/span&gt; IDENTITY_INSERT Table1 &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;OFF&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;sql-server-the-backup-set-holds-a-backup-of-a-database-other-than-the-existinghttpsstackoverflowcomquestions10204480sql-server-the-backup-set-holds-a-backup-of-a-database-other-than-the-existing&#34;&gt;&lt;a href=&#34;https://stackoverflow.com/questions/10204480/sql-server-the-backup-set-holds-a-backup-of-a-database-other-than-the-existing&#34;&gt;SQL-Server: The backup set holds a backup of a database other than the existing&lt;/a&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Don&amp;rsquo;t create an empty database and restore the &lt;code&gt;.bak&lt;/code&gt; file on to it.&lt;/li&gt;
&lt;li&gt;Use &lt;strong&gt;&amp;lsquo;Restore Database&amp;rsquo;&lt;/strong&gt; option accessible by right clicking the &amp;ldquo;Databases&amp;rdquo; branch of the SQL Server Management Studio and provide the database name while providing the source to restore.&lt;/li&gt;
&lt;li&gt;Also change the file names at &amp;ldquo;Files&amp;rdquo; if the other database still exists. Otherwise you get &amp;ldquo;The file &amp;lsquo;&amp;hellip;&amp;rsquo; cannot be overwritten. It is being used by database &amp;lsquo;yourFirstDb&amp;rsquo;&amp;rdquo;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;what-is-the-t-sql-syntax-to-connect-to-another-sql-serverhttpsstackoverflowcomquestions125457what-is-the-t-sql-syntax-to-connect-to-another-sql-server&#34;&gt;&lt;a href=&#34;https://stackoverflow.com/questions/125457/what-is-the-t-sql-syntax-to-connect-to-another-sql-server&#34;&gt;What is the T-SQL syntax to connect to another SQL Server?&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/sql/ssms/scripting/edit-sqlcmd-scripts-with-query-editor?view=sql-server-ver15&#34;&gt;Edit SQLCMD Scripts with Query Editor&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In SQL Server Management Studio, turn on SQLCMD mode from the Query menu. Then at the top of your script, type in the command below&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;:&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;connect&lt;/span&gt; USDB -U sa -P mypassword
USE [&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;database&lt;/span&gt;]
&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;GO&lt;/span&gt;

&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;select&lt;/span&gt; * &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;from&lt;/span&gt; site;

:&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;CONNECT&lt;/span&gt; CNDB
USE [&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;database&lt;/span&gt;]
&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;GO&lt;/span&gt;

&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;select&lt;/span&gt; * &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;from&lt;/span&gt; site;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: IntelliSense is turned off in the Database Engine Query Editor when the SQLCMD mode is set on.&lt;/p&gt;
&lt;h2 id=&#34;enable-xp_cmdshell-sql-serverhttpsstackoverflowcomquestions5131491enable-xp-cmdshell-sql-server&#34;&gt;&lt;a href=&#34;https://stackoverflow.com/questions/5131491/enable-xp-cmdshell-sql-server&#34;&gt;Enable &amp;lsquo;xp_cmdshell&amp;rsquo; SQL Server&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/xp-cmdshell-server-configuration-option?redirectedfrom=MSDN&amp;amp;view=sql-server-ver15&#34;&gt;If you need to enable &lt;strong&gt;xp_cmdshell&lt;/strong&gt;, you can use Policy-Based Managementhttps://docs.microsoft.com/en-us/sql/relational-databases/policy-based-management/administer-servers-by-using-policy-based-management?view=sql-server-ver15 or run the &lt;strong&gt;sp_configure&lt;/strong&gt; system stored procedure as shown in the following code example:&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#228b22&#34;&gt;-- To allow advanced options to be changed.  
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;EXECUTE&lt;/span&gt; sp_configure &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;show advanced options&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;;  
&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;GO&lt;/span&gt;  
&lt;span style=&#34;color:#228b22&#34;&gt;-- To update the currently configured value for advanced options.  
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;RECONFIGURE;  
&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;GO&lt;/span&gt;  
&lt;span style=&#34;color:#228b22&#34;&gt;-- To enable the feature.  
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;EXECUTE&lt;/span&gt; sp_configure &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;xp_cmdshell&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;;  
&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;GO&lt;/span&gt;  
&lt;span style=&#34;color:#228b22&#34;&gt;-- To update the currently configured value for this feature.  
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;RECONFIGURE;  
&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;GO&lt;/span&gt;  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;use-xp_cmdshell-to-print-variables-into-a-file&#34;&gt;Use &amp;lsquo;xp_cmdshell&amp;rsquo; to print variables into a file&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#228b22&#34;&gt;-- print variables 
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;DECLARE&lt;/span&gt; @cmdtxt &lt;span style=&#34;color:#658b00&#34;&gt;VARCHAR&lt;/span&gt;(&lt;span style=&#34;color:#b452cd&#34;&gt;4000&lt;/span&gt;);
&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;select&lt;/span&gt; @cmdtxt = &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;echo &amp;#39;&lt;/span&gt; +&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;@TtPmtpckCurrCode&amp;#39;&lt;/span&gt;+ &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;CAST&lt;/span&gt;(@TtPmtpckCurrCode &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;color:#658b00&#34;&gt;VARCHAR&lt;/span&gt;(&lt;span style=&#34;color:#b452cd&#34;&gt;2&lt;/span&gt;))  + &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;@CurrparmsCurrCode&amp;#39;&lt;/span&gt;+&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;CAST&lt;/span&gt;(@CurrparmsCurrCode &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;color:#658b00&#34;&gt;VARCHAR&lt;/span&gt;(&lt;span style=&#34;color:#b452cd&#34;&gt;2&lt;/span&gt;)) +&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39; &amp;gt;&amp;gt; C:\Development\SubFolder\outPut.txt&amp;#39;&lt;/span&gt;;
&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;exec&lt;/span&gt; master..xp_cmdshell @cmdtxt

&lt;span style=&#34;color:#228b22&#34;&gt;-- use FOR XML to print table-valued variable
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;declare&lt;/span&gt; @rates &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;table&lt;/span&gt; (
  curr_code CurrCodeType
, site_ref SiteType
, exch_rate ExchRateType
, rate_is_divisor ListYesNoType
, &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;primary&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;key&lt;/span&gt; (curr_code, site_ref)
)

&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;insert&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;into&lt;/span&gt; @rates (curr_code, site_ref)
&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;select&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;distinct&lt;/span&gt; curr_code, site
&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;from&lt;/span&gt; tt_pmtpck
&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;where&lt;/span&gt; tt_pmtpck.ProcessId = @PProcessId
&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;and&lt;/span&gt; (tt_pmtpck.exch_rate &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;is&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;null&lt;/span&gt;
  &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;or&lt;/span&gt; tt_pmtpck.dom_amt_applied &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;is&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;null&lt;/span&gt;
  &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;or&lt;/span&gt; tt_pmtpck.dom_disc_amt &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;is&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;null&lt;/span&gt;)
  
&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;DECLARE&lt;/span&gt; @xmltmp xml = (&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;SELECT&lt;/span&gt; rat.curr_code,rat.site_ref,rat.exch_rate,rat.rate_is_divisor &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;FROM&lt;/span&gt; @rates &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;AS&lt;/span&gt; rat &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;FOR&lt;/span&gt; XML AUTO,ELEMENTS XSINIL);
&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;SELECT&lt;/span&gt; @cmdtxt = &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;echo &amp;#39;&lt;/span&gt; +&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;@rates &amp;#34;&amp;#39;&lt;/span&gt;+ &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;CONVERT&lt;/span&gt;(&lt;span style=&#34;color:#658b00&#34;&gt;VARCHAR&lt;/span&gt;(&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;max&lt;/span&gt;),@xmltmp) + &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;&amp;#34; &amp;gt;&amp;gt; C:\Development\SubFolder\outPut.txt&amp;#39;&lt;/span&gt;;
&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;exec&lt;/span&gt; master..xp_cmdshell @cmdtxt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;offset-fetch--top&#34;&gt;Offset-Fetch &amp;amp; TOP&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;offset&lt;/code&gt;并不是万能的，在偏移量越来越大的情况性能表现会越来越差。解决方案为固定偏移量，分页之后用上次标签的行当做起点，使用类似&lt;code&gt;TOP&lt;/code&gt;方式再进行查询。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;SELECT&lt;/span&gt; * &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;FROM&lt;/span&gt; demo_table &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;WHERE&lt;/span&gt; demo_column1=&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;1&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;AND&lt;/span&gt; ((&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;ISNULL&lt;/span&gt;(demo_column2, &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;) &amp;gt; &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;2&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;OR&lt;/span&gt; (&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;ISNULL&lt;/span&gt;(demo_column2, &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;) = &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;2&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;AND&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;ISNULL&lt;/span&gt;(demo_column3, &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;) &amp;gt; &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;75&amp;#39;&lt;/span&gt;)) &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;ORDER&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;BY&lt;/span&gt; demo_column1,demo_column2 &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;OFFSET&lt;/span&gt; &lt;span style=&#34;color:#b452cd&#34;&gt;49999&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;ROWS&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;FETCH&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;NEXT&lt;/span&gt; &lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;ROWS&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;ONLY&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;reference&#34;&gt;Reference:&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://www.microsoftpressstore.com/articles/article.aspx?p=2314819&#34;&gt;T-SQL Querying: TOP and OFFSET-FETCH&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://dba.stackexchange.com/questions/220326/reduce-query-time-for-higher-offset-in-sql-server&#34;&gt;Reduce query time for higher offset in sql server&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;logical-operators&#34;&gt;logical operators&lt;/h2&gt;
- https://www.openheart.icu/cs/sqlserver/ - ALL RIGHTS RESERVED KRIS NIE</description>
        </item>
    
    
    
        <item>
        <title>Static Search Table &amp; Dynamic Search Table</title>
        <link>https://www.openheart.icu/cs/%E5%8A%A8%E6%80%81%E6%9F%A5%E6%89%BE%E8%A1%A8%E4%B8%8E%E9%9D%99%E6%80%81%E6%9F%A5%E6%89%BE%E8%A1%A8/</link>
        <pubDate>Sat, 25 Jul 2020 18:32:23 +0000</pubDate>
        
        <guid>https://www.openheart.icu/cs/%E5%8A%A8%E6%80%81%E6%9F%A5%E6%89%BE%E8%A1%A8%E4%B8%8E%E9%9D%99%E6%80%81%E6%9F%A5%E6%89%BE%E8%A1%A8/</guid>
        <description>42th openheart https://www.openheart.icu/cs/%E5%8A%A8%E6%80%81%E6%9F%A5%E6%89%BE%E8%A1%A8%E4%B8%8E%E9%9D%99%E6%80%81%E6%9F%A5%E6%89%BE%E8%A1%A8/ -&lt;p&gt;&lt;em&gt;今天在看&lt;code&gt;BST&lt;/code&gt;时，指导书上讲二叉排序树时与二分查找进行对比，引出几个模棱两可的概念（静态查找表、动态查找表），经查找后整理得本文&lt;/em&gt;&lt;/p&gt;
&lt;h1 id=&#34;概述&#34;&gt;概述&lt;/h1&gt;
&lt;p&gt;首先要了解几个基础概念&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;查找(Searching)&lt;/strong&gt; 是根据给定的某个值，在查找表中确定一个其关键字等于给定值的数据元素。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;查找表(Search Table)&lt;/strong&gt; 是由同⼀类型的数据元素(记录)构成的集合。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;关键字(Key)&lt;/strong&gt; 是数据元素中某个数据项的值，又称为键值，用它可以表示⼀个数据元素，也可以标识一个记录的某个数据项(字段)，我们称为关键码。
若关键字可以唯⼀地标识一个记录, 则称此关键字为&lt;strong&gt;主关键字 (Primary Key)&lt;/strong&gt;。
对于那些可以识别多个属于元素(记录)的关键字，我们称为&lt;strong&gt;次关键字(Secondary Key)&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;查找表操作可分为&lt;strong&gt;静态查找&lt;/strong&gt;和&lt;strong&gt;动态查找&lt;/strong&gt;。&lt;/p&gt;
&lt;h1 id=&#34;静态查找表static-search-table&#34;&gt;静态查找表(Static Search Table)&lt;/h1&gt;
&lt;p&gt;只作查找操作的查找表。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;查询某个”特定的”数据元素是否在查找表中;&lt;/li&gt;
&lt;li&gt;检索某个&amp;quot;特定的&amp;quot;数据元素和各种属性;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;静态查找只是仅查找，并不会去改变集合内的数据元素。常用的查找有。&lt;/p&gt;
&lt;h2 id=&#34;顺序查找-linear-search又称线性查找&#34;&gt;顺序查找（ Linear search，又称线性查找）&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;原理&lt;/strong&gt; ：顺序查找就是按顺序从头到尾依次往下查找，从表中的第一个(或最后一个)记录开始，逐个进行记录关键字和给定值比较，找到数据，则提前结束查找，找不到便一直查找下去，直到数据最后一位&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;linearSearch&lt;/span&gt;(&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt;[] a, &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; num) {        
		&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;for&lt;/span&gt;(&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; i = 0; i &amp;lt; a.&lt;span style=&#34;color:#658b00&#34;&gt;length&lt;/span&gt;; i++) {
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt;(a[i] == num){
          	&lt;span style=&#34;color:#228b22&#34;&gt;// 返回数据所在的下标，也就是位置
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; i;
        }
    }
  	&lt;span style=&#34;color:#228b22&#34;&gt;// 不存在的话返回-1
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; -1;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;索引顺序表查找分块查找&#34;&gt;索引顺序表查找（分块查找）&lt;/h2&gt;
&lt;p&gt;整个表中的元素未必有序，但若划分为若干块后，每一块中的所有元素均小于（或大于）其后面块中的所有元素。我们称这种为&lt;strong&gt;分块有序&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;分块查找要求把一个数据分为若干块，每一块里面的元素可以是无序的，但是块与块之间的元素需要是有序的。（对于一个非递减的数列来说，第&lt;code&gt;i&lt;/code&gt;块中的每个元素一定比第&lt;code&gt;i-1&lt;/code&gt;块中的任意元素大）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;原理&lt;/strong&gt;：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;首先建立一个索引表，索引表中为每一块都设置索引项；&lt;/li&gt;
&lt;li&gt;在索引表中查找，目的是找出关键所属的块的位置。如果索引表较大的话，可以采用折半查找；&lt;/li&gt;
&lt;li&gt;进入该块中，使用简单顺序表查找算法进行关键字查找。&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;这种带索引表的分块有序表查找的时间性能取决于两步查找时间之和：如前面所述，第一步可以采用简单顺序查找和折半查找之一进行。第二步只能采用简单顺序查找，但由于子表的长度较原表的长度小。因此，其时间性能介于顺序查找和折半查找之间。分块查找也同时有顺序查找和二分查找的优点：&lt;strong&gt;不需要有序&lt;/strong&gt;、&lt;strong&gt;速度快&lt;/strong&gt;。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#008b45;font-weight:bold&#34;&gt;BlockSearch&lt;/span&gt; {
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt;[] index;
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;private&lt;/span&gt; ArrayList&amp;lt;ArrayList&amp;lt;Integer&amp;gt;&amp;gt; list;
    
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;BlockSearch&lt;/span&gt;(&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt;[] index) {
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#658b00&#34;&gt;index&lt;/span&gt; = index;
        list = &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;new&lt;/span&gt; ArrayList&amp;lt;ArrayList&amp;lt;Integer&amp;gt;&amp;gt;();
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;for&lt;/span&gt;(&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; i = 0; i &amp;lt; index.&lt;span style=&#34;color:#658b00&#34;&gt;length&lt;/span&gt;; i++) {
            list.&lt;span style=&#34;color:#658b00&#34;&gt;add&lt;/span&gt;(&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;new&lt;/span&gt; ArrayList&amp;lt;Integer&amp;gt;());
        }
    }
    
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;insert&lt;/span&gt;(Integer value) {
        &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; i = binarySearch(value);
        list.&lt;span style=&#34;color:#658b00&#34;&gt;get&lt;/span&gt;(i).&lt;span style=&#34;color:#658b00&#34;&gt;add&lt;/span&gt;(value);
    }
    
  	&lt;span style=&#34;color:#228b22&#34;&gt;// 分块查找
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;boolean&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;search&lt;/span&gt;(&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; data) {
      	&lt;span style=&#34;color:#228b22&#34;&gt;// 二分查找所在块
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; i = binarySearch(data);
      	&lt;span style=&#34;color:#228b22&#34;&gt;// 顺序查找该元素
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;for&lt;/span&gt;(&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; j = 0; j &amp;lt; list.&lt;span style=&#34;color:#658b00&#34;&gt;get&lt;/span&gt;(i).&lt;span style=&#34;color:#658b00&#34;&gt;size&lt;/span&gt;(); j++) {
            &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt;(data == list.&lt;span style=&#34;color:#658b00&#34;&gt;get&lt;/span&gt;(i).&lt;span style=&#34;color:#658b00&#34;&gt;get&lt;/span&gt;(j)) {
                &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;true&lt;/span&gt;;
            }
        }
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;false&lt;/span&gt;;
    }
  
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;printAll&lt;/span&gt;() {
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;for&lt;/span&gt;(&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; i = 0; i &amp;lt; list.&lt;span style=&#34;color:#658b00&#34;&gt;size&lt;/span&gt;(); i++) {
            ArrayList&amp;lt;Integer&amp;gt; l = list.&lt;span style=&#34;color:#658b00&#34;&gt;get&lt;/span&gt;(i);
            System.&lt;span style=&#34;color:#658b00&#34;&gt;out&lt;/span&gt;.&lt;span style=&#34;color:#658b00&#34;&gt;println&lt;/span&gt;(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;ArrayList: &amp;#34;&lt;/span&gt; + i +  &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;:&amp;#34;&lt;/span&gt;);
            &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;for&lt;/span&gt;(&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; j = 0; j &amp;lt; l.&lt;span style=&#34;color:#658b00&#34;&gt;size&lt;/span&gt;(); j++) {
                System.&lt;span style=&#34;color:#658b00&#34;&gt;out&lt;/span&gt;.&lt;span style=&#34;color:#658b00&#34;&gt;println&lt;/span&gt;(l.&lt;span style=&#34;color:#658b00&#34;&gt;get&lt;/span&gt;(j));
            }
        }
    }
  
    &lt;span style=&#34;color:#228b22&#34;&gt;// 二分查找
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;binarySearch&lt;/span&gt;(&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; target) {
        &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; start = 0;
        &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; end = index.&lt;span style=&#34;color:#658b00&#34;&gt;length&lt;/span&gt; - 1 ;
        &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; mid = -1;
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;while&lt;/span&gt;(start &amp;lt;= end) {
            mid = (start + end) / 2;
            &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt;(target == index[mid]) {
                &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; mid;
            }&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt;(target &amp;lt; index[mid]) {
                end = mid - 1;
            }&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;else&lt;/span&gt; {
                start = mid + 1;
            }
        }
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; start;
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;折半查找二分查找&#34;&gt;折半查找（二分查找）&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;原理：首先确定该查找区间的中间点位置： int mid = (low+upper) / 2；然后将待查找的值与中间点位置的值比较：若相等，则查找成功并返回此位置。若中间点位置值大于待查值，则新的查找区间是中间点位置的左边区域。若中间点位置值小于待查值，则新的查找区间是中间点位置的右边区域。下一次查找是针对新的查找区间进行的&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;binarySearch&lt;/span&gt;(&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt;[] nums, &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; key) {
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; l = 0, h = nums.&lt;span style=&#34;color:#658b00&#34;&gt;length&lt;/span&gt; - 1;
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;while&lt;/span&gt; (l &amp;lt;= h) {
        &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; m = l + (h - l) / 2;
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt; (nums[m] == key) {
            &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; m;
        } &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt; (nums[m] &amp;gt; key) {
            h = m - 1;
        } &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;else&lt;/span&gt; {
            l = m + 1;
        }
    }
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; -1;
}

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;时间复杂度&#34;&gt;时间复杂度&lt;/h3&gt;
&lt;p&gt;二分查找也称为折半查找，每次都能将查找区间减半，这种折半特性的算法时间复杂度为 O(logN)。&lt;/p&gt;
&lt;h3 id=&#34;m-计算&#34;&gt;m 计算&lt;/h3&gt;
&lt;p&gt;有两种计算中值 m 的方式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;m = (l + h) / 2&lt;/li&gt;
&lt;li&gt;m = l + (h - l) / 2&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;l + h 可能出现加法溢出，也就是说加法的结果大于整型能够表示的范围。但是 l 和 h 都为正数，因此 h - l 不会出现加法溢出问题。所以，最好使用第二种计算法方法，该方法又被称为&lt;strong&gt;差值查找&lt;/strong&gt;，是对二分查找的优化。&lt;/p&gt;
&lt;h3 id=&#34;未成功查找的返回值&#34;&gt;未成功查找的返回值&lt;/h3&gt;
&lt;p&gt;循环退出时如果仍然没有查找到 key，那么表示查找失败。可以有两种返回值：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;-1：以一个错误码表示没有查找到 key&lt;/li&gt;
&lt;li&gt;l：将 key 插入到 nums 中的正确位置&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;斐波那契查找&#34;&gt;斐波那契查找&lt;/h2&gt;
&lt;p&gt;除了上面的查找方法，还有一种方法，斐波那契查找（Fibonacci Search），它充分利用了黄金分割的原理，是一种特殊的折半查找方法。&lt;/p&gt;
&lt;p&gt;首先要准备一个斐波那契数列：
&lt;strong&gt;F = {0, 1, 1, 2, 3, 5, 8, 13, 21, &amp;hellip;}&lt;/strong&gt;
然后再准备一个供查询的数组：
a[11] = {0, 1, 16, 24, 35, 47, 59, 62, 73, 88, 99}&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;斐波拉契查找算法的核心在于&lt;/strong&gt;:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;当&lt;code&gt;key = a[mid]&lt;/code&gt;时，表示查找成功;&lt;/li&gt;
&lt;li&gt;当&lt;code&gt;key &amp;lt; a[mid]&lt;/code&gt;时，将斐波那契数列分割下标k减小1（&lt;code&gt;k=k-1&lt;/code&gt;）向左查找，新范围是第&lt;code&gt;low&lt;/code&gt;个到第新&lt;code&gt;mid-1&lt;/code&gt;个,此时范围个数为&lt;code&gt;F[k-1]-1&lt;/code&gt;个;&lt;/li&gt;
&lt;li&gt;当&lt;code&gt;key &amp;gt; a[mid]&lt;/code&gt;时，将斐波那契数列分割下标k减小2（&lt;code&gt;k=k-2&lt;/code&gt;）向右查找，新范围是第&lt;code&gt;mid+1&lt;/code&gt;个到第&lt;code&gt;high&lt;/code&gt;个. 此时范围个数为&lt;code&gt;F[K-2]-1&lt;/code&gt;个;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;首先需要计算出黄金分割点k，如上面a数组中除哨兵外元素个数n=10.&lt;/p&gt;
&lt;p&gt;根据已知条件，计算k值&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#008b45;font-weight:bold&#34;&gt;FibonacciSearch&lt;/span&gt; {
 
	&lt;span style=&#34;color:#228b22&#34;&gt;/**
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;	 * @param args
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;	 */&lt;/span&gt;
	&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;final&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; MAXSIZE = 20;
 
	&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;main&lt;/span&gt;(String[] args) {
		&lt;span style=&#34;color:#228b22&#34;&gt;// TODO Auto-generated method stub
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;		&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt;[] f = fibonacci();
		&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; i : f) {
			System.&lt;span style=&#34;color:#658b00&#34;&gt;out&lt;/span&gt;.&lt;span style=&#34;color:#658b00&#34;&gt;print&lt;/span&gt;(i + &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;);
		}
		System.&lt;span style=&#34;color:#658b00&#34;&gt;out&lt;/span&gt;.&lt;span style=&#34;color:#658b00&#34;&gt;println&lt;/span&gt;();
 
		&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt;[] data = { 1, 5, 15, 22, 25, 31, 39, 42, 47, 49, 59, 68, 88 };
 
		&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; search = 39;
		&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; position = fibonacciSearch(data, search);
		System.&lt;span style=&#34;color:#658b00&#34;&gt;out&lt;/span&gt;.&lt;span style=&#34;color:#658b00&#34;&gt;println&lt;/span&gt;(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;值&amp;#34;&lt;/span&gt; + search + &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;的元素位置为：&amp;#34;&lt;/span&gt; + position);
	}
 
	&lt;span style=&#34;color:#228b22&#34;&gt;/**
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;	 * 斐波那契数列
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;	 * 
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;	 * @return
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;	 */&lt;/span&gt;
	&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt;[] &lt;span style=&#34;color:#008b45&#34;&gt;fibonacci&lt;/span&gt;() {
		&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt;[] f = &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt;[20];
		&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; i = 0;
		f[0] = 1;
		f[1] = 1;
		&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;for&lt;/span&gt; (i = 2; i &amp;lt; MAXSIZE; i++) {
			f[i] = f[i - 1] + f[i - 2];
		}
		&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; f;
	}
 
	&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;fibonacciSearch&lt;/span&gt;(&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt;[] data, &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; key) {
		&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; low = 0;
		&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; high = data.&lt;span style=&#34;color:#658b00&#34;&gt;length&lt;/span&gt; - 1;
		&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; mid = 0;
		&lt;span style=&#34;color:#228b22&#34;&gt;// 斐波那契分割数值下标
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;		&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; k = 0;
		&lt;span style=&#34;color:#228b22&#34;&gt;// 序列元素个数
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;		&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; i = 0;
		&lt;span style=&#34;color:#228b22&#34;&gt;// 获取斐波那契数列
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;		&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt;[] f = fibonacci();
 
		&lt;span style=&#34;color:#228b22&#34;&gt;// 获取斐波那契分割数值下标
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;		&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;while&lt;/span&gt; (data.&lt;span style=&#34;color:#658b00&#34;&gt;length&lt;/span&gt; &amp;gt; f[k] - 1) {
			k++;
		}
 
 		&lt;span style=&#34;color:#228b22&#34;&gt;// 利用Java工具类Arrays 构造新数组并指向 数组 a[]
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt;[] temp=Arrays.&lt;span style=&#34;color:#658b00&#34;&gt;copyOf&lt;/span&gt;(a, f[k]);
 
		&lt;span style=&#34;color:#228b22&#34;&gt;// 序列补充至f[k]个元素
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;		&lt;span style=&#34;color:#228b22&#34;&gt;// 补充的元素值为最后一个元素的值
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;		&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;for&lt;/span&gt; (i = data.&lt;span style=&#34;color:#658b00&#34;&gt;length&lt;/span&gt;; i &amp;lt; f[k] - 1; i++) {
			temp[i] = temp[high];
		}
 
		&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;while&lt;/span&gt; (low &amp;lt;= high) {
			&lt;span style=&#34;color:#228b22&#34;&gt;// low：起始位置
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;			&lt;span style=&#34;color:#228b22&#34;&gt;// 前半部分有f[k-1]个元素，由于下标从0开始
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;			&lt;span style=&#34;color:#228b22&#34;&gt;// 则-1 获取 黄金分割位置元素的下标
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;			mid = low + f[k - 1] - 1;
 
			&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt; (temp[mid] &amp;gt; key) {
				&lt;span style=&#34;color:#228b22&#34;&gt;// 查找前半部分，高位指针移动
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;				high = mid - 1;
				&lt;span style=&#34;color:#228b22&#34;&gt;// （全部元素） = （前半部分）+（后半部分）
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;				&lt;span style=&#34;color:#228b22&#34;&gt;// f[k] = f[k-1] + f[k-1]
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;				&lt;span style=&#34;color:#228b22&#34;&gt;// 因为前半部分有f[k-1]个元素，所以 k = k-1
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;				k = k - 1;
			} &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt; (temp[mid] &amp;lt; key) {
				&lt;span style=&#34;color:#228b22&#34;&gt;// 查找后半部分，高位指针移动
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;				low = mid + 1;
				&lt;span style=&#34;color:#228b22&#34;&gt;// （全部元素） = （前半部分）+（后半部分）
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;				&lt;span style=&#34;color:#228b22&#34;&gt;// f[k] = f[k-1] + f[k-1]
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;				&lt;span style=&#34;color:#228b22&#34;&gt;// 因为后半部分有f[k-1]个元素，所以 k = k-2
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;				k = k - 2;
			} &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;else&lt;/span&gt; {
				&lt;span style=&#34;color:#228b22&#34;&gt;// 如果为真则找到相应的位置
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;				&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt; (mid &amp;lt;= high) {
					&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; mid;
				} &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;else&lt;/span&gt; {
					&lt;span style=&#34;color:#228b22&#34;&gt;// 出现这种情况是查找到补充的元素
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;					&lt;span style=&#34;color:#228b22&#34;&gt;// 而补充的元素与high位置的元素一样
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;					&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; high;
				}
			}
		}
		&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; -1;
	}
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;算法复杂度分析&#34;&gt;算法复杂度分析&lt;/h3&gt;
&lt;p&gt;算法复杂度 O(logn)&lt;/p&gt;
&lt;p&gt;平均性能要优于折半查找，如果是最坏情况比如如本例程序中 key=1,那么始终在左侧长半区查找，则查找效率要低于折半查找。&lt;/p&gt;
&lt;p&gt;二分查找分割方式 mid = (low+high)/2&lt;/p&gt;
&lt;p&gt;插值查找分割方式 mid = low + (high-low)*(key-a[low])/(a[high]-a[low])&lt;/p&gt;
&lt;p&gt;斐波那契查找分割方式 mid = low + Fibonacci[index - 1] - 1&lt;/p&gt;
&lt;p&gt;海量数据查找中，这种细微的差距会影响最终的查找效率。&lt;/p&gt;
&lt;h1 id=&#34;动态查找表dynamic-search-table&#34;&gt;动态查找表(Dynamic Search Table)&lt;/h1&gt;
&lt;p&gt;当查找表以顺序存储结构存储且需要保持有序时，若对查找表进行插入、删除或排序操作，就必须移动大量的记录，当记录数很多时，这种移动的代价很大。若查找表无序，则插入删除可无需移动大量记录，但于查找不利。利用树的形式组织查找表，可以对查找表进行动态高效的查找。&lt;/p&gt;
&lt;p&gt;在查找过程中同时插入查找表中不存在的数据元素, 或者从查找表中删除已经存在的某个数据元素。显然动态查找表的操作就是2个动作：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;查找时插入数据元素&lt;/li&gt;
&lt;li&gt;查找时删除数据元素&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;动态查找表主要使用树形结构中的二叉排序树（Binary Sort Tree）、平衡二叉树（Balance Binary Tree或AVL Tree, Adelson-Velskii Landis Tree），&lt;strong&gt;AVL与BST均在961考纲中&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;二叉排序树&#34;&gt;二叉排序树&lt;/h2&gt;
&lt;p&gt;二叉排序树(Binary Sort Tree或Binary Search Tree) 的定义为：二叉排序树或者是空树，或者是满足下列性质的二叉树：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;若左子树不为空，则左子树上所有结点的值(关键字)都小于根结点的值；&lt;/li&gt;
&lt;li&gt;若右子树不为空，则右子树上所有结点的值(关键字)都大于根结点的值；&lt;/li&gt;
&lt;li&gt;左、右子树都分别是二叉排序树。&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;若按中序遍历一棵二叉排序树，所得到的结点序列是一个递增序列。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;二叉排序树性能&#34;&gt;二叉排序树性能&lt;/h3&gt;
&lt;p&gt;二叉排序树查找关键字的比较次数，等于该结点所在的层次数（查找成功）； 若查找不成功，其比较次数最多为树的深度。对于一棵具有n个结点的树来说，其深度介于㏒&lt;!-- raw HTML omitted --&gt;2&lt;!-- raw HTML omitted --&gt;(n+1)与n之间。二叉排序树的形态对于查找效率至关重要，或者说，一棵二叉排序树不一定就能提高查找的速度，而是要看这棵树的形态。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;指导书中二叉排序树与二分查找的对比&lt;/strong&gt;：就维护表的&lt;strong&gt;有序性&lt;/strong&gt;而言，二叉排序树无需移动结点，只需修改指针即可完成插入和删除操作，平均执行时间为O(log&lt;!-- raw HTML omitted --&gt;2&lt;!-- raw HTML omitted --&gt;n)。二分查找的对象是&lt;strong&gt;有序顺序表&lt;/strong&gt;，若有插入和删除结点的操作，所花时间是O(n)。当有序表是&lt;strong&gt;静态查找表&lt;/strong&gt;时，宜用&lt;strong&gt;顺序表&lt;/strong&gt;作为其&lt;strong&gt;存储结构&lt;/strong&gt;，而采用二分查找实现其查找操作；若有序表是动态查找表，则应该选择二叉排序树作为其逻辑结构。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;平衡二叉树&#34;&gt;平衡二叉树&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;为了避免树的高度增长过快，降低二叉排序的性能&lt;/strong&gt;，规定在插入和删除二叉树结点时，要保证任意结点的左、右树高度差的绝对值&lt;strong&gt;不超过1&lt;/strong&gt;，这样的二叉树称为平衡二叉树，简称平衡树。定义结点左子树和右子树的高度差为该节点的&lt;strong&gt;平衡因子&lt;/strong&gt;。平衡二叉树结点的平衡因子只可能是&lt;code&gt;-1&lt;/code&gt;、&lt;code&gt;0&lt;/code&gt;或&lt;code&gt;1&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;平衡二叉树的插入过程的前半部分与二叉排序树相同，但是在新节点插入后，若造成查找路径上的某个结点不再平衡，则需要作出相应的调整。归纳总结为以下四种情况：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;LL平衡旋转（右单旋转）&lt;/li&gt;
&lt;li&gt;RR平衡旋转（左单旋转）&lt;/li&gt;
&lt;li&gt;LR平衡旋转（先左后右双旋转）&lt;/li&gt;
&lt;li&gt;RL平衡旋转（先右后左双旋转）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;平衡二叉树性能&#34;&gt;平衡二叉树性能&lt;/h3&gt;
&lt;p&gt;含有n个结点的平衡二叉树最大深度为O(log&lt;!-- raw HTML omitted --&gt;2&lt;!-- raw HTML omitted --&gt;n)，因此平衡二叉树的平均查找长度为O(log&lt;!-- raw HTML omitted --&gt;2&lt;!-- raw HTML omitted --&gt;n)。&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;reference&#34;&gt;Reference&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://juejin.im/entry/5b6a89916fb9a04f86065737&#34;&gt;https://juejin.im/entry/5b6a89916fb9a04f86065737&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://segmentfault.com/a/1190000022654107&#34;&gt;数据结构与算法之查找（静态查找与动态查找）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.geeksforgeeks.org/fibonacci-search/&#34;&gt;Fibonacci Search on GeeksforGeeks&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
- https://www.openheart.icu/cs/%E5%8A%A8%E6%80%81%E6%9F%A5%E6%89%BE%E8%A1%A8%E4%B8%8E%E9%9D%99%E6%80%81%E6%9F%A5%E6%89%BE%E8%A1%A8/ - ALL RIGHTS RESERVED KRIS NIE</description>
        </item>
    
    
    
        <item>
        <title>C# in Depth</title>
        <link>https://www.openheart.icu/cs/csharp-in-depth/</link>
        <pubDate>Sat, 25 Jul 2020 00:14:11 +0000</pubDate>
        
        <guid>https://www.openheart.icu/cs/csharp-in-depth/</guid>
        <description>42th openheart https://www.openheart.icu/cs/csharp-in-depth/ -&lt;p&gt;&lt;em&gt;本文为「C# in Depth」(4th edition)学习记录。&lt;/em&gt;&lt;/p&gt;
&lt;h1 id=&#34;part-1-c-in-context&#34;&gt;Part 1 C# in context&lt;/h1&gt;
&lt;h2 id=&#34;survival-of-the-sharpest&#34;&gt;Survival of the sharpest&lt;/h2&gt;
&lt;p&gt;本章主要讲C#的由来与介绍（吹嘘）。&lt;/p&gt;
&lt;p&gt;开始前可以回顾一下C#的历史，现在是北京时间2021-05-29 14:06:54，the last C# version is C# 9.&lt;/p&gt;
&lt;h2 id=&#34;reference&#34;&gt;Reference&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-version-history&#34;&gt;The history of C#&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;part-2-c-in-2-5&#34;&gt;Part 2 C# in 2-5&lt;/h1&gt;
&lt;h2 id=&#34;c-3-linq-and-everything-that-comes-with-it&#34;&gt;C# 3: LINQ and everything that comes with it&lt;/h2&gt;
&lt;h3 id=&#34;extension-methods&#34;&gt;Extension methods&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Extension methods allow existing classes to be extended without relying on inheritance or having to change the class&amp;rsquo;s source code. This means that if you want to add some methods into the existing String class you can do it quite easily. Here&amp;rsquo;s a couple of rules to consider when deciding on whether or not to use extension methods:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Extension methods cannot be used to override existing methods&lt;/li&gt;
&lt;li&gt;An extension method with the same name and signature as an instance method will not be called&lt;/li&gt;
&lt;li&gt;The concept of extension methods cannot be applied to fields, properties or events&lt;/li&gt;
&lt;li&gt;Use extension methods sparingly&amp;hellip;.overuse can be a bad thing!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Times to use extension methods:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;when you don&amp;rsquo;t control the types being extended&lt;/li&gt;
&lt;li&gt;where you don&amp;rsquo;t want to force the implementor to provide code that can be done using the existing methods&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For an example of the second point; you might have an extension method on &lt;code&gt;IList&amp;lt;T&amp;gt;&lt;/code&gt; (for example, &lt;code&gt;Sort&lt;/code&gt;) that can be written entirely using the existing &lt;code&gt;IList&amp;lt;T&amp;gt;&lt;/code&gt; members&amp;hellip; so why force anybody else to write anything? This is the foundation block of LINQ, and allowed Microsoft to provide &lt;em&gt;much&lt;/em&gt; more functionality without breaking anything.&lt;/p&gt;
&lt;p&gt;Times to &lt;strong&gt;not&lt;/strong&gt; use extension methods:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;when polymorphism is critical; you cannot guarantee that your code will be the version that gets executed with an extension method, as methods directly on the type take precedence&lt;/li&gt;
&lt;li&gt;when you need access to private/protected members&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;reference-1&#34;&gt;Reference&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/787324/when-do-you-use-extension-methods-ext-methods-vs-inheritance&#34;&gt;When do you use extension methods, ext. methods vs. inheritance?&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;part-3-c-in-6&#34;&gt;Part 3 C# in 6&lt;/h1&gt;
&lt;h2 id=&#34;super-sleek-properties-and-expression-bodied-members&#34;&gt;Super-sleek properties and expression-bodied members&lt;/h2&gt;
&lt;h3 id=&#34;upgrades-to-automatically-implemented-properties&#34;&gt;Upgrades to automatically implemented properties&lt;/h3&gt;
&lt;h4 id=&#34;automatically-implemented-properties-in-structs&#34;&gt;Automatically implemented properties in structs&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;In C# 6, the language and the compiler have a closer understanding of the relationship between automatically implemented properties and the fields they’re backed by:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You’re allowed to set an automatically implemented property before all the fields are initialized.&lt;/li&gt;
&lt;li&gt;Setting an automatically implemented property counts as initializing the field.&lt;/li&gt;
&lt;li&gt;You’re allowed to read an automatically implemented property before other fields are initialized, so long as you’ve set it beforehand.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-C#&#34; data-lang=&#34;C#&#34;&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#008b45;font-weight:bold&#34;&gt;Employee&lt;/span&gt;
{
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;string&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;alias&lt;/span&gt;;
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;string&lt;/span&gt; name;

    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; Employee(&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;string&lt;/span&gt; name, &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;string&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;alias&lt;/span&gt;) : &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;this&lt;/span&gt;()
    {
        &lt;span style=&#34;color:#228b22&#34;&gt;// Qualify the members of the class
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;      	&lt;span style=&#34;color:#228b22&#34;&gt;// Chaining to default constructor
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;this&lt;/span&gt;.name = name;
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;alias&lt;/span&gt; = &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;alias&lt;/span&gt;;
    }
}

&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#008b45;font-weight:bold&#34;&gt;ServiceDescriptor&lt;/span&gt;
{
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;private&lt;/span&gt; ServiceDescriptor(Type serviceType, ServiceLifetime lifetime)
    {
      	Lifetime = lifetime;
     		ServiceType = serviceType;
    }

  	&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; ServiceDescriptor(
    		Type serviceType,
    		&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;object&lt;/span&gt; instance)
    		: &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;this&lt;/span&gt;(serviceType, ServiceLifetime.Singleton)
    {
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt; (serviceType == &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;null&lt;/span&gt;)
        {
          	&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;throw&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;new&lt;/span&gt; ArgumentNullException(nameof(serviceType));
        }

        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt; (instance == &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;null&lt;/span&gt;)
        {
          	&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;throw&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;new&lt;/span&gt; ArgumentNullException(nameof(instance));
        }

        ImplementationInstance = instance;
    }
}

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h5 id=&#34;reference-2&#34;&gt;Reference&lt;/h5&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/classes-and-structs/using-constructors&#34;&gt;Using Constructors (C# Programming Guide)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/this&#34;&gt;this (C# Reference)&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;part-4-c-in-7-and-beyond&#34;&gt;Part 4 C# in 7 and beyond&lt;/h1&gt;
&lt;h2 id=&#34;concise-code-in-c-7&#34;&gt;Concise code in C# 7&lt;/h2&gt;
&lt;h3 id=&#34;minor-improvements-in-c-73&#34;&gt;Minor improvements in C# 7.3&lt;/h3&gt;
&lt;h4 id=&#34;generic-type-constraints&#34;&gt;Generic type constraints&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;Prior to C# 7.3, a type constraint couldn’t specify that the type argument must derive from Enum or Delegate.&lt;/p&gt;
&lt;p&gt;Before C# 7.3, &lt;a href=&#34;https://docs.microsoft.com/en-us/dotnet/api/system.enum&#34;&gt;Enum&lt;/a&gt;, &lt;a href=&#34;https://docs.microsoft.com/en-us/dotnet/api/system.delegate&#34;&gt;Delegate&lt;/a&gt;, and &lt;a href=&#34;https://docs.microsoft.com/en-us/dotnet/api/system.multicastdelegate&#34;&gt;MulticastDelegate&lt;/a&gt; were also disallowed as base class constraints.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-C#&#34; data-lang=&#34;C#&#34;&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;enum&lt;/span&gt; SampleEnum {}
&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;void&lt;/span&gt; EnumMethod&amp;lt;T&amp;gt;() &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;where&lt;/span&gt; T : struct, Enum {}
&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;void&lt;/span&gt; DelegateMethod&amp;lt;T&amp;gt;() &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;where&lt;/span&gt; T : Delegate {}
&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;void&lt;/span&gt; UnmanagedMethod&amp;lt;T&amp;gt;() &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;where&lt;/span&gt; T : unmanaged {}
&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#008b45;font-weight:bold&#34;&gt;MyClass&lt;/span&gt;&amp;lt;T, U&amp;gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;where&lt;/span&gt; T : &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#008b45;font-weight:bold&#34;&gt;where&lt;/span&gt; U : &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;struct&lt;/span&gt; {}

&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;abstract&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#008b45;font-weight:bold&#34;&gt;B&lt;/span&gt;
{
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;void&lt;/span&gt; M&amp;lt;T&amp;gt;(T? item) &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;where&lt;/span&gt; T : &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;struct&lt;/span&gt; { }
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;abstract&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;void&lt;/span&gt; M&amp;lt;T&amp;gt;(T? item);

}

&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#008b45;font-weight:bold&#34;&gt;D&lt;/span&gt; : B
{
    &lt;span style=&#34;color:#228b22&#34;&gt;// Without the &amp;#34;default&amp;#34; constraint, the compiler tries to override the first method in B
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;override&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;void&lt;/span&gt; M&amp;lt;T&amp;gt;(T? item) &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;where&lt;/span&gt; T : &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;default&lt;/span&gt; { }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;In a nullable context in C# 8.0 and later, the nullability of the base class type is enforced. If the base class is non-nullable (for example &lt;code&gt;Base&lt;/code&gt;), the type argument must be non-nullable. If the base class is nullable (for example &lt;code&gt;Base?&lt;/code&gt;), the type argument may be either a nullable or non-nullable reference type. The compiler issues a warning if the type argument is a nullable reference type when the base class is non-nullable.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5 id=&#34;type-parameter-naming-guidelinesreference3httpsdocsmicrosoftcomen-usdotnetcsharpprogramming-guidegenericsgeneric-type-parameters&#34;&gt;Type parameter naming guidelines(&lt;a href=&#34;https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/generics/generic-type-parameters&#34;&gt;Reference3&lt;/a&gt;)&lt;/h5&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Do&lt;/strong&gt; name generic type parameters with descriptive names, unless a single letter name is completely self explanatory and a descriptive name would not add value.&lt;/p&gt;
&lt;p&gt;C#Copy&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-csharp&#34; data-lang=&#34;csharp&#34;&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;interface&lt;/span&gt; ISessionChannel&amp;lt;TSession&amp;gt; { &lt;span style=&#34;color:#228b22&#34;&gt;/*...*/&lt;/span&gt; }
&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;delegate&lt;/span&gt; TOutput Converter&amp;lt;TInput, TOutput&amp;gt;(TInput &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;from&lt;/span&gt;);
&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#008b45;font-weight:bold&#34;&gt;List&lt;/span&gt;&amp;lt;T&amp;gt; { &lt;span style=&#34;color:#228b22&#34;&gt;/*...*/&lt;/span&gt; }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Consider&lt;/strong&gt; using T as the type parameter name for types with one single letter type parameter.&lt;/p&gt;
&lt;p&gt;C#Copy&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-csharp&#34; data-lang=&#34;csharp&#34;&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; IComparer&amp;lt;T&amp;gt;() { &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;; }
&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;delegate&lt;/span&gt; &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;bool&lt;/span&gt; Predicate&amp;lt;T&amp;gt;(T item);
&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;struct&lt;/span&gt; &lt;span style=&#34;color:#008b45;font-weight:bold&#34;&gt;Nullable&lt;/span&gt;&amp;lt;T&amp;gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;where&lt;/span&gt; T : &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;struct&lt;/span&gt; { &lt;span style=&#34;color:#228b22&#34;&gt;/*...*/&lt;/span&gt; }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Do&lt;/strong&gt; prefix descriptive type parameter names with &amp;ldquo;T&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;C#Copy&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-csharp&#34; data-lang=&#34;csharp&#34;&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;interface&lt;/span&gt; ISessionChannel&amp;lt;TSession&amp;gt;
{
    TSession Session { &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;get&lt;/span&gt;; }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Consider&lt;/strong&gt; indicating constraints placed on a type parameter in the name of parameter. For example, a parameter constrained to &lt;code&gt;ISession&lt;/code&gt; may be called &lt;code&gt;TSession&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h5 id=&#34;reference-3&#34;&gt;Reference:&lt;/h5&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/where-generic-type-constraint&#34;&gt;where (generic type constraint) (C# Reference)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/archive/blogs/ericlippert/constraints-are-not-part-of-the-signature&#34;&gt;Constraints are not part of the signature&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/generics/generic-type-parameters&#34;&gt;Generic type parameters (C# Programming Guide)&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;my-part-5-whats-new-in-c-90&#34;&gt;My Part 5 What&amp;rsquo;s new in C# 9.0&lt;/h1&gt;
&lt;h2 id=&#34;reference-4&#34;&gt;Reference&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-version-history&#34;&gt;What&amp;rsquo;s new in C# 9.0&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
- https://www.openheart.icu/cs/csharp-in-depth/ - ALL RIGHTS RESERVED KRIS NIE</description>
        </item>
    
    
    
        <item>
        <title>Implementing the Singleton Pattern in C#</title>
        <link>https://www.openheart.icu/cs/implementing-the-singleton-pattern-in-csharp/</link>
        <pubDate>Sat, 25 Jul 2020 00:14:11 +0000</pubDate>
        
        <guid>https://www.openheart.icu/cs/implementing-the-singleton-pattern-in-csharp/</guid>
        <description>42th openheart https://www.openheart.icu/cs/implementing-the-singleton-pattern-in-csharp/ -&lt;h1 id=&#34;implementing-the-singleton-pattern-in-chttpscsharpindepthcomarticlessingleton&#34;&gt;&lt;a href=&#34;https://csharpindepth.com/articles/Singleton&#34;&gt;Implementing the Singleton Pattern in C#&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;在C＃中实现单例模式。该模式是非常常见的设计模式之一，某个对象全局只需要一个实例时，就可以使用单例模式。它的优点也显而易见：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;它能够避免对象重复创建，节约空间并提升效率&lt;/li&gt;
&lt;li&gt;避免由于操作不同实例导致的逻辑错误&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;以下是原文作者Jon Skeet 对C#单例模式的介绍。&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;单例模式是软件工程中最著名的模式之一。本质上，单例是仅允许创建其自身的单个实例的类，并且通常提供对该实例的简单访问。最常见的是，单例在创建实例时不允许指定任何参数，否则对实例的第二次请求但参数不同可能会出现问题！ （如果应该为具有相同参数的所有请求访问相同的实例，则使用工厂模式更为合适。）本文仅涉及不需要参数的情况。通常，单例的要求是它们是懒惰地创建的，即：直到首次需要实例时才创建实例。&lt;/p&gt;
&lt;p&gt;在C＃中有多种不同的方式来实现单例模式。我将在这里以从简到难顺序（&lt;em&gt;in reverse order of elegance&lt;/em&gt;）介绍它们，从最常见的线程安全性开始，逐步发展为完全延迟加载，线程安全，简单且高性能的版本。&lt;/p&gt;
&lt;p&gt;所有这些实现都有四个共同的特征，但是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;单个构造函数，私有且无参数。这样可以防止其他类实例化它（这将违反模式）。请注意，它还防止了子类化（&lt;em&gt;subclassing&lt;/em&gt;）如果一个单例可以被子类化一次，则可以被子类化两次，并且如果每个子类都可以创建一个实例，则将违反（&lt;em&gt;violated&lt;/em&gt;）该模式。如果您需要基本类型的单个实例，则可以使用工厂模式，但是直到运行时才知道确切的类型。&lt;/li&gt;
&lt;li&gt;该类是密封的。严格来说，由于上述几点，这是不必要的，但可以帮助&lt;code&gt;JIT&lt;/code&gt;进行更多优化。&lt;/li&gt;
&lt;li&gt;一个静态变量，其中包含对创建的单个实例的引用（如果有）。&lt;/li&gt;
&lt;li&gt;公共静态方法是获取对创建的单个实例的引用，并在必要时创建一个实例。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;请注意，所有这些实现还使用公共静态属性&lt;code&gt;Instance&lt;/code&gt;作为访问实例的方式。在所有情况下，都可以轻松地将属性转换为方法，而不会影响线程安全性或性能。&lt;/p&gt;
&lt;h2 id=&#34;first-version---not-thread-safe&#34;&gt;First version - not thread-safe&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-c#&#34; data-lang=&#34;c#&#34;&gt;&lt;span style=&#34;color:#228b22&#34;&gt;// Bad code! Do not use!
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;sealed&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#008b45;font-weight:bold&#34;&gt;Singleton&lt;/span&gt;
{
  &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;static&lt;/span&gt; Singleton instance = &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;null&lt;/span&gt;;

  &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;private&lt;/span&gt; Singleton()
  {
  }

  &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;static&lt;/span&gt; Singleton Instance
  {
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;get&lt;/span&gt;
    {
      &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt; (instance == &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;null&lt;/span&gt;)
      {
        instance = &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;new&lt;/span&gt; Singleton();
      }
      &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; instance;
    }
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如前所述，以上内容不是线程安全的。&lt;/p&gt;
&lt;p&gt;两个不同的线程都可以执行判断（&lt;em&gt;evaluated the test&lt;/em&gt;）&lt;code&gt;if(instance == null)&lt;/code&gt;并发现它为&lt;code&gt;true&lt;/code&gt;，然后都创建实例，这违反了单例模式。请注意，实际上可能已经在计算表达式之前创建了实例，但是内存模型不能保证实例的新值能暴露给其他线程，除非已传递适当的内存屏障（互斥锁）（&lt;em&gt;memory barriers&lt;/em&gt;）。&lt;/p&gt;
&lt;h2 id=&#34;second-version---simple-thread-safety&#34;&gt;Second version - simple thread-safety&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-C#&#34; data-lang=&#34;C#&#34;&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;sealed&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#008b45;font-weight:bold&#34;&gt;Singleton&lt;/span&gt;
{
  &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;static&lt;/span&gt; Singleton instance = &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;null&lt;/span&gt;;
  &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;readonly&lt;/span&gt; &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;object&lt;/span&gt; padlock = &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;object&lt;/span&gt;();

  Singleton()
  {
  }

  &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;static&lt;/span&gt; Singleton Instance
  {
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;get&lt;/span&gt;
    {
      &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;lock&lt;/span&gt; (padlock)
      {
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt; (instance == &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;null&lt;/span&gt;)
        {
          instance = &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;new&lt;/span&gt; Singleton();
        }
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; instance;
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;此实现是线程安全的。线程在共享对象上加锁（&lt;em&gt;takes out a lock&lt;/em&gt;），然后在创建实例之前检查是否已创建实例。这可以解决内存屏障问题（因为锁定可确保所有读取均在获取锁之后逻辑发生，而解锁可确保所有写入均在锁释放之前逻辑发生）并确保只有一个线程将创建一个实例（仅一个线程一次可以位于代码的该部分中，到第二个线程进入该线程时，第一个线程将创建该实例，因此该表达式的计算结果为&lt;code&gt;false&lt;/code&gt;）。不幸的是，每次请求实例时都需要获取锁，因此性能会受到影响。&lt;/p&gt;
&lt;p&gt;请注意，我没有像此实现的某些版本那样锁定&lt;code&gt;typeof(Singleton)&lt;/code&gt;，而是锁定了类私有的静态变量的值。锁定其他类可以访问和锁定的对象（such as the type）可能会导致性能问题甚至死锁。这是我的一般样式首选项-尽可能仅锁定专门为锁定目的而创建的对象，或者为特定目的而将其锁定在哪个文档上（例如用于等待/触发队列）。通常，此类对象应为使用它们的类所专用。这有助于使编写线程安全的应用程序变得更加容易。&lt;/p&gt;
&lt;h2 id=&#34;third-version---attempted-thread-safety-using-double-check-locking&#34;&gt;Third version - attempted thread-safety using double-check locking&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-c#&#34; data-lang=&#34;c#&#34;&gt;&lt;span style=&#34;color:#228b22&#34;&gt;// Bad code! Do not use!
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;sealed&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#008b45;font-weight:bold&#34;&gt;Singleton&lt;/span&gt;
{
  &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;static&lt;/span&gt; Singleton instance = &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;null&lt;/span&gt;;
  &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;readonly&lt;/span&gt; &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;object&lt;/span&gt; padlock = &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;object&lt;/span&gt;();

  Singleton()
  {
  }

  &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;static&lt;/span&gt; Singleton Instance
  {
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;get&lt;/span&gt;
    {
      &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt; (instance == &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;null&lt;/span&gt;)
      {
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;lock&lt;/span&gt; (padlock)
        {
          &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt; (instance == &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;null&lt;/span&gt;)
          {
            instance = &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;new&lt;/span&gt; Singleton();
          }
        }
      }
      &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; instance;
    }
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;此实现方式（&lt;em&gt;implementation&lt;/em&gt;）尝试不再每次都加锁，同时保证线程安全。遗憾的是，该模式有四个缺点（&lt;em&gt;there are four downsides to the pattern&lt;/em&gt;）：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;它在Java中不起作用。这么说这似乎有些不合理，但是值得一提的是，您是否需要Java中的单例模式，C＃程序员也很可能是Java程序员。 Java内存模型无法确保在将对新对象的引用分配给实例之前，执行完构造函数。 Java内存模型针对1.5版进行了重新加工，但是在此之后，在没有易失性变量的情况下，双重检查锁定仍然被破坏（像C＃一样）。&lt;/li&gt;
&lt;li&gt;没有任何内存障碍，它在&lt;code&gt;ECMA CLI&lt;/code&gt;规范中也被打破。在.NET 2.0内存模型（比ECMA规范更强）下，它很可能是安全的，但我宁愿不依赖那些更强的语义，尤其是在对安全性有任何疑问的情况下。将实例变量设置为&lt;code&gt;volatile&lt;/code&gt;也有效，就像显式的内存屏障调用一样，但这样的话即使是大佬也无法确切地确定需要哪些屏障。我倾向于不去用大佬们有争议的方法！&lt;/li&gt;
&lt;li&gt;很容易出错。该模式必须与上面的完全一样-任何重大更改都可能影响性能或正确性。&lt;/li&gt;
&lt;li&gt;它的性能仍然不如后来的实现方式。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;fourth-version---not-quite-as-lazy-but-thread-safe-without-using-locks&#34;&gt;Fourth version - not quite as lazy, but thread-safe without using locks&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-c#&#34; data-lang=&#34;c#&#34;&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;sealed&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#008b45;font-weight:bold&#34;&gt;Singleton&lt;/span&gt;
{
  &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;readonly&lt;/span&gt; Singleton instance = &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;new&lt;/span&gt; Singleton();

  &lt;span style=&#34;color:#228b22&#34;&gt;// Explicit static constructor to tell C# compiler
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#228b22&#34;&gt;// not to mark type as beforefieldinit
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;static&lt;/span&gt; Singleton()
  {
  }

  &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;private&lt;/span&gt; Singleton()
  {
  }

  &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;static&lt;/span&gt; Singleton Instance
  {
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;get&lt;/span&gt;
    {
      &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; instance;
    }
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如您所见，这确实非常简单，那它是怎么实现线程安全的，它有多懒呢？Well，将C＃中的静态构造函数指定为仅在创建类的实例或引用静态成员时执行，并且每个&lt;code&gt;AppDomain&lt;/code&gt;仅执行一次。鉴于无论其他情况如何都需要执行对新构造的类型的检查，因此比在前面的示例中添加额外的检查要快。&lt;/p&gt;
&lt;p&gt;但是，这种方法也有一些缺点（&lt;em&gt;wrinkles&lt;/em&gt;）：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;它没有其他实现那么懒。特别是，当具有实例以外的静态成员时，对这些成员的首次引用将涉及创建实例。在下一个实现中将对此进行更正。&lt;/li&gt;
&lt;li&gt;如果一个静态构造函数调用另一个而又再次调用第一个静态构造函数，则会带来复杂性。请查阅&lt;code&gt;.NET规范（currently section 9.5.3 of partition II&lt;/code&gt;），以获取有关类型初始值设定项的确切性质的更多详细信息。它们不太可能会影响程序（&lt;em&gt;they&amp;rsquo;re unlikely to bite you&lt;/em&gt;），但值得一提的是，静态构造函数在生命周期内存在互相引用（&lt;em&gt;the consequences of static constructors which refer to each other in a cycle&lt;/em&gt;）。&lt;/li&gt;
&lt;li&gt;只有当类型未使用称为&lt;code&gt;beforefieldinit&lt;/code&gt;的特殊标志进行标记时，.NET才能保证类型初始化程序的惰性。不幸的是，C＃编译器（至少是.NET 1.1运行时中提供的）将所有没有静态构造函数（即看起来像构造函数但被标记为静态的块）的类型都标记为&lt;code&gt;beforefieldinit&lt;/code&gt;。我有一篇&lt;a href=&#34;https://csharpindepth.com/articles/BeforeFieldInit&#34;&gt;文章&lt;/a&gt;，详细介绍了这个问题。还要注意，它会影响性能，如页面底部所述。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这种实现方式可以采取的一种捷径：仅使实例成为公共静态只读变量，并完全摆脱该属性。这使得基本框架代码绝对很小！但是，许多人更喜欢拥有属性，以防将来需要采取进一步的措施，并且&lt;code&gt;JIT&lt;/code&gt;内联可能使性能相同。 （请注意，如果您需要惰性，则仍然需要静态构造函数本身。）&lt;/p&gt;
&lt;h2 id=&#34;fifth-version---fully-lazy-instantiation&#34;&gt;Fifth version - fully lazy instantiation&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-c#&#34; data-lang=&#34;c#&#34;&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;sealed&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#008b45;font-weight:bold&#34;&gt;Singleton&lt;/span&gt;
{
  &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;private&lt;/span&gt; Singleton()
  {
  }

  &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;static&lt;/span&gt; Singleton Instance
  {
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;get&lt;/span&gt; { &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; Nested.instance; }
  }

  &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#008b45;font-weight:bold&#34;&gt;Nested&lt;/span&gt;
  {
    &lt;span style=&#34;color:#228b22&#34;&gt;// Explicit static constructor to tell C# compiler
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#228b22&#34;&gt;// not to mark type as beforefieldinit
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;static&lt;/span&gt; Nested()
    {
    }

    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;internal&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;readonly&lt;/span&gt; Singleton instance = &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;new&lt;/span&gt; Singleton();
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在这里，实例化是由对嵌套类的静态成员的第一次引用触发的，该实例仅在&lt;code&gt;Instance&lt;/code&gt;中发生。这意味着该实现完全是懒的，同事具有先前性能的所有性能优势。请注意，尽管嵌套类可以访问封闭类的私有成员，但事实并非如此，因此这里需要实例化。但是，由于类本身是私有的，所以这不会引起任何其他问题。但是，为了使实例化变得懒惰，代码有些复杂。&lt;/p&gt;
&lt;h2 id=&#34;sixth-version---using-net-4s-lazyt-type&#34;&gt;Sixth version - using .NET 4&amp;rsquo;s &lt;code&gt;Lazy&amp;lt;T&amp;gt;&lt;/code&gt; type&lt;/h2&gt;
&lt;p&gt;如果使用的是.NET 4（或更高版本），则可以使用&lt;a href=&#34;http://msdn.microsoft.com/en-us/library/dd642331.aspx&#34;&gt;System.Lazy&lt;/a&gt;类型使懒变得非常简单。您需要做的就是将委托传递给构造函数，该构造函数调用Singleton构造函数，使用&lt;code&gt;lambda表达式&lt;/code&gt;最容易完成。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-c#&#34; data-lang=&#34;c#&#34;&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;sealed&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#008b45;font-weight:bold&#34;&gt;Singleton&lt;/span&gt;
{
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;readonly&lt;/span&gt; Lazy&amp;lt;Singleton&amp;gt; lazy = &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;new&lt;/span&gt; Lazy&amp;lt;Singleton&amp;gt; (() =&amp;gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;new&lt;/span&gt; Singleton());

    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;static&lt;/span&gt; Singleton Instance { 
      &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;get&lt;/span&gt; { &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; lazy.Value; }
    }

    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;private&lt;/span&gt; Singleton()
    {
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;它很简单，性能也很好。如果需要，还可以使用&lt;a href=&#34;http://msdn.microsoft.com/en-us/library/dd642334.aspx&#34;&gt;IsValueCreated&lt;/a&gt;属性检查实例是否已创建。&lt;/p&gt;
&lt;p&gt;上面的代码隐式地使用&lt;code&gt;LazyThreadSafetyMode.ExecutionAndPublication&lt;/code&gt;作为&lt;code&gt;Lazy&amp;lt;Singleton&amp;gt;&lt;/code&gt;的线程安全模式。根据您的要求，您可能希望尝试其他模式。&lt;/p&gt;
&lt;h2 id=&#34;performance-vs-laziness&#34;&gt;Performance vs laziness&lt;/h2&gt;
&lt;p&gt;在许多情况下，您实际上并不需要完全的懒，除非类初始化时需要做特别耗时的事情，或者在其他地方有副作用，否则可以忽略上面有关显式静态构造函数的实现方法。这可以提高性能，因为它允许&lt;code&gt;JIT&lt;/code&gt;编译器进行一次检查（例如，在方法开始时进行检查），以确保类型已初始化，然后从此开始进行假定。如果您的单例实例是在相对紧凑的循环中引用的，则这可能会（相对）产生明显的性能差异。您应该确定是否需要完全延迟的实例化，并在类中适当地记录此决定。&lt;/p&gt;
&lt;p&gt;该页面存在的很多原因是人们试图变得聪明（&lt;em&gt;A lot of the reason for this page&amp;rsquo;s existence is people trying to be clever&lt;/em&gt;），因此提出了双重检查的锁定算法。人们常常认为加锁是付出昂贵代价的操作，这是普遍的并且是错误的。我编写了一个非常快速的基准测试，它以十亿次尝试各种变体，以循环方式获取单例实例。这并不是十分科学（&lt;em&gt;It&amp;rsquo;s not terribly scientific&lt;/em&gt;），因为在现实生活中，您可能想知道，如果每次迭代实际上都涉及到对获取单例的方法的调用等，该过程有多快。但是，它确实显示了重要的意义。在我的笔记本电脑上，最慢的解决方案（约为5倍）是加锁的解决方法（解决方案2）。那重要吗？当您记住它仍然可以在40秒内成功获取十亿次单例时，可能就不会了。 （注意：本文最初是在很早以前写的，我希望现在可以有更好的性能。）这意味着，如果您“仅”每秒获取40万次单例，则获取的成本将不断增加达到1％的性能。因此，改善性能并不会起到太大作用。现在，如果您经常使用单例模式，您是否是在循环中使用它？如果您非常在乎提高性能，为什么不在循环之外声明局部变量，请获取一次单例然后循环。所以，即使是最慢的实现也很容易做到。&lt;/p&gt;
&lt;p&gt;我非常有兴趣看到一个现实世界的应用程序，在该应用程序中，使用简单的加锁和使用较快速的解决方案之一之间的差异实际上带来了显着的性能差异。&lt;/p&gt;
&lt;h2 id=&#34;exceptions&#34;&gt;Exceptions&lt;/h2&gt;
&lt;p&gt;有时，您需要在单例构造函数中进行工作，这可能会引发异常，但对整个应用程序可能不会致命。您的应用程序可能能够解决问题，并希望重试。在这个阶段，使用类型初始值设定项构造单例成为问题。不同的运行时对这种情况的处理方式不同，但是我不知道哪个运行者可以做所需的事情（再次运行类型初始化器），即使这样做，您的代码也会在其他运行时中损坏。为了避免这些问题，我建议使用页面上列出的第二种模式，只需使用一个简单的锁，然后每次都要进行检查，如果尚未成功构建该实例，则可以在方法/属性中进行构建。&lt;/p&gt;
&lt;h2 id=&#34;conclusion-modified-slightly-on-january-7th-2006-updated-feb-12th-2011&#34;&gt;Conclusion (modified slightly on January 7th 2006; updated Feb 12th 2011)&lt;/h2&gt;
&lt;p&gt;在C＃中有多种不同的方式来实现单例模式。读者写信给我，详细介绍了他封装同步方面的一种方式，尽管我承认这在某些非常特殊的情况下（特别是在您想要非常高性能的情况下，并且能够确定单例是否已经被使用的能力）很有用。创建，并且完全懒惰（无论是否调用其他静态成员）。我个人认为这种情况不会经常出现，值得在此页面上进行进一步介绍，但是如果您遇到这种情况，请发&lt;a href=&#34;skeet@pobox.com&#34;&gt;邮件&lt;/a&gt;给我。&lt;/p&gt;
&lt;p&gt;我的个人偏爱是解决方案4：通常，我只有在我需要能够在不触发初始化的情况下调用其他静态方法，或者如果我需要知道单例是否已经被实例化，或者是否需要知道单例是否已被实例化时才不会使用该方法。我不记得我上次遇到这种情况，假设我有过，在这种情况下，我可能会选择解决方案2，该解决方案仍然很不错，而且很容易就可以实现。&lt;/p&gt;
&lt;p&gt;解决方案5很优雅，但比2或4棘手，而且正如我上面所说，它提供的好处似乎很少有用。如果您使用的是.NET 4，则解决方案6是实现懒惰的一种更简单的方法，它还具有明显的惰性。我目前倾向于仅通过习惯就使用解决方案4，但是如果我与经验不足的开发人员一起工作，我很可能会选择解决方案6作为一种简单且普遍适用的模式开始。&lt;/p&gt;
&lt;p&gt;（我不会使用解决方案1，因为它是有缺陷的，我不会使用解决方案3，因为它比不过5。）&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;用上述第六种方式实现读取文件的方法&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-C#&#34; data-lang=&#34;C#&#34;&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color:#008b45;text-decoration:underline&#34;&gt;System&lt;/span&gt;;
&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color:#008b45;text-decoration:underline&#34;&gt;System.Collections.Generic&lt;/span&gt;;
&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color:#008b45;text-decoration:underline&#34;&gt;System.IO&lt;/span&gt;;
&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color:#008b45;text-decoration:underline&#34;&gt;System.Text&lt;/span&gt;;
&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color:#008b45;text-decoration:underline&#34;&gt;System.Web&lt;/span&gt;;

&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;namespace&lt;/span&gt; &lt;span style=&#34;color:#008b45;text-decoration:underline&#34;&gt;Demo&lt;/span&gt;
{
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#008b45;font-weight:bold&#34;&gt;MyFileReader&lt;/span&gt;
    {
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;readonly&lt;/span&gt; Lazy&amp;lt;MyFileReader&amp;gt; lazy = &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;new&lt;/span&gt; Lazy&amp;lt;MyFileReader&amp;gt;(() =&amp;gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;new&lt;/span&gt; MyFileReader());

        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;static&lt;/span&gt; MyFileReader Instance =&amp;gt; lazy.Value;

        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;private&lt;/span&gt; MyFileReader()
        {
        }

        &lt;span style=&#34;color:#228b22&#34;&gt;/// &amp;lt;summary&amp;gt;
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#228b22&#34;&gt;///  读取json格式文件
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#228b22&#34;&gt;/// &amp;lt;returns&amp;gt;&amp;lt;/returns&amp;gt;
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#228b22&#34;&gt;/// &amp;lt;/summary&amp;gt;
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#228b22&#34;&gt;/// &amp;lt;param name=&amp;#34;filePath&amp;#34;&amp;gt;eg：\\Demo\\Config.txt&amp;lt;/param&amp;gt;
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#228b22&#34;&gt;/// &amp;lt;param name=&amp;#34;encodType&amp;#34;&amp;gt;默认为 Encoding.Default&amp;lt;/param&amp;gt;
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#228b22&#34;&gt;/// &amp;lt;returns&amp;gt;&amp;lt;/returns&amp;gt;
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;string&lt;/span&gt; JsonReader(&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;string&lt;/span&gt; filePath, Encoding encodType)
        {
            &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt; (encodType == &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;null&lt;/span&gt;)
            {
                encodType = Encoding.Default;
            }
            &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;string&lt;/span&gt; jsonobj = &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;string&lt;/span&gt;.Empty;

            &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;using&lt;/span&gt; (StreamReader sr = &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;new&lt;/span&gt; StreamReader(System.Web.HttpRuntime.AppDomainAppPath + filePath, encodType))
            {
                &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;string&lt;/span&gt; line;
                &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;while&lt;/span&gt; ((line = sr.ReadLine()) != &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;null&lt;/span&gt;)
                {
                    jsonobj = jsonobj + line.ToString();
                }
            }

            &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; jsonobj;
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;调用：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-C#&#34; data-lang=&#34;C#&#34;&gt;&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;string&lt;/span&gt; json = fileReader.JsonReader(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;\\Demo\\Config.txt&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;null&lt;/span&gt;);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;reference&#34;&gt;Reference&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://csharpindepth.com/articles/Singleton&#34;&gt;https://csharpindepth.com/articles/Singleton&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/leolion/p/10241822.html&#34;&gt;https://www.cnblogs.com/leolion/p/10241822.html&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
- https://www.openheart.icu/cs/implementing-the-singleton-pattern-in-csharp/ - ALL RIGHTS RESERVED KRIS NIE</description>
        </item>
    
    
    
        <item>
        <title>Distributed cache</title>
        <link>https://www.openheart.icu/cs/%E5%88%86%E5%B8%83%E5%BC%8F%E7%BC%93%E5%AD%98/</link>
        <pubDate>Fri, 24 Jul 2020 00:00:50 +0000</pubDate>
        
        <guid>https://www.openheart.icu/cs/%E5%88%86%E5%B8%83%E5%BC%8F%E7%BC%93%E5%AD%98/</guid>
        <description>42th openheart https://www.openheart.icu/cs/%E5%88%86%E5%B8%83%E5%BC%8F%E7%BC%93%E5%AD%98/ -&lt;p&gt;&lt;em&gt;简单了解分布式缓存的各种概念&lt;/em&gt;&lt;/p&gt;
&lt;h1 id=&#34;缓存雪崩&#34;&gt;缓存雪崩&lt;/h1&gt;
&lt;p&gt;缓存雪崩我们可以简单的理解为：由于原有&lt;strong&gt;缓存失效&lt;/strong&gt;，新缓存未到期间所有原本应该访问缓存的请求都去查询数据库了，而对数据库 CPU 和内存造成巨大压力，严重的会造成数据库宕机。从而形成一系列连锁反应，造成整个系统崩溃。&lt;/p&gt;
&lt;p&gt;关键词：缓存失效，针对这种情况一般有三种处理办法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一般并发量不是特别多的时候，使用最多的解决方案是加锁排队。&lt;/li&gt;
&lt;li&gt;&lt;!-- raw HTML omitted --&gt;给每一个缓存数据增加相应的缓存标记，记录缓存的是否失效，如果缓存标记失效，则更新数据缓存。&lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;&lt;!-- raw HTML omitted --&gt;为 key 设置不同的缓存失效时间。&lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;第二、第三中方法在面试中均被提到过，很遗憾我只想到了第一种解决办法（纯粹靠蒙）&lt;/em&gt; 😁&lt;/p&gt;
&lt;h1 id=&#34;缓存穿透&#34;&gt;缓存穿透&lt;/h1&gt;
&lt;p&gt;缓存穿透是指用户查询数据，在数据库没有，自然在缓存中也不会有。这样就导致用户查询的时候，在 缓存中找不到，每次都要去数据库再查询一遍，然后返回空（相当于进行了两次无用的查询）。这样请求就绕过缓存直接查数据库，这也是经常提的缓存命中率问题。&lt;/p&gt;
&lt;p&gt;有很多种方法可以有效地解决缓存穿透问题，最常见的则是采用布隆过滤器，将所有可能存在的数据哈 希到一个足够大的 bitmap 中，一个一定不存在的数据会被这个 bitmap 拦截掉，从而避免了对底层存 储系统的查询压力。&lt;/p&gt;
&lt;p&gt;另外也有一个更为简单粗暴的方法，如果一个查询返回的数据为空（不管是数据不 存在，还是系统故障），我们仍然把这个空结果进行缓存，但它的过期时间会很短，最长不超过五分钟。 通过这个直接设置的默认值存放到缓存，这样第二次到缓冲中获取就有值了，而不会继续访问数据库。&lt;/p&gt;
&lt;h1 id=&#34;缓存预热&#34;&gt;缓存预热&lt;/h1&gt;
&lt;p&gt;缓存预热就是系统上线后，将相关的缓存数据直接加载到缓存系统。这样就可以避免在用户请求的时候，先查询数据库，然后再将数据缓存的问题。用户直接查询事先被预热的缓存数据。&lt;/p&gt;
&lt;h1 id=&#34;缓存更新&#34;&gt;缓存更新&lt;/h1&gt;
&lt;p&gt;缓存更新除了缓存服务器自带的缓存失效策略之外（Redis 默认的有 6 中策略可供选择），我们还可以根据具体的业务需求进行自定义的缓存淘汰，常见的策略有两种：&lt;/p&gt;
&lt;p&gt;（1）定时去清理过期的缓存；&lt;/p&gt;
&lt;p&gt;（2）当有用户请求过来时，再判断这个请求所用到的缓存是否过期，过期的话就去底层系统得到新数据并更新缓存。&lt;/p&gt;
&lt;h1 id=&#34;缓存降级&#34;&gt;缓存降级&lt;/h1&gt;
&lt;p&gt;当访问量剧增、服务出现问题（如响应时间慢或不响应）或非核心服务影响到核心流程的性能时，仍然需要保证服务还是可用的，即使是有损服务。系统可以根据一些关键数据进行自动降级，也可以配置开关实现人工降级。 降级的最终目的是保证核心服务可用，即使是有损的。 而且有些服务是无法降级的（如加入购物车、结算）。&lt;/p&gt;
- https://www.openheart.icu/cs/%E5%88%86%E5%B8%83%E5%BC%8F%E7%BC%93%E5%AD%98/ - ALL RIGHTS RESERVED KRIS NIE</description>
        </item>
    
    
    
        <item>
        <title>Reliability&amp;Availability</title>
        <link>https://www.openheart.icu/cs/%E9%AB%98%E5%8F%AF%E7%94%A8%E6%80%A7%E5%92%8C%E9%AB%98%E5%8F%AF%E9%9D%A0%E6%80%A7/</link>
        <pubDate>Fri, 24 Jul 2020 00:00:50 +0000</pubDate>
        
        <guid>https://www.openheart.icu/cs/%E9%AB%98%E5%8F%AF%E7%94%A8%E6%80%A7%E5%92%8C%E9%AB%98%E5%8F%AF%E9%9D%A0%E6%80%A7/</guid>
        <description>42th openheart https://www.openheart.icu/cs/%E9%AB%98%E5%8F%AF%E7%94%A8%E6%80%A7%E5%92%8C%E9%AB%98%E5%8F%AF%E9%9D%A0%E6%80%A7/ -&lt;h1 id=&#34;区分高可靠性与高可用性&#34;&gt;区分高可靠性与高可用性&lt;/h1&gt;
&lt;p&gt;Reliability和Availability分别对应可靠性和可用性, 这两个概念既有区别也有联系:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Reliability定义为一个服务连续无故障运行的时间，无故障运行的时间越长，可靠性就越高。&lt;/li&gt;
&lt;li&gt;Availiability定义为在足够长的时间里，比如一年的时间里，一个服务可用的时间，服务可用时间越长越好。一般用可服务时间除于总时间算出一个百分比，用百分比作为度量。比如一个服务如果有5个9的可用性，指的就是一年里99.999%时间里服务都是可用的。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;有两个极端的例子可以很好的说明这两个概念的区别:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;假想一个服务，可靠性很高，平均来说可以稳定运行10年，但是一旦服务中断，要用一年的时间来恢复，那么它的可用性只有90%。&lt;/li&gt;
&lt;li&gt;假想另一个服务，可靠性很差，运行10秒就会宕机，但是恢复服务只需要1ms, 那么它的可用性是99.99%&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;从这两个极端的例子可以看出，提高可用性有两条路:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;一是提高可靠性，当然影响可靠性的原因有很多，包括硬件，软件，网络，运维等。但是有人做过统计，软件的bug是影响可靠性的最主要的因素。并且提高软件质量相较于使用更可靠的硬件也算成本较低的方式了，&lt;/li&gt;
&lt;li&gt;二是减少恢复时间，一旦出现宕机，如果能在秒级恢复，那对业务影响是很小的。&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h1 id=&#34;高可靠性的实现&#34;&gt;高可靠性的实现&lt;/h1&gt;
&lt;p&gt;&amp;hellip;&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;高可用性的实现&#34;&gt;高可用性的实现&lt;/h1&gt;
&lt;p&gt;高可用HA（High Availability）是分布式系统架构设计中必须考虑的因素之一，它通常是指，通过设计减少系统不能提供服务的时间。&lt;/p&gt;
&lt;h3 id=&#34;在设计高可用性策略时应该首先考虑下述因素&#34;&gt;在设计高可用性策略时应该首先考虑下述因素&lt;/h3&gt;
&lt;p&gt;​    • RTO（Recovery Time Objective）-也就是恢复时间目标，意味着允许多少宕机时间，通常用几个9表示，比如说99.999%的可用性意味着每年的宕机时间不超过5分钟、99.99%的可用性意味着每年的宕机时间不超过52.5分钟、99.9%的可用性意味着每年的宕机时间不超过8.75小时。值得注意的是，RTO的计算方法要考虑系统是24*365，还是仅仅是上午6点到下午9点等。您还需要注意是否维护窗口的时间在算在宕机时间之内，如果允许在维护窗口时间进行数据库维护和打补丁，则更容易实现更高的可用性。&lt;/p&gt;
&lt;p&gt;​    • RPO（Recovery Point Objective）-也就是恢复点目标，意味着允许多少数据损失。通常只要做好备份，可以比较容易的实现零数据损失。但当灾难发生时，取决于数据库损坏的程度，从备份恢复数据所需要的时间会导致数据库不可用，这会影响RTO的实现。一个早期比较著名的例子是某欧美的银行系统，只考虑的RPO，系统里只存在了完整备份和日志备份，每3个月一次完整备份，每15分钟一次日志备份，当灾难发生时，只能够通过完整备份和日志备份来恢复数据，因此虽然没有数据丢失，但由于恢复数据花了整整两天时间，造成银行系统2天时间不可用，因此流失了大量客户。另外一个相反的例子是国内某在线视频网站，使用SQL Server作为后端关系数据库，前端使用了No-SQL，定期将No-SQL的数据导入关系数据库作为备份，当灾难发生时最多允许丢失一天的数据，但是要保证高可用性。&lt;/p&gt;
&lt;h3 id=&#34;高可用的实现&#34;&gt;高可用的实现&lt;/h3&gt;
&lt;p&gt;整个互联网分层系统架构的高可用，又是通过每一层的&lt;strong&gt;冗余+自动故障转移&lt;/strong&gt;来综合实现的，具体的：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;【客户端层】到【反向代理层】的高可用，是通过反向代理层的冗余实现的，常见实践是keepalived + virtual IP自动故障转移&lt;/li&gt;
&lt;li&gt;【反向代理层】到【站点层】的高可用，是通过站点层的冗余实现的，常见实践是nginx与web-server之间的存活性探测与自动故障转移&lt;/li&gt;
&lt;li&gt;【站点层】到【服务层】的高可用，是通过服务层的冗余实现的，常见实践是通过service-connection-pool来保证自动故障转移&lt;/li&gt;
&lt;li&gt;【服务层】到【缓存层】的高可用，是通过缓存数据的冗余实现的，常见实践是缓存客户端双读双写，或者利用缓存集群的主从数据同步与sentinel保活与自动故障转移；更多的业务场景，对缓存没有高可用要求，可以使用缓存服务化来对调用方屏蔽底层复杂性&lt;/li&gt;
&lt;li&gt;【服务层】到【数据库“读”】的高可用，是通过读库的冗余实现的，常见实践是通过db-connection-pool来保证自动故障转移&lt;/li&gt;
&lt;li&gt;【服务层】到【数据库“写”】的高可用，是通过写库的冗余实现的，常见实践是keepalived + virtual IP自动故障转移&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;sqlserver所支持的高可用特性&#34;&gt;SQlServer所支持的高可用特性&lt;/h3&gt;
&lt;p&gt;SQL Server中所支持的高可用性功能与版本息息相关，企业版支持所有的高可用性功能，这些功能包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;故障转移集群&lt;/li&gt;
&lt;li&gt;数据库镜像（在SQL Server 2012中被标记为“过时”）&lt;/li&gt;
&lt;li&gt;事务日志传送&lt;/li&gt;
&lt;li&gt;数据库快照&lt;/li&gt;
&lt;li&gt;AlwaysOn可用性组&lt;/li&gt;
&lt;li&gt;热加载内存&lt;/li&gt;
&lt;li&gt;在线索引操作&lt;/li&gt;
&lt;li&gt;数据库部分在线（只还原了主文件组或主文件组和额外的NDF文件）&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;故障转移集群&#34;&gt;故障转移集群&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;故障转移集群为整个SQL Server实例提供高可用性支持，这意味着在集群上某个节点的SQL Server实例发生了硬件错误、操作系统错误等会故障转移到该集群上的其它节点。通过多个服务器（节点）共享一个或多个磁盘来实现高可用性，故障转移集群在网络中出现的方式就像单台计算机一样，但是具有高可用特性。值得注意的是，由于故障转移集群是基于共享磁盘，因此会存在磁盘单点故障，因此需要在磁盘层面部署SAN复制等额外的保护措施。常见的故障转移集群是双节点的故障转移集群，包括主主节点和主从节点。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;事务日志传送&#34;&gt;事务日志传送&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;事务日志传送提供了数据库级别的高可用性保护。日志传送可用来维护相应生产数据库（称为“主数据库”）的一个或多个备用数据库（称为“辅助数据库”）。发生故障转移之前，必须通过手动应用全部未还原的日志备份来完全更新辅助数据库。日志传送具有支持多个备用数据库的灵活性。如果需要多个备用数据库，可以单独使用日志传送或将其作为数据库镜像的补充。当这些解决方案一起使用时，当前数据库镜像配置的主体数据库同时也是当前日志传送配置的主数据库。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;事务日志传送可用于做冷备份和暖备份的方式。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;数据库镜像&#34;&gt;数据库镜像&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;数据库镜像实际上是个软件解决方案，同样提供了数据库级别的保护，可提供几乎是瞬时的故障转移，以提高数据库的可用性。数据库镜像可以用来维护相应生产数据库（称为“主体数据库”）的单个备用数据库（或“镜像数据库”）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;因为镜像数据库一直处于还原状态，但并不会恢复数据库，因此无法直接访问镜像数据库。但是，为了用于报表等只读的负载，可创建镜像数据库的数据库快照来间接地使用镜像数据库。数据库快照为客户端提供了快照创建时对数据库中数据的只读访问。每个数据库镜像配置都涉及包含主体数据库的“主体服务器”，并且还涉及包含镜像数据库的镜像服务器。镜像服务器不断地使镜像数据库随主体数据库一起更新。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;数据库镜像在高安全性模式下以同步操作运行，或在高性能模式下以异步操作运行。在高性能模式下，事务不需要等待镜像服务器将日志写入磁盘便可提交，这样可较大程度地提高性能。在高安全性模式下，已提交的事务将由伙伴双方提交，但会延长事务滞后时间。数据库镜像的最简单配置仅涉及主体服务器和镜像服务器。在该配置中，如果主体服务器丢失，则该镜像服务器可以用作备用服务器，但可能会造成数据丢失。高安全性模式支持具有自动故障转移功能的备用配置高安全性模式。这种配置涉及到称为“见证服务器”的第三方服务器实例，它能够使镜像服务器用作热备份服务器。从主体数据库至镜像数据库的故障转移通常要用几秒钟的时间。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;数据库镜像可用于做暖备份和热备份。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;复制&#34;&gt;复制&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;复制严格来说并不算是一个为高可用性设计的功能，但的确可以被应用于高可用性。复制提供了数据库对象级别的保护。复制使用的是发布-订阅模式，即由主服务器（称为发布服务器）向一个或多个辅助服务器或订阅服务器发布数据。复制可在这些服务器间提供实时的可用性和可伸缩性。它支持筛选，以便为订阅服务器提供数据子集，同时还支持分区更新。订阅服务器处于联机状态，并且可用于报表或其他功能，而无需进行查询恢复。SQL Server 提供四种复制类型：快照复制、事务复制、对等复制以及合并复制。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;alwayson可用性组&#34;&gt;AlwaysOn可用性组&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;AlwaysOn可用性组是SQL Server 2012推出的新功能。同样提供了数据库级别的保护。它取数据库镜像和故障转移集群之长，使得业务上有关联的数据库作为一个可用性组共同故障转移，该功能还拓展了数据库镜像只能1对1的限制，使得1个主副本可以对应最多4个辅助副本（在SQL Server 2014中，该限制被拓展到8个），其中2个辅助副本可以被作为热备份和主副本实时同步，而另外两个异步辅助副本可以作为暖备份。此外，辅助副本还可以被配置为只读，并可用于承担备份的负载。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
- https://www.openheart.icu/cs/%E9%AB%98%E5%8F%AF%E7%94%A8%E6%80%A7%E5%92%8C%E9%AB%98%E5%8F%AF%E9%9D%A0%E6%80%A7/ - ALL RIGHTS RESERVED KRIS NIE</description>
        </item>
    
    
    
        <item>
        <title>URL</title>
        <link>https://www.openheart.icu/cs/url/</link>
        <pubDate>Wed, 22 Jul 2020 20:28:00 +0000</pubDate>
        
        <guid>https://www.openheart.icu/cs/url/</guid>
        <description>42th openheart https://www.openheart.icu/cs/url/ -&lt;h1 id=&#34;url解析&#34;&gt;URL解析&lt;/h1&gt;
&lt;h2 id=&#34;urlencode&#34;&gt;UrlEncode&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;符号&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;意义&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;Encode&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;+&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;表示空格&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;%2B&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;(空格)&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;可以用+号替代&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;%20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;/&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;分隔目录和子目录&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;%2F&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;？&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;分隔实际的URL和参数&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;%3F&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;%&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;指定特殊字符&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;%25&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;#&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;表示书签&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;%23&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&amp;amp;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;URL 中指定的参数间的分隔符&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;%26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;=&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;URL 中指定参数的值&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;%3D&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;ie11url解析问题&#34;&gt;IE11URL解析问题&lt;/h3&gt;
&lt;p&gt;今天(2020-8-3 14:41:03)，发现项目中使用IE11时打开连接出现&lt;code&gt;HTTP400&lt;/code&gt;的问题，有且仅在IE11里面，chrome正常。&lt;/p&gt;
&lt;p&gt;后来查资料发现，是因为我传参的时候带了中文字符，而IE对中文字符是有限制的，所以不成功，而要解决这个问题就需要转码，把要传的中文参数用UrlEncode方法给转一下码就ok。&lt;/p&gt;
- https://www.openheart.icu/cs/url/ - ALL RIGHTS RESERVED KRIS NIE</description>
        </item>
    
    
    
        <item>
        <title>Interesting</title>
        <link>https://www.openheart.icu/cs/interesting/</link>
        <pubDate>Wed, 22 Jul 2020 19:45:28 +0000</pubDate>
        
        <guid>https://www.openheart.icu/cs/interesting/</guid>
        <description>42th openheart https://www.openheart.icu/cs/interesting/ -&lt;h3 id=&#34;texturesjshttpsriccardoscalcoittextures&#34;&gt;&lt;a href=&#34;https://riccardoscalco.it/textures/&#34;&gt;Textures.js&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个 JS 纹理库，基于 D3.js&lt;/p&gt;
&lt;h3 id=&#34;elevatorjshttpsgithubcomtholmanelevatorjs&#34;&gt;&lt;a href=&#34;https://github.com/tholman/elevator.js&#34;&gt;elevator.js&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Finally, a &amp;ldquo;back to top&amp;rdquo; button that behaves like a real elevator, by adding elevator music to quietly soothe the awkwardness that can ensue when being smoothly scrolled to the top of the screen.&lt;/p&gt;
&lt;p&gt;This is very serious stuff, &lt;a href=&#34;http://tholman.com/elevator.js&#34;&gt;here&amp;rsquo;s a demo&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;一个使得“回到顶部”的网页滚动，具有电梯效果的 JS 库。&lt;/p&gt;
&lt;h3 id=&#34;mownedhttpsmownedcom&#34;&gt;&lt;a href=&#34;https://mowned.com/&#34;&gt;Mowned&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个手机数据库&lt;/p&gt;
&lt;h3 id=&#34;javascript-生成艺术图形教程httpsgenerativeartistrycomtutorials&#34;&gt;&lt;a href=&#34;https://generativeartistry.com/tutorials/&#34;&gt;JavaScript 生成艺术图形教程&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;介绍 如何使用JavaScript 生成8种艺术图形。&lt;/p&gt;
&lt;h3 id=&#34;使用-raspberry-pi-学习操作系统开发httpss-matyukevichgithubioraspberry-pi-os&#34;&gt;&lt;a href=&#34;https://s-matyukevich.github.io/raspberry-pi-os/&#34;&gt;使用 Raspberry Pi 学习操作系统开发&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这是一个免费英文教程，教大家怎么用树莓派，一步步开发一个简单的操作系统内核，每一步都有实例代码&lt;/p&gt;
&lt;h3 id=&#34;vim-的由来httpspragmaticpineapplecomhow-did-vim-become-so-popular&#34;&gt;&lt;a href=&#34;https://pragmaticpineapple.com/how-did-vim-become-so-popular/&#34;&gt;Vim 的由来&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Vim 有30多年历史，目前依然是最流行的编辑器之一。本文简要地回顾了历史，它的一些主要的设计决定，到底是怎么来的&lt;/p&gt;
&lt;h3 id=&#34;makefile-的静态网站实现httpsmetinnextcorgpoststhe_idea_of_makefile_bloghtml&#34;&gt;&lt;a href=&#34;https://metin.nextc.org/posts/The_Idea_Of_Makefile_Blog.html&#34;&gt;Makefile 的静态网站实现&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;现在有各种各样的静态网站工具，比如 Jekyll 和 Hugo 等。作者提出，Makefile 也可以用来实现静态网站，这样就不需要任何外部工具了，只维护一个 Makefile 配置文件即可&lt;/p&gt;
&lt;h3 id=&#34;字体反爬的攻与防httpscjtingme20200701douyu-crawler-and-font-anti-crawling&#34;&gt;&lt;a href=&#34;https://cjting.me/2020/07/01/douyu-crawler-and-font-anti-crawling/&#34;&gt;字体反爬的攻与防&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者因为业务原因需要爬取一批斗鱼主播的相关数据，结果发现斗鱼使用了一种很有意思的反爬技术：字体反爬&lt;/p&gt;
&lt;h3 id=&#34;分页查询不要使用-offset-和-limit-语法httpshackernooncomplease-dont-use-offset-and-limit-for-your-pagination-8ux3u4y&#34;&gt;&lt;a href=&#34;https://hackernoon.com/please-dont-use-offset-and-limit-for-your-pagination-8ux3u4y&#34;&gt;分页查询不要使用 OFFSET 和 LIMIT 语法&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;数据查询时，如果数据多，就需要分页，一般使用 OFFSET 和 LIMIT 语法。这篇文章提出，这样做不好，耗费资源，有性能问题&lt;/p&gt;
&lt;h3 id=&#34;git-多行提交信息的简单方法httpswwwstefanjudiscomtoday-i-learnedgit-commit-accepts-several-message-flags-m-to-allow-multiline-commits&#34;&gt;&lt;a href=&#34;https://www.stefanjudis.com/today-i-learned/git-commit-accepts-several-message-flags-m-to-allow-multiline-commits/&#34;&gt;Git 多行提交信息的简单方法&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;git commit&lt;/code&gt;命令的&lt;code&gt;-m&lt;/code&gt;参数用来指定提交信息，但是这样提交的信息只有一行。本文介绍实现多行信息的简单方法&lt;/p&gt;
&lt;p&gt;eg:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;git co -m &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;commit title&amp;#34;&lt;/span&gt; -m &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;commit description&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;盲文的由来httpsstitcherioblogbraille-and-the-history-of-software&#34;&gt;&lt;a href=&#34;https://stitcher.io/blog/braille-and-the-history-of-software&#34;&gt;盲文的由来&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;如题&lt;/p&gt;
&lt;h3 id=&#34;漫长的雨httpwwwsamwellernetbradbury-120181129the-essential-bradbury&#34;&gt;&lt;a href=&#34;http://www.samweller.net/bradbury-1/2018/11/29/the-essential-bradbury&#34;&gt;漫长的雨&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;《漫长的雨》（The long rain，&lt;strong&gt;&lt;a href=&#34;https://www.sohu.com/a/337866552_771944&#34;&gt;中译全文&lt;/a&gt;&lt;/strong&gt;）是美国科幻小说作家雷·布拉德伯里（Ray Bradbury）1950年发表的一篇短篇小说。&lt;/p&gt;
&lt;p&gt;它讲述四个宇航员因为火箭失事，来到一个不停下雨的星球。这个星球永远在下瓢泼大雨，过去10年一秒都没有停过。宇航员冒着雨水，在丛林里面穿行，拼命寻找前人修建的“阳光穹顶”，那里是一个大屋顶，有温暖的人造阳光，以及充足的食物和休息的场所。&lt;/p&gt;
&lt;p&gt;小说的开头是这样的：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;大雨，永远的雨，升腾着汗水和蒸汽的雨。这是密集的瓢泼大雨，像鞭子一样打在眼睛上，飞溅到脚踝上。它是一场淹没其他所有雨水的雨，让人遗忘所有关于雨水的记忆。”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;6个最常见的网页可访问性问题httpsblogscottlogiccom202007026-most-common-accessibility-problemshtmlempty-links-and-empty-buttons&#34;&gt;&lt;a href=&#34;https://blog.scottlogic.com/2020/07/02/6-most-common-accessibility-problems.html#empty-links-and-empty-buttons&#34;&gt;6个最常见的网页可访问性问题&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;可访问性（accessibility）指的是，网页对生理缺陷的用户是否友好。本文总结了6个最常见的可访问性问题及其解决方法&lt;/p&gt;
&lt;h3 id=&#34;伪随机数生成器httpsgithubcombryccodeblobmasterjshashprngsmd&#34;&gt;&lt;a href=&#34;https://github.com/bryc/code/blob/master/jshash/PRNGs.md&#34;&gt;伪随机数生成器&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;伪随机数指的是通过一种算法，由种子值得到的随机数。本文介绍了几种简单的伪随机数算法&lt;/p&gt;
&lt;h3 id=&#34;75行代码入门-webglhttpsavikdascom20200708barebones-webgl-in-75-lines-of-codehtml&#34;&gt;&lt;a href=&#34;https://avikdas.com/2020/07/08/barebones-webgl-in-75-lines-of-code.html&#34;&gt;75行代码入门 WebGL&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;WebGL 是浏览器对 OpenGL API 的调用接口，可以在浏览器里面实现 3D 动画。本文用一个简短的例子，介绍了这个 API。这只是一篇简介，另有&lt;a href=&#34;https://www.toptal.com/javascript/3d-graphics-a-webgl-tutorial&#34;&gt;完整的 WebGL 教程&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;redisearchhttpsossredislabscomredisearch&#34;&gt;&lt;a href=&#34;https://oss.redislabs.com/redisearch/&#34;&gt;RediSearch&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;以 Redis 作为后端的全文搜索引擎，支持中文&lt;/p&gt;
&lt;h3 id=&#34;onelook-thesaurushttpswwwonelookcomthesaurus&#34;&gt;&lt;a href=&#34;https://www.onelook.com/thesaurus/&#34;&gt;OneLook Thesaurus&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;英语的同义词词典，可以查询同义词，也可以根据描述返回对应的词（比如 &lt;a href=&#34;https://www.onelook.com/thesaurus/?s=large%20birds&amp;amp;loc=revfp&#34;&gt;large bird&lt;/a&gt; 对应哪些词），加载速度很快&lt;/p&gt;
&lt;h3 id=&#34;crdttechhttpscrdttech&#34;&gt;&lt;a href=&#34;https://crdt.tech/&#34;&gt;CRDT.tech&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;CRDT 是一种数据结构，用于分布式网络的数据同步，最典型的例子就是多人同时编辑文档。该网站收集了 CRDT 的相关资料&lt;/p&gt;
&lt;h3 id=&#34;progressive-app-storehttpsprogressiveappstorehome&#34;&gt;&lt;a href=&#34;https://progressiveapp.store/home&#34;&gt;Progressive App Store&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个渐进式 App 的在线商店，收集各种 Progessive App，是网友搭建的&lt;/p&gt;
&lt;h3 id=&#34;网页设计博物馆httpswwwwebdesignmuseumorg&#34;&gt;&lt;a href=&#34;https://www.webdesignmuseum.org/&#34;&gt;网页设计博物馆&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;该网站收集了1600多个经过精心挑选和分类的网页，展示了1991年至2006年之间的网站设计趋势&lt;/p&gt;
&lt;h3 id=&#34;窗口交换httpswindow-swapcom&#34;&gt;&lt;a href=&#34;https://window-swap.com/&#34;&gt;窗口交换&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;该网站让世界各地的人上传他们窗外的镜像，一段5到10分钟的视频。其他用户就可以在网站上随机看到别人的窗外&lt;/p&gt;
&lt;h3 id=&#34;cnetcomhttpswwwcnetcompicturesinside-the-kansas-survival-condo-designed-to-save-you-from-nuclear-winter&#34;&gt;&lt;a href=&#34;https://www.cnet.com/pictures/inside-the-kansas-survival-condo-designed-to-save-you-from-nuclear-winter/&#34;&gt;cnet.com&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;幸存者公寓&lt;/p&gt;
&lt;h3 id=&#34;平流层飞船httpswwwgeekwirecom2020space-perspective-reboots-vision-flying-passengers-stratosphere-balloon&#34;&gt;&lt;a href=&#34;https://www.geekwire.com/2020/space-perspective-reboots-vision-flying-passengers-stratosphere-balloon/&#34;&gt;平流层飞船&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;美国一家私人公司提出了“平流层飞船”计划，让游客乘坐飞船上升到平流层（距离地面30公里），体验一下太空的感觉，票价预计为每人12.5万美元。飞船可以乘坐八名乘客和一名飞行员，先进行长达两个小时的上升，然后在空中停留两个小时，最后再花两个小时下降。&lt;/p&gt;
&lt;p&gt;飞船的上升动力，主要来自一个巨大的充满氢气的气球。飞船内部有酒吧，还有一个“拥有世界上最佳视野”的厕所，甚至有 Wifi。该公司计划飞船在2024年完工，目前已经在&lt;a href=&#34;https://thespaceperspective.com/fly/&#34;&gt;官网&lt;/a&gt;接受预订。&lt;/p&gt;
&lt;h3 id=&#34;sha-256-的原理httpsqvaultio20200708how-sha-2-works-step-by-step-sha-256&#34;&gt;&lt;a href=&#34;https://qvault.io/2020/07/08/how-sha-2-works-step-by-step-sha-256/&#34;&gt;SHA-256 的原理&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文通过一个简单的例子，一步步演示 SHA-256 算法，如何将字符串变成一个256位的哈希值。&lt;/p&gt;
&lt;h3 id=&#34;javascript-函数作用域解释httpsbloggreenrootsinfojavascript-scope-fundamentals-with-tom-and-jerry-ckcq723h4007vkxs18dxa97ae&#34;&gt;&lt;a href=&#34;https://blog.greenroots.info/javascript-scope-fundamentals-with-tom-and-jerry-ckcq723h4007vkxs18dxa97ae&#34;&gt;JavaScript 函数作用域解释&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;通过一个简单的例子，解释 JavaScript 的函数作用域规则&lt;/p&gt;
&lt;h3 id=&#34;gpt-3-模型的图灵测试httplackerioai20200706giving-gpt-3-a-turing-testhtml&#34;&gt;&lt;a href=&#34;http://lacker.io/ai/2020/07/06/giving-gpt-3-a-turing-test.html&#34;&gt;GPT-3 模型的图灵测试&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;GPT-3 是 OpenAI 公司开发的一个 AI 模型，能够自动生成文本。作者对它进行了图灵测试，跟它对话，看能不能分辨出对方是一个软件。&lt;/p&gt;
&lt;h3 id=&#34;pastemecnhttpspastemecn&#34;&gt;&lt;a href=&#34;https://pasteme.cn/&#34;&gt;PasteMe.cn&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个文本分享网站，不需要注册，会对输入的文本或代码生成 URL，支持密码和阅后即焚&lt;/p&gt;
&lt;h3 id=&#34;shoelacehttpsshoelacestyle&#34;&gt;&lt;a href=&#34;https://shoelace.style/&#34;&gt;Shoelace&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个 Web Components 组件库，易用&lt;/p&gt;
&lt;h3 id=&#34;3d-封面生成器https3d-book-cssnetlifyapp&#34;&gt;&lt;a href=&#34;https://3d-book-css.netlify.app/&#34;&gt;3D 封面生成器&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;在线工具，让一张平面图片变成 3D 书籍封面。&lt;/p&gt;
&lt;h3 id=&#34;easy-monitorhttpsgithubcomhyj1991easy-monitor&#34;&gt;&lt;a href=&#34;https://github.com/hyj1991/easy-monitor&#34;&gt;easy-monitor&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Node.js 应用的性能监控工具，可以定位线上故障。代码开源，支持私有部署&lt;/p&gt;
&lt;h3 id=&#34;remark42httpsgithubcomumputunremark42&#34;&gt;&lt;a href=&#34;https://github.com/umputun/remark42&#34;&gt;remark42&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;开源的评论服务，可以用来为静态网页加上留言功能。&lt;/p&gt;
&lt;h3 id=&#34;wikijshttpswikijsorg&#34;&gt;&lt;a href=&#34;https://wiki.js.org/&#34;&gt;Wiki.js&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;架设个人 Wiki 的 Node.js 应用。&lt;/p&gt;
&lt;h3 id=&#34;rust-语言之旅httpstourofrustcom00_zh-cnhtml&#34;&gt;&lt;a href=&#34;https://tourofrust.com/00_zh-cn.html&#34;&gt;Rust 语言之旅&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Rust 语言的中文版在线教程，通过可以运行的小例子介绍语法，从 Hello World 开始讲起&lt;/p&gt;
&lt;h3 id=&#34;木星相册httpswwwflickrcomphotoskevinmgillalbums72157709069900506&#34;&gt;&lt;a href=&#34;https://www.flickr.com/photos/kevinmgill/albums/72157709069900506&#34;&gt;木星相册&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个天文爱好者收集的木星照片。&lt;/p&gt;
&lt;h3 id=&#34;麻省理工学院的统计学课件httpsocwmiteducoursesmathematics18-650-statistics-for-applications-fall-2016lecture-slides&#34;&gt;&lt;a href=&#34;https://ocw.mit.edu/courses/mathematics/18-650-statistics-for-applications-fall-2016/lecture-slides/&#34;&gt;麻省理工学院的统计学课件&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;麻省理工学院本科生统计学课程的 PPT 课件&lt;/p&gt;
&lt;h3 id=&#34;没有博士学位者的-tensorflow-和深度学习教程httpscodelabsdevelopersgooglecomcodelabscloud-tensorflow-mnist&#34;&gt;&lt;a href=&#34;https://codelabs.developers.google.com/codelabs/cloud-tensorflow-mnist/&#34;&gt;没有博士学位者的 TensorFlow 和深度学习教程&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;谷歌发布的英文教程，没有高深的数学，向初学者介绍 TensorFlow 和深度学习。&lt;/p&gt;
&lt;h3 id=&#34;javascript-的第三纪元httpswwwswyxiowritingjs-third-age&#34;&gt;&lt;a href=&#34;https://www.swyx.io/writing/js-third-age/&#34;&gt;JavaScript 的第三纪元&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者认为，JavaScript 的发展可以分成三个阶段：原始阶段、Node.js 阶段和目前的超越阶段。&lt;/p&gt;
&lt;p&gt;当前阶段的主要特征是，JavaScript 开始作为底层技术，ES6 模块、TypeScript、WebAssembly 逐渐普及&lt;/p&gt;
&lt;h3 id=&#34;如何构建优秀的-apihttpswwwstxnextcombloghow-to-build-a-good-api-that-wont-embarrass-you&#34;&gt;&lt;a href=&#34;https://www.stxnext.com/blog/how-to-build-a-good-api-that-wont-embarrass-you&#34;&gt;如何构建优秀的 API&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文介绍设计一个优秀的 RESTful API 的注意事项，以及 REST 和 GraphQL 两种 API 的差异&lt;/p&gt;
&lt;h3 id=&#34;python-的-sqlite-数据库教程httpstowardsdatasciencecomdo-you-know-python-has-a-built-in-database-d553989c87bd&#34;&gt;&lt;a href=&#34;https://towardsdatascience.com/do-you-know-python-has-a-built-in-database-d553989c87bd&#34;&gt;Python 的 SQLite 数据库教程&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文是入门教程，介绍如何在 Python 语言使用内置的 SQLite 数据库，不需要任何安装步骤&lt;/p&gt;
&lt;h3 id=&#34;10个有用的-git-log-技巧httpshackernooncomten-useful-git-log-tricks-7nt3yxy&#34;&gt;&lt;a href=&#34;https://hackernoon.com/ten-useful-git-log-tricks-7nt3yxy&#34;&gt;10个有用的 git log 技巧&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文介绍&lt;code&gt;git log&lt;/code&gt;命令的10个参数用法&lt;/p&gt;
&lt;h3 id=&#34;async-函数的一个注意点httpswwwbrandonsmithninjablogasync-await&#34;&gt;&lt;a href=&#34;https://www.brandonsmith.ninja/blog/async-await&#34;&gt;async 函数的一个注意点&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文提醒大家注意，使用 JavaScript 的 async/await 函数时，要区分并发操作和继发操作&lt;/p&gt;
&lt;h3 id=&#34;react-spectrumhttpsreact-spectrumadobecomreact-spectrumindexhtml&#34;&gt;&lt;a href=&#34;https://react-spectrum.adobe.com/react-spectrum/index.html&#34;&gt;React Spectrum&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Adobe 公司的 React 组件库&lt;/p&gt;
&lt;h3 id=&#34;css-sweeperhttpsgithubcompropjockeycss-sweeper&#34;&gt;&lt;a href=&#34;https://github.com/propjockey/css-sweeper&#34;&gt;css-sweeper&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个只用 HTML 和 CSS 实现的扫雷游戏，不使用 JavaScript&lt;/p&gt;
&lt;h3 id=&#34;react-tablehttpsgithubcomtannerlinsleyreact-table&#34;&gt;&lt;a href=&#34;https://github.com/tannerlinsley/react-table&#34;&gt;react-table&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;React 的表格组件库，新的 7.0 版完全采用 Hooks 设计&lt;/p&gt;
&lt;h3 id=&#34;数据可视化图表目录httpsdatavizcataloguecomzh&#34;&gt;&lt;a href=&#34;https://datavizcatalogue.com/ZH/&#34;&gt;数据可视化图表目录&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这个网站收集各种数据可视化的图表类型，简要讲解每种类型的用途和特点&lt;/p&gt;
&lt;h3 id=&#34;拥抱扩展扑灭httpsenwikipediaorgwikiembrace_extend_and_extinguish&#34;&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Embrace,_extend,_and_extinguish&#34;&gt;拥抱，扩展，扑灭&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;1996年，美国司法部发现，微软公司内部使用“拥抱，扩展，扑灭”（Embrace, extend, and extinguish，简称 EEE ）这个短语，描述对付竞争对手的策略。&lt;/p&gt;
&lt;p&gt;首先，拥抱对方的产品种类，进入对方的市场；然后，使用自己的专有功能扩展产品标准；最后，利用这些差异，使竞争对手处于不利地位。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;拥抱阶段&lt;/strong&gt; ：开发与竞争产品基本兼容的软件，或实施公共标准。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;扩展阶段&lt;/strong&gt;：添加和推广竞争对手或标准不支持的功能。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;扑灭阶段&lt;/strong&gt;：由于市场份额的扩展，添加的功能成为事实上的标准时，再将竞争对手边缘化。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;微软的 IE 浏览器就是使用这种策略的最好例子。&lt;/p&gt;
&lt;p&gt;现在有人认为，微软对于开源软件的态度，从敌对变成拥抱，也有可能是在实施这种策略。另一方面，谷歌公司在很多技术领域的作为，也让人疑虑，它在实施这种策略。&lt;/p&gt;
&lt;h3 id=&#34;javascript-语言的多态httpszellwkcomblogpolymorphism-javascript&#34;&gt;&lt;a href=&#34;https://zellwk.com/blog/polymorphism-javascript/&#34;&gt;JavaScript 语言的多态&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;多态（Polymorph）是面向对象编程的一个术语，有多种含义。本文讨论 JavaScript 语言如何实现多态&lt;/p&gt;
&lt;h3 id=&#34;github-actions-的-go-语言示例httpswwwfreecodecamporgnewsgo-automate-your-github-profile-readme&#34;&gt;&lt;a href=&#34;https://www.freecodecamp.org/news/go-automate-your-github-profile-readme/&#34;&gt;GitHub Actions 的 Go 语言示例&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文介绍如何在 GitHub 仓库里面定时跑 Go 语言脚本，再将代码推送回仓库&lt;/p&gt;
&lt;h3 id=&#34;javascript-测试框架比较httpsgithubcomscraggocomparing-javascript-test-runnersblobmasterreadmemd&#34;&gt;&lt;a href=&#34;https://github.com/scraggo/comparing-javascript-test-runners/blob/master/README.md&#34;&gt;JavaScript 测试框架比较&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Mocha、Ava、Jest 是目前非常流行的三大 JavaScript 测试框架，本文对它们进行了比较，每个框架最合适的运行场景&lt;/p&gt;
&lt;h3 id=&#34;git-工作流程的图示httpszepelioblog5-git-workflows-to-improve-development&#34;&gt;&lt;a href=&#34;https://zepel.io/blog/5-git-workflows-to-improve-development/&#34;&gt;Git 工作流程的图示&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文用清晰的图形解释了五种 Git 工作流程&lt;/p&gt;
&lt;h3 id=&#34;tailwind-css从业余项目到数百万美元的业务httpsadamwathanmetailwindcss-from-side-project-byproduct-to-multi-mullion-dollar-business&#34;&gt;&lt;a href=&#34;https://adamwathan.me/tailwindcss-from-side-project-byproduct-to-multi-mullion-dollar-business/&#34;&gt;Tailwind CSS：从业余项目到数百万美元的业务&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Tailwind CSS 的作者介绍这个框架的诞生过程，以及他们如何通过它赚到几百万美元。&lt;/p&gt;
&lt;h3 id=&#34;windows-10-阻止修改-hosts-文件httpswwwbleepingcomputercomnewsmicrosoftwindows-10-hosts-file-blocking-telemetry-is-now-flagged-as-a-risk&#34;&gt;&lt;a href=&#34;https://www.bleepingcomputer.com/news/microsoft/windows-10-hosts-file-blocking-telemetry-is-now-flagged-as-a-risk/&#34;&gt;Windows 10 阻止修改 HOSTS 文件&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;HOSTS 文件用于修改网站域名对应的 IP 地址，WIndows 10 内置的 Windows Defender 软件最近开始警告和阻止修改这个文件。&lt;/p&gt;
&lt;h3 id=&#34;我用-gpt-3-写了一篇博客文章httpsliampsubstackcompmy-gpt-3-blog-got-26-thousand-visitors&#34;&gt;&lt;a href=&#34;https://liamp.substack.com/p/my-gpt-3-blog-got-26-thousand-visitors&#34;&gt;我用 GPT-3 写了一篇博客文章&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;GPT-3 是目前最先进的人工智能模型，可以根据输入，返回一篇人类可读的文章。&lt;/p&gt;
&lt;p&gt;作者输入文章的标题和简介，GPT-3 就自动返回了一篇博客文章，这篇文章还登上了 Hacker News 的第一名，许多人都没有发现这是计算机写的。&lt;/p&gt;
&lt;h3 id=&#34;随机数据生成器httpsrandom-data-apicom&#34;&gt;&lt;a href=&#34;https://random-data-api.com/&#34;&gt;随机数据生成器&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这个网站提供一个 API，可以让你定制想要的随机数据，以 JSON 格式返回。&lt;/p&gt;
&lt;h3 id=&#34;compiler-explorerhttpsgodboltorg&#34;&gt;&lt;a href=&#34;https://godbolt.org/&#34;&gt;Compiler Explorer&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个在线的编译器学习工具，可以显示高级语言对应的汇编代码，支持多种语言。&lt;/p&gt;
&lt;h3 id=&#34;yandex-图片搜索httpsyandexcomimages&#34;&gt;&lt;a href=&#34;https://yandex.com/images/&#34;&gt;Yandex 图片搜索&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;俄罗斯的搜索引擎 Yandex&lt;/p&gt;
&lt;h3 id=&#34;nightcafehttpscreatornightcafestudio&#34;&gt;&lt;a href=&#34;https://creator.nightcafe.studio/&#34;&gt;NightCafe&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个图片处理的在线工具，可以让普通照片变成世界名画&lt;/p&gt;
&lt;h3 id=&#34;js-1024-竞赛httpsjs1024funresults2020&#34;&gt;&lt;a href=&#34;https://js1024.fun/results/2020&#34;&gt;JS 1024 竞赛&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这是代码长度不超过1024字节的 JS 程序的比赛，2020年的结果已经公布了。第一名是一个&lt;a href=&#34;https://js1024.fun/demos/2020/16&#34;&gt;钢琴键盘&lt;/a&gt;，第二名和第三名是动画渲染，第四名是一个游戏。&lt;/p&gt;
&lt;h3 id=&#34;stackoverflow-top-cpphttpsgithubcomethsonliustackoverflow-top-cpptreemasterquestion&#34;&gt;&lt;a href=&#34;https://github.com/EthsonLiu/stackoverflow-top-cpp/tree/master/question&#34;&gt;stackoverflow-top-cpp&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;StackOverflow 上面高票排名的 C/C++ 问题的中文翻译&lt;/p&gt;
&lt;h3 id=&#34;gitenberghttpswwwgitenbergorg&#34;&gt;&lt;a href=&#34;https://www.gitenberg.org/&#34;&gt;Gitenberg&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个公共领域的英文电子书的搜索引擎。&lt;/p&gt;
&lt;h3 id=&#34;svg-repohttpswwwsvgrepocom&#34;&gt;&lt;a href=&#34;https://www.svgrepo.com/&#34;&gt;SVG Repo&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个 SVG 图片（主要是图标）的搜索引擎。&lt;/p&gt;
&lt;h3 id=&#34;motherboard-dbhttpsmotherboarddbcom&#34;&gt;&lt;a href=&#34;https://motherboarddb.com/&#34;&gt;Motherboard DB&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;电脑主板的数据库&lt;/p&gt;
&lt;h3 id=&#34;kindle-的诞生httpsthreadreaderappcomthread1287944667414196225html&#34;&gt;&lt;a href=&#34;https://threadreaderapp.com/thread/1287944667414196225.html&#34;&gt;Kindle 的诞生&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;如题&lt;/p&gt;
&lt;h3 id=&#34;我参加-pixar-2020-渲染大赛的作品httpsblogyiningkarllicom202007shipshape-renderman-challengehtml&#34;&gt;&lt;a href=&#34;https://blog.yiningkarlli.com/2020/07/shipshape-renderman-challenge.html&#34;&gt;我参加 Pixar 2020 渲染大赛的作品&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Pixar 动画公司每年举办一个比赛，提供一些数字模型，邀请全世界爱好者对它们进行渲染着色，评选出优胜者。作者介绍了他如何创作第一名作品&lt;/p&gt;
&lt;h3 id=&#34;如何自己实现一个全文搜索引擎httpsartemkrylysovcomblog20200728lets-build-a-full-text-search-engine&#34;&gt;&lt;a href=&#34;https://artem.krylysov.com/blog/2020/07/28/lets-build-a-full-text-search-engine/&#34;&gt;如何自己实现一个全文搜索引擎&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者通过一个简单的例子，讲解全文搜索引擎的原理，自己如何实现倒排索引。举例用的是 Go 语言，代码很简单，接近伪代码&lt;/p&gt;
&lt;h3 id=&#34;如何发布-deno-模块httpsdevtocraigmortenhow-to-publish-deno-modules-2cg6&#34;&gt;&lt;a href=&#34;https://dev.to/craigmorten/how-to-publish-deno-modules-2cg6&#34;&gt;如何发布 Deno 模块&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Deno 是一个 TypeScript 运行时，可以替代 Node.js。它有一个模块托管服务，本文介绍如果将 GitHub 上面的模块源码，通过 Webhook 发布到官方的托管服务。&lt;/p&gt;
&lt;h3 id=&#34;财政部为什么使用-arctan-函数调节工资总额httpsmpweixinqqcomsig_ftmp6xbbse7q-xr70fa&#34;&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/ig_FTMp6XbbSE7q-XR70fA&#34;&gt;财政部为什么使用 arctan 函数调节工资总额&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;财政部最近下发了一个文件，使用 arctan 函数调节国有金融企业的工资总额。这个函数到底有什么特别之处？&lt;/p&gt;
&lt;h3 id=&#34;2020年值得推荐的13本-java-书籍httpsmediumcomjavarevisited10-books-java-developers-should-read-in-2020-e6222f25cc72&#34;&gt;&lt;a href=&#34;https://medium.com/javarevisited/10-books-java-developers-should-read-in-2020-e6222f25cc72&#34;&gt;2020年值得推荐的13本 Java 书籍&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者列了一个书单，推荐了13本 Java 学习书籍。&lt;/p&gt;
&lt;p&gt;2020-8-14&lt;/p&gt;
&lt;h3 id=&#34;如何在谷歌查找到任何信息httpswwwalecfyidorking-how-to-find-anything-on-the-internethtml&#34;&gt;&lt;a href=&#34;https://www.alec.fyi/dorking-how-to-find-anything-on-the-internet.html&#34;&gt;如何在谷歌查找到任何信息&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文通过一些小例子，介绍谷歌的搜索语法。这里还有完整的&lt;a href=&#34;https://ahrefs.com/blog/google-advanced-search-operators/&#34;&gt;搜索命令列表&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;张汝京谈中国半导体产业的发展httpswwwtmtpostcom4616621html&#34;&gt;&lt;a href=&#34;https://www.tmtpost.com/4616621.html&#34;&gt;张汝京谈中国半导体产业的发展&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;张汝京是中芯国际创始人，他在最近一次演讲中，回顾了第一到第三代半导体的发展，以及谈了中国半导体产业如何实现“超车”、第三代半导体未来的发展模式是什么等问题。&lt;/p&gt;
&lt;h3 id=&#34;停电时冰箱会保持低温多长时间httpswoodgearscaheatingfreezerhtml&#34;&gt;&lt;a href=&#34;https://woodgears.ca/heating/freezer.html&#34;&gt;停电时，冰箱会保持低温多长时间？&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者做了一个有趣的实验，在冰箱里面放入传感器和树莓派，看看停电后，冷冻室能保持低温多长时间。结果发现，室温19°C的房间中，冷冻室每小时损失的冷度为2.6％，大约26小时后温度将达到0°。&lt;/p&gt;
&lt;h3 id=&#34;fasthttpsfastdesigndocsintroduction&#34;&gt;&lt;a href=&#34;https://fast.design/docs/introduction&#34;&gt;Fast&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;微软官方的 Web Components 组件库。&lt;/p&gt;
&lt;h3 id=&#34;p2httpswordpresscomp2&#34;&gt;&lt;a href=&#34;https://wordpress.com/p2/&#34;&gt;P2&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;WordPress 团队新发布的团队协作工具，有点类似公司内部的博客系统，可以免费使用，计划会在未来开源。&lt;/p&gt;
&lt;h3 id=&#34;hasura-graphql-引擎httpsgithubcomhasuragraphql-engineblobmastertranslationsreadmechinesemd&#34;&gt;&lt;a href=&#34;https://github.com/hasura/graphql-engine/blob/master/translations/README.chinese.md&#34;&gt;Hasura GraphQL 引擎&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个高性能的 GraphQL 服务器，提供 Postgres上开箱即用的实时GraphQL API&lt;/p&gt;
&lt;h3 id=&#34;codotahttpswwwcodotacom&#34;&gt;&lt;a href=&#34;https://www.codota.com/&#34;&gt;codota&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个人工智能的代码提示和补全插件，支持各大主要的 IDE。&lt;/p&gt;
&lt;h3 id=&#34;github-readme-statshttpsgithubcomanuraghazragithub-readme-statsblobmasterdocsreadme_cnmd&#34;&gt;&lt;a href=&#34;https://github.com/anuraghazra/github-readme-stats/blob/master/docs/readme_cn.md&#34;&gt;github-readme-stats&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个可以自己部署的服务，生成个人 GitHub 账户的统计，可以插在自述文件里面。这里还有另一个&lt;a href=&#34;https://github.com/athul/waka-readme&#34;&gt;类似的服务&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&#34;danfojshttpsgithubcomopensource9jadanfojs&#34;&gt;&lt;a href=&#34;https://github.com/opensource9ja/danfojs&#34;&gt;Danfo.js&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个提供跟 Pandas 相同功能的 JS 数学计算库。&lt;/p&gt;
&lt;h3 id=&#34;meilisearchhttpsgithubcommeilisearchmeilisearch&#34;&gt;&lt;a href=&#34;https://github.com/meilisearch/MeiliSearch&#34;&gt;MeiliSearch&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个开源的全文搜索软件，可以自己搭建服务，支持汉语搜索。&lt;/p&gt;
&lt;h3 id=&#34;mvpcsshttpsandybrewergithubiomvp&#34;&gt;&lt;a href=&#34;https://andybrewer.github.io/mvp/&#34;&gt;mvp.css&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个最简化的 CSS 库，不提供任何自定义的类，只给出最基本的 HTML 元素的样式，适合在它的基础上添加自定义的样式。&lt;/p&gt;
&lt;h3 id=&#34;技术树httpsgithubcomgithubarchive-programblobmasterthetechtreemd&#34;&gt;&lt;a href=&#34;https://github.com/github/archive-program/blob/master/TheTechTree.md&#34;&gt;技术树&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;为了让后代了解我们如何开发和使用软件，GitHub 官方开出了一个书单，称为“技术树”（the Tech Tree），包括16个大类的200多本经典书籍。这些书籍的数字化版本，将存放在 GitHub 的北极仓库。&lt;/p&gt;
&lt;h3 id=&#34;sql-实例教程httpswwwsqlteachingcom&#34;&gt;&lt;a href=&#34;https://www.sqlteaching.com/&#34;&gt;SQL 实例教程&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个针对初学者的 SQL 简单教程，通过在网页上运行示例来学习 SQL&lt;/p&gt;
&lt;h3 id=&#34;如何管理-redis-数据库httpswwwdigitaloceancomcommunitybookshow-to-manage-a-redis-database-ebook&#34;&gt;&lt;a href=&#34;https://www.digitalocean.com/community/books/how-to-manage-a-redis-database-ebook&#34;&gt;如何管理 Redis 数据库&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;DigitalOcean 发布的免费英文电子书，向初学者介绍什么是 Redis 和它的基本用法。&lt;/p&gt;
&lt;h3 id=&#34;bui-app-开发教程httpsmpweixinqqcommpappmsgalbum__bizmziynjqxnjuwmgactiongetalbumalbum_id1338511290868006913subscene159subscene158scenenotehttpsmpweixinqqcoms__bizmziynjqxnjuwmgmid2247483675idx1snfc494fc7e05dd5d05c2049e04816190dchksme8718302df060a14dc64d5ffddc76c319fd7cbfc8f7ac9c2ca09975a5431f23e85309cdb1820scene158rdwechat_redirect&#34;&gt;&lt;a href=&#34;https://mp.weixin.qq.com/mp/appmsgalbum?__biz=MzIyNjQxNjUwMg==&amp;amp;action=getalbum&amp;amp;album_id=1338511290868006913&amp;amp;subscene=159&amp;amp;subscene=158&amp;amp;scenenote=https://mp.weixin.qq.com/s?__biz=MzIyNjQxNjUwMg==&amp;amp;mid=2247483675&amp;amp;idx=1&amp;amp;sn=fc494fc7e05dd5d05c2049e04816190d&amp;amp;chksm=e8718302df060a14dc64d5ffddc76c319fd7cbfc8f7ac9c2ca09975a5431f23e85309cdb1820&amp;amp;scene=158#rd#wechat_redirect&#34;&gt;BUI App 开发教程&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;BUI 是一个国产的移动端 H5 框架，这是框架作者写的系列教程，演示如何用 BUI 开发一个网易新闻 App。&lt;/p&gt;
&lt;h3 id=&#34;鞋带暗语httpswwwfieggencomshoelacecialacinghtm&#34;&gt;&lt;a href=&#34;https://www.fieggen.com/shoelace/cialacing.htm&#34;&gt;鞋带暗语&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;冷战时期，中央情报局曾经采用一种鞋带暗语。只要根据鞋面上，鞋带交叉的位置和次数，就能传递事先约定的信息。这种方法非常简单，不受环境约束，外人很难察觉。&lt;/p&gt;
&lt;h3 id=&#34;css-生成艺术httpsgenerative-art-with-csscommonshost&#34;&gt;&lt;a href=&#34;https://generative-art-with-css.commons.host/&#34;&gt;CSS 生成艺术&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;如何用 CSS 生成各种形状的图形&lt;/p&gt;
&lt;h3 id=&#34;manjaro-与-arch-linux-的区别httpsitsfosscommanjaro-vs-arch-linux&#34;&gt;&lt;a href=&#34;https://itsfoss.com/manjaro-vs-arch-linux/&#34;&gt;Manjaro 与 Arch Linux 的区别&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Manjaro 与 Arch 都是流行的 Linux 发行版，Manjaro 基于 Arch，但是有自己显著的特点。&lt;/p&gt;
&lt;h3 id=&#34;单个创始人的表现更好httpswwwgrowthclubonlinepostresearch-says-solo-founders-perform-better-here-is-why&#34;&gt;&lt;a href=&#34;https://www.growthclub.online/post/research-says-solo-founders-perform-better-here-is-why&#34;&gt;单个创始人的表现更好&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;统计显示，单个创始人的公司更可能盈利，本文分析原因&lt;/p&gt;
&lt;h3 id=&#34;熵的羊群解释httpsaatishbcomentropy&#34;&gt;&lt;a href=&#34;https://aatishb.com/entropy/&#34;&gt;熵的羊群解释&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;较为通俗地解释了，物理学的熵（entropy）是概率导致的。&lt;/p&gt;
&lt;h3 id=&#34;crdt-算法是否适合多人实时编辑httpsblogkevinjahnsdeare-crdts-suitable-for-shared-editing&#34;&gt;&lt;a href=&#34;https://blog.kevinjahns.de/are-crdts-suitable-for-shared-editing/&#34;&gt;CRDT 算法是否适合多人实时编辑？&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;CRDT 算法用于分布式服务实现数据同步，比如同一篇文档的多人实时编辑。&lt;a href=&#34;https://github.com/yjs/yjs&#34;&gt;Yjs&lt;/a&gt; 是 CRDT 的一个实现，本文是它的作者对这个算法的解释，内容有一定深度。&lt;/p&gt;
&lt;h3 id=&#34;typescript-简明介绍httpswwwwarambilcomtypescript-why-is-so-important&#34;&gt;&lt;a href=&#34;https://www.warambil.com/typescript-why-is-so-important&#34;&gt;TypeScript 简明介绍&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;针对初学者的 TypeScript 介绍&lt;/p&gt;
&lt;h3 id=&#34;html-smuggling-解释httpsoutflanknlblog20180814html-smuggling-explained&#34;&gt;&lt;a href=&#34;https://outflank.nl/blog/2018/08/14/html-smuggling-explained/&#34;&gt;HTML smuggling 解释&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;很多人不知道，JavaScript 可以脚本生成 exe 文件，让用户下载。本文介绍如何在网页里面嵌入一个恶意的可执行文件。&lt;/p&gt;
&lt;h3 id=&#34;广告短信的退订内幕httpsdailyzhihucomstory9726870&#34;&gt;&lt;a href=&#34;https://daily.zhihu.com/story/9726870&#34;&gt;广告短信的退订内幕&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;很多促销广告短信都说回复 T 退订，但是回复了 T 之后会发生什么&lt;/p&gt;
&lt;h3 id=&#34;qrpicturehttpswwwqrpicturecom&#34;&gt;&lt;a href=&#34;https://www.qrpicture.com/&#34;&gt;QRpicture&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个在线工具，把图片变成可以扫描的二维码。&lt;/p&gt;
&lt;h3 id=&#34;screenplaysubshttpsscreenplaysubscom&#34;&gt;&lt;a href=&#34;https://screenplaysubs.com/&#34;&gt;ScreenplaySubs&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;浏览器插件，播放 Netflix 视频的时候，同步显示剧本内容。&lt;/p&gt;
&lt;h3 id=&#34;umamihttpsumamiis&#34;&gt;&lt;a href=&#34;https://umami.is/&#34;&gt;umami&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个开源的网站访问统计服务。&lt;/p&gt;
&lt;h3 id=&#34;ts-migratehttpsgithubcomairbnbts-migrate&#34;&gt;&lt;a href=&#34;https://github.com/airbnb/ts-migrate&#34;&gt;ts-migrate&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Airbnb 公司新的开源项目，可以将 JavaScript 代码转成 TypeScript 代码。&lt;/p&gt;
&lt;h3 id=&#34;jscoolhttpsgithubcomjs-cooljscool&#34;&gt;&lt;a href=&#34;https://github.com/js-cool/js.cool&#34;&gt;js.cool&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;为开源项目提供免费的&lt;code&gt;js.cool&lt;/code&gt;的子域名，类似&lt;code&gt;js.org&lt;/code&gt;，支持 CNAME 绑定&lt;/p&gt;
&lt;h3 id=&#34;screen-share-partyhttpsbanetscreen-share-party&#34;&gt;&lt;a href=&#34;https://ba.net/screen-share-party&#34;&gt;Screen Share Party&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;该网站通过 WebRTC 协议把你的桌面分享给其他人。它生成一个 URL，其他人访问这个 URL，就能看到你的桌面&lt;/p&gt;
&lt;h3 id=&#34;mazahttpsgithubcomtanraxmaza-ad-blocking&#34;&gt;&lt;a href=&#34;https://github.com/tanrax/maza-ad-blocking&#34;&gt;maza&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个本地的广告拦截器，通过封锁 DNS 达到拦截广告的目的。它的特点就是非常简单，就是一个 Bash 脚本，可以作为学习脚本编程的范例。&lt;/p&gt;
&lt;h3 id=&#34;统计学习导论httpfacultymarshalluscedugareth-jamesislan-introduction-to-statistical-learning&#34;&gt;&lt;a href=&#34;http://faculty.marshall.usc.edu/gareth-james/ISL/&#34;&gt;统计学习导论&lt;/a&gt;（An Introduction to Statistical Learning）&lt;/h3&gt;
&lt;p&gt;免费英文电子书，可以作为非数学专业学生的统计学教材，侧重机器学习的统计基础，提供 R 语言的例子。&lt;/p&gt;
&lt;h3 id=&#34;1940年纽约历史地图https1940snycmap&#34;&gt;&lt;a href=&#34;https://1940s.nyc/map/&#34;&gt;1940年纽约历史地图&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这个网站提供1940年代的纽约在线地图，并且还可以查看各个地点的历史照片。&lt;/p&gt;
&lt;h3 id=&#34;ai-还原古罗马皇帝httpsvoshartcomroman-emperor-project&#34;&gt;&lt;a href=&#34;https://voshart.com/ROMAN-EMPEROR-PROJECT&#34;&gt;AI 还原古罗马皇帝&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这个项目使用 AI 模型，将古罗马皇帝的塑像还原成高清晰度人像照片。&lt;/p&gt;
&lt;h3 id=&#34;物理学书单httpswwwsusanjfowlercomblog2016813so-you-want-to-learn-physics&#34;&gt;&lt;a href=&#34;https://www.susanjfowler.com/blog/2016/8/13/so-you-want-to-learn-physics&#34;&gt;物理学书单&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者列了一个英文书单，对于想自学物理学、达到本科以及研究生水平的读者，应该阅读哪些教材。&lt;/p&gt;
&lt;h3 id=&#34;covid-19-舆论新闻可视化httpspearminigiteeioncovis-2020&#34;&gt;&lt;a href=&#34;https://pearmini.gitee.io/ncovis-2020/#/&#34;&gt;COVID-19 舆论新闻可视化&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;山东大学 VisLab 的一个可视化项目，分析疫情对舆论和新闻的影响&lt;/p&gt;
&lt;h3 id=&#34;next-徽标httpswwwlogodesignlovecomnext-logo-paul-rand&#34;&gt;&lt;a href=&#34;https://www.logodesignlove.com/next-logo-paul-rand&#34;&gt;NeXT 徽标&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;1986年，乔布斯向著名的平面设计师保罗·兰德（Paul Rand）支付了10万美元，要求为自己的 NeXT 计算机公司设计徽标。&lt;/p&gt;
&lt;h3 id=&#34;姆潘巴现象httpsenwikipediaorgwikimpemba_effect&#34;&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Mpemba_effect&#34;&gt;姆潘巴现象&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;1963年，坦桑尼亚的一个高中上烹饪课，学生们做冰淇淋。&lt;/p&gt;
&lt;p&gt;一个叫做姆潘巴（Erasto Mpemba）的学生，发现了一个奇怪的现象。两个装有相同体积水的容器，一个是35°C，另一个是100°C，同时放进冰箱，竟然是100°C的水首先开始结冰。也就是说，温度高的水会更快结冰，这是为什么？&lt;/p&gt;
&lt;p&gt;物理老师也不知道这是怎么回事，就把这个结果发表出来。这引起物理学界的争论，科学家也无法解释，就把它称为“姆潘巴现象”。&lt;/p&gt;
&lt;p&gt;2012年，英国皇家化学学会举行了一场竞赛，征集论文，对姆潘巴现象进行解释。共有22,000人参加，获胜者提出了两种解释。&lt;/p&gt;
&lt;p&gt;（1）过冷（Supercooling）。低温液体会在一定时间内存在过冷现象，低于凝固点仍维持液体。&lt;/p&gt;
&lt;p&gt;（2）对流。温度高的液体有更高的对流，有利于散热。&lt;/p&gt;
&lt;h3 id=&#34;网络安全工程师的修炼途径httpsdanielmiesslercomblogbuild-successful-infosec-career&#34;&gt;&lt;a href=&#34;https://danielmiessler.com/blog/build-successful-infosec-career/&#34;&gt;网络安全工程师的修炼途径&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者在网络安全方面有20年的从业经验。他在本文中介绍网络安全工程所需的技能和培养途径。他提出，学习者一定要有自己的实验室，熟练使用虚拟机测试各种系统。&lt;/p&gt;
&lt;h3 id=&#34;如何用神经网络玩超级马里奥兄弟httpschrispressogithubioai_learns_to_play_smb_using_ga_and_nn&#34;&gt;&lt;a href=&#34;https://chrispresso.github.io/AI_Learns_To_Play_SMB_Using_GA_And_NN&#34;&gt;如何用神经网络玩超级马里奥兄弟&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/341c2569aca0476fcea72a82669b5926fd8311d6/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323030382f6267323032303038323230312e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/341c2569aca0476fcea72a82669b5926fd8311d6/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323030382f6267323032303038323230312e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;作者展示了如何用 Python 写一个神经网络模型，自动玩超级马里奥兄弟，可以很清晰地看懂他的算法，就是将游戏画面转化成一帧帧的像素网格（注意下图两侧画面的对比），根据网格的变化，程序自动做出反应。&lt;/p&gt;
&lt;h3 id=&#34;深入了解-python的官方-docker-映像httpspythonspeedcomarticlesofficial-python-docker-image&#34;&gt;&lt;a href=&#34;https://pythonspeed.com/articles/official-python-docker-image/&#34;&gt;深入了解 Python的官方 Docker 映像&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文是一篇 Docker 教程，一步步介绍 Python 官方的 Docker 镜像是怎么制作的，详细解读 Dockefile 文件&lt;/p&gt;
&lt;h3 id=&#34;理解-python-哈希表httpthepythoncornercomdevhash-tables-understanding-dictionaries&#34;&gt;&lt;a href=&#34;http://thepythoncorner.com/dev/hash-tables-understanding-dictionaries/&#34;&gt;理解 Python 哈希表&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文详细讲解 Python 哈希函数的用法，然后用它实现一个简单的哈希表。&lt;/p&gt;
&lt;h3 id=&#34;如何在谷歌云安装-pi-holehttpsmediumcomdevinjaystokeshow-to-set-up-a-pi-hole-ad-blocking-vpn-server-on-google-clouds-always-free-usage-tier-ff1d8a8c407e&#34;&gt;&lt;a href=&#34;https://medium.com/@devinjaystokes/how-to-set-up-a-pi-hole-ad-blocking-vpn-server-on-google-clouds-always-free-usage-tier-ff1d8a8c407e&#34;&gt;如何在谷歌云安装 Pi-Hole&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一篇非常详细的教程，一步步教你在谷歌云上安装 Pi-Hole，自己搭建一个 DNS 服务器，能够屏蔽广告。&lt;/p&gt;
&lt;h3 id=&#34;如何使用-firebase-开发一个自己的评论系统httpswwwsmashingmagazinecom202008comment-system-firebase英文&#34;&gt;&lt;a href=&#34;https://www.smashingmagazine.com/2020/08/comment-system-firebase/&#34;&gt;如何使用 Firebase 开发一个自己的评论系统&lt;/a&gt;（英文）&lt;/h3&gt;
&lt;p&gt;Firebase 是谷歌的实时数据库服务，本文是如何使用它来储存前端数据的详细教程&lt;/p&gt;
&lt;h3 id=&#34;使用-safari-web-share-api-窃取本地文件httpsblogredteampl202008stealing-local-files-using-safari-webhtml&#34;&gt;&lt;a href=&#34;https://blog.redteam.pl/2020/08/stealing-local-files-using-safari-web.html&#34;&gt;使用 Safari Web Share API 窃取本地文件&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文介绍如何在苹果设备上，利用 Safari 浏览器的 Web Share API 在用户不知情的情况下，将本地文件分享出去。&lt;/p&gt;
&lt;h3 id=&#34;cipheyhttpsgithubcomcipheyciphey&#34;&gt;&lt;a href=&#34;https://github.com/Ciphey/Ciphey&#34;&gt;Ciphey&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;有时，我们有一段加密文本，但是不知道它使用什么加密方法。这个命令行工具，会根据人工智能算法，自动判断加密方法，能不能解密。&lt;/p&gt;
&lt;h3 id=&#34;ztextjshttpsbennettfeelycomztext&#34;&gt;&lt;a href=&#34;https://bennettfeely.com/ztext/&#34;&gt;ztext.js&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这个 JS 库可以将任何字体变成 3D 效果，支持中文。&lt;/p&gt;
&lt;h3 id=&#34;css-渐变魔法httpswwwgradientmagiccom&#34;&gt;&lt;a href=&#34;https://www.gradientmagic.com/&#34;&gt;CSS 渐变魔法&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;该网站收集各种 CSS 渐变图像，可以复制到自己的项目。&lt;/p&gt;
&lt;h3 id=&#34;labuladong-的算法小抄httpslabuladonggitbookioalgo&#34;&gt;&lt;a href=&#34;https://labuladong.gitbook.io/algo/&#34;&gt;labuladong 的算法小抄&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;100 多道 LeetCode 算法题目的中文解释。&lt;/p&gt;
&lt;h3 id=&#34;不可能的几何形状httpsim-possibleinfoenglishlibraryindexhtml&#34;&gt;&lt;a href=&#34;https://im-possible.info/english/library/index.html&#34;&gt;不可能的几何形状&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;该网站收集各种不可能的几何形状图片，目前已经有两千多张了。&lt;/p&gt;
&lt;h3 id=&#34;puppeteer--playwright-学习教程httpstheheadlessdev&#34;&gt;&lt;a href=&#34;https://theheadless.dev/&#34;&gt;Puppeteer &amp;amp; Playwright 学习教程&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一份英语教程，介绍无头浏览器操作库 Puppeteer 和 Playwright 的用法。&lt;/p&gt;
&lt;h3 id=&#34;讲解开源项目httpsgithubcomhellogithub-teamarticle&#34;&gt;&lt;a href=&#34;https://github.com/HelloGitHub-Team/Article&#34;&gt;讲解开源项目&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一组中文的系列文章，介绍各种开源项目和用法&lt;/p&gt;
&lt;h3 id=&#34;富士山公路httpswwwatlasobscuracomarticlessnow-canyon-japan&#34;&gt;&lt;a href=&#34;https://www.atlasobscura.com/articles/snow-canyon-japan&#34;&gt;富士山公路&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;日本有一条通往富士山的高速公路。冬天下雪时，积雪有时厚达几米。扫除路上的积雪以后，就形成了公路两边有雪墙的奇特景象。&lt;/p&gt;
&lt;h3 id=&#34;大公司如何合法避税httpswwwredditcomrcoolguidescommentsifz1nohow_to_not_pay_taxes&#34;&gt;&lt;a href=&#34;https://www.reddit.com/r/coolguides/comments/ifz1no/how_to_not_pay_taxes/&#34;&gt;大公司如何合法避税&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;如题&lt;/p&gt;
&lt;h3 id=&#34;肉鸡的由来httpswwwtheguardiancomenvironment2020aug17from-farm-to-factory-the-unstoppable-rise-of-american-chicken&#34;&gt;&lt;a href=&#34;https://www.theguardian.com/environment/2020/aug/17/from-farm-to-factory-the-unstoppable-rise-of-american-chicken&#34;&gt;肉鸡的由来&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;如题&lt;/p&gt;
&lt;h3 id=&#34;如何用简单英语写作httpwwwplainenglishcoukhow-to-write-in-plain-englishhtml&#34;&gt;&lt;a href=&#34;http://www.plainenglish.co.uk/how-to-write-in-plain-english.html&#34;&gt;如何用简单英语写作&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文介绍几个很实用的英语写作规则，帮助你写出简单易懂的英语。&lt;/p&gt;
&lt;h3 id=&#34;gps-定位原理httpsblogdigitalbunkerdev20200828how-do-global-positioning-systems-gps-work&#34;&gt;&lt;a href=&#34;https://blog.digitalbunker.dev/2020/08/28/how-do-global-positioning-systems-gps-work/&#34;&gt;GPS 定位原理&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文介绍 GPS 卫星系统如何能够定位，写得比较容易懂。定位的关键是卫星上的原子钟必须准确报时。&lt;/p&gt;
&lt;h3 id=&#34;异步操作需要设置超时httpsrobertovitillocomdefault-timeouts&#34;&gt;&lt;a href=&#34;https://robertovitillo.com/default-timeouts/&#34;&gt;异步操作需要设置超时&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文是一个提醒，进行异步操作的时候（比如 AJAX 请求），要设置超时。因为 AJAX 默认没有超时限制，浏览器会一直等下去，极端情况下，可能会耗尽套接字的资源池。&lt;/p&gt;
&lt;h3 id=&#34;如何让-linux-不区分文件名大小写httpswwwcollaboracomnews-and-blogblog20200827using-the-linux-kernel-case-insensitive-feature-in-ext4&#34;&gt;&lt;a href=&#34;https://www.collabora.com/news-and-blog/blog/2020/08/27/using-the-linux-kernel-case-insensitive-feature-in-ext4/&#34;&gt;如何让 Linux 不区分文件名大小写&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Linux 5.2 开始，支持不区分文件名大小写，本文教你怎么打开这个功能。&lt;/p&gt;
&lt;h3 id=&#34;短消息发送一次性验证码的标准httpstrineocomblog202008phishing-resistant-one-time-codes&#34;&gt;&lt;a href=&#34;https://trineo.com/blog/2020/08/phishing-resistant-one-time-codes&#34;&gt;短消息发送一次性验证码的标准&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;很多网站采用短消息发送一次性验证码，作为用户认证的手段。苹果和谷歌已经商定了短消息格式标准，GitHub 开始采用这个标准。&lt;/p&gt;
&lt;h3 id=&#34;react-列表-key-属性的三个常见错误httpsdevtothawkin3common-mistakes-with-react-keys-1jcc&#34;&gt;&lt;a href=&#34;https://dev.to/thawkin3/common-mistakes-with-react-keys-1jcc&#34;&gt;React 列表 key 属性的三个常见错误&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;React 框架要求列表的每一项都带有&lt;code&gt;key&lt;/code&gt;属性，本文介绍这个属性的三个需要注意的地方。&lt;/p&gt;
&lt;h3 id=&#34;bootstrap-图标库httpsgithubcomtwbsicons&#34;&gt;&lt;a href=&#34;https://github.com/twbs/icons&#34;&gt;Bootstrap 图标库&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Bootstrap 的图标库发布1.0正式版，包含1100多个图标，全部都是 SVG 格式，可以插入 img 标签。&lt;/p&gt;
&lt;h3 id=&#34;lunarhttpsgithubcomalin23lunar&#34;&gt;&lt;a href=&#34;https://github.com/alin23/Lunar&#34;&gt;Lunar&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;调节 Mac 电脑外接显示器亮度的软件，可以根据时间，自动调节亮度。&lt;/p&gt;
&lt;h3 id=&#34;nginx-日志分析可视化httpsgithubcomturbowaybigdata_practice&#34;&gt;&lt;a href=&#34;https://github.com/TurboWay/bigdata_practice&#34;&gt;nginx 日志分析可视化&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个完整的大数据实践项目，通过 hive 分析 nginx 日志，将分析结果通过 flask + echarts 进行可视化展示。&lt;/p&gt;
&lt;h3 id=&#34;go-zerohttpsgithubcomtal-techgo-zero&#34;&gt;&lt;a href=&#34;https://github.com/tal-tech/go-zero&#34;&gt;go-zero&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个国产的 web 和 rpc 微服务框架，含极简的 API 定义和生成工具 goctl，可以根据定义的 api 文件一键生成各语言的调用代码。&lt;/p&gt;
&lt;h3 id=&#34;ios-开发课程httpscs193psitesstanfordedu&#34;&gt;&lt;a href=&#34;https://cs193p.sites.stanford.edu/&#34;&gt;iOS 开发课程&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;斯坦福大学的高质量免费课程，使用了最新的 SwiftUI，充分展示了 APP 开发的整个流程，适合新手进行 iOS 的开发入门。&lt;/p&gt;
&lt;h3 id=&#34;1gb-手机流量的价格httpswwwcablecoukmobilesworldwide-data-pricing&#34;&gt;&lt;a href=&#34;https://www.cable.co.uk/mobiles/worldwide-data-pricing/&#34;&gt;1GB 手机流量的价格&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;该网站收集全世界各国家和地区的 1GB 手机流量的价格。中国大陆的平均价格是0.61美元，排在第12位，属于手机上网很便宜的地方。美国平均需要8美元，排在第188位，是非常贵的地方。&lt;/p&gt;
&lt;h3 id=&#34;面向初学者的-python-项目httpswwwcodewithreplitpython-projects-for-beginnershtml&#34;&gt;&lt;a href=&#34;https://www.codewithrepl.it/python-projects-for-beginners.html&#34;&gt;面向初学者的 Python 项目&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;如题，一本免费 Python 教程，使用 Repl.it 在线编程环境学习 Python。&lt;/p&gt;
&lt;h3 id=&#34;在线工具秘籍httpsgithubcomzhaooleeonlinetoolsbook&#34;&gt;&lt;a href=&#34;https://github.com/zhaoolee/OnlineToolsBook&#34;&gt;在线工具秘籍&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这个中文仓库收集各种好用的在线小工具。&lt;/p&gt;
&lt;h3 id=&#34;面向程序员的实用深度学习httpscoursefastai&#34;&gt;&lt;a href=&#34;https://course.fast.ai/&#34;&gt;面向程序员的实用深度学习&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;fast.ai 公司推出的深度学习教程。&lt;/p&gt;
&lt;h3 id=&#34;世界最长的火车路线httpsbasementgeographercomthe-longest-train-ride-in-the-world&#34;&gt;&lt;a href=&#34;https://basementgeographer.com/the-longest-train-ride-in-the-world/&#34;&gt;世界最长的火车路线&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;目前，世界最长的火车路线是从葡萄牙首都波尔多开始，一直到达越南南部，全长17000公里。你可以全程乘坐火车，但需要经过多次换车。&lt;/p&gt;
&lt;p&gt;整个路程最快也要耗时327小时，相当于13天半，总票价2000美元以上。&lt;/p&gt;
&lt;h3 id=&#34;巴比伦乘法公式httpswwwiquilezlesorgblogp4582&#34;&gt;&lt;a href=&#34;https://www.iquilezles.org/blog/?p=4582&#34;&gt;巴比伦乘法公式&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;古代巴比伦人使用下面的公式，计算两个数的乘积。
$$
ab=\frac{(a+b)^2-(a-b)^2}4
$$&lt;/p&gt;
&lt;h3 id=&#34;高德納自述我对电子邮件的态度httpswww-cs-facultystanfordeduknuthemailhtml&#34;&gt;&lt;a href=&#34;https://www-cs-faculty.stanford.edu/~knuth/email.html&#34;&gt;高德納自述：我对电子邮件的态度&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Donald E. Knuth 教授
计算机科学系 斯坦福大学
盖茨大楼4B
斯坦福大学
CA 94305-9045美国&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;沙皇核弹纪录片httpsthebarentsobservercomensecurity202008rosatom-releases-previously-classified-documentary-video-50-mt-novaya-zemlya-test&#34;&gt;&lt;a href=&#34;https://thebarentsobserver.com/en/security/2020/08/rosatom-releases-previously-classified-documentary-video-50-mt-novaya-zemlya-test&#34;&gt;沙皇核弹纪录片&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;今年8月20日，为了纪念苏联核工业发展75周年，俄罗斯在 YouTube 上发布了一部讲述沙皇核弹的纪录片。&lt;/p&gt;
&lt;h3 id=&#34;我的业余作品如何以3万美元出售httpsmarciotweet-photo-acquired&#34;&gt;&lt;a href=&#34;https://marc.io/tweet-photo-acquired&#34;&gt;我的业余作品如何以3万美元出售&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者最初写了一篇文章，介绍如何将 Instagram 图片同步到推特，结果发现浏览量很高。有人还写信，愿意付费使用该功能。作者就把它做成一个小服务，结果被3万美元收购。&lt;/p&gt;
&lt;h3 id=&#34;如何使用-github-管理个人笔记httpswwwbit-101comblog202009git-based-wiki&#34;&gt;&lt;a href=&#34;https://www.bit-101.com/blog/2020/09/git-based-wiki/&#34;&gt;如何使用 GitHub 管理个人笔记&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者介绍他如何将 GitHub 仓库当作 Wiki 使用，管理个人笔记。&lt;/p&gt;
&lt;h3 id=&#34;10个你可能不知道的-web-apihttpsbloggreenrootsinfo10-lesser-known-web-apis-you-may-want-to-use-ckejv75cr012y70s158n85yhn&#34;&gt;&lt;a href=&#34;https://blog.greenroots.info/10-lesser-known-web-apis-you-may-want-to-use-ckejv75cr012y70s158n85yhn&#34;&gt;10个你可能不知道的 Web API&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Chrome 浏览器提供的 Web API 非常多，本文介绍其中10个。&lt;/p&gt;
&lt;h3 id=&#34;如何在浏览器里制作一个互动地球仪httpsstripecomblogglobe&#34;&gt;&lt;a href=&#34;https://stripe.com/blog/globe&#34;&gt;如何在浏览器里制作一个互动地球仪&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者介绍如何使用 WebGL（通过 three.js）在浏览器里面做出一个可以互动的地球仪。&lt;/p&gt;
&lt;h3 id=&#34;浮点数原理httpstimroderickcomfloating-point-introduction&#34;&gt;&lt;a href=&#34;https://timroderick.com/floating-point-introduction/&#34;&gt;浮点数原理&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文较为通俗地解释，什么是浮点数，为什么这么设计。&lt;/p&gt;
&lt;h3 id=&#34;如何在亚马逊网络服务上部署一个-react-apphttpsawsamazoncomgetting-startedhands-onbuild-react-app-amplify-graphqlmodule-one&#34;&gt;&lt;a href=&#34;https://aws.amazon.com/getting-started/hands-on/build-react-app-amplify-graphql/module-one/&#34;&gt;如何在亚马逊网络服务上部署一个 React App&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;官方文档，介绍如何用 AWS Amplify 自动构建和部署一个 React 应用。跟亚马逊的其他文档相比，写得非常好懂。&lt;/p&gt;
&lt;h3 id=&#34;mongodb-的历史httpswwwquickprogrammingtipscommongodbmongodb-historyhtml&#34;&gt;&lt;a href=&#34;https://www.quickprogrammingtips.com/mongodb/mongodb-history.html&#34;&gt;MongoDB 的历史&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;MongoDB 是现在最流行的 NoSQL 数据库，本文详尽介绍了它的历史，以及早期的设计决定。&lt;/p&gt;
&lt;h3 id=&#34;55k-月用户的-web-应用成本httpskeepthescorecoblogpostscosts-of-running-webapp&#34;&gt;&lt;a href=&#34;https://keepthescore.co/blog/posts/costs-of-running-webapp/&#34;&gt;55K 月用户的 Web 应用成本&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者维护着一个 Python flask 应用，每月有5.5万访问者。本文总结了他每月花在这个网站上的账单。&lt;/p&gt;
&lt;h3 id=&#34;responsivelyhttpsgithubcomresponsively-orgresponsively-app&#34;&gt;&lt;a href=&#34;https://github.com/responsively-org/responsively-app&#34;&gt;responsively&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个方便的桌面软件，集成了开发和调试响应式网页的各种功能。&lt;/p&gt;
&lt;h3 id=&#34;网页骨架布局生成器httpsskeletonreactcom&#34;&gt;&lt;a href=&#34;https://skeletonreact.com/&#34;&gt;网页骨架布局生成器&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;有些网页加载时，会显示一个骨架布局（上图），获取正式内容后再替换掉。这个在线工具就用来生成骨架布局，支持 React、React Native、Vue 和 普通 HTML。&lt;/p&gt;
&lt;h3 id=&#34;解决算法和数据结构问题python-版httpswwwcsaucklandacnzcompsci105s1cresourcesproblemsolvingwithalgorithmsanddatastructurespdf&#34;&gt;&lt;a href=&#34;https://www.cs.auckland.ac.nz/compsci105s1c/resources/ProblemSolvingwithAlgorithmsandDataStructures.pdf&#34;&gt;解决算法和数据结构问题（Python 版）&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;免费的英文电子书， 使用 Python 语言介绍基本的算法和数据结构，内容比较简单，也不厚200多页，适合初学者。&lt;/p&gt;
&lt;h3 id=&#34;degooglehttpsdegooglejmooredev&#34;&gt;&lt;a href=&#34;https://degoogle.jmoore.dev/&#34;&gt;degoogle&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;该网站收集各种谷歌服务的替代品。&lt;/p&gt;
&lt;h3 id=&#34;winamp-皮肤图书馆httpsskinswebamporg&#34;&gt;&lt;a href=&#34;https://skins.webamp.org/&#34;&gt;Winamp 皮肤图书馆&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;该网站收集各种 Winamp 播放器的皮肤。&lt;/p&gt;
&lt;h3 id=&#34;web-api-设计httpslivebookmanningcombookthe-design-of-web-apischapter-1originproduct-tocthe-design-of-web-apis&#34;&gt;&lt;a href=&#34;https://livebook.manning.com/book/the-design-of-web-apis/chapter-1?origin=product-toc&#34;&gt;Web API 设计&lt;/a&gt;（The Design of Web APIs）&lt;/h3&gt;
&lt;p&gt;Manning 出版社的英文书籍，现在官方提供在线免费阅读，内容很不错，关于怎么设计 Web 应用的 API。&lt;/p&gt;
&lt;h3 id=&#34;inux-从零开始httpwwwlinuxfromscratchorglfsview100-rc1prologueforewordhtmllinux-from-scratch&#34;&gt;&lt;a href=&#34;http://www.linuxfromscratch.org/lfs/view/10.0-rc1/prologue/foreword.html&#34;&gt;inux 从零开始&lt;/a&gt;（Linux From Scratch）&lt;/h3&gt;
&lt;p&gt;一本英文的免费书籍，讲述如何从源码一步步编译一个自己的 Linux 系统，帮助你深入理解 Linux。&lt;/p&gt;
&lt;h3 id=&#34;水上飞行器-ekranoplanhttpswwwpopularmechanicscommilitaryaviationa33808381russia-ekranoplan-plane-boat-wrecked&#34;&gt;&lt;a href=&#34;https://www.popularmechanics.com/military/aviation/a33808381/russia-ekranoplan-plane-boat-wrecked/&#34;&gt;水上飞行器 Ekranoplan&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;RT.&lt;/p&gt;
&lt;h3 id=&#34;核电池可以用于太空旅行httpswwwgenerationatomicorgskimthe-nuclear-heartbeat-of-space-exploration&#34;&gt;&lt;a href=&#34;https://www.generationatomic.org/skim/the-nuclear-heartbeat-of-space-exploration&#34;&gt;核电池可以用于太空旅行&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文介绍了核电池的原理（利用放射性元素衰变产生的能量），以及用于太空旅行的可能性。&lt;/p&gt;
&lt;h3 id=&#34;使用蒙特卡洛算法玩2048httpsxtrpioblog20200912using-the-monte-carlo-tree-search-algorithm-in-an-ai-to-beat-2048-and-other-games&#34;&gt;&lt;a href=&#34;https://xtrp.io/blog/2020/09/12/using-the-monte-carlo-tree-search-algorithm-in-an-ai-to-beat-2048-and-other-games/&#34;&gt;使用蒙特卡洛算法玩2048&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;2048 是一个4x4的方块游戏，只要两个相同数字相邻，就可以合并为一个数字。本文讲解了如何用蒙特卡洛算法进行简单模拟，让计算机自己解决2048游戏。&lt;/p&gt;
&lt;h3 id=&#34;for-await--of-语句解释httpswwwmikealchecomsoftware-developmenta-simple-explanation-of-the-for-await-of-statement-in-node-js&#34;&gt;&lt;a href=&#34;https://www.mikealche.com/software-development/a-simple-explanation-of-the-for-await-of-statement-in-node-js&#34;&gt;for await &amp;hellip; of 语句解释&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;ES6 引入了 for await &amp;hellip; of 新语法，用来遍历异步迭代器，很多人还不熟悉。本文是对它的简单解释。&lt;/p&gt;
&lt;h3 id=&#34;使用-react-钩子而不是类的6个理由httpsblogbitsrcio6-reasons-to-use-react-hooks-instead-of-classes-7e3ee745fe04&#34;&gt;&lt;a href=&#34;https://blog.bitsrc.io/6-reasons-to-use-react-hooks-instead-of-classes-7e3ee745fe04&#34;&gt;使用 React 钩子而不是类的6个理由&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文总结 React 钩子比类更有优势的6个方面，比如不再有 this 问题，也不用再绑定方法了。&lt;/p&gt;
&lt;h3 id=&#34;avif-格式初探httpsjakearchibaldcom2020avif-has-landed&#34;&gt;&lt;a href=&#34;https://jakearchibald.com/2020/avif-has-landed/&#34;&gt;AVIF 格式初探&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://camo.githubusercontent.com/5a8b70251077f1c3b472fcd2438532845eeb85d0/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323030392f6267323032303039313731312e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;AVIF 是一种开源图片格式，源自 AV1 视频格式。各个平台基本上都会支持，这篇文章对比了它与 JPEG 和 WebP 格式，结果很不错。&lt;/p&gt;
&lt;h3 id=&#34;nodejs-如何下载流传输文件httpsphilnashblog20200806how-to-stream-file-downloads-in-node-js-with-got&#34;&gt;&lt;a href=&#34;https://philna.sh/blog/2020/08/06/how-to-stream-file-downloads-in-Node-js-with-got/&#34;&gt;Node.js 如何下载流传输文件&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文介绍如何使用 Got 这个库，以流传输的形式（stream）下载文件。&lt;/p&gt;
&lt;h3 id=&#34;diffcheckerhttpswwwdiffcheckercom&#34;&gt;&lt;a href=&#34;https://www.diffchecker.com/&#34;&gt;Diffchecker&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个在线工具，可以检查文本、图片、PDF 之间的差异。&lt;/p&gt;
&lt;h3 id=&#34;screelyhttpswwwscreelycom&#34;&gt;&lt;a href=&#34;https://www.screely.com/&#34;&gt;Screely&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个在线工具，可以生成网页展示效果的示意图。&lt;/p&gt;
&lt;h3 id=&#34;poolside-fmhttpspoolsidefm&#34;&gt;&lt;a href=&#34;https://poolside.fm/&#34;&gt;Poolside FM&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个在线的复古风格音乐电台。&lt;/p&gt;
&lt;h3 id=&#34;mimestreamhttpsmimestreamcom&#34;&gt;&lt;a href=&#34;https://mimestream.com/&#34;&gt;Mimestream&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;前苹果邮件客户端工程师 Neil Jhaveri 推出的 Gmail macOS 原生客户端，外观简洁大方，十分契合原生风格&lt;/p&gt;
&lt;h3 id=&#34;kibana-eyehttpsgithubcomcasterwxkibana-eye&#34;&gt;&lt;a href=&#34;https://github.com/CasterWx/kibana-eye&#34;&gt;kibana-eye&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;ELK 平台（Elasticsearch，Logstash，Kibana）的定时任务管理工具，可以聚合处理日志，生成报表信息，通过邮件/钉钉等方式发送通知。&lt;/p&gt;
&lt;h3 id=&#34;lofimusichttpslofimusicapp&#34;&gt;&lt;a href=&#34;https://lofimusic.app/&#34;&gt;LofiMusic&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个开源的背景音乐播放网站。&lt;/p&gt;
&lt;h3 id=&#34;beewarehttpsbeewareorg&#34;&gt;&lt;a href=&#34;https://beeware.org/&#34;&gt;BeeWare&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个 Python 工具，让你的 Python 代码可以打包成跨平台图形界面应用，尤其是可以打包成手机 App，支持 iOS、Android、Windows、MacOS、Linux、Web 等平台。&lt;/p&gt;
&lt;h3 id=&#34;aggregated-awesomehttpsaggregatedawesomecom&#34;&gt;&lt;a href=&#34;https://aggregatedawesome.com/&#34;&gt;Aggregated Awesome&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;GitHub 上面有很多 awesome 的仓库，收集某个主题的所有有用的内容。这个网页整理了一个 awesome 仓库的清单。&lt;/p&gt;
&lt;h3 id=&#34;fuel-collectionhttpsappignitionroboticsorggoogleresearchfuelcollectionsgoogle-scanned-objects&#34;&gt;[Fuel Collection](&lt;a href=&#34;https://app.ignitionrobotics.org/GoogleResearch/fuel/collections/Google&#34;&gt;https://app.ignitionrobotics.org/GoogleResearch/fuel/collections/Google&lt;/a&gt; Scanned Objects)&lt;/h3&gt;
&lt;p&gt;谷歌对大量日常物品进行了 3D 扫描，将数据放在网上，提供公开下载。&lt;/p&gt;
&lt;h3 id=&#34;prime-curioshttpsprimesutmeducurios&#34;&gt;&lt;a href=&#34;https://primes.utm.edu/curios/&#34;&gt;Prime Curios!&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这个网站收集各种与质数相关的数字，比如 561 的平方加2和减2会得到两个连续的质数。&lt;/p&gt;
&lt;h3 id=&#34;顶级域名列表httpdataianaorgtldtlds-alpha-by-domaintxt&#34;&gt;&lt;a href=&#34;http://data.iana.org/TLD/tlds-alpha-by-domain.txt&#34;&gt;顶级域名列表&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;互联网号码分配局（IANA）官方的目前所有顶级域名（TLD）的列表，共有1508个。如果排除国家和地区的 TLD，则为1260个。&lt;/p&gt;
&lt;h3 id=&#34;如何写一个简单的-c-语言解释器httpsgithubcomlotaboutwrite-a-c-interpretertreemastertutorialen&#34;&gt;&lt;a href=&#34;https://github.com/lotabout/write-a-C-interpreter/tree/master/tutorial/en&#34;&gt;如何写一个简单的 C 语言解释器&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个英语教程，通过写一个简单的 C 语言解释器，理解编译原理。&lt;/p&gt;
&lt;h3 id=&#34;webrtc-示例仓库httpswebrtcgithubiosamples&#34;&gt;&lt;a href=&#34;https://webrtc.github.io/samples/&#34;&gt;WebRTC 示例仓库&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;WebRTC 是浏览器点对点通信的 API，这个仓库给出了各种使用示例，覆盖了主要的使用场景。&lt;/p&gt;
&lt;h3 id=&#34;黑河-腾冲线httpszhwikipediaorgwiki黑河-腾冲线&#34;&gt;&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E9%BB%91%E6%B2%B3-%E8%85%BE%E5%86%B2%E7%BA%BF&#34;&gt;黑河-腾冲线&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;中国地图上，从黑河到腾冲画一条线，这条线以东住着全国94%的人口。这是1935年由地理学家胡焕庸首次提出。&lt;/p&gt;
&lt;h3 id=&#34;内卷化是什么&#34;&gt;内卷化是什么？&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;“内卷化，指一种社会或文化模式在某一发展阶段达到一种确定的形式后，便停滞不前或无法转化为另一种高级模式的现象。”（&lt;a href=&#34;https://baike.baidu.com/item/%E5%86%85%E5%8D%B7%E5%8C%96&#34;&gt;百度百科&lt;/a&gt;）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;网上说，这个词是美国人首先提出的，英语单词是 involution，出自1960年的一本著作《农业内卷化——印度尼西亚的生态变化过程》（Agricultural Involution）。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://camo.githubusercontent.com/43670d57cc2dda62be2c511252673eb480023b1d/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323030392f6267323032303039313930342e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;Involution 是一个很罕见的英语单词，平时用得很少，小型词典都不收，维基百科甚至都没有加入“发展停滞”这个涵义，反而是中国人比较多用“内卷化”这个概念。&lt;/p&gt;
&lt;p&gt;虽然不熟悉 involution，但是我想起另外两个常用词：evolution（进化）和 revolution（革命）。它们共同的词根&lt;code&gt;volute&lt;/code&gt;，拉丁语原意是“滚动”。&lt;/p&gt;
&lt;p&gt;有了“滚动”这个词根，这些词的含义就比较清楚了。&lt;code&gt;evolution&lt;/code&gt;的前缀是&lt;code&gt;ex-&lt;/code&gt;（“向外的”），向外滚动就是进化；&lt;code&gt;revolution&lt;/code&gt;的前缀是&lt;code&gt;re-&lt;/code&gt;（“再次的”），再次滚动、颠覆现状就是革命；&lt;code&gt;involution&lt;/code&gt;的前缀是&lt;code&gt;in-&lt;/code&gt;（“向内的”），向内滚动当然就是内卷了。&lt;/p&gt;
&lt;p&gt;我现在对“内卷化”的理解是， &lt;strong&gt;当一个组织不能或不愿向外发展时，成员的精力就只好用到组织内部，这时就会出现“内卷化”，也就是内部的过度发展。&lt;/strong&gt; 举例来说，海上的一艘船，外卷化就是大家齐心协力划向对岸，内卷化就是大家心思不在划船，而放在内部的互相牵扯（组织建设、规章制度、人事安排等等）。&lt;/p&gt;
&lt;p&gt;一旦出现“内卷化”，对外的扩张和发展就停滞了。希望我们国家继续“外卷化”，不要出现“内卷化”。&lt;/p&gt;
&lt;h3 id=&#34;板书的直播方法httpsmothershipsg202009cd-zoom-hack-camera-teacher&#34;&gt;&lt;a href=&#34;https://mothership.sg/2020/09/cd-zoom-hack-camera-teacher/&#34;&gt;板书的直播方法&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;疫情期间，老师们都通过网络直播进行教学。但是，摄像头都是拍人脸，直播板书非常困难。美国一个老师想出了简单的解决方法，她在笔记本盖子上，用胶纸绑了一支铅笔，然后以铅笔作为支柱，放了一张 CD 碟片，当作反光的镜子。&lt;/p&gt;
&lt;p&gt;她把本子放在键盘上做笔记，内容就会通过 CD 碟片反射到摄像头，从而直播出去。&lt;/p&gt;
&lt;h3 id=&#34;a-picture-of-java-in-2020httpsblogjetbrainscomidea202009a-picture-of-java-in-2020&#34;&gt;&lt;a href=&#34;https://blog.jetbrains.com/idea/2020/09/a-picture-of-java-in-2020/&#34;&gt;A Picture of Java in 2020&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;IntelliJ IDEA 的最新调查发现，中国有51%的程序员使用 Java 语言，这个比例全球最高。由于 Java 主要是大中型企业在用，这是不是说明，中国的个人开发者和小企业程序员其实比例很小？&lt;/p&gt;
&lt;h3 id=&#34;vscode-如何调试可视化数据结构httpsaddyosmanicomblogvisualize-data-structures-vscode&#34;&gt;&lt;a href=&#34;https://addyosmani.com/blog/visualize-data-structures-vscode/&#34;&gt;VSCode 如何调试可视化数据结构&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;VSCode 有一个插件，可以用可视化的方式调试代码。本文介绍这个插件的用法。&lt;/p&gt;
&lt;h3 id=&#34;cs107e-树莓派arm-和操作系统httpscjtingme20200911cs107e-review&#34;&gt;&lt;a href=&#34;https://cjting.me/2020/09/11/cs107e-review/&#34;&gt;CS107e: 树莓派，ARM 和操作系统&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;CS107e 是斯坦福大学的一门计算机课程，内容关于硬件、底层和 C 语言 。这篇文章是作者的学习感受&lt;/p&gt;
&lt;h3 id=&#34;我如何使用-netlify-的-serverless-功能httpsttntmmeblogserverless-recipes-app-faunadb-vuejs&#34;&gt;&lt;a href=&#34;https://ttntm.me/blog/serverless-recipes-app-faunadb-vuejs/&#34;&gt;我如何使用 Netlify 的 Serverless 功能&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者介绍他如何开发一个没有后端服务器、只有前端静态网页的 Web 数据库应用。&lt;/p&gt;
&lt;h3 id=&#34;谷歌搜索的10个小技巧httpsmediumcomshalithasuranga10-hidden-features-in-google-search-83b347b48157&#34;&gt;&lt;a href=&#34;https://medium.com/@shalithasuranga/10-hidden-features-in-google-search-83b347b48157&#34;&gt;谷歌搜索的10个小技巧&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;谷歌搜索有很多小功能，比如搜索&lt;code&gt;stopwatch&lt;/code&gt;会出现一个倒计时器&lt;/p&gt;
&lt;h3 id=&#34;中国大周期httpsfinancesinacomcnchinagncj2020-09-21doc-iivhvpwy8038347shtml&#34;&gt;&lt;a href=&#34;https://finance.sina.com.cn/china/gncj/2020-09-21/doc-iivhvpwy8038347.shtml&#34;&gt;中国大周期&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;桥水基金创始人瑞·达利欧（Ray Dalio）的长文，以一个美国人的角度，谈了他对中国历史和经济政策的理解。这里是中文摘译版，也有&lt;a href=&#34;https://www.principles.com/the-changing-world-order/#chapter5&#34;&gt;英文原版&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&#34;github-仓库的默认分支不叫master了httpswwwjiqizhixincomarticles2020-09-21-10&#34;&gt;&lt;a href=&#34;https://www.jiqizhixin.com/articles/2020-09-21-10&#34;&gt;GitHub 仓库的默认分支不叫“master”了&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;从 2020 年 10 月 1 日开始，GitHub 所有新库的默认分支都将用中性词“main”命名，取代原来的“master”。&lt;/p&gt;
&lt;h3 id=&#34;javascript-原生的日期和时间格式化httpselijahmanorcomblogformat-js-dates-and-times&#34;&gt;&lt;a href=&#34;https://elijahmanor.com/blog/format-js-dates-and-times&#34;&gt;JavaScript 原生的日期和时间格式化&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;通常使用外部库处理 JavaScript 的时间格式，但是原生的&lt;code&gt;Date.prototype.toLocale*&lt;/code&gt;方法其实也能满足需求。&lt;/p&gt;
&lt;h3 id=&#34;如何使用-canvas-模拟对象碰撞httpsjoshbradleymeobject-collisions-with-canvas&#34;&gt;&lt;a href=&#34;https://joshbradley.me/object-collisions-with-canvas/&#34;&gt;如何使用 Canvas 模拟对象碰撞&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文从头教你在网页上，用 Canvas 做出对象不断碰撞的动画效果。&lt;/p&gt;
&lt;h3 id=&#34;instantpagehttpsinstantpage&#34;&gt;&lt;a href=&#34;https://instant.page/&#34;&gt;instant.page&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个 JavaScript 库，用户鼠标悬停在某个链接上方时，就自动加载该链接，从而加快页面跳转的速度。&lt;/p&gt;
&lt;h3 id=&#34;toonifyhttpstoonifyjustinpinkneycom&#34;&gt;&lt;a href=&#34;https://toonify.justinpinkney.com/&#34;&gt;Toonify&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个在线工具，可以将真人头像变成卡通头像。&lt;/p&gt;
&lt;h3 id=&#34;advanced-rest-clienthttpsinstalladvancedrestclientcominstall&#34;&gt;&lt;a href=&#34;https://install.advancedrestclient.com/install&#34;&gt;Advanced Rest Client&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个 Rest API 测试工具，基于 Electron 的跨平台桌面软件。&lt;/p&gt;
&lt;h3 id=&#34;kbhttpsgithubcomgnebbiakb&#34;&gt;&lt;a href=&#34;https://github.com/gnebbia/kb&#34;&gt;kb&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个极简的命令行笔记管理软件。&lt;/p&gt;
&lt;h3 id=&#34;kivyhttpsgithubcomkivykivy&#34;&gt;&lt;a href=&#34;https://github.com/kivy/kivy&#34;&gt;Kivy&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个 Python 的 UI 框架，可以打包成 Windows、Linux、MacOS、 Android 和 iOS 应用，特别为多点触摸设备而设计。&lt;/p&gt;
&lt;h3 id=&#34;openglcamera2httpsgithubcomgithubhaohaoopenglcamera2&#34;&gt;&lt;a href=&#34;https://github.com/githubhaohao/OpenGLCamera2&#34;&gt;OpenGLCamera2&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个安卓相机 App 的源码，使用 OpenGL ES 3.0 实现 30 种相机滤镜。&lt;/p&gt;
&lt;h3 id=&#34;twister-oshttpstwisteroscom&#34;&gt;&lt;a href=&#34;https://twisteros.com/&#34;&gt;Twister OS&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个树莓派的操作系统，可以让桌面变得像 MacOS 或 Windows。&lt;/p&gt;
&lt;h3 id=&#34;things-come-aparthttpswwwtoddmclellancomthingscomeapart&#34;&gt;&lt;a href=&#34;https://www.toddmclellan.com/thingscomeapart&#34;&gt;Things come apart&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个艺术项目，将各种东西拆开，零件放在一起，做成一张海报。&lt;/p&gt;
&lt;h3 id=&#34;一页-pythonhttpdamiantgordoncompythonmonday&#34;&gt;&lt;a href=&#34;http://damiantgordon.com/PythonMonday/&#34;&gt;一页 Python&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个英文的 Python 初学者教程，特点是每一讲的讲义都只有一页 A4 纸。&lt;/p&gt;
&lt;h3 id=&#34;吉布力动画图片httpwwwghiblijpinfo013344&#34;&gt;&lt;a href=&#34;http://www.ghibli.jp/info/013344/&#34;&gt;吉布力动画图片&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;吉布力工作室在官网上放出了8部影片的动画图片下载，一共400张。&lt;/p&gt;
&lt;h3 id=&#34;暴力破解密码所需的时间httpsdiggcom2020password-difficulty-hacking&#34;&gt;&lt;a href=&#34;https://digg.com/2020/password-difficulty-hacking&#34;&gt;暴力破解密码所需的时间&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;下表列出了暴力破解各种密码所需的时间。标题行的各栏依次为，纯数字密码、小写字母密码、字母密码、数字字母密码、数字字母符号密码。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://camo.githubusercontent.com/fe1b9b2328339ed865d9a29ef3f2111b1ef2a847/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323030392f6267323032303039313332322e6a7067&#34; alt=&#34;TIME&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;第一个魔方rubiks-cubehttpswwwnytimescom20200916bookserno-rubik-rubiks-cube-inventor-cubedhtml&#34;&gt;&lt;a href=&#34;https://www.nytimes.com/2020/09/16/books/erno-rubik-rubiks-cube-inventor-cubed.html&#34;&gt;第一个魔方Rubik&amp;rsquo;s cube&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;1974年，匈牙利建筑学教授 Erno Rubik，发明了魔方，当时他30岁。&lt;/p&gt;
&lt;p&gt;下图就是他的第一个魔方，是用木头做的。为了识别，有的方块缺了一个圆圈，有的方块贴了白纸，有的方块缺了一个角……&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://camo.githubusercontent.com/cf3ef5fb79a7815d464b2b6c4bbbde82c7aae026/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323030392f6267323032303039313731322e6a7067&#34; alt=&#34;Rubik&amp;rsquo;s cube&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;dufhttpsgithubcommuesliduf&#34;&gt;&lt;a href=&#34;https://github.com/muesli/duf&#34;&gt;duf&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;磁盘空间占用统计工具，支持 Linux 和 MacOS。&lt;/p&gt;
&lt;h3 id=&#34;别在网页上显示注册httpswwwgkogancoblogstop-asking-me-to-sign-up&#34;&gt;&lt;a href=&#34;https://www.gkogan.co/blog/stop-asking-me-to-sign-up/&#34;&gt;别在网页上显示“注册”&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;经过他的实验，只要将“注册”改成“开始使用”或“免费试用”，就能将转化率提高三倍。&lt;/p&gt;
&lt;h3 id=&#34;11-种-nodejs-orm-库的简介httpswwwprismaiodataguidedatabase-toolstop-nodejs-orms-query-builders-and-database-libraries-in-2020&#34;&gt;&lt;a href=&#34;https://www.prisma.io/dataguide/database-tools/top-nodejs-orms-query-builders-and-database-libraries-in-2020&#34;&gt;11 种 Node.js ORM 库的简介&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;RT&lt;/p&gt;
&lt;h3 id=&#34;如何通过new-function创建-async-函数httpsdavidwalshnameasync-function-class&#34;&gt;&lt;a href=&#34;https://davidwalsh.name/async-function-class&#34;&gt;如何通过&lt;code&gt;new Function&lt;/code&gt;创建 async 函数&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;JavaScript 语言允许通过&lt;code&gt;Funtion（）&lt;/code&gt;生成函数，async 函数能通过这种方式生成吗？&lt;/p&gt;
&lt;h3 id=&#34;intlrelativetimeformat相对时间格式化httpwwwdeathghostcnarticlejavascript53&#34;&gt;&lt;a href=&#34;http://www.deathghost.cn/article/javascript/53&#34;&gt;&lt;code&gt;Intl.RelativeTimeFormat()&lt;/code&gt;：相对时间格式化&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;有时需要显示相对时间，比如“5分钟前”、“2天前”等等。一般使用外部库来实现，其实浏览器原生的 Intl.RelativeTimeFormat API 就可以做到。&lt;/p&gt;
&lt;h3 id=&#34;如何写一个-nodejs-命令行程序获取-slack-的-oauth-授权httpthecodebarbariancomoauth-in-nodejs-cli-appshtml&#34;&gt;&lt;a href=&#34;http://thecodebarbarian.com/oauth-in-nodejs-cli-apps.html&#34;&gt;如何写一个 Node.js 命令行程序，获取 Slack 的 OAuth 授权？&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文是一个 OAuth 授权示例，演示如何用 Node.js 在命令行获得 Slack 的授权，从而可以操作 Slack 的 API。&lt;/p&gt;
&lt;h3 id=&#34;tableshttpstablesarea120googlecomu0about&#34;&gt;&lt;a href=&#34;https://tables.area120.google.com/u/0/about#/&#34;&gt;Tables&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;谷歌发布的新产品，主要用于项目管理。跟 Trello 有点类似。&lt;/p&gt;
&lt;h3 id=&#34;visxhttpsairbnbiovisx&#34;&gt;&lt;a href=&#34;https://airbnb.io/visx/&#34;&gt;visx&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Airbnb 推出的一套数据可视化组件库，基于 D3 和 React。&lt;/p&gt;
&lt;h3 id=&#34;releasehttpsgithubcomvercelrelease&#34;&gt;&lt;a href=&#34;https://github.com/vercel/release&#34;&gt;Release&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个 Node.js 库，一键生成软件包的 changelog。&lt;/p&gt;
&lt;h3 id=&#34;taskwarriorhttpstaskwarriororg&#34;&gt;&lt;a href=&#34;https://taskwarrior.org/&#34;&gt;Taskwarrior&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个命令行的待办事项（todo）管理软件，功能相当强。&lt;/p&gt;
&lt;h3 id=&#34;malware-bazaarhttpsbazaarabusech&#34;&gt;&lt;a href=&#34;https://bazaar.abuse.ch/&#34;&gt;Malware Bazaar&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;恶意软件数据库，提供恶意软件样本下载。&lt;/p&gt;
&lt;h3 id=&#34;currentlydowncomhttpcurrentlydowncom&#34;&gt;&lt;a href=&#34;http://currentlydown.com/&#34;&gt;CurrentlyDown.com&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;该网站可以查询，哪些服务现在正在宕机，以及宕机的历史记录。&lt;/p&gt;
&lt;h3 id=&#34;flexbox-defensehttpwwwflexboxdefensecom&#34;&gt;&lt;a href=&#34;http://www.flexboxdefense.com/&#34;&gt;Flexbox Defense&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个在线的塔防小游戏，通过 CSS Flexbox 的练习，击退一波波进攻的敌人。&lt;/p&gt;
&lt;h3 id=&#34;webrtc-教程httpswebrtcforthecuriouscom&#34;&gt;&lt;a href=&#34;https://webrtcforthecurious.com/&#34;&gt;WebRTC 教程&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一本英文的免费电子书，介绍 WebRTC 的基础知识。&lt;/p&gt;
&lt;h3 id=&#34;一天的毫秒数httpstwittercom3blue1brownstatus1282480577036251136&#34;&gt;&lt;a href=&#34;https://twitter.com/3blue1brown/status/1282480577036251136&#34;&gt;一天的毫秒数&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;下面计算式的结果，就是一天的毫秒数。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/9ae1f27ecfdfd15272e71e0023cc350bd56f2aa135355bb16e1106a3bdd31df8/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323030392f6267323032303039323231382e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/9ae1f27ecfdfd15272e71e0023cc350bd56f2aa135355bb16e1106a3bdd31df8/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323030392f6267323032303039323231382e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这个式子的来历如下。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/0b7a5717e64eb34a3b90f774cef67f4a8ece6e938651a2b802c3d800779f0613/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323030392f6267323032303039323231392e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/0b7a5717e64eb34a3b90f774cef67f4a8ece6e938651a2b802c3d800779f0613/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323030392f6267323032303039323231392e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;印度如何审查互联网httpiamkushmehow-india-censors-the-web&#34;&gt;&lt;a href=&#34;http://iamkush.me/how-india-censors-the-web/&#34;&gt;印度如何审查互联网&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一篇英语论文，研究印度政府如何对互联网进行审查。根据该文，一共有4379个网站在印度被限制访问。&lt;/p&gt;
&lt;h3 id=&#34;如何只对某些提交执行-github-actionshttpsryangjchandlercoukarticlesrunning-github-actions-for-certain-commit-messages&#34;&gt;&lt;a href=&#34;https://ryangjchandler.co.uk/articles/running-github-actions-for-certain-commit-messages&#34;&gt;如何只对某些提交执行 GitHub Actions&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个 GitHub Actions 的小技巧，根据 commit message，自动过滤某些提交，跳过持续构建。&lt;/p&gt;
&lt;h3 id=&#34;改变世界的一次代码提交httpshutusicomthe-greatest-git-commit&#34;&gt;&lt;a href=&#34;https://hutusi.com/the-greatest-git-commit&#34;&gt;改变世界的一次代码提交&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Linus 在假期十天时间完成了 Git 的首个版本，第一次提交仅有 848 行代码实现了 Git 的核心功能，本文通过分析这第一个 Git 提交来分析 Git 的设计及产品实现。&lt;/p&gt;
&lt;h3 id=&#34;大-o-和小-nhttpsadamzernerbearblogdevbig-o-little-n&#34;&gt;&lt;a href=&#34;https://adamzerner.bearblog.dev/big-o-little-n/&#34;&gt;大 O 和小 n&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者讨论了表示算法效率的大 O 表示法的含义，提出对于一般的应用，提高算法效率并不太重要，因为你的 n 根本不够大。&lt;/p&gt;
&lt;h3 id=&#34;只用-css-的-clamp-函数的响应式布局httpsdevtodip15739responsive-website-with-only-1-css-property-3ea9&#34;&gt;&lt;a href=&#34;https://dev.to/dip15739/responsive-website-with-only-1-css-property-3ea9&#34;&gt;只用 CSS 的 clamp() 函数的响应式布局&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;CSS 的 clamp() 函数已经可以用了，最新浏览器都支持了，只用这个函数就能实现响应式布局。如果元素的属性值有上限和下限，它比 min() 和 max() 都方便，语法是 &lt;code&gt;clamp(最小值, 属性值, 最大值)&lt;/code&gt; 。&lt;/p&gt;
&lt;h3 id=&#34;go-diagramshttpsgithubcomblushftgo-diagrams&#34;&gt;&lt;a href=&#34;https://github.com/blushft/go-diagrams&#34;&gt;Go-Diagrams&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个 Go 语言的图表生成软件。&lt;/p&gt;
&lt;h3 id=&#34;actionsflowhttpsgithubcomactionsflowactionsflow&#34;&gt;&lt;a href=&#34;https://github.com/actionsflow/actionsflow&#34;&gt;Actionsflow&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个 GitHub Actions 的模板库，用于对网上各种数据源，进行自动化组合操作，类似于 IFTTT。&lt;/p&gt;
&lt;h3 id=&#34;inferhttpsgithubcomfacebookinfer&#34;&gt;&lt;a href=&#34;https://github.com/facebook/infer&#34;&gt;Infer&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Facebook 推出的一个静态代码分析工具，可以分析 Java、C++、Objective-C、C 代码里面的错误。&lt;/p&gt;
&lt;h3 id=&#34;big_screenhttpsgithubcomturbowaybig_screen&#34;&gt;&lt;a href=&#34;https://github.com/TurboWay/big_screen&#34;&gt;big_screen&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;数据大屏生成工具，后端使用 flask。只要传一下数据，就可以制作出数据大屏，适合不了解前端的数据工作者。&lt;/p&gt;
&lt;h3 id=&#34;asmrionhttpsasmrioncom&#34;&gt;&lt;a href=&#34;https://asmrion.com/&#34;&gt;Asmrion&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个声效网站，用户点击不同图标（比如下雨、刮风、海边），就可以听到不同的声效作为背景音。&lt;/p&gt;
&lt;h3 id=&#34;ogdens-basic-englishhttpogdenbasic-englishorg&#34;&gt;&lt;a href=&#34;http://ogden.basic-english.org/&#34;&gt;OGDEN&amp;rsquo;s BASIC ENGLISH&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;根据研究，850 个最常用的英语单词，可以表达90%的英语概念。这些基本单词就称为“基础英语”。该网站收集基础英语的研究和学习资料&lt;/p&gt;
&lt;h3 id=&#34;静态网站的开源评论系统httpslisakovcomprojectsopen-source-comments&#34;&gt;&lt;a href=&#34;https://lisakov.com/projects/open-source-comments/&#34;&gt;静态网站的开源评论系统&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;该网站列出了各种静态网站的开源评论系统，并进行了比较&lt;/p&gt;
&lt;h3 id=&#34;金字塔之巅httpsmashablecom20170212visiting-the-pyramids&#34;&gt;&lt;a href=&#34;https://mashable.com/2017/02/12/visiting-the-pyramids/&#34;&gt;金字塔之巅&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;埃及最大的胡夫金字塔，现在已经不允许攀登了。但是，第二次世界大战之前，它是可以攀登的，事实上根本没人管。&lt;/p&gt;
&lt;p&gt;当时，攀登金字塔在埃及的欧洲人之中很流行，留下了很多照片。&lt;/p&gt;
&lt;h3 id=&#34;你并没有迟到httpskkorgthetechniumyou-are-not-late&#34;&gt;&lt;a href=&#34;https://kk.org/thetechnium/you-are-not-late/&#34;&gt;你并没有迟到&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者：凯文·凯利（原文写于2014年）&lt;/p&gt;
&lt;p&gt;想象一下，在1985年成为一名创业者，是多么棒的事情！你想要的几乎任何域名，都可以轻易获得。&lt;/p&gt;
&lt;p&gt;直到1994年，有人发现 mcdonalds.com 这个域名依然可以注册，在我们的鼓励下，他买下了，然后尝试将其转卖给麦当劳。麦当劳的人当时居然不知道互联网是什么。&lt;/p&gt;
&lt;p&gt;此前，我注意到 abc.com 这个域名也可以买下。当我去 ABC 电视网演讲时，就告诉高层管理人员，应该注册自己的域名。他们没听进去。&lt;/p&gt;
&lt;p&gt;那时，互联网是一个广阔的领域，在任何一个分类中都很容易成为第一名。消费者的期望值很小，而且进入障碍极低。现在一波又一波涌入的创业者推波助澜，扩大了每个战场。30年过去了，互联网已经令人感觉饱和、臃肿、塞满各种应用程序和平台服务，网上的内容足够让我们看上未来一百万年。即使你能设法完成另外一个微小的创新，挤进这个战场，谁又能注意到它呢？&lt;/p&gt;
&lt;p&gt;但是，互联网仍处于起步阶段。如果我们能爬进一台时光机，来到2044年，我们就会意识到，影响2044年的人们生活的最伟大产品都是在2014年之后才发明的，比如智能住宅、虚拟眼镜、AI 智能界面。那时的人们会说：“2014年？哦，那时的互联网还很低级。”&lt;/p&gt;
&lt;p&gt;他们是对的。因为从我们现在的角度来看，当前最伟大的互联网事物，都是1984年之后发明的。&lt;/p&gt;
&lt;p&gt;所以，这就是2044年的人会告诉你的另一件事：你能想象2014年成为一名企业家有多棒吗？这是一个开放的世界，你几乎可以选择任何分类，为其添加一些 AI，并将其放置在云中。现在的很多设备即使具有传感器，也只有一两个，消费者的期望和市场障碍都很低，成为分类市场的第一个很容易。2044年的人会叹息：“哦，要是我们那时意识到那么多机会有多好！”&lt;/p&gt;
&lt;p&gt;所以事实是，现在，就是今天，2014年依然是互联网创业的最佳时机。整个世界历史上，从来没有比现在更好的时机发明一些东西。你有更多的机会，更低的障碍，更高的收益/风险比，更好的回报，更大的上涨空间。现在，这一分钟就是将来人们回顾说：“哦，那是一个很好的时机！”&lt;/p&gt;
&lt;p&gt;过去30年创造了一个奇妙的起点，一个构建真正伟大事物的坚实平台。但是，最酷的东西还没有发明出来，尽管这种新的发明将不再与以前的发明相同。它不仅仅是“更好”，而是有所不同，有所超越。&lt;/p&gt;
&lt;p&gt;你可能没有意识到，今天我们确实刚刚开始进入一个广阔的领域。这是人类历史上开始创业的最佳时间。&lt;/p&gt;
&lt;p&gt;你并没有迟到。&lt;/p&gt;
&lt;h3 id=&#34;创业的凸函数和凹函数httpswwwindiehackerscompostbootstrapping-and-convexity-fb3b2da7c9&#34;&gt;&lt;a href=&#34;https://www.indiehackers.com/post/bootstrapping-and-convexity-fb3b2da7c9&#34;&gt;创业的凸函数和凹函数&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;好的创业是这个样子：外部环境有利时，你的收益会快速上升，并且上升空间是巨大的；外部环境不利时，你的亏损会缓慢累积，并且最大损失是有限的。这种曲线正是凸函数，如果反过来，你的创业是凹函数，那就完了：盈利有天花板，上升缓慢，亏损则可能无限地快速上升。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;身份云-authinghttpswwwauthingcn&#34;&gt;&lt;a href=&#34;https://www.authing.cn/&#34;&gt;身份云 Authing&lt;/a&gt;&lt;/h3&gt;
&lt;h3 id=&#34;unity-游戏开发的基本概念httpsblogeyassh202010unity-for-engineers-pt1-basic-concepts&#34;&gt;&lt;a href=&#34;https://blog.eyas.sh/2020/10/unity-for-engineers-pt1-basic-concepts/&#34;&gt;Unity 游戏开发的基本概念&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Basic Concepts in Unity for Software Engineers&lt;/p&gt;
&lt;h3 id=&#34;使用-css--marker-自定义列表符号httpswebdevcss-marker-pseudo-element&#34;&gt;&lt;a href=&#34;https://web.dev/css-marker-pseudo-element/&#34;&gt;使用 CSS &lt;code&gt;:: marker&lt;/code&gt; 自定义列表符号&lt;/a&gt;&lt;/h3&gt;
&lt;h3 id=&#34;忘记业余项目专注于工作httpsmanueldarcemontfrpostsfocus-on-jour-job&#34;&gt;&lt;a href=&#34;https://manuel.darcemont.fr/posts/focus-on-jour-job/&#34;&gt;忘记业余项目，专注于工作&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;不要漫无目的做业余项目，尤其不要喜欢什么就做什么，而要做那些跟你的工作有直接关系的业余项目。&lt;/p&gt;
&lt;h3 id=&#34;chrome-浏览器改变缓存机制httpsdevelopersgooglecomwebupdates202010http-cache-partitioning&#34;&gt;&lt;a href=&#34;https://developers.google.com/web/updates/2020/10/http-cache-partitioning&#34;&gt;Chrome 浏览器改变缓存机制&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;用户访问网页以后，浏览器会缓存静态资源。用户再次访问时，就会加快显示速度。但是，这种机制可以用来追踪用户，脚本通过识别缓存，了解用户访问过哪个网站。&lt;/p&gt;
&lt;p&gt;Chrome 86 启用了新的缓存防追踪机制，具体来说，就是为缓存加上数字密钥，使得第三方脚本无法加载缓存，也就是说，禁止使用其他网站留下的缓存。&lt;/p&gt;
&lt;h3 id=&#34;javascript-代码库的共享-cdn-不是一个好主意httpsshksprmobiblog202010please-stop-using-cdns-for-external-javascript-libraries&#34;&gt;&lt;a href=&#34;https://shkspr.mobi/blog/2020/10/please-stop-using-cdns-for-external-javascript-libraries/&#34;&gt;JavaScript 代码库的共享 CDN 不是一个好主意&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;有一些 CDN 专供 JS 脚本使用，本文认为脚本共享类的 CDN 并不可取。最有说服力的一条理由大概是，由于 Chrome 86 开始禁止使用其他网站留下的缓存，这类 CDN 的最大好处就消失了：不同网站的脚本使用同一个 CDN，并不会令加载变快&lt;/p&gt;
&lt;h3 id=&#34;如何写一个最简单的-react-实现httpszsergecompostsworst-react-ever&#34;&gt;&lt;a href=&#34;https://zserge.com/posts/worst-react-ever/&#34;&gt;如何写一个最简单的 React 实现&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者讲解如何自己实现一个最简单的 React，支持 JSX 语法和一些基本 API，压缩后代码不超过 1KB。本文可以用来了解 React 原理。&lt;/p&gt;
&lt;h3 id=&#34;github-的中国乱象httpswwwpingwestcoma177413&#34;&gt;&lt;a href=&#34;https://www.pingwest.com/a/177413&#34;&gt;GitHub 的中国乱象&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;很多中国程序员正在滥用 GitHub，比如有人买 Star 登上 GitHub Trends 排行榜。&lt;/p&gt;
&lt;h3 id=&#34;playwright-pythonhttpsgithubcommicrosoftplaywright-python&#34;&gt;&lt;a href=&#34;https://github.com/microsoft/playwright-python&#34;&gt;playwright-python&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;微软推出的浏览器自动化工具，特点是浏览器的控制脚本用 Python 来写。&lt;/p&gt;
&lt;h3 id=&#34;diagram-makerhttpsgithubcomawslabsdiagram-maker&#34;&gt;&lt;a href=&#34;https://github.com/awslabs/diagram-maker&#34;&gt;Diagram Maker&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;亚马逊推出的开源流程图制作工具。&lt;/p&gt;
&lt;h3 id=&#34;framehttpsframevrio&#34;&gt;&lt;a href=&#34;https://framevr.io/&#34;&gt;Frame&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这个网站很新奇，用户在 VR 空间“面对面”开虚拟会议。如果没有 VR 头盔，裸眼也可以使用。&lt;/p&gt;
&lt;h3 id=&#34;optimizthttpsgithubcomfunboxoptimizt&#34;&gt;&lt;a href=&#34;https://github.com/funbox/optimizt&#34;&gt;optimizt&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个命令行图片压缩工具，支持压缩 PNG、JPEG、GIF 和 SVG 格式，并可以选择输出 WebP 格式。&lt;/p&gt;
&lt;h3 id=&#34;calligrapheraihttpswwwcalligrapherai&#34;&gt;&lt;a href=&#34;https://www.calligrapher.ai/&#34;&gt;Calligrapher.ai&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个在线工具，可以将英文输入变成手写体，并具有动画效果，提供 SVG 格式下载。&lt;/p&gt;
&lt;h3 id=&#34;css-3d-示例httpspolypaneappcss-3d-transform-examples&#34;&gt;&lt;a href=&#34;https://polypane.app/css-3d-transform-examples/&#34;&gt;CSS 3D 示例&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;该网页收集一些常用 CSS 3D 示例。&lt;/p&gt;
&lt;h3 id=&#34;漫游者的压缩知识指南httpsgo-compressiongithubio&#34;&gt;&lt;a href=&#34;https://go-compression.github.io/&#34;&gt;漫游者的压缩知识指南&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个面向初学者的英文的简单教程，介绍数据压缩知识，了解压缩算法。&lt;/p&gt;
&lt;h3 id=&#34;宇宙模型httpstarschromeexperimentscom&#34;&gt;&lt;a href=&#34;http://stars.chromeexperiments.com/&#34;&gt;宇宙模型&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个浏览器的 3D 显示实验项目，在网页上展示10万颗恒星，讲解宇宙知识。&lt;/p&gt;
&lt;h3 id=&#34;namesiohttpsgithubcomdebdutnamesio&#34;&gt;&lt;a href=&#34;https://github.com/Debdut/names.io&#34;&gt;names.io&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这个仓库通过各种数据库，收集所有出现过的英语人名（包括外国人的英文译名），分成姓和名两个文件。&lt;/p&gt;
&lt;h3 id=&#34;现代陶瓷窑厂httpswwwarchdailycncn918363jing-de-zhen-bing-ding-chai-yao-zhang-lei-lian-he-jian-zhu-shi-wu-suo&#34;&gt;&lt;a href=&#34;https://www.archdaily.cn/cn/918363/jing-de-zhen-bing-ding-chai-yao-zhang-lei-lian-he-jian-zhu-shi-wu-suo&#34;&gt;现代陶瓷窑厂&lt;/a&gt;&lt;/h3&gt;
&lt;h3 id=&#34;海拔7000米的天空颜色httpswwwdcfevercomnewsreadnewsphpid28338&#34;&gt;&lt;a href=&#34;https://www.dcfever.com/news/readnews.php?id=28338&#34;&gt;海拔7000米的天空颜色&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;蓝-》黑&lt;/p&gt;
&lt;h3 id=&#34;工作风险和职业风险httpseriktorenbergsubstackcompstarting-a-company-is-less-risky&#34;&gt;&lt;a href=&#34;https://eriktorenberg.substack.com/p/starting-a-company-is-less-risky&#34;&gt;工作风险和职业风险&lt;/a&gt;&lt;/h3&gt;
&lt;h3 id=&#34;普济路桥改建httpwwwlandscapecnlandscape11218html&#34;&gt;&lt;a href=&#34;http://www.landscape.cn/landscape/11218.html&#34;&gt;普济路桥改建&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;最近，上海的一家建筑事务所（&lt;a href=&#34;https://100architects.com/about-us/&#34;&gt;100architects佰筑&lt;/a&gt; ）提出一个改建方案，将这座桥改建成多功能高架公园，灰色的沥青被大胆活泼的颜色替代，通过颜色勾勒出不同的动线。（凌波桥 High Loop）&lt;/p&gt;
&lt;h3 id=&#34;去抖和节流的示例解释httpscss-trickscomdebouncing-throttling-explained-examples&#34;&gt;&lt;a href=&#34;https://css-tricks.com/debouncing-throttling-explained-examples/&#34;&gt;去抖和节流的示例解释&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;去抖（debounce）和节流（throttle）是网页脚本经常用到的方法，本文通过示例解释它们的差异，不涉及实现。举例来说，用户下拉到网页底部，触发无限加载，就不应该使用&lt;code&gt;debounce()&lt;/code&gt;，而要使用&lt;code&gt;throttle()&lt;/code&gt;。&lt;/p&gt;
&lt;h3 id=&#34;dockerfile-安全最佳实践httpscloudberryengineeringarticledockerfile-security-best-practices&#34;&gt;&lt;a href=&#34;https://cloudberry.engineering/article/dockerfile-security-best-practices/&#34;&gt;Dockerfile 安全最佳实践&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文介绍编写 Dockerfile 文件时，有哪些安全注意点。&lt;/p&gt;
&lt;h3 id=&#34;哪些编程语言最省电httpsthenewstackiowhich-programming-languages-use-the-least-electricity&#34;&gt;&lt;a href=&#34;https://thenewstack.io/which-programming-languages-use-the-least-electricity/&#34;&gt;哪些编程语言最省电？&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个葡萄牙团队比较了27种编程语言的耗电情况。&lt;/p&gt;
&lt;h3 id=&#34;svelte-和-react-的比较httpswwwswyxiosvelte-sites-react-apps&#34;&gt;&lt;a href=&#34;https://www.swyx.io/svelte-sites-react-apps/&#34;&gt;Svelte 和 React 的比较&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者对 Svelte 和 React 这两个前端框架都非常喜欢，谈了它们不同的特点和适用场景。&lt;/p&gt;
&lt;h3 id=&#34;freepnhttpswwwfreepnorg&#34;&gt;&lt;a href=&#34;https://www.freepn.org/&#34;&gt;FreePN&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个点对点的 VPN 网络，通过用户共享带宽实现加密访问。&lt;/p&gt;
&lt;h3 id=&#34;sciterjshttpsgithubcomc-smilesciter-js-sdk&#34;&gt;&lt;a href=&#34;https://github.com/c-smile/sciter-js-sdk&#34;&gt;SciterJS&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;使用 HTML/CSS/JS 技术构建跨平台的桌面应用，类似于 Electron 的作用，但是它自己实现内核，比 Eletron 更简单，打包出来的程序也更小。详细介绍看&lt;a href=&#34;https://www.kickstarter.com/projects/c-smile/open-source-sciter-engine&#34;&gt;这里&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&#34;kakacsshttpsrenzhezhilugiteeiokakacss&#34;&gt;&lt;a href=&#34;https://renzhezhilu.gitee.io/kakacss/&#34;&gt;KakaCSS&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;在任意网站复制内容，粘贴到这个网站，会给出所复制内容的 CSS 样式代码。&lt;/p&gt;
&lt;h3 id=&#34;telegram-订阅httpsarticliuscomhomesubscribetotelegramchannelnewsletter&#34;&gt;&lt;a href=&#34;https://articlius.com/home/SubscribeToTelegramChannelNewsletter&#34;&gt;Telegram 订阅&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;邮件订阅 Telegram 频道。&lt;/p&gt;
&lt;h3 id=&#34;anytxt-searcherhttpsanytxtnet&#34;&gt;&lt;a href=&#34;https://anytxt.net/&#34;&gt;AnyTXT Searcher&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Windows 桌面软件，提供文本文件的全文搜索。&lt;/p&gt;
&lt;h3 id=&#34;a-list-of-post-mortemshttpsgithubcomdanluupost-mortems&#34;&gt;&lt;a href=&#34;https://github.com/danluu/post-mortems&#34;&gt;A List of Post-mortems&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这个仓库收集各大互联网公司网络事故的事后分析报告。&lt;/p&gt;
&lt;h3 id=&#34;coded-mailshttpscodedmailscom&#34;&gt;&lt;a href=&#34;https://codedmails.com/&#34;&gt;Coded Mails&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/302d6b43999ca55d1b82ad732d3b4f5d5b0a5297bf3f000caa7073722f3f9804/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031302f6267323032303130313330322e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/302d6b43999ca55d1b82ad732d3b4f5d5b0a5297bf3f000caa7073722f3f9804/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031302f6267323032303130313330322e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;电子邮件的 HTML 模版很难写，因为客户端有着各种限制。该网站提供各种主题的响应式电子邮件模版下载。&lt;/p&gt;
&lt;h3 id=&#34;musicnethttpshomescswashingtoneduthickstnmusicnethtml&#34;&gt;&lt;a href=&#34;https://homes.cs.washington.edu/~thickstn/musicnet.html&#34;&gt;Musicnet&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/8e87a0667c41c86fd05f596234465020ddcb04fd8fab54605ec44ccfdfce928e/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031302f6267323032303130313630312e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/8e87a0667c41c86fd05f596234465020ddcb04fd8fab54605ec44ccfdfce928e/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031302f6267323032303130313630312e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;一个古典音乐的数据集，包括超过一百万个标签，指明每首曲子的每个音符出现的准确时间和位置，以及演奏该音符的乐器，主要用于 AI 的数据训练。&lt;/p&gt;
&lt;h3 id=&#34;数据工程师学习资料httpsawesomedataengineeringcom&#34;&gt;&lt;a href=&#34;https://awesomedataengineering.com/&#34;&gt;数据工程师学习资料&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个英文网站，按照学习次序，列出各种主题最推荐的学习资料。&lt;/p&gt;
&lt;h3 id=&#34;unix-分时操作系统httpschsasankgithubioclassic_papersunix-time-sharing-systemhtml&#34;&gt;&lt;a href=&#34;https://chsasank.github.io/classic_papers/unix-time-sharing-system.html&#34;&gt;Unix 分时操作系统&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这是丹尼斯·里奇和汤普森1974年向世界介绍 Unix 操作系统的经典论文，至今仍然是了解 Unix 的最佳入门材料。&lt;/p&gt;
&lt;h3 id=&#34;python-的-eval-函数很危险httpsnedbatcheldercomblog201206eval_really_is_dangeroushtml&#34;&gt;&lt;a href=&#34;https://nedbatchelder.com/blog/201206/eval_really_is_dangerous.html&#34;&gt;Python 的 &lt;code&gt;eval()&lt;/code&gt; 函数很危险&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文解释为什么 Python 语言的 &lt;code&gt;eval()&lt;/code&gt;函数是一个危险的操作，不能用于不信任的数据。&lt;/p&gt;
&lt;h3 id=&#34;react-ref-详解httpswwwrobinwieruchdereact-ref&#34;&gt;&lt;a href=&#34;https://www.robinwieruch.de/react-ref&#34;&gt;React Ref 详解&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一篇写得很好的 React 教程，解释了&lt;code&gt;useRef()&lt;/code&gt;钩子和&lt;code&gt;ref&lt;/code&gt;属性的用法。&lt;/p&gt;
&lt;h3 id=&#34;为什么-lisp-语法非常合理httpsstopaiopost265&#34;&gt;&lt;a href=&#34;https://stopa.io/post/265&#34;&gt;为什么 Lisp 语法非常合理？&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者为了解释 Lisp 语法的有效性，举了一个例子，使用 JavaScript 语言进行远程函数调用，结果最合理高效的方式就是让数据采用 Lisp 的语法。&lt;/p&gt;
&lt;h3 id=&#34;consolechatiohttpswwwconsolechatio&#34;&gt;&lt;a href=&#34;https://www.consolechat.io/&#34;&gt;ConsoleChat.io&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个在浏览器控制台进行聊天的工具库。&lt;/p&gt;
&lt;h3 id=&#34;svg-favicon-makerhttpsformitocomtoolsfavicon&#34;&gt;&lt;a href=&#34;https://formito.com/tools/favicon&#34;&gt;SVG Favicon Maker&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个在线工具，制作 SVG 格式的 Favicon。&lt;/p&gt;
&lt;h3 id=&#34;react-chronohttpsgithubcomprabhuignotoreact-chrono&#34;&gt;&lt;a href=&#34;https://github.com/prabhuignoto/react-chrono&#34;&gt;react-chrono&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;React 的时间轴组件。&lt;/p&gt;
&lt;h3 id=&#34;masonryhttpsmasonrydesandrocom&#34;&gt;&lt;a href=&#34;https://masonry.desandro.com/&#34;&gt;Masonry&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;网页瀑布流的布局库。&lt;/p&gt;
&lt;h3 id=&#34;glowhttpsgithubcomcharmbraceletglow&#34;&gt;&lt;a href=&#34;https://github.com/charmbracelet/glow&#34;&gt;Glow&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个命令行的 Markdown 阅读工具。&lt;/p&gt;
&lt;h3 id=&#34;vdxhttpsgithubcomyuanqingvdx&#34;&gt;&lt;a href=&#34;https://github.com/yuanqing/vdx&#34;&gt;vdx&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个命令行的视频处理工具，属于 FFmpeg 的包装库，提供简单易用的语法格式。&lt;/p&gt;
&lt;h3 id=&#34;diodehttpssupportdiodeioarticless32engxlq&#34;&gt;&lt;a href=&#34;https://support.diode.io/article/ss32engxlq&#34;&gt;Diode&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Diode 可以将本机（localhost）的网站公开到互联网上，提供一个二级域名，使得外部用户可以访问。&lt;/p&gt;
&lt;h3 id=&#34;running-pagehttpsgithubcomyihong0618running_page&#34;&gt;&lt;a href=&#34;https://github.com/yihong0618/running_page&#34;&gt;Running page&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/48c5cb6cb9627b7bc79923233aa13c6a67d617e71b1c653005e25d77b1dc3dc0/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031302f6267323032303130323730382e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/48c5cb6cb9627b7bc79923233aa13c6a67d617e71b1c653005e25d77b1dc3dc0/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031302f6267323032303130323730382e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;国产的跑步数据管理软件，可以备份 Nike、Runtastic（Adidas Run）、佳明的 gpx 跑步数据，生成个人的跑步主页。&lt;/p&gt;
&lt;h3 id=&#34;the-old-nethttptheoldnetcom&#34;&gt;&lt;a href=&#34;http://theoldnet.com/&#34;&gt;The Old Net&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/d2e1b6d4f235a961e41ce500d829e5b4e08fd1d25875734a3a0f0ab3d186adf3/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031302f6267323032303130313830312e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/d2e1b6d4f235a961e41ce500d829e5b4e08fd1d25875734a3a0f0ab3d186adf3/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031302f6267323032303130313830312e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这个网站复原了2000年以前的网站访问体验。&lt;/p&gt;
&lt;h3 id=&#34;人工智能编程的-lisp-范例httpsgithubcomnorvigpaip-lispparadigms-of-artificial-intelligence-programming&#34;&gt;&lt;a href=&#34;https://github.com/norvig/paip-lisp&#34;&gt;《人工智能编程的 LISP 范例》&lt;/a&gt;（Paradigms of Artificial Intelligence Programming）&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/ca784945e90a2c709d0abb493b929252cd2d0503a7318ee0739cea5c6fcb7672/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031302f6267323032303130313830352e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/ca784945e90a2c709d0abb493b929252cd2d0503a7318ee0739cea5c6fcb7672/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031302f6267323032303130313830352e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;一本很好的英文教科书，解释人工智能编程原理。作者是谷歌公司著名的科学家 Peter Norvig。&lt;/p&gt;
&lt;h3 id=&#34;sharklehttpssharklecom&#34;&gt;&lt;a href=&#34;https://sharkle.com/&#34;&gt;Sharkle&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/3e8b2c57d3a2a981315d463c43ff8ec3c9b4b2799aea5a32f5190fa0d3345ce4/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031302f6267323032303130313830362e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/3e8b2c57d3a2a981315d463c43ff8ec3c9b4b2799aea5a32f5190fa0d3345ce4/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031302f6267323032303130313830362e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;点击网页上的按钮，它会随机打开一个有趣的网站。&lt;/p&gt;
&lt;h3 id=&#34;deepworkfmhttpsdeepworkfm&#34;&gt;&lt;a href=&#34;https://deepwork.fm/&#34;&gt;Deepwork.fm&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/5f0d660b7d01f18084e9dc2554e07ea9ce6855507ae24fca22c3709b568a4a78/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031302f6267323032303130313830372e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/5f0d660b7d01f18084e9dc2554e07ea9ce6855507ae24fca22c3709b568a4a78/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031302f6267323032303130313830372e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;一个在线电台，播放适合工作时收听的音乐，提供几个不同风格的频道，比如平静的音乐或有节奏感的音乐。&lt;/p&gt;
&lt;h3 id=&#34;数据保护指南httpsssdefforgen&#34;&gt;&lt;a href=&#34;https://ssd.eff.org/en&#34;&gt;数据保护指南&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/7d6360845e269f2913b6171890798b8d12faa595e4817000951204106deb47e5/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031302f6267323032303130323530312e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/7d6360845e269f2913b6171890798b8d12faa595e4817000951204106deb47e5/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031302f6267323032303130323530312e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这个英文网站提供了一个计算机数据保护的指南，有各种工具的详细用法介绍，比如&lt;a href=&#34;https://ssd.eff.org/en/module/how-delete-your-data-securely-windows&#34;&gt;如何在 Windows 删除数据&lt;/a&gt;，&lt;a href=&#34;https://ssd.eff.org/en/module/how-use-keepassxc&#34;&gt;如何使用密码管理器&lt;/a&gt;等等。&lt;/p&gt;
&lt;h3 id=&#34;俄罗斯的充气部队httpswwwodditycentralcomnewsrussias-inflatable-army-a-tool-of-deceptionhtml&#34;&gt;&lt;a href=&#34;https://www.odditycentral.com/news/russias-inflatable-army-a-tool-of-deception.html&#34;&gt;俄罗斯的充气部队&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;西方媒体揭露，俄罗斯经常使用充气道具冒充部队。这不仅可以欺骗敌人的侦查兵，而且对付卫星照片极为有效。&lt;/p&gt;
&lt;h3 id=&#34;最早的错觉图片httpsenwikipediaorgwikirabbitduck_illusion&#34;&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Rabbit%E2%80%93duck_illusion&#34;&gt;最早的错觉图片&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;已知历史上最早的视觉错觉图片，发表在1892年10月23日的一本德国幽默杂志上，要求读者分辨下面的图片更像鸭子，还是更像兔子。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/5529d559ff3a23a53db6b909974e1795b6d6b6410b1c17da85aa498d119e57ff/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031302f6267323032303130323530322e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/5529d559ff3a23a53db6b909974e1795b6d6b6410b1c17da85aa498d119e57ff/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031302f6267323032303130323530322e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;doggerlandhttpsenwikipediaorgwikidoggerland&#34;&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Doggerland&#34;&gt;Doggerland&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;英国现在是一个海岛，但以前与欧洲大陆是相连的，相连的部分被称为 Doggerland。&lt;/p&gt;
&lt;p&gt;公元前6000年海平面上升，这个地区开始沉入海底，使得英国脱离了欧洲大陆。下图的红色圆圈部分就是 Doggerland 的位置，在英格兰东海岸与荷兰之间。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/0dc193f2f49bc3d0e0031c36f86df8676ea80fcdee8b07bdeace62ef027cc65b/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031302f6267323032303130323730332e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/0dc193f2f49bc3d0e0031c36f86df8676ea80fcdee8b07bdeace62ef027cc65b/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031302f6267323032303130323730332e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;给印度年轻人的一封公开信httpstimesofindiaindiatimescomblogsthe-underage-optimistthe-4gotten-generation-an-open-letter-to-indias-youth-get-off-that-smartphone-it-can-destroy-you&#34;&gt;&lt;a href=&#34;https://timesofindia.indiatimes.com/blogs/The-underage-optimist/the-4gotten-generation-an-open-letter-to-indias-youth-get-off-that-smartphone-it-can-destroy-you/&#34;&gt;给印度年轻人的一封公开信&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;印度年轻人的失业率极高，约30％。与此同时，这些年轻人在 Facebook 和 Instagram 上花费了大量时间，印度人在 Facebook 和 Instagram 花费的时间在所有国家/地区排名第一。印度互联网广告业的收入却极低，广告主根本找不到对这些人有价值的广告，他们没有购买力。&lt;/p&gt;
&lt;p&gt;最近，印度最著名的作家之一的&lt;a href=&#34;https://en.wikipedia.org/wiki/Chetan_Bhagat&#34;&gt;切坦·巴加特&lt;/a&gt;（Chetan Bhagat）在《印度时报》上发表了这封公开信，呼吁印度年轻人不要沉溺于手机。&lt;/p&gt;
&lt;h3 id=&#34;郑州新区污水处理厂&#34;&gt;郑州新区污水处理厂&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/f17743d0c41eb982347268c6b533c5fc90bac9efd0b6a2f35bea4ac8641bff24/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031312f6267323032303131303431352e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/f17743d0c41eb982347268c6b533c5fc90bac9efd0b6a2f35bea4ac8641bff24/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031312f6267323032303131303431352e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;郑州新区污水处理厂曾获2019年国家优质工程奖，一个个污水处理池被绿化围绕。（via &lt;a href=&#34;https://www.instagram.com/p/CHKdcpTLzNk/&#34;&gt;instagram&lt;/a&gt;）&lt;/p&gt;
&lt;h3 id=&#34;足球直播的故障httpswwwiflsciencecomtechnologyai-camera-ruins-soccar-game-for-fans-after-mistaking-referees-bald-head-for-ball&#34;&gt;&lt;a href=&#34;https://www.iflscience.com/technology/ai-camera-ruins-soccar-game-for-fans-after-mistaking-referees-bald-head-for-ball/&#34;&gt;足球直播的故障&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/882e21615505580fd39c7b84b2aa4458c9317c9fd6ff3908364a0c91934213b1/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031302f6267323032303130333130322e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/882e21615505580fd39c7b84b2aa4458c9317c9fd6ff3908364a0c91934213b1/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031302f6267323032303130333130322e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;10月25日，苏格兰足球联赛出现了一个令人啼笑皆非的直播事故。赛前，俱乐部宣布，本场比赛将采用 AI 摄像头替代人工摄像师，摄像头会自动识别足球，始终追踪球的运动。&lt;/p&gt;
&lt;p&gt;意想不到的是，本场比赛的边裁是一个光头裁判，AI 摄像头分不清光头与足球，很多时候将光头误认为是足球，镜头跟着边裁。观众们纷纷抱怨错过了进球，只看见边判跑来跑去，要求俱乐部赶快为边裁提供一个假发或帽子。&lt;/p&gt;
&lt;h3 id=&#34;谷歌-app-的新图标httpstwittercomdanidonovanstatus1322356167063031814&#34;&gt;&lt;a href=&#34;https://twitter.com/danidonovan/status/1322356167063031814&#34;&gt;谷歌 App 的新图标&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;2020&lt;/p&gt;
&lt;h3 id=&#34;树莓派-pchttpswwwraspberrypiorgproductsraspberry-pi-400&#34;&gt;&lt;a href=&#34;https://www.raspberrypi.org/products/raspberry-pi-400/&#34;&gt;树莓派 PC&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;树莓派官方发布桌面 PC，代号为 Raspberry Pi 400。最大特色就是，整台电脑集成在键盘里面，按键下面就是一块树莓派4代的专用板，出门只要带这个键盘就够了。电源可以用手机充电器，硬盘是 SD 卡，内存是 4GB，有无线网卡，支持 HDMI 输出和 4K 视频播放。&lt;/p&gt;
&lt;p&gt;这个主机售价是70美元，套件售价是100美元。我感觉这个设备会改变 PC 市场的生态，上网、办公、视频会议，它完全够用，尤其适合教育用途。对于大众市场来说，唯一的麻烦是它的 CPU 是 ARM 架构，只能使用 Linux 系统，装不了 Windows。不过，也许以后 MacOS 可以装在上面。&lt;/p&gt;
&lt;h3 id=&#34;ubuntu-touch-九周年httpsitsfosscomubuntu-touch&#34;&gt;&lt;a href=&#34;https://itsfoss.com/ubuntu-touch/&#34;&gt;Ubuntu Touch 九周年&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;九年前的2011年10月31日，Ubuntu 宣布专用于手机的 Linux 系统 ，叫做 Ubuntu Touch。这个系统的实际发布是在2013年，然后2017年官方宣布放弃该项目。只有两家厂商发售过两款该系统的手机，其中一款就是魅族的 Meizu Pro 5（Ubuntu Touch 版，上图），但是这个版本只针对海外市场，国内没有销售。&lt;/p&gt;
&lt;p&gt;由于手机硬件基本上专用的，不是兼容的，而且硬件厂商不开源驱动，这导致 Linux 手机很难成功，性能和功能都无法跟专有系统竞争。目前还活着的 Linux 手机项目，主要有两个：PinePhone 和 Purism Librem 5。&lt;/p&gt;
&lt;h3 id=&#34;使用-scriptable-app-开发-iphone-小组件httpsgithubcomdreamapplehappyblogtreemaster20201024&#34;&gt;&lt;a href=&#34;https://github.com/dreamapplehappy/blog/tree/master/2020/10/24&#34;&gt;使用 Scriptable App 开发 iPhone 小组件&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;iOS 14 升级了小组件功能，有一个 Scriptable App 可以使用 JavaScript语言为 iPhone 创建各种小组件。&lt;/p&gt;
&lt;h3 id=&#34;grpc-api-是什么httpswwwprogrammablewebcomnewswhat-grpc-api-and-how-does-it-workanalysis20201008&#34;&gt;&lt;a href=&#34;https://www.programmableweb.com/news/what-grpc-api-and-how-does-it-work/analysis/2020/10/08&#34;&gt;gRPC API 是什么？&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/05e412a0332305473e38f7b90c25d9128d5c5d7958ad761beee6002063ed5b61/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031302f6267323032303130313630322e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/05e412a0332305473e38f7b90c25d9128d5c5d7958ad761beee6002063ed5b61/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031302f6267323032303130313630322e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;gRPC 是远程调用计算机服务的一种方式，所有数据以二进制传送，所以效率极高。&lt;/p&gt;
&lt;h3 id=&#34;奇妙的-189httpwww2mathouedudmcculloughteachingmiscellaneaminerhtml&#34;&gt;&lt;a href=&#34;http://www2.math.ou.edu/~dmccullough/teaching/miscellanea/miner.html&#34;&gt;奇妙的 1/89&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/9749928d5612f664bf35739a9c030e17ab914c4b9dcf223b295c55df1a11e762/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031302f6267323032303130333130332e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/9749928d5612f664bf35739a9c030e17ab914c4b9dcf223b295c55df1a11e762/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031302f6267323032303130333130332e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这篇文章介绍 1/89 这个分数（.01123595505&amp;hellip;）与斐波那契数列的奇妙关系。&lt;/p&gt;
&lt;h3 id=&#34;c-代码里面的网址httpssusaminblogurls-in-c&#34;&gt;&lt;a href=&#34;https://susam.in/blog/urls-in-c/&#34;&gt;C 代码里面的网址&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;C 代码里面加一行，直接写一个网址，并不会报错，代码还是能够运行。这篇文章解释了为什么。&lt;/p&gt;
&lt;h3 id=&#34;三个可以替代-npm-的软件httpsblogbitsrcionpm-clients-that-are-better-than-the-original-cd54ed0f5fe7&#34;&gt;&lt;a href=&#34;https://blog.bitsrc.io/npm-clients-that-are-better-than-the-original-cd54ed0f5fe7&#34;&gt;三个可以替代 npm 的软件&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;npm 是 Node.js 的包管理工具，存在一些令人诟病的地方，主要是 node_modules 目录太庞大。本文介绍三个可以替代 npm 的工具软件。&lt;/p&gt;
&lt;h3 id=&#34;youtubehttpsgithubcomkkdaiyoutube&#34;&gt;&lt;a href=&#34;https://github.com/kkdai/youtube&#34;&gt;youtube&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个 Go 语言写的 Youtube 视频下载工具，youtube-dl 的替代品。&lt;/p&gt;
&lt;h3 id=&#34;hoppscotchhttpsgithubcomhoppscotchhoppscotch&#34;&gt;&lt;a href=&#34;https://github.com/hoppscotch/hoppscotch&#34;&gt;hoppscotch&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/bc7e0ac74ff0429c20f50a33b0354c9e22785bb2ed1692f4aa583c21b938c762/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031302f6267323032303130323830312e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/bc7e0ac74ff0429c20f50a33b0354c9e22785bb2ed1692f4aa583c21b938c762/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031302f6267323032303130323830312e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;一个开源的 Postman 替代品，调试 HTTP 请求的在线工具。&lt;/p&gt;
&lt;h3 id=&#34;draw-on-pdfhttpswwwgoodannotationscomtoolsdraw-on-pdf&#34;&gt;&lt;a href=&#34;https://www.goodannotations.com/tools/draw-on-pdf&#34;&gt;Draw On PDF&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个在 PDF 文件上作图的在线工具。&lt;/p&gt;
&lt;h3 id=&#34;vega-litehttpsgithubcomvegavega-lite&#34;&gt;&lt;a href=&#34;https://github.com/vega/vega-lite&#34;&gt;Vega-Lite&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/9d1fc1998c6a592e32b664e1fe2da6b51dc01341cf2ca2a9cc8c7ded861e50dc/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031302f6267323032303130333030322e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/9d1fc1998c6a592e32b664e1fe2da6b51dc01341cf2ca2a9cc8c7ded861e50dc/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031302f6267323032303130333030322e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;一个制作互动式图表的 JS 库。&lt;/p&gt;
&lt;h3 id=&#34;中文技术文档写作风格指南httpszh-style-guidereadthedocsiozh_cnlatestindexhtml&#34;&gt;&lt;a href=&#34;https://zh-style-guide.readthedocs.io/zh_CN/latest/index.html&#34;&gt;中文技术文档写作风格指南&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者综合了在互联网上能找到的各家中文文案风格指南、国外大厂成熟的文档规范、以及国标建议的出版要求，编写了这份超过 30 页的开源文档。&lt;/p&gt;
&lt;h3 id=&#34;计算机科学的数学基础httpscoursescsailmitedu6042spring17mcspdfmathematics-for-computer-science&#34;&gt;&lt;a href=&#34;https://courses.csail.mit.edu/6.042/spring17/mcs.pdf&#34;&gt;计算机科学的数学基础&lt;/a&gt;（Mathematics for Computer Science）&lt;/h3&gt;
&lt;p&gt;麻省理工学院的初等数学教材。&lt;/p&gt;
&lt;h3 id=&#34;coding-for-crosswordshttpswwwyoutubecomplaylistlistplg4aoophfzwz7llifowo-1wgmvicq-mfw&#34;&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PLg4AoophFZWZ7Llifowo-1WGMVICq-mfw&#34;&gt;Coding for Crosswords&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Youtube 上面的一个 C++ 语言的英文视频教程，教初学者使用 C++ 写一个填词游戏。&lt;/p&gt;
&lt;h3 id=&#34;编写解释器httpcraftinginterpreterscomcontentshtmlcrafting-interpreters&#34;&gt;&lt;a href=&#34;http://craftinginterpreters.com/contents.html&#34;&gt;编写解释器&lt;/a&gt;（Crafting interpreters）&lt;/h3&gt;
&lt;p&gt;何开发编程语言的解释器的英文开源教材，相当于教你怎么发明一种自己的编程语言。&lt;/p&gt;
&lt;h3 id=&#34;拉斐尔蒙蒂的雕塑httpswwwpinterestcomauannieodynechiffon&#34;&gt;&lt;a href=&#34;https://www.pinterest.com.au/annieOdyne/chiffon/&#34;&gt;拉斐尔·蒙蒂的雕塑&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;拉斐尔·蒙蒂（Rafaelle Monti）是19世纪的意大利雕塑家。他有一个很惊人的本领，就是能把大理石雕塑出透明的面纱效果。&lt;/p&gt;
&lt;p&gt;下面的面纱全部都是大理石雕塑。&lt;/p&gt;
&lt;h3 id=&#34;华氏度与摄氏度的简单估算httpsdyno-mightgithubio20201030temperature-conversion-for-the-lazy-and-simple-minded&#34;&gt;&lt;a href=&#34;https://dyno-might.github.io/2020/10/30/temperature-conversion-for-the-lazy-and-simple-minded/&#34;&gt;华氏度与摄氏度的简单估算&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;华氏度与摄氏度的转换，有一个简单的估算方法。有三个华氏度，颠倒个位数和十位数，约等于对应的摄氏度。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;40 华氏度 ≈ 04 摄氏度&lt;/li&gt;
&lt;li&gt;61 华氏度 ≈ 16 摄氏度&lt;/li&gt;
&lt;li&gt;82 华氏度 ≈ 28 摄氏度&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/5f905abdf93d69d5a985a7627f12e0afebddc09b7e06ffd40e4db2c8418fec35/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031302f6267323032303130333131322e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/5f905abdf93d69d5a985a7627f12e0afebddc09b7e06ffd40e4db2c8418fec35/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031302f6267323032303130333131322e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;因此，记住这三个数字（40、61、82），就可以简单估算。比如，71 华氏度介于 61°F 和 82°F 之间，所以对应的摄氏度大约介于16°C和28°C之间。&lt;/p&gt;
&lt;h3 id=&#34;地球工程是什么httpswwwtechnologyreviewcom20190809615what-is-geoengineering-and-why-should-you-care-climate-change-harvard&#34;&gt;&lt;a href=&#34;https://www.technologyreview.com/2019/08/09/615/what-is-geoengineering-and-why-should-you-care-climate-change-harvard/&#34;&gt;地球工程是什么？&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;原刊于《MIT 技术评论》杂志&lt;/p&gt;
&lt;h3 id=&#34;从头写一个-deno-的-bittorrent-下载器httpscjtingme20201031tinytorrent-a-deno-bt-downloader&#34;&gt;&lt;a href=&#34;https://cjting.me/2020/10/31/tinytorrent-a-deno-bt-downloader/&#34;&gt;从头写一个 Deno 的 BitTorrent 下载器&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;介绍 BT 下载的实现细节，有 JavaScript 代码的下载客户端示例。&lt;/p&gt;
&lt;h3 id=&#34;浏览器的人脸检测能力httpsckeditorcombloghow-to-detect-human-faces-and-other-shapes-in-javascript&#34;&gt;&lt;a href=&#34;https://ckeditor.com/blog/How-to-detect-human-faces-and-other-shapes-in-JavaScript/&#34;&gt;浏览器的人脸检测能力&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Chrome 浏览器已经支持 Shape Detection API，直接调用这个 API，不用加载任何外部库，就可以通过浏览器识别人脸和二维码。&lt;/p&gt;
&lt;h3 id=&#34;git-的作者auhtor与提交者commmitter的差异httpsblogdarkthreadnetbloggit-author-n-committer&#34;&gt;&lt;a href=&#34;https://blog.darkthread.net/blog/git-author-n-committer/&#34;&gt;Git 的作者（Auhtor）与提交者（Commmitter）的差异&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个 Git 的小细节。Git 提交的元信息里面，有“作者”（author）字段和“提交者”（committer）两个字段，它们有什么区别？&lt;/p&gt;
&lt;h3 id=&#34;presentahttpsgithubcompresenta-softwarepresenta-lib&#34;&gt;&lt;a href=&#34;https://github.com/presenta-software/presenta-lib&#34;&gt;presenta&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个 JS 的网页幻灯片库，特色是可定制的选项多。&lt;/p&gt;
&lt;h3 id=&#34;对象的方法可以理解为发消息httpssoftwareengineeringstackexchangecomquestions417896what-benefit-do-we-get-by-thinking-of-objects-as-sending-messages-to-each-other&#34;&gt;&lt;a href=&#34;https://softwareengineering.stackexchange.com/questions/417896/what-benefit-do-we-get-by-thinking-of-objects-as-sending-messages-to-each-other&#34;&gt;对象的方法可以理解为发消息&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;StackOverflow 的问答。面向对象编程（OOP）的一种理解，将对象的方法视为向对象发消息，我觉得很有启发。比如，&lt;code&gt;car1.stop()&lt;/code&gt;可以理解成向对象&lt;code&gt;car1&lt;/code&gt;发送消息&lt;code&gt;stop&lt;/code&gt;。&lt;/p&gt;
&lt;h3 id=&#34;snake-classichttpscodeguppycomcodehtmladsnk_adrian&#34;&gt;&lt;a href=&#34;https://codeguppy.com/code.html?ad/snk_adrian&#34;&gt;Snake Classic&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个 JS 代码演示，网页版小游戏《贪吃蛇》。&lt;/p&gt;
&lt;h3 id=&#34;oxhttpsgithubcomcurlpipeox&#34;&gt;&lt;a href=&#34;https://github.com/curlpipe/ox&#34;&gt;ox&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个命令行的代码编辑器，具有部分 IDE 功能，使用 Rust 语言编写。&lt;/p&gt;
&lt;h3 id=&#34;bucket-brigade-singinghttpswwwjefftkcompbucket-brigade-singing&#34;&gt;&lt;a href=&#34;https://www.jefftk.com/p/bucket-brigade-singing&#34;&gt;Bucket Brigade Singing&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个实验性的在线工具，让大家远程一起唱歌，解决疫情期间无法唱卡拉 OK 的问题。&lt;/p&gt;
&lt;h3 id=&#34;vue-hooks-formhttpsgithubcombeizhedenglongvue-hooks-form&#34;&gt;&lt;a href=&#34;https://github.com/beizhedenglong/vue-hooks-form&#34;&gt;Vue Hooks Form&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Vue 3 的一个 Hook，用来制作表单。&lt;/p&gt;
&lt;h3 id=&#34;svgpatheditorhttpsgithubcomyqnnsvg-path-editor&#34;&gt;&lt;a href=&#34;https://github.com/Yqnn/svg-path-editor&#34;&gt;SvgPathEditor&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个开源的 SVG 图形路径编辑的在线工具。&lt;/p&gt;
&lt;h3 id=&#34;线性代数httpshefferonnetlinearalgebra&#34;&gt;&lt;a href=&#34;https://hefferon.net/linearalgebra/&#34;&gt;线性代数&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;《线性代数》的英文免费教材，针对初学者。&lt;/p&gt;
&lt;h3 id=&#34;protoschoolhttpsprotoschooltutorials&#34;&gt;&lt;a href=&#34;https://proto.school/tutorials&#34;&gt;ProtoSchool&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;该网站有各种原创的分布式互联网协议教程。&lt;/p&gt;
&lt;h3 id=&#34;2020美国总统选举可视化httpswwwanychartcomblog20201106election-maps-us-vote-live-results&#34;&gt;&lt;a href=&#34;https://www.anychart.com/blog/2020/11/06/election-maps-us-vote-live-results/&#34;&gt;2020美国总统选举可视化&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这个网页收集了美国各大媒体的2020总统选举的可视化设计。&lt;/p&gt;
&lt;h3 id=&#34;世界海底光缆httpswwwsubmarinecablemapcom&#34;&gt;&lt;a href=&#34;https://www.submarinecablemap.com/&#34;&gt;世界海底光缆&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;该网站是世界海底光缆的互动式地图。&lt;/p&gt;
&lt;h3 id=&#34;机器学习书单httpmatpalmcomblogcool_machine_learning_books&#34;&gt;&lt;a href=&#34;http://matpalm.com/blog/cool_machine_learning_books/&#34;&gt;机器学习书单&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者列出的机器学习入门的书单，一共20本左右。&lt;/p&gt;
&lt;h3 id=&#34;世界最大的潜艇httpsru-submarinelivejournalcom17486html&#34;&gt;&lt;a href=&#34;https://ru-submarine.livejournal.com/17486.html&#34;&gt;世界最大的潜艇&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;前苏联的941型核潜艇（北约称为台风级核潜艇）是世界最大的潜艇，长175米。&lt;/p&gt;
&lt;p&gt;它比排名第二的潜艇大出一倍，可以容纳160人在海底潜伏几个月。潜艇里面甚至还有游泳池。由于建造和维护费用太高，俄罗斯早在2012年就已经宣布，不再建造也不再更新这种核潜艇了。&lt;/p&gt;
&lt;p&gt;标题网址提供了这种潜艇的大量照片。&lt;/p&gt;
&lt;h3 id=&#34;c-语言的字符串连接解释httpsblogholbertonschoolcomcode-review-string-concatenation-in-c&#34;&gt;&lt;a href=&#34;https://blog.holbertonschool.com/code-review-string-concatenation-in-c/&#34;&gt;C 语言的字符串连接解释&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这篇文章解释了 C 语言的一个基础知识：两个字符串连接在一起，背后是怎么实现的？&lt;/p&gt;
&lt;h3 id=&#34;为什么手机热点的范围比路由器短httpssuperusercomquestions1595771why-is-the-range-of-a-mobile-wi-fi-hotspot-shorter-than-that-of-a-router&#34;&gt;&lt;a href=&#34;https://superuser.com/questions/1595771/why-is-the-range-of-a-mobile-wi-fi-hotspot-shorter-than-that-of-a-router&#34;&gt;为什么手机热点的范围比路由器短？&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;StackOverflow 的问答，算是一个小知识吧。手机热点的范围（10米）要比路由器（30米以上）小得多。这主要因为 Wifi 是双向通信，而手机天线太小，能收到的信号范围有限。&lt;/p&gt;
&lt;h3 id=&#34;rust-与-go-的比较httpsbitfieldconsultingcomgolangrust-vs-go&#34;&gt;&lt;a href=&#34;https://bitfieldconsulting.com/golang/rust-vs-go&#34;&gt;Rust 与 Go 的比较&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一篇比较 Rust 和 Go 各自特点的长文，站在学习者的角度，介绍它们如何用不同的方式处理计算机问题，不涉及具体的语法。&lt;/p&gt;
&lt;h3 id=&#34;傅立叶变换的交互式介绍httpwwwjezzamoncomfourierindexhtml&#34;&gt;&lt;a href=&#34;http://www.jezzamon.com/fourier/index.html&#34;&gt;傅立叶变换的交互式介绍&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;通过一系列动画，解释什么是傅立叶变换。&lt;/p&gt;
&lt;h3 id=&#34;如何使用工具写出可维护的-nodejs-代码httpsmediumcomteamzerolabs2020-node-js-quick-upgrade-guide-cf671a83f4e7&#34;&gt;&lt;a href=&#34;https://medium.com/teamzerolabs/2020-node-js-quick-upgrade-guide-cf671a83f4e7&#34;&gt;如何使用工具写出可维护的 Node.js 代码？&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文介绍使用各种工具（TypeScript、Prettier、Sentry、Prometheus等），提高 Node.js 代码的可维护性。&lt;/p&gt;
&lt;h3 id=&#34;广电砸下百亿的cmmb手持电视httpsfinancesinacomcntech2020-10-12doc-iivhuipp9118153shtml&#34;&gt;&lt;a href=&#34;https://finance.sina.com.cn/tech/2020-10-12/doc-iivhuipp9118153.shtml&#34;&gt;广电砸下百亿的CMMB手持电视&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;2006年10月，广电总局决定推广移动多媒体广播格式 CMMB，可以在手机上看电视。这是一个中国独有的标准，词首的 C 代表 China。前后一共投入超过100多亿，现在已经被淘汰了。作者在十多年后重新体验了一下 CMMB 设备看电视的感受。&lt;/p&gt;
&lt;h3 id=&#34;plasma-bigscreenhttpsplasma-bigscreenorg&#34;&gt;&lt;a href=&#34;https://plasma-bigscreen.org/&#34;&gt;Plasma Bigscreen&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;专供大屏幕电视的 Linux 系统，用户界面基于 KDE 桌面。这里有一篇&lt;a href=&#34;https://dot.kde.org/2020/03/26/plasma-tv-presenting-plasma-bigscreen&#34;&gt;介绍文章&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&#34;markdown-wasmhttpswwwinfoqcomnews202010markdown-wasm-fast-parser&#34;&gt;&lt;a href=&#34;https://www.infoq.com/news/2020/10/markdown-wasm-fast-parser/&#34;&gt;markdown-wasm&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;WebAssembly 版本的 markdown 解析器，比 JavaScript 写的解析器快两倍以上，而且体积很小（31KB）。&lt;/p&gt;
&lt;h3 id=&#34;winappshttpsgithubcomfmstratwinapps&#34;&gt;&lt;a href=&#34;https://github.com/Fmstrat/winapps&#34;&gt;winapps&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个在 Ubuntu 里面运行 Windows 应用的虚拟机，特点是 Windows 应用就像 Linux 的原生应用一样，直接运行，而不会出现 Windows 的系统环境。&lt;/p&gt;
&lt;h3 id=&#34;nvidia-patchhttpsgithubcomkeylasenvidia-patch&#34;&gt;&lt;a href=&#34;https://github.com/keylase/nvidia-patch&#34;&gt;nvidia-patch&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Nvidia 显示卡配合 FFmpeg 进行视频编码时，有并发数量限制（3路并发），这个补丁可以突破这一限制。&lt;/p&gt;
&lt;h3 id=&#34;lazykubehttpsgithubcomtnk-studiolazykube&#34;&gt;&lt;a href=&#34;https://github.com/TNK-Studio/lazykube&#34;&gt;lazykube&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;k8s 终端可视化管理器 。&lt;/p&gt;
&lt;h3 id=&#34;mdhttpsgithubcomdoocsmd&#34;&gt;&lt;a href=&#34;https://github.com/doocs/md&#34;&gt;md&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一款开源的微信公众号 Markdown 编辑器，基于 &lt;a href=&#34;https://github.com/lyricat/wechat-format&#34;&gt;wechat-format&lt;/a&gt; 进行了二次开发&lt;/p&gt;
&lt;h3 id=&#34;apijsonhttpsgithubcomtencentapijson&#34;&gt;&lt;a href=&#34;https://github.com/Tencent/APIJSON&#34;&gt;APIJSON&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;腾讯的官方开源项目，自动化 RESTful 接口生成。前端描述自己需要的 JSON 数据，后端自动生成接口和文档。&lt;/p&gt;
&lt;h3 id=&#34;fakerjshttpsgithubcommarakfakerjs&#34;&gt;&lt;a href=&#34;https://github.com/Marak/faker.js&#34;&gt;faker.js&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;根据你的需要，生成各种假数据，比如姓名、地址等，支持生成中文数据。&lt;/p&gt;
&lt;h3 id=&#34;postgresqlconf-详解httpspostgresqlconfendocparam&#34;&gt;&lt;a href=&#34;https://postgresqlco.nf/en/doc/param/&#34;&gt;postgresql.conf 详解&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;PostgreSQL 数据库的配置文件&lt;code&gt;postgresql.conf&lt;/code&gt;有270个参数，很难搞清楚该怎么设置。这个网站提供所有参数的详细解释。&lt;/p&gt;
&lt;h3 id=&#34;安卓学习路线图httpsroadmapshandroid&#34;&gt;&lt;a href=&#34;https://roadmap.sh/android&#34;&gt;安卓学习路线图&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这篇英语文章给出了安卓开发的学习路线图。&lt;/p&gt;
&lt;h3 id=&#34;ruby-学习指南httpspoignantguidebook&#34;&gt;&lt;a href=&#34;https://poignant.guide/book/&#34;&gt;Ruby 学习指南&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一本英文的 Ruby 语言学习小册子。作者这样解释他的写作目的：&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;“我来到书店，那里的 Java 书籍放满了一面墙，倒下来足以压垮我。我想写一本小小的 Ruby 书籍。它不会压跨你，而是像羽毛一样轻盈。这本书所以保持轻盈是有原因的：因为 Ruby 很容易学习。”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;机器学习的线性代数简介httpspabloinsentegithubiointro-linear-algebra&#34;&gt;&lt;a href=&#34;https://pabloinsente.github.io/intro-linear-algebra&#34;&gt;机器学习的线性代数简介&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一篇英语的长篇文章，通过 Python 语言学习线性代数。&lt;/p&gt;
&lt;h3 id=&#34;1961年-b-52-轰炸机空难httpsenwikipediaorgwiki1961_goldsboro_b-52_crash&#34;&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/1961_Goldsboro_B-52_crash&#34;&gt;1961年 B-52 轰炸机空难&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;RT.&lt;/p&gt;
&lt;h3 id=&#34;南非的钻石矿httpdillonmarshcomdiamondshtml&#34;&gt;&lt;a href=&#34;http://dillonmarsh.com/diamonds.html&#34;&gt;南非的钻石矿&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;南非的狄龙沼泽（Dillon Marsh）钻石矿，一共开采了760万克拉的钻石，相当于1.5吨。&lt;/p&gt;
&lt;h3 id=&#34;幸运公式httpsmsjabercomluck&#34;&gt;&lt;a href=&#34;https://msjaber.com/luck/&#34;&gt;幸运公式&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;It’s a multiplication of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;x&lt;/code&gt; is how much you are prepared, &lt;code&gt;y&lt;/code&gt; is how lucky you are.&lt;/p&gt;
&lt;p&gt;You are responsible for the &lt;code&gt;x&lt;/code&gt; part of the equation, the &lt;code&gt;y&lt;/code&gt; takes care of itself. If your preparation effort is zero, all the potential opportunities will be multiplied by zero and you will lose every one of them, no matter how big they were.&lt;/p&gt;
&lt;p&gt;The more prepared you are, the more lucky you become. It’s not because you are lucky, rather because you can multiply small opportunities by big factors.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This idea is inspired by Richard W. Hamming’s thoughts on luck, mentioned in his book, &lt;a href=&#34;https://msjaber.com/books/the-art-of-doing-science-and-engineering-learning-to-learn/&#34;&gt;The Art of Doing Science and Engineering&lt;/a&gt;. He walks through all the coincidences that led him to his discoveries. Those coincidences have occured for many people – none of them were prepared, only Hamming was.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Could you have discovered what Hamming did if you were in his position? Yes, only if you were prepared.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;密码泄漏到-github会发生什么httpsthreadreaderappcomthread1324360905237372929html&#34;&gt;&lt;a href=&#34;https://threadreaderapp.com/thread/1324360905237372929.html&#34;&gt;密码泄漏到 GitHub，会发生什么？&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;几天前，我做了一个小实验，故意生成了一个假的 AWS 密钥，将其提交到公共存储库，看看会发生什么。&lt;/p&gt;
&lt;p&gt;我先向 GitHub 推送。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;15:27，我推送了带有密钥的提交。&lt;/li&gt;
&lt;li&gt;15:34（7分钟后），我收到了 @GitGuardian 的电子邮件，通知我可能有密钥泄漏。&lt;/li&gt;
&lt;li&gt;15:38（11分钟后），有人开始拿这个密钥入侵我的账户。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;接下来的2小时内，我又收到了5条警报，分别来自德国、荷兰、英国和乌克兰。根据 User-Agent，入侵的脚本机器人使用 Python 和 Node.js SDK。&lt;/p&gt;
&lt;p&gt;接着，我又向 GitLab 推送。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;16:24，我推送了带有密钥的提交。&lt;/li&gt;
&lt;li&gt;17:26（62分钟后），第一次入侵来自法国。根据 User-Agent，入侵脚本使用了 Python SDK。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我没有从 GitLab 收到任何提醒或警告。我知道 GitLab 确实提供了此功能，可悲的是，它们仅适用于付费用户。&lt;/p&gt;
&lt;p&gt;结论：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;入侵者对 GitHub 的扫描多于 GitLab 。&lt;/li&gt;
&lt;li&gt;如果使用 GitHub，则应使用 @GitGuardian。&lt;/li&gt;
&lt;li&gt;如果使用 GitLab，最好升级到付费用户。&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;我开发-saas-的工具和服务httpsjakenycwordstools-and-services-i-use-to-run-my-saas&#34;&gt;&lt;a href=&#34;https://jake.nyc/words/tools-and-services-i-use-to-run-my-saas/&#34;&gt;我开发 SaaS 的工具和服务&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者列出了自己开发 SaaS 服务用到的各种工具和服务，包括前端工具和后端工具。&lt;/p&gt;
&lt;h3 id=&#34;开源项目维护者的九个阶段httpsnibblestewblogspotcom202011the-nine-phases-of-open-source-projecthtml&#34;&gt;&lt;a href=&#34;https://nibblestew.blogspot.com/2020/11/the-nine-phases-of-open-source-project.html&#34;&gt;开源项目维护者的九个阶段&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个成功的开源项目，它的维护者可能需要经历九个阶段，第一个阶段是发明家，最后一个阶段是光荣退休。&lt;/p&gt;
&lt;h3 id=&#34;如何在安卓手机检查屏幕截图httpsproandroiddevcomdetect-screenshots-in-android-7bc4343ddce1&#34;&gt;&lt;a href=&#34;https://proandroiddev.com/detect-screenshots-in-android-7bc4343ddce1&#34;&gt;如何在安卓手机检查屏幕截图？&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;有些安卓 App 不允许用户截图，实现方法很简单，就是检查 Screenshots 文件夹是否添加了新图像。&lt;/p&gt;
&lt;h3 id=&#34;如何用-podman-替代-dockerhttpsdevelopersredhatcomblog20201119transitioning-from-docker-to-podman&#34;&gt;&lt;a href=&#34;https://developers.redhat.com/blog/2020/11/19/transitioning-from-docker-to-podman/&#34;&gt;如何用 Podman 替代 Docker&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Podman 是 RedHat 公司开发的容器引擎，用来替代 Docker。本文是一篇简单的上手指南。&lt;/p&gt;
&lt;h3 id=&#34;用-js-写一个-js-解释器httpsjuejincnpost6898093501376905230&#34;&gt;&lt;a href=&#34;https://juejin.cn/post/6898093501376905230&#34;&gt;用 JS 写一个 JS 解释器&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文解释了 JS 解释器如何将源代码转换成 AST（抽象语法树），并给出了一个简单的、便于理解的解释器实现。&lt;/p&gt;
&lt;h3 id=&#34;your-first-github-commithttpswwwamitmerchantcomyour-first-commit-ever&#34;&gt;&lt;a href=&#34;https://www.amitmerchant.com/your-first-commit-ever/&#34;&gt;Your First GitHub Commit&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这个网站可以找出你的第一个 GitHub 提交。&lt;/p&gt;
&lt;h3 id=&#34;perfect-dark-modehttpsperfect-dark-modenetlifyapp&#34;&gt;&lt;a href=&#34;https://perfect-dark-mode.netlify.app/&#34;&gt;Perfect Dark Mode&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个 JS 库，一键切换网页的亮模式和暗模式。&lt;/p&gt;
&lt;h3 id=&#34;rectorhttpsgithubcomrectorphprector&#34;&gt;&lt;a href=&#34;https://github.com/rectorphp/rector/&#34;&gt;rector&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个 PHP 代码的编译器，可以将 8.x 版本代码编译成 7.x 版本，类似于 JavaScript 语言的 Babel 工具，这里还有一篇&lt;a href=&#34;https://blog.logrocket.com/transpiling-php-code-from-8-0-to-7-x-via-rector/&#34;&gt;介绍文章&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&#34;gpinghttpsgithubcomorfgping&#34;&gt;&lt;a href=&#34;https://github.com/orf/gping&#34;&gt;gping&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;ping 命令的替代品，带有图形界面。&lt;/p&gt;
&lt;h3 id=&#34;docker-指南httpswwwrobertcoopermedocker-guide&#34;&gt;&lt;a href=&#34;https://www.robertcooper.me/docker-guide&#34;&gt;Docker 指南&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一篇英文的 Docker 教程，解释最重要的一些概念，帮助读者学会使用 Docker 进行应用程序开发。&lt;/p&gt;
&lt;h3 id=&#34;废弃媒体博物馆httpsobsoletemediaorgidentify&#34;&gt;&lt;a href=&#34;https://obsoletemedia.org/identify/&#34;&gt;废弃媒体博物馆&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这个网站介绍各种已经淘汰的数据储存媒介，比如纸带、录像带、VCD、磁盘等等。&lt;/p&gt;
&lt;h3 id=&#34;play-with-gohttpsplay-with-godevguideshtml&#34;&gt;&lt;a href=&#34;https://play-with-go.dev/guides.html&#34;&gt;Play with Go&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Go 语言教程网站，提供一系列互动式入门教程。&lt;/p&gt;
&lt;h3 id=&#34;互联网围棋数据库httpiwdbcn&#34;&gt;&lt;a href=&#34;http://iwdb.cn/&#34;&gt;互联网围棋数据库&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;可以搜索棋手姓名，查找棋谱，进行下载或在线打谱&lt;/p&gt;
&lt;h3 id=&#34;linux-命令大全httpswwwyuquecombooksshare742ca8f6-34f3-41ef-b239-be00aaf0df31&#34;&gt;&lt;a href=&#34;https://www.yuque.com/books/share/742ca8f6-34f3-41ef-b239-be00aaf0df31&#34;&gt;Linux 命令大全&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个中文文档库，收集了 Linux 的各种命令，收集了命令的解释和配置项示例。&lt;/p&gt;
&lt;h3 id=&#34;编程之道中英双语版httpsgithubcomyikeketao-of-programming&#34;&gt;&lt;a href=&#34;https://github.com/yikeke/tao-of-programming&#34;&gt;《编程之道》中英双语版&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;美国资深程序员 Geoffrey James 在1987年写了《编程之道》（The Tao of Programming），曾一度成为美国程序员圈的文化热点，书中的佳句和故事被大家津津乐道。&lt;/p&gt;
&lt;h3 id=&#34;一家美国创业公司httpswwwcabletreadcom&#34;&gt;&lt;a href=&#34;https://www.cabletread.com/&#34;&gt;一家美国创业公司&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;设计了一个自带电线收纳的电脑桌，带有各种电线收纳槽，获得了红点设计奖。&lt;/p&gt;
&lt;h3 id=&#34;赔率是怎么回事httpscomputersciencealgorithmswordpresscom20201122exploiting-arbitrage-opportunities-in-betting-markets&#34;&gt;&lt;a href=&#34;https://computersciencealgorithms.wordpress.com/2020/11/22/exploiting-arbitrage-opportunities-in-betting-markets/&#34;&gt;赔率是怎么回事？&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;新闻媒体经常报道各种赔率，这到底有什么含义？本文用美国这次总统选举来解释赔率，并用例子讲解如何在不同网站之间套利。&lt;/p&gt;
&lt;h3 id=&#34;windows-linux-子系统-1-和-2-的区别httpsjmmvdev202011wsl-lost-potentialhtml&#34;&gt;&lt;a href=&#34;https://jmmv.dev/2020/11/wsl-lost-potential.html&#34;&gt;Windows Linux 子系统 1 和 2 的区别&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Windows Linux 子系统（简称 WSL）使得 Windows 可以运行 Linux 程序，但是它有两个版本，并且同时都在开发，它们有什么区别？&lt;/p&gt;
&lt;p&gt;简单说，WSL 1 是内核子系统，WSL 2 是 Linux 虚拟机。&lt;/p&gt;
&lt;h3 id=&#34;apache-jmeterhttpsjmeterapacheorg&#34;&gt;&lt;a href=&#34;https://jmeter.apache.org/&#34;&gt;Apache JMeter&lt;/a&gt;&lt;/h3&gt;
&lt;h3 id=&#34;windows-linux-子系统-1-和-2-的区别httpsjmmvdev202011wsl-lost-potentialhtml-1&#34;&gt;&lt;a href=&#34;https://jmmv.dev/2020/11/wsl-lost-potential.html&#34;&gt;Windows Linux 子系统 1 和 2 的区别&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Windows Linux 子系统（简称 WSL）使得 Windows 可以运行 Linux 程序，但是它有两个版本，并且同时都在开发，它们有什么区别？&lt;/p&gt;
&lt;p&gt;简单说，WSL 1 是内核子系统，WSL 2 是 Linux 虚拟机。&lt;/p&gt;
&lt;h3 id=&#34;chrome-浏览器的-css-概览面板httpsumaarcomdev-tips240-css-overview-improved&#34;&gt;&lt;a href=&#34;https://umaar.com/dev-tips/240-css-overview-improved/&#34;&gt;Chrome 浏览器的 CSS 概览面板&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Chrome 浏览器引入了一项试验性功能，在开发者工具里面提供 CSS 样式表的概况统计。&lt;/p&gt;
&lt;h3 id=&#34;我放弃-serverless改用-ruby-on-railshttpsfranticimback-to-rails&#34;&gt;&lt;a href=&#34;https://frantic.im/back-to-rails&#34;&gt;我放弃 Serverless，改用 Ruby on Rails&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者原先使用 Serverless，感到有许多不满意的地方，就写了这篇文章解释为什么他要转到传统的 Ruby on Rails。&lt;/p&gt;
&lt;h3 id=&#34;git-的空树httpsfloatingoctothorpeuk2017empty-trees-in-githtml&#34;&gt;&lt;a href=&#34;https://floatingoctothorpe.uk/2017/empty-trees-in-git.html&#34;&gt;Git 的空树&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;任何一个 Git 仓库，都包含一个相同的对象（哈希为&lt;code&gt;4b82...4904&lt;/code&gt;），指向一个空树（empty tree），这是为什么？&lt;/p&gt;
&lt;h3 id=&#34;popperhttpspopperjsorg&#34;&gt;&lt;a href=&#34;https://popper.js.org/&#34;&gt;Popper&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个工具提示和弹出框的 JS 库。&lt;/p&gt;
&lt;h3 id=&#34;hutoolhttpsgithubcomloolyhutool&#34;&gt;&lt;a href=&#34;https://github.com/looly/hutool/&#34;&gt;hutool&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个小而全的 Java 工具类库，通过静态方法封装，并提供详细完整的中文文档和注释，使Java拥有函数式语言般的优雅。&lt;/p&gt;
&lt;h3 id=&#34;furionhttpsmonksoulgiteeiofurion&#34;&gt;&lt;a href=&#34;https://monksoul.gitee.io/furion/&#34;&gt;Furion&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个基于 .Net 5 的 Web 框架。&lt;/p&gt;
&lt;h3 id=&#34;notion-clonehttpsgithubcomkonstantinmuensternotion-clone&#34;&gt;&lt;a href=&#34;https://github.com/konstantinmuenster/notion-clone&#34;&gt;Notion Clone&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个 Notion 的开源克隆，提供在线的笔记管理功能。&lt;/p&gt;
&lt;h3 id=&#34;raindrophttpsraindropio&#34;&gt;&lt;a href=&#34;https://raindrop.io/&#34;&gt;Raindrop&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个跨平台的网络书签管理器。&lt;/p&gt;
&lt;h3 id=&#34;bundlephobiahttpsbundlephobiacom&#34;&gt;&lt;a href=&#34;https://bundlephobia.com/&#34;&gt;BundlePhobia&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个在线工具，分析 npm 软件包的体积和加载性能，比如 &lt;a href=&#34;https://bundlephobia.com/result?p=lodash@4.17.20&#34;&gt;lodash@4.17.20&lt;/a&gt; 的体积是69.9kB，2G 网络下载需要0.81秒。&lt;/p&gt;
&lt;h3 id=&#34;bladeshttpswwwgetbladesorg&#34;&gt;&lt;a href=&#34;https://www.getblades.org/&#34;&gt;Blades&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个 Rust 语言写的静态网站生成器，速度极快，号称比 Hugo 快10倍。&lt;/p&gt;
&lt;h3 id=&#34;profileiohttpsgithubcomacrlakshmanprofileio&#34;&gt;&lt;a href=&#34;https://github.com/acrlakshman/profileio&#34;&gt;profileio&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个 Github actions 模板工具，用来生成个人简历页面和 PDF 文件。&lt;/p&gt;
&lt;h3 id=&#34;psql-教程和备忘录httpstomcamgithubiopostgres&#34;&gt;&lt;a href=&#34;https://tomcam.github.io/postgres/&#34;&gt;psql 教程和备忘录&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;psql 是 PostgreSQL 数据库的官方命令行客户端，本文是它的一篇简明教程。&lt;/p&gt;
&lt;h3 id=&#34;150分钟学会-perl-语言httpsqntmorgperl_en&#34;&gt;&lt;a href=&#34;https://qntm.org/perl_en&#34;&gt;150分钟学会 Perl 语言&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这篇 Perl 教程写过那些不想读官方文档的人，目标是写得尽量短，但又不会太短，包括了足够的学习内容。&lt;/p&gt;
&lt;h3 id=&#34;2020年度-js13k-games-竞赛httpsgithubblog2020-10-11-top-ten-games-from-the-js13k-2020-competition&#34;&gt;&lt;a href=&#34;https://github.blog/2020-10-11-top-ten-games-from-the-js13k-2020-competition/&#34;&gt;2020年度 JS13K Games 竞赛&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;JS13K Games 竞赛要求使用 JavaScript 语言，写一个不超过 13KB 的 HTML5 游戏。一共有220多个作品参赛，这里是前10名。大家可以去玩一下，效果非常惊艳。&lt;/p&gt;
&lt;h3 id=&#34;机器学习工程httpwwwmlebookcom&#34;&gt;&lt;a href=&#34;http://www.mlebook.com/&#34;&gt;机器学习工程&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;机器学习工程（Machine Learning Engineering）这个词，是指使用软件工程原理和数据科学知识，构建机器学习模型。这本英文电子书是入门教程。&lt;/p&gt;
&lt;h3 id=&#34;2020年的100项最佳发明httpstimecomcollectionbest-inventions-2020&#34;&gt;&lt;a href=&#34;https://time.com/collection/best-inventions-2020/&#34;&gt;2020年的100项最佳发明&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;《时代》杂志评选的今年100项最佳发明。&lt;/p&gt;
&lt;h3 id=&#34;最齐全的笔记本httpsexpanscapecomthe-aurora-7-prototypethe-story-of-the-aurora-7&#34;&gt;&lt;a href=&#34;https://expanscape.com/the-aurora-7-prototype/the-story-of-the-aurora-7/&#34;&gt;最齐全的笔记本&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一家英国公司做出了史上功能最齐全的笔记本，桌面电脑能够包含的组件，它都包含：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;7个屏幕，其中4个是17寸 4K 屏幕&lt;/li&gt;
&lt;li&gt;4个网卡，其中2个是无线网卡&lt;/li&gt;
&lt;li&gt;104键的背光键盘&lt;/li&gt;
&lt;li&gt;128GB 内存&lt;/li&gt;
&lt;li&gt;16TB SSD 硬盘&lt;/li&gt;
&lt;li&gt;独立的系统状态监视器&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;dweb-协议栈httpsblogspacestoragepoststhe-dweb-protocols-behind-space&#34;&gt;&lt;a href=&#34;https://blog.space.storage/posts/the-dweb-protocols-behind-space&#34;&gt;Dweb 协议栈&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Dweb 指的是分布式互联网，不再存在中央服务器，本文介绍它涉及的各种协议。&lt;/p&gt;
&lt;h3 id=&#34;react-防止-xss-攻击的注意点httpsreactchristmas20203&#34;&gt;&lt;a href=&#34;https://react.christmas/2020/3&#34;&gt;React 防止 XSS 攻击的注意点&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;XSS 指的是代码注入，这是一种常见的攻击。React 框架本身带有防 XSS 的机制，但是开发时还是有一些地方需要注意。&lt;/p&gt;
&lt;h3 id=&#34;我面试谷歌伦敦-sre-的经验和教训httpsjustyycomarchives45126&#34;&gt;&lt;a href=&#34;https://justyy.com/archives/45126&#34;&gt;我面试谷歌伦敦 SRE 的经验和教训&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者5年前接到过谷歌的面试邀请，当时问了一道队列+哈希表的题，可惜当时水平太差连第一面45分钟的 coding 都没过。再后来这几年一直投, 甚至去年找朋友内推都没法过简历关。&lt;/p&gt;
&lt;h3 id=&#34;css-的竖行横书组合httpwwwdeathghostcnarticlecss86&#34;&gt;&lt;a href=&#34;http://www.deathghost.cn/article/css/86&#34;&gt;CSS 的竖行横书组合&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/b962853d206c469dd255e0e7f0dd6f712a9ca663c2f8ec07abffa3214aa222b0/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031322f6267323032303132303930312e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/b962853d206c469dd255e0e7f0dd6f712a9ca663c2f8ec07abffa3214aa222b0/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031322f6267323032303132303930312e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;CSS 可以做到中文竖排，并且内部数字是横排的效果（上图）。&lt;/p&gt;
&lt;h3 id=&#34;20个有争议的编程观点httpsprogrammersblogoverflowcom20120820-controversial-programming-opinions&#34;&gt;&lt;a href=&#34;https://programmers.blogoverflow.com/2012/08/20-controversial-programming-opinions/&#34;&gt;20个有争议的编程观点&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文总结了 StackOverflow 上面20个最有争议的编程观点，比如“对于优秀的软件设计，使用设计模式弊大于利”。&lt;/p&gt;
&lt;h3 id=&#34;nonstophttpsgithubcomyuxiaoy1nonstop&#34;&gt;&lt;a href=&#34;https://github.com/yuxiaoy1/nonstop&#34;&gt;nonstop&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个浏览器插件，可以规避知乎、微博、简书上面的外部链接跳转的确认页面，自动跳转到外部网址。&lt;/p&gt;
&lt;h3 id=&#34;screenityhttpsgithubcomalyssaxuuscreenity&#34;&gt;&lt;a href=&#34;https://github.com/alyssaxuu/screenity&#34;&gt;screenity&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;功能强大的 Chrome 浏览器录屏插件。&lt;/p&gt;
&lt;h3 id=&#34;texmehttpsgithubcomsusamtexme&#34;&gt;&lt;a href=&#34;https://github.com/susam/texme&#34;&gt;texme&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个 JS 库，可以将 Markdown 自动渲染成网页内容。&lt;/p&gt;
&lt;h3 id=&#34;dumpster-firehttpsheysciencedumpster-fire&#34;&gt;&lt;a href=&#34;https://hey.science/dumpster-fire/&#34;&gt;dumpster-fire&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这个网站挺好玩，你给它发 Email，它会打印出来，自动点火烧掉，全程直播。&lt;/p&gt;
&lt;h3 id=&#34;busterhttpsgithubcomdessantbuster&#34;&gt;&lt;a href=&#34;https://github.com/dessant/buster&#34;&gt;buster&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;浏览器插件，使用语音识别完成 reCAPTCHA 验证码。&lt;/p&gt;
&lt;h3 id=&#34;rufflehttpsrufflers&#34;&gt;&lt;a href=&#34;https://ruffle.rs/&#34;&gt;ruffle&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个 Flash 模拟器的 WebAssembly 库。只要把这个库插入网页，就可以播放 Flash。&lt;/p&gt;
&lt;h3 id=&#34;replit-multiplayerhttpsreplitsitemultiplayer&#34;&gt;&lt;a href=&#34;https://repl.it/site/multiplayer&#34;&gt;repl.it Multiplayer&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;多人在线实时协同编程平台。&lt;/p&gt;
&lt;h3 id=&#34;regexperhttpsregexpercom&#34;&gt;&lt;a href=&#34;https://regexper.com/&#34;&gt;RegExper&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/3ab30798470c06adb3f641966443ef553c45e9a4602ec3aca5e769b0fc60b34b/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031322f6267323032303132303130382e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/3ab30798470c06adb3f641966443ef553c45e9a4602ec3aca5e769b0fc60b34b/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031322f6267323032303132303130382e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;该网站可以将正则表达式转成解释图片。&lt;/p&gt;
&lt;h3 id=&#34;this-x-does-not-existhttpsthisxdoesnotexistcom&#34;&gt;&lt;a href=&#34;https://thisxdoesnotexist.com/&#34;&gt;This X Does Not Exist&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这个网站收集各种 AI 生成的仿真项目，比如不存在的人、不存在的猫、不存在的房间等等。&lt;/p&gt;
&lt;h3 id=&#34;无限放大的插画&#34;&gt;无限放大的插画&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://zoomquilt.org/&#34;&gt;Zoomquilt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://zoomquilt2.com/&#34;&gt;Zoomquilt2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://arkadia.xyz/&#34;&gt;Arkadia Zoomquilt&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;unix-操作系统简介httpschsasankgithubioclassic_papersunix-time-sharing-systemhtml&#34;&gt;&lt;a href=&#34;https://chsasank.github.io/classic_papers/unix-time-sharing-system.html&#34;&gt;Unix 操作系统简介&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/96e60c2c6f6956cd6c27a91f625b24077230d988693491b8e011434bdf22e6a4/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031312f6267323032303131313530322e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/96e60c2c6f6956cd6c27a91f625b24077230d988693491b8e011434bdf22e6a4/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031312f6267323032303131313530322e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;丹尼斯·里奇和肯·汤普森1974年的原始论文，向世界介绍他们发明的新操作系统 Unix，在不长的篇幅里面，使用简单的语言，介绍 Unix 的一些核心设计，至今仍然有参考价值。&lt;/p&gt;
&lt;h3 id=&#34;文件格式维基httpfileformatsarchiveteamorgwikimain_page&#34;&gt;&lt;a href=&#34;http://fileformats.archiveteam.org/wiki/Main_Page&#34;&gt;文件格式维基&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这个维基网站收集了各种文件后缀名，详细解释每种文件的格式。&lt;/p&gt;
&lt;h3 id=&#34;hello-dnshttpspowerdnsorghello-dns&#34;&gt;&lt;a href=&#34;https://powerdns.org/hello-dns/&#34;&gt;Hello DNS&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个英文的 DNS 协议教程，介绍 DNS 协议的概念和细节。&lt;/p&gt;
&lt;h3 id=&#34;maven-手册httpswwwyuquecominuterbc7ikcngeqot&#34;&gt;&lt;a href=&#34;https://www.yuque.com/inuter/bc7ikc/ngeqot&#34;&gt;Maven 手册&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Maven 是 Java 项目的管理和构建工具，这是国人原创的针对新手的中文入门教程。&lt;/p&gt;
&lt;h3 id=&#34;database-glossaryhttpsbytebasecomdatabase-glossary&#34;&gt;&lt;a href=&#34;https://bytebase.com/database-glossary&#34;&gt;Database Glossary&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;A handy database term dictionary on the internet. We cover general database, MySQL, PostgreSQL as well as Bytebase specific topics.&lt;/p&gt;
&lt;h3 id=&#34;why-github-cant-host-the-linux-kernel-communityhttpsblogffwllch201708github-why-cant-host-the-kernelhtmlspma2c6h12873639007b233505pk2npr&#34;&gt;&lt;a href=&#34;https://blog.ffwll.ch/2017/08/github-why-cant-host-the-kernel.html?spm=a2c6h.12873639.0.0.7b233505Pk2NpR&#34;&gt;Why Github can&amp;rsquo;t host the Linux Kernel Community&lt;/a&gt;&lt;/h3&gt;
&lt;h3 id=&#34;空图书馆httpsenwikipediaorgwikithe_empty_library&#34;&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/The_Empty_Library&#34;&gt;空图书馆&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;德国柏林的倍倍尔广场上，有一个装置艺术品，叫做“空图书馆”，是一组空的地下白色书柜。这是为了提醒人们不要忘记，1933年纳粹在这个广场上烧毁犹太人和马克思的书籍。地下空间的大小相当于2万本书籍，跟当时烧毁的数量相仿。这个装置跟地面齐平，白天很难发现，晚上亮灯才能看到。装置内部装有空调，保持跟外部同样温度，防止玻璃窗上出现水汽。&lt;/p&gt;
&lt;h3 id=&#34;如果一个冬夜你在俄罗斯的郊区httpswwwcalvertjournalcomarticlesshow11066this-new-video-game-lets-you-do-nothing-in-a-suburban-russian-tower-block&#34;&gt;&lt;a href=&#34;https://www.calvertjournal.com/articles/show/11066/this-new-video-game-lets-you-do-nothing-in-a-suburban-russian-tower-block&#34;&gt;如果一个冬夜，你在俄罗斯的郊区&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;去年，两个俄罗斯程序员开发了一款非常独特的游戏。&lt;/p&gt;
&lt;p&gt;这个游戏没有任何情节、任何目标，甚至也没有任何人物，只有玩家自己。游戏只做了一件事，就是逼真地还原了一个下着鹅毛大雪的冬夜，位于俄罗斯郊区的一片住宅区平淡无奇的生活环境。&lt;/p&gt;
&lt;p&gt;游戏开始时就是一个黑夜，你会发现自己在俄罗斯一个普通郊区的一间小公寓里面，灯光黯淡，屋里空无一人。&lt;/p&gt;
&lt;p&gt;你从窗户望出去，看到白雪覆盖的庭院，在黑暗里被路灯和商店冷清的霓虹灯照亮。你打开厨房的电灯开关，尝试烤面包、煮鸡蛋。然后，你打开收音机，听了一会，开始洗澡。接着，你取出垃圾，离开公寓，到空无一人的庭院里散步。&lt;/p&gt;
&lt;p&gt;街道拐角处的商店和美发店都关门了，路上空无一人。实际上，无论你走到哪里，都看不到任何人。&lt;/p&gt;
&lt;p&gt;这个游戏其实只是一个“沙盒”，让玩家在一个虚拟环境里面自由漫游。开发者说游戏目的就是传达“后苏联时代俄罗斯普通人的悲伤生活。……没有什么在等你，没有机会离开，没有冒险的可能，生活中没有任何令人惊奇的事件。”&lt;/p&gt;
&lt;p&gt;该游戏可以在 Steam 平台&lt;a href=&#34;https://store.steampowered.com/app/1003360/___ITS_WINTER/&#34;&gt;购买&lt;/a&gt;，价格是人民币37元。&lt;/p&gt;
&lt;h3 id=&#34;自然杂志2020年十佳科学照片httpswwwnaturecomimmersived41586-020-03436-5indexhtml&#34;&gt;&lt;a href=&#34;https://www.nature.com/immersive/d41586-020-03436-5/index.html&#34;&gt;《自然》杂志：2020年十佳科学照片&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://camo.githubusercontent.com/23571d0fda4266cff7bcb1934e142b0f1114f015a7f57bd72f0e37247e153c10/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031322f6267323032303132313530322e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;《自然》杂志评选出的2020年十佳科学照片。上图是沙特阿拉伯的科学家发明的太阳能电池，又轻又薄，可以放在肥皂泡上。&lt;/p&gt;
&lt;h3 id=&#34;2020美国程序员薪资报告httpswwwlevelsfyi2020&#34;&gt;&lt;a href=&#34;https://www.levels.fyi/2020/&#34;&gt;2020美国程序员薪资报告&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;levels.fyi 又公布了一年一度的美国程序员薪资报告，有很多数据，感兴趣的朋友可以看看。上图是初级工程师/程序员薪资最高的公司，真是很高的报酬。&lt;/p&gt;
&lt;h3 id=&#34;剖析最简单的-c-语言-hello-worldhttpscjtingme20201210tiny-x64-helloworld&#34;&gt;&lt;a href=&#34;https://cjting.me/2020/12/10/tiny-x64-helloworld/&#34;&gt;剖析最简单的 C 语言 Hello World&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者讲解一个最简单 C 语言 Hello World 程序，底层到底发生了什么。这个程序 gcc 编译后是 16KB，作者设法把它简化到170字节。&lt;/p&gt;
&lt;h3 id=&#34;保护你的-env-文件httpstatooine-sunsetbotondonline2020-12-06-protect-your-dotenv&#34;&gt;&lt;a href=&#34;https://tatooine-sunset.botond.online/2020-12-06-protect-your-dotenv/&#34;&gt;保护你的 .env 文件&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;互联网黑客行为非常猖獗。作者上线了一个小网站，10个小时内就收到了许多可疑请求，其中就有人在尝试读取环境变量 .env 文件。&lt;/p&gt;
&lt;h3 id=&#34;使用-github-issues-的数据生成静态网站httpsshazownetpostsgithub-issues-as-a-hugo-frontend&#34;&gt;&lt;a href=&#34;https://shazow.net/posts/github-issues-as-a-hugo-frontend/&#34;&gt;使用 GitHub Issues 的数据生成静态网站&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者介绍如何将 GitHub Issues 用做编辑器和数据储存，通过 GitHub Actions 和 Netlify 生成一个静态网站。&lt;/p&gt;
&lt;h3 id=&#34;如何自动生成社交媒体的网页题图httpswwwryanfillercomblogautomatic-social-share-images&#34;&gt;&lt;a href=&#34;https://www.ryanfiller.com/blog/automatic-social-share-images/&#34;&gt;如何自动生成社交媒体的网页题图&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/0b39db82467b337eddcdc928cb55747a2b9aa91ca47a7126f53fb8984c00761e/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031322f6267323032303132303530342e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/0b39db82467b337eddcdc928cb55747a2b9aa91ca47a7126f53fb8984c00761e/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031322f6267323032303132303530342e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;很多社交媒体会对网址生成预览卡，作者讲述如何定制这种预览效果，并且为每个网址自动生成一张题图。&lt;/p&gt;
&lt;h3 id=&#34;我与-pythonhttpsneopythonicblogspotcom201604kings-day-speechhtml&#34;&gt;&lt;a href=&#34;https://neopythonic.blogspot.com/2016/04/kings-day-speech.html&#34;&gt;我与 Python&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/fb2113734161caf336d2d2866738a2c20b18559fc1031e333555a64afebfbc2d/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031322f6267323032303132303530352e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/fb2113734161caf336d2d2866738a2c20b18559fc1031e333555a64afebfbc2d/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031322f6267323032303132303530352e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这是 Python 语言创始人 Guido van Rossum 2016年的一次演讲，讲述自己的经历，以及如何创造出 Python 这种语言。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“我是一个书呆子，一个怪人，很可能患有自闭症。我成熟得很晚，26岁大学毕业，45岁结婚，60岁时有一个14岁的儿子。35岁时，我创建了一种程序设计语言，因此受到了一些关注。”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;tinycheckhttpsgithubcomkasperskylabtinycheck&#34;&gt;&lt;a href=&#34;https://github.com/KasperskyLab/TinyCheck&#34;&gt;TinyCheck&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;卡巴斯基实验室的产品，一个移动通信网关，用来中介智能手机与外界的网络通信，看看手机到底发出什么请求。&lt;/p&gt;
&lt;h3 id=&#34;antipodes-maphttpswwwantipodesmapcom&#34;&gt;&lt;a href=&#34;https://www.antipodesmap.com/&#34;&gt;Antipodes Map&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这个地图工具可以显示任意地点在地球另一边的对应地点，比如在上海打一个洞穿越地心，就会来到阿根廷的恩特雷里奥斯省。&lt;/p&gt;
&lt;h3 id=&#34;espialhttpsgithubcomjonschoningespial&#34;&gt;&lt;a href=&#34;https://github.com/jonschoning/espial&#34;&gt;Espial&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个自己架设的 Web 书签服务，支持多账户使用，底层使用 Sqlite3 数据库。&lt;/p&gt;
&lt;h3 id=&#34;electron-playgroundhttpsgithubcomtal-techelectron-playground&#34;&gt;&lt;a href=&#34;https://github.com/tal-tech/electron-playground&#34;&gt;electron-playground&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个 Electron 的学习工具，内置了各种可演示的示例，并且提供了演练场，几乎所有的代码都可以即时运行查看效果。&lt;/p&gt;
&lt;h3 id=&#34;depixhttpsgithubcombeurtschipperdepix&#34;&gt;&lt;a href=&#34;https://github.com/beurtschipper/Depix&#34;&gt;Depix&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;发布图片时，很多人喜欢使用马赛克隐去敏感信息，这个工具可以将打马赛克的文字还原。所以，隐藏信息尽量不要使用马赛克，最好是覆盖掉。&lt;/p&gt;
&lt;h3 id=&#34;watermark-videohttpsshotstackiodemowatermarker&#34;&gt;&lt;a href=&#34;https://shotstack.io/demo/watermarker/&#34;&gt;Watermark Video&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个开源的在线工具，可以为小视频加上水印图片。&lt;/p&gt;
&lt;h3 id=&#34;pronouncehttpsgithubcomfilipeishopronounce&#34;&gt;&lt;a href=&#34;https://github.com/filipeisho/pronounce&#34;&gt;pronounce&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个开源的浏览器插件，只要双击网页上的单词，就能听到这个词的发音，支持各种语言。&lt;/p&gt;
&lt;h3 id=&#34;mugleiohttpsmugleio&#34;&gt;&lt;a href=&#34;https://mugle.io/&#34;&gt;mugle.io&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;该网站提供 Youtube 上面没有版权保护的背景音乐下载，可以用于你自己的视频。&lt;/p&gt;
&lt;h3 id=&#34;regexlibhttpsregexlibcom&#34;&gt;&lt;a href=&#34;https://regexlib.com/&#34;&gt;RegExLib&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;该网站收集各种常用的正则表达式，比如搜索“email”，会返回961个正则表达式。&lt;/p&gt;
&lt;h3 id=&#34;ai-事故数据库httpsincidentdatabaseaisummariesincidents&#34;&gt;&lt;a href=&#34;https://incidentdatabase.ai/summaries/incidents&#34;&gt;AI 事故数据库&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;该网站收集各种人工智能 AI 产生的各种事故。&lt;/p&gt;
&lt;h3 id=&#34;covid-19-插图httpswwwpixeltruecomfrontliner-heroes&#34;&gt;&lt;a href=&#34;https://www.pixeltrue.com/frontliner-heroes&#34;&gt;Covid-19 插图&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;该网站提供24幅原创的 Covid-19 相关的插图，允许自由使用。&lt;/p&gt;
&lt;h3 id=&#34;命令行界面设计指南httpscligdev&#34;&gt;&lt;a href=&#34;https://clig.dev/&#34;&gt;命令行界面设计指南&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这份文档总结了一些设计规范，帮助你写出体验良好的命令行程序。&lt;/p&gt;
&lt;h3 id=&#34;梅森素数搜索项目httpswwwmersenneorgvarioushistoryphp&#34;&gt;&lt;a href=&#34;https://www.mersenne.org/various/history.php&#34;&gt;梅森素数搜索项目&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;梅森素数是可以表示成 2n - 1 的素数，目前已知有51个。从1997年开始，所有新的梅森素数都是由“互联网梅森素数大搜索”（GIMPS）项目进行分布式计算发现的。任何人都可以参与这个项目，将自己计算机的多余计算能力贡献出来。&lt;/p&gt;
&lt;h3 id=&#34;法罗群岛的海底隧道httpswwwestunlarfoenabout-the-tunnelsthe-eysturoy-tunnel&#34;&gt;&lt;a href=&#34;https://www.estunlar.fo/en/about-the-tunnels/the-eysturoy-tunnel/&#34;&gt;法罗群岛的海底隧道&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://camo.githubusercontent.com/e44491dad9a0d68f25a8ea71d9ea47ec314306f8a76ce1c72302bde1f16c658a/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031322f6267323032303132303431322e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;世界最大的腰果树httpsenwikipediaorgwikicashew_of_pirangi&#34;&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Cashew_of_Pirangi&#34;&gt;世界最大的腰果树&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://camo.githubusercontent.com/7b95285c643ffebfe024475d3c4c76e60f1aed0e9c6a1be9c4dd278035300d4b/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031322f6267323032303132303531302e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;伊尔-76的驾驶舱httpswwwthedrivecomthe-war-zone38140this-navigator-aboard-a-russian-il-76-looks-like-a-tie-fighter-pilot-from-star-wars&#34;&gt;&lt;a href=&#34;https://www.thedrive.com/the-war-zone/38140/this-navigator-aboard-a-russian-il-76-looks-like-a-tie-fighter-pilot-from-star-wars&#34;&gt;伊尔-76的驾驶舱&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;俄罗斯国防部最近发布了一张照片，是在运输机伊尔-76的驾驶舱拍摄的，看上去跟《星球大战》的剧照很像。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/9a019f5b3d01532d6c45f68ff7676ca0ee3683ce78b20eb5c2956b443bb909df/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031322f6267323032303132313530352e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/9a019f5b3d01532d6c45f68ff7676ca0ee3683ce78b20eb5c2956b443bb909df/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031322f6267323032303132313530352e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/4de9acc4e9c132976616de1b941e2b5d5dddf43cfe3f50313fceb7b5a03fbe78/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031322f6267323032303132313530342e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/4de9acc4e9c132976616de1b941e2b5d5dddf43cfe3f50313fceb7b5a03fbe78/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031322f6267323032303132313530342e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;下图是《星球大战》的剧照。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/03c7dfdf450966b9eab2d715b976870f4bbbfdd0d2316f0632c79ef8126a2e21/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031322f6267323032303132313530362e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/03c7dfdf450966b9eab2d715b976870f4bbbfdd0d2316f0632c79ef8126a2e21/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031322f6267323032303132313530362e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;泰瑟枪https99percentinvisibleorgepisodetom-swift-electric-rifle&#34;&gt;&lt;a href=&#34;https://99percentinvisible.org/episode/tom-swift-electric-rifle/&#34;&gt;泰瑟枪&lt;/a&gt;&lt;/h3&gt;
&lt;h3 id=&#34;vparkhttpswwwvparkiohome&#34;&gt;&lt;a href=&#34;https://www.vpark.io/home&#34;&gt;Vpark&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;旧金山一家创业公司推出360度 VR 旅行服务，用户选择一个旧金山的风景点，在指定时间导游会带你去参观。整个过程都是网络进行。&lt;/p&gt;
&lt;p&gt;导游使用360摄像机拍摄实时画面，通过 Youtube360 进行直播，用户在家里戴上 VR 眼镜收看直播。整个过程中，导游会提供实时解说，你还可以跟导游对话。这个服务的价格是，每小时39美元到59美元。&lt;/p&gt;
&lt;h3 id=&#34;空心光纤httpswwwwsjcomarticleshigh-frequency-traders-push-closer-to-light-speed-with-cutting-edge-cables-11608028200&#34;&gt;&lt;a href=&#34;https://www.wsj.com/articles/high-frequency-traders-push-closer-to-light-speed-with-cutting-edge-cables-11608028200&#34;&gt;空心光纤&lt;/a&gt;&lt;/h3&gt;
&lt;h3 id=&#34;保存时间最长的人类胚胎httpswwwbbccomnewsworld-us-canada-55164607&#34;&gt;&lt;a href=&#34;https://www.bbc.com/news/world-us-canada-55164607&#34;&gt;保存时间最长的人类胚胎&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;2020年10月，一个名叫莫莉·吉布森（Molly Gibson）的女婴在美国华盛顿州出生，但是科学意义上，这时她已经27岁了。因为她来自一枚27年前冷冻的胚胎。她现在的父母有不孕症，选择接受这枚没有遗传关系的、1992年10月冷冻的胚胎植入母亲的子宫，进行生育。这创下了胚胎冷冻时间最长、然后生育的世界记录。&lt;/p&gt;
&lt;h3 id=&#34;电动车无法普及httpwwwnbdcomcnarticles2020-12-231579335html&#34;&gt;&lt;a href=&#34;http://www.nbd.com.cn/articles/2020-12-23/1579335.html&#34;&gt;电动车无法普及&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;日前，丰田汽车的社长丰田章男公开表示，电动车是过度炒作，各国政府提出放弃汽油车，全面转向电动车是不现实的，只是一种作秀。原因是电动车会导致巨大的电力需求，全面转型成本巨大，并会将污染转移到发电环节。&lt;/p&gt;
&lt;p&gt;他以日本为例，日本的大部分电力都来自于煤炭和天然气，如果全面转向电动车，那么到了夏季尖峰用电时段，日本将面临“无电可用”的窘境，而建立全国的充电网络更是天价的花费。&lt;/p&gt;
&lt;p&gt;他的警告并非没有根据。特斯拉的超级充电桩，最大功率是 250kW，即每小时耗电250度。目前，中国国内功率最小的充电桩，也要达到 3.5kW，高于空调的耗电。如果居民晚上下班回家，同时在小区里为自己的电动车充电，电网确实可能无法负荷。&lt;/p&gt;
&lt;h3 id=&#34;哈萨克斯坦政府httpswwwengadgetcomtech-giants-browsers-block-kazakhstan-web-surveillance-080031499html要求国民在计算机上安装政府提供的根证书&#34;&gt;&lt;a href=&#34;https://www.engadget.com/tech-giants-browsers-block-kazakhstan-web-surveillance-080031499.html&#34;&gt;哈萨克斯坦政府&lt;/a&gt;要求国民，在计算机上安装政府提供的根证书&lt;/h3&gt;
&lt;p&gt;然后才能访问互联网。苹果、谷歌、微软、Mozilla 进行合作，只要发现该证书，就会提示访问不安全。&lt;/p&gt;
&lt;h3 id=&#34;法国httpsfrreuterscomarticleiduskbn28k0na对谷歌和亚马逊分别罚款1亿欧元和3500万欧元&#34;&gt;&lt;a href=&#34;https://fr.reuters.com/article/idUSKBN28K0NA&#34;&gt;法国&lt;/a&gt;对谷歌和亚马逊分别罚款1亿欧元和3500万欧元&lt;/h3&gt;
&lt;p&gt;理由是它们的网站事先未征求访问者的同意，就设置 Cookie。&lt;/p&gt;
&lt;h3 id=&#34;颗粒积木的妙用httpswwwcoolapkcomfeed23451115sharekeyzdy5oddkngvmotg2nwzkntu2mzi&#34;&gt;&lt;a href=&#34;https://www.coolapk.com/feed/23451115?shareKey=ZDY5ODdkNGVmOTg2NWZkNTU2MzI~&#34;&gt;颗粒积木的妙用&lt;/a&gt;&lt;/h3&gt;
&lt;h3 id=&#34;自然评选-2020-年度十大科学发现httpsmpweixinqqcomscvzjjoq87ftyjwrsno04yq&#34;&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/CVzJjOq87FTYjwRSno04yQ&#34;&gt;《自然》评选 2020 年度十大科学发现&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Nature 杂志评出的2020年度10大科学发现，包括压力使得头发变白的机制、首次观察到宇宙中的快速无线电爆发、大气层的臭氧空洞有修复迹象等等。&lt;/p&gt;
&lt;h3 id=&#34;2020年设计师工具调查报告httpsuxtoolscosurvey-2020&#34;&gt;&lt;a href=&#34;https://uxtools.co/survey-2020/&#34;&gt;2020年设计师工具调查报告&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;UXtools 对设计师的年度调查，各种工具的使用情况，上图是使用最多的 UI 设计软件，前五名依次是 Figma、Sketch、Adobe XD、Illustrator、Photoshop。&lt;/p&gt;
&lt;h3 id=&#34;如何找出-cdn-背后的主机真实-ip-地址httpssoatokblog20200509how-to-de-anonymize-scam-knock-off-sites-hiding-behind-cloudflare&#34;&gt;&lt;a href=&#34;https://soatok.blog/2020/05/09/how-to-de-anonymize-scam-knock-off-sites-hiding-behind-cloudflare/&#34;&gt;如何找出 CDN 背后的主机真实 IP 地址&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;网站启用了 CDN 以后，外部用户就看不到源站的真实 IP 地址了。本文介绍了一个小技巧，某些情况下可能有用。&lt;/p&gt;
&lt;h3 id=&#34;链接的-noopenernoreferrer-和-nofollow-设置httpsblogbhanutejadevnoopener-noreferrer-and-nofollow-when-to-use-them-how-can-these-prevent-phishing-attacks&#34;&gt;&lt;a href=&#34;https://blog.bhanuteja.dev/noopener-noreferrer-and-nofollow-when-to-use-them-how-can-these-prevent-phishing-attacks&#34;&gt;链接的 noopener，noreferrer 和 nofollow 设置&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;为了安全性，网页链接最好设置&lt;code&gt;rel=&amp;quot;noopener noreferrer nofollow&amp;quot;&lt;/code&gt;，本文介绍这三个值的作用。&lt;/p&gt;
&lt;h3 id=&#34;开源软件商业模式的死亡httpsjoemorrisonmediumcomdeath-of-an-open-source-business-model-62bc227a7e9b&#34;&gt;&lt;a href=&#34;https://joemorrison.medium.com/death-of-an-open-source-business-model-62bc227a7e9b&#34;&gt;开源软件商业模式的死亡&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;开源软件常见的商业模式是“软件开源 + 服务收费”，但是云服务商正在杀死这种模式。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果你免费提供软件，并且这种软件足够受欢迎，云服务商将不可避免地使用你的代码提供竞争性服务。他们会毫不留情地用自己的方法痛击你，在你的前院倾倒垃圾。而你的律师则站在你耳边低语，“什么也做不了。”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;标签details的一个作用httpsshksprmobiblog202012a-terrible-way-to-do-footnotes-in-html&#34;&gt;&lt;a href=&#34;https://shkspr.mobi/blog/2020/12/a-terrible-way-to-do-footnotes-in-html/&#34;&gt;标签&lt;!-- raw HTML omitted --&gt;的一个作用&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://camo.githubusercontent.com/7b7f34aeda3e683ee5228edce9055dbe2be5ac08f2ddc1d7731ae08632ff0bc5/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031322f6267323032303132313130322e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;作者提出，可以使用&lt;!-- raw HTML omitted --&gt;标签在网页里面添加脚注（上图）。&lt;/p&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h3 id=&#34;完善的-bash-脚本的最简单形式httpsbetterdevblogminimal-safe-bash-script-template&#34;&gt;&lt;a href=&#34;https://betterdev.blog/minimal-safe-bash-script-template/&#34;&gt;完善的 Bash 脚本的最简单形式&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文通过一个模板，介绍 Bash 脚本的基本知识，如何写出安全的、基本功能完善的脚本。&lt;/p&gt;
&lt;h3 id=&#34;如何使用-github-actions-发布到-github-pageshttpsitsopensourcecompublish-github-pages-with-github-actions&#34;&gt;&lt;a href=&#34;https://itsopensource.com/publish-github-pages-with-github-actions/&#34;&gt;如何使用 GitHub Actions 发布到 GitHub Pages&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个简单的教程，教你通过 GitHub Actions 构建一个静态博客，自动发布到 GitHub Pages。&lt;/p&gt;
&lt;h3 id=&#34;navigator-对象的实验性属性httpsumaarcomdev-tips242-considerate-javascript&#34;&gt;&lt;a href=&#34;https://umaar.com/dev-tips/242-considerate-javascript/&#34;&gt;Navigator 对象的实验性属性&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文介绍浏览器的 Navigator 对象的几个实验性属性，比如获取本机的内存、CPU 核心和网络连接类型。&lt;/p&gt;
&lt;h3 id=&#34;imgdiffhttpsgithubcomn7olkachevimgdiff&#34;&gt;&lt;a href=&#34;https://github.com/n7olkachev/imgdiff&#34;&gt;imgdiff&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;比较两张图片差异的命令行工具。&lt;/p&gt;
&lt;h3 id=&#34;browsertimehttpsgithubcomseanmiller802browsertime&#34;&gt;&lt;a href=&#34;https://github.com/seanmiller802/BrowserTime&#34;&gt;BrowserTime&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Chrome 浏览器的插件，显示一个仪表盘，分析你的浏览历史，显示你在哪些网站花费最多时间。&lt;/p&gt;
&lt;h3 id=&#34;ai-picture-restorerhttpshotpotairestore-picture&#34;&gt;&lt;a href=&#34;https://hotpot.ai/restore-picture&#34;&gt;AI Picture Restorer&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个在线工具，去除老照片的破损和折痕。&lt;/p&gt;
&lt;h3 id=&#34;cloudflare-pageshttpsblogcloudflarecomcloudflare-pages&#34;&gt;&lt;a href=&#34;https://blog.cloudflare.com/cloudflare-pages/&#34;&gt;Cloudflare Pages&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Cloudflare 推出的静态网站构建和托管服务&lt;/p&gt;
&lt;h3 id=&#34;geometrizehttpswwwgeometrizecouk&#34;&gt;&lt;a href=&#34;https://www.geometrize.co.uk/&#34;&gt;Geometrize&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个在线工具，将照片转成基于几何形状的水彩画。&lt;/p&gt;
&lt;h3 id=&#34;owncasthttpsgithubcomowncastowncast&#34;&gt;&lt;a href=&#34;https://github.com/owncast/owncast&#34;&gt;OwnCast&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个可以自己搭建的开源流媒体服务，用作视频的在线播放。&lt;/p&gt;
&lt;h3 id=&#34;tetrishttpsgithubcomk-vernooytetris&#34;&gt;&lt;a href=&#34;https://github.com/k-vernooy/tetris&#34;&gt;tetris&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;命令行的俄罗斯方块游戏。&lt;/p&gt;
&lt;h3 id=&#34;holiday-card-makerhttpsphotoroomcomholiday-card-maker&#34;&gt;&lt;a href=&#34;https://photoroom.com/holiday-card-maker/&#34;&gt;Holiday Card Maker&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个在线工具，上传肖像照，软件会自动去除背景，生成各种节日照片。&lt;/p&gt;
&lt;h3 id=&#34;恐龙的声音httpswwwgooglecomsearchqwhat-sound-does-a-dinosaur-make&#34;&gt;[恐龙的声音](&lt;a href=&#34;https://www.google.com/search?q=what&#34;&gt;https://www.google.com/search?q=what&lt;/a&gt; sound does a dinosaur make)&lt;/h3&gt;
&lt;p&gt;谷歌搜索 “what sound does a dinosaur make”（恐龙的声音是什么），网页就会显示一系列可以播放的动物叫声。&lt;/p&gt;
&lt;h3 id=&#34;elixirschool-博客的中文翻译httpsgithubcomcaicaishmilyelixirschool_blogs&#34;&gt;&lt;a href=&#34;https://github.com/caicaishmily/elixirschool_blogs&#34;&gt;ElixirSchool 博客的中文翻译&lt;/a&gt;&lt;/h3&gt;
&lt;h3 id=&#34;sre-学校httpslinkedingithubioschool-of-sre&#34;&gt;&lt;a href=&#34;https://linkedin.github.io/school-of-sre/&#34;&gt;SRE 学校&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Linkedin 工程团队专门写给新人的 SRE （站点可靠性工程）教程，介绍了一个 DevOps 工程师需要掌握的各种基础知识。&lt;/p&gt;
&lt;h3 id=&#34;计算机安全培训材料httpsopensecuritytraininginfotraininghtml&#34;&gt;&lt;a href=&#34;https://opensecuritytraining.info/Training.html&#34;&gt;计算机安全培训材料&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;该网站提供计算机安全方面完整的英文培训材料，共包含29节课&lt;/p&gt;
&lt;h3 id=&#34;免费的-python-英文书籍httpswwwpythonkitchencomlegally-free-python-books-list&#34;&gt;&lt;a href=&#34;https://www.pythonkitchen.com/legally-free-python-books-list/&#34;&gt;免费的 Python 英文书籍&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文整理了一张免费书籍清单，都是网上合法的 Python 学习资源，书目相当多&lt;/p&gt;
&lt;h3 id=&#34;瑞士的军事掩体httpswwwamusingplanetcom201507the-camouflaged-military-bunkers-ofhtml&#34;&gt;&lt;a href=&#34;https://www.amusingplanet.com/2015/07/the-camouflaged-military-bunkers-of.html&#34;&gt;瑞士的军事掩体&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;瑞士是一个中立国，但拥有强大的军事力量。阿尔卑斯山上遍布军事设施，并精心制作了掩体，以便融入周围的景观。&lt;/p&gt;
&lt;h3 id=&#34;世界末日时钟httpsenwikipediaorgwikidoomsday_clock&#34;&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Doomsday_Clock&#34;&gt;世界末日时钟&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;1945年，美国在日本投放了两颗原子弹，这引发了核战争引发世界末日的担忧。&lt;/p&gt;
&lt;p&gt;1947年，一些参与曼哈顿计划的核物理学家，在芝加哥大学出版了一本杂志《原子科学家公报》。封面上画了一个时钟，表示人类离世界末日正在倒计时。&lt;/p&gt;
&lt;p&gt;午夜零点表示世界末日，时钟的时间离零点还有7分钟。这个时钟因此称为“世界末日时钟”（Doomsday Clock）。&lt;/p&gt;
&lt;p&gt;后来，杂志的每一期都是这个封面，但是距离世界末日的时间一直在调整，迄今为止一共调整了22次。&lt;/p&gt;
&lt;p&gt;1949年，苏联试验原子弹，末日时钟调为3分钟。&lt;/p&gt;
&lt;p&gt;1953年，美国和苏联开始测试氢弹，调为2分钟。&lt;/p&gt;
&lt;p&gt;1963年，美苏签订《部分禁止核试验条约》，调为12分钟。&lt;/p&gt;
&lt;p&gt;1981年，苏联入侵阿富汗，美苏军备竞赛升级，里根政府提出“星球大战”计划，调为4分钟。&lt;/p&gt;
&lt;p&gt;1991年，柏林墙倒塌，东欧巨变，美苏签署《第一阶段削减战略武器条约》，调为17分钟。&lt;/p&gt;
&lt;p&gt;2007年，气候变暖，核电站不断增加，调为5分钟。&lt;/p&gt;
&lt;p&gt;2017年，特朗普当选美国总统，否认气候变化，调为150秒。&lt;/p&gt;
&lt;p&gt;2018年，朝鲜试验核武器，调为120秒。&lt;/p&gt;
&lt;p&gt;2020年1月23日，由于全球气候变暖无法避免，调为100秒。也就是说，科学家认为，现在是距离世界末日最近的时刻。&lt;/p&gt;
&lt;h3 id=&#34;世界科学技术工程学院httpsenwikipediaorgwikiworld_academy_of_science_engineering_and_technology&#34;&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/World_Academy_of_Science,_Engineering_and_Technology&#34;&gt;世界科学技术工程学院&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;上个世纪，土耳其人塞马尔·阿尔迪（Cemal Ardil）注册成立了一家“世界科学技术工程学院”（World Academy of Science, Engineering and Technology，简称 WASET）。这是一家营利性机构，专门安排各种各样虚假的学术会议，人为提高演讲者和论文提交者的学术履历。&lt;/p&gt;
&lt;p&gt;它每年组织成千上万次科学会议，会议的名称与真正的科学团体组织的真实会议很相似。2018年，世界科学技术工程学院共发布了49,844个会议广告，其中许多会议名称雷同，而且安排在同一天的同一地点。比如2016年2月，里约热内卢的一家酒店同一时间安排了116场科学会议。&lt;/p&gt;
&lt;p&gt;这些会议的质量很差，任何人只要支付注册费就可以提交论文。很多科学家在不知情的情况下，被列入组委会名单。&lt;/p&gt;
&lt;p&gt;2013年发生了一件丑闻，一个英国科学家在世界科学技术工程学院主办的期刊《国际医学，药学，生物和生命科学杂志》上，发表了一篇假论文，数据都是伪造的。然后，他自己引用这篇论文，将成果提交给了《科学》杂志。&lt;/p&gt;
&lt;p&gt;外界计算，世界科学技术工程学院2017年的收入大约为4,495,219美元。&lt;/p&gt;
&lt;h3 id=&#34;下铁雨的星星httpsphysorgnews2020-03-large-telescope-exoplanet-ironhtml&#34;&gt;&lt;a href=&#34;https://phys.org/news/2020-03-large-telescope-exoplanet-iron.html&#34;&gt;下铁雨的星星&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;科学家通过架设在智利的超大望远镜 VLT，发现在双鱼座有一颗距离地球约640光年的行星，天上下的不是雨，而是金属铁。&lt;/p&gt;
&lt;p&gt;这颗行星在白天温度会攀升至2400摄氏度以上，足以使地表的铁金属汽化。强风将铁蒸气吹到半空，到了凉爽的夜晚，气温下降，铁蒸汽冷凝成铁滴，以雨点的形式重新落到地面。&lt;/p&gt;
&lt;h3 id=&#34;大阪美术馆httpswwwopenculturecom202012hokusais-iconic-print-the-great-wave-off-kanagawa-recreated-with-50000-lego-brickshtml&#34;&gt;&lt;a href=&#34;https://www.openculture.com/2020/12/hokusais-iconic-print-the-great-wave-off-kanagawa-recreated-with-50000-lego-bricks.html&#34;&gt;大阪美术馆&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;50000块乐高积木搭建的葛饰北斋著名版画《神奈川冲浪里》。&lt;/p&gt;
&lt;h3 id=&#34;中国巨型摩天高楼时代似乎已经过去了httpswwwinkstonenewscomsocietydays-chinese-mega-skyscraper-appear-be-overarticle3114834&#34;&gt;&lt;a href=&#34;https://www.inkstonenews.com/society/days-chinese-mega-skyscraper-appear-be-over/article/3114834&#34;&gt;中国巨型摩天高楼时代似乎已经过去了&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;世界最高的100座建筑物，44座在中国。但是，国外媒体报道，中国住房和城乡建设部最近禁止建造超过500米的高层建筑，同时要求严控建造250米以上的建筑物。大家终于意识到了，摩天大楼并不宜居，不仅成本高，而且带来很大的环境压力。&lt;/p&gt;
&lt;h3 id=&#34;浏览器的虚拟机检测httpsbanneditgithubiovirtual-machine-detection-in-the-browserhtml&#34;&gt;&lt;a href=&#34;https://bannedit.github.io/Virtual-Machine-Detection-In-The-Browser.html&#34;&gt;浏览器的虚拟机检测&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这篇文章介绍了四个方法，可以使用网页脚本判断，当前浏览器是否运行在虚拟机里面。&lt;/p&gt;
&lt;h3 id=&#34;如何只使用-emcascript-模块开发httpsjounikantolaseblog2020-12-20no-fuzz-development-with-ecmascript-modules&#34;&gt;&lt;a href=&#34;https://jouni.kantola.se/blog/2020-12-20/no-fuzz-development-with-ecmascript-modules/&#34;&gt;如何只使用 EMCAScript 模块开发&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文演示如何在 Node.js 环境里面，写 EMCAScript 模块代码，并运行单元测试，然后不用构建，直接在浏览器运行代码。&lt;/p&gt;
&lt;h3 id=&#34;5g-无线电波会损害健康吗httpbackreactionblogspotcom202012all-you-need-to-know-about-5ghtml&#34;&gt;&lt;a href=&#34;http://backreaction.blogspot.com/2020/12/all-you-need-to-know-about-5g.html&#34;&gt;5G 无线电波会损害健康吗？&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;5G 引入了毫米波，比 4G 频率高10倍多，理论上会携带更多的能量。本文讨论它对人体会不会有影响。&lt;/p&gt;
&lt;h3 id=&#34;arm-芯片是如何诞生的httpsarstechnicacomfeatures202012how-an-obscure-british-pc-maker-invented-arm-and-changed-the-world&#34;&gt;&lt;a href=&#34;https://arstechnica.com/features/2020/12/how-an-obscure-british-pc-maker-invented-arm-and-changed-the-world/&#34;&gt;ARM 芯片是如何诞生的&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文介绍了英国 ARM 公司的由来，以及他们设计的芯片。对于了解 x86 和 ARM 两种 CPU 架构的早期历史和区别，很有帮助。&lt;/p&gt;
&lt;h3 id=&#34;我的软件工程公理httpsmartinruecommy-engineering-axioms&#34;&gt;&lt;a href=&#34;https://martinrue.com/my-engineering-axioms/&#34;&gt;我的软件工程公理&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者总结了他心目中软件工程的25条公理。我觉得总结得挺好，比如“产品是资产，代码是负债”、“好的代码是易于删除的代码”、“坚持小团队，小心地对待团队成长”等等。&lt;/p&gt;
&lt;h3 id=&#34;javascript-的-tojson-函数是什么httpthecodebarbariancomwhat-is-the-tojson-function-in-javascripthtml&#34;&gt;&lt;a href=&#34;http://thecodebarbarian.com/what-is-the-tojson-function-in-javascript.html&#34;&gt;JavaScript 的 toJSON() 函数是什么？&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;JavaScript 语言中，一个对象只要部署了&lt;code&gt;toJSON()&lt;/code&gt;方法，就可以被转成 JSON 字符串。很多库都使用了这个方法，比如 Express 框架的&lt;code&gt;res.json()&lt;/code&gt;就是这样实现的。&lt;/p&gt;
&lt;h3 id=&#34;浏览器的异步-cookie-store-apihttpsmediumcomnmc-techblogintroducing-the-async-cookie-store-api-89cbecf401f&#34;&gt;&lt;a href=&#34;https://medium.com/nmc-techblog/introducing-the-async-cookie-store-api-89cbecf401f&#34;&gt;浏览器的异步 Cookie Store API&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;以前，我们只能用&lt;code&gt;document.cookie&lt;/code&gt;来操作 Cookie，Chrome 87 引入了一个新的 Cookie Store API。&lt;/p&gt;
&lt;h3 id=&#34;email-verifierhttpsgithubcomaftershipemail-verifier&#34;&gt;&lt;a href=&#34;https://github.com/aftership/email-verifier&#34;&gt;email-verifier&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Go 语言写的 Email 地址检验库，判断是不是假地址。判断原理参见&lt;a href=&#34;https://segmentfault.com/a/1190000038571446&#34;&gt;这篇文章&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&#34;go-zerohttpsgithubcomtal-techgo-zero-1&#34;&gt;&lt;a href=&#34;https://github.com/tal-tech/go-zero&#34;&gt;go-zero&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;国内开发者写的 Go 语言 Web 和 rpc 框架，有中文文档。&lt;/p&gt;
&lt;h3 id=&#34;plannerhttpsplanner-todowebapp&#34;&gt;&lt;a href=&#34;https://planner-todo.web.app/&#34;&gt;Planner&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Linux 平台处理待办事项（Todos）的桌面软件，功能很强。&lt;/p&gt;
&lt;h3 id=&#34;mdpdfhttpsgithubcombluehatbritmdpdf&#34;&gt;&lt;a href=&#34;https://github.com/BlueHatbRit/mdpdf&#34;&gt;Mdpdf&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个将 Markdown 转为 PDF 文件的 JS 库，底层是谷歌的无头浏览器 Puppeteer。&lt;/p&gt;
&lt;h3 id=&#34;personal-management-systemhttpsgithubcomvolmargpersonal-management-system&#34;&gt;&lt;a href=&#34;https://github.com/Volmarg/personal-management-system&#34;&gt;Personal Management System&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个 Web 开源应用，可以自己搭建服务，将个人信息（笔记、代码事项、密码、日程安排、联系人等等）放在一个地方管理。&lt;/p&gt;
&lt;h3 id=&#34;upptimehttpsupptimejsorg&#34;&gt;&lt;a href=&#34;https://upptime.js.org/&#34;&gt;Upptime&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个 GitHub Actions 模板，每5分钟运行一次，检查指定的网站是否在线。&lt;/p&gt;
&lt;h3 id=&#34;linkacehttpsgithubcomkovahlinkace&#34;&gt;&lt;a href=&#34;https://github.com/Kovah/LinkAce/&#34;&gt;LinkAce&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个自托管的网络书签应用。&lt;/p&gt;
&lt;h3 id=&#34;游戏-ui-数据库httpswwwgameuidatabasecom&#34;&gt;&lt;a href=&#34;https://www.gameuidatabase.com/&#34;&gt;游戏 UI 数据库&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;该网站收集各种游戏的 UI 设计，提供多种分类，比如上图是第一人称视角的游戏。&lt;/p&gt;
&lt;h3 id=&#34;计算机教育缺失的一课httpsmissing-semester-cngithubio&#34;&gt;&lt;a href=&#34;https://missing-semester-cn.github.io/&#34;&gt;计算机教育缺失的一课&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;麻省理工学院计算机课程的中文版，向学生介绍基本的软件开发工具，帮助学生提高使用工具的能力。&lt;/p&gt;
&lt;h3 id=&#34;releaseeyehttpsreleaseeyeinfo&#34;&gt;&lt;a href=&#34;https://releaseeye.info/&#34;&gt;ReleaseEye&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;该网站列出最近发行新版本的软件。&lt;/p&gt;
&lt;h3 id=&#34;如何创业系列视频httpsstartupclasssamaltmancom&#34;&gt;&lt;a href=&#34;https://startupclass.samaltman.com/&#34;&gt;《如何创业》系列视频&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;创业孵化公司 Y Combinator 的前总裁 Sam Altman，整理的系列视频讲座。&lt;/p&gt;
&lt;h3 id=&#34;世界保存最好的恐龙化石httpswwwearthlymissioncomdinosaur-mummy-science-discovery-nodosaur-intact-canada&#34;&gt;&lt;a href=&#34;https://www.earthlymission.com/dinosaur-mummy-science-discovery-nodosaur-intact-canada/&#34;&gt;世界保存最好的恐龙化石&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;2017年，加拿大发现了一具恐龙化石，距今1.1亿年，保存之完好令人震惊。皮肤、鳞甲、内脏都是完整的，实际上是恐龙木乃伊，而不是化石。它是怎么形成的，仍然是一个谜。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/59922203cee790feb98031ef04901cf089f84e3bee882e1fa111be8b736c1f7f/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323030352f6267323032303035323330342e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/59922203cee790feb98031ef04901cf089f84e3bee882e1fa111be8b736c1f7f/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323030352f6267323032303035323330342e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/c69990a852acb64f1bee17b621b62310932143b80a4622c9f2ac4c17bdf0692c/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323030352f6267323032303035323330352e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/c69990a852acb64f1bee17b621b62310932143b80a4622c9f2ac4c17bdf0692c/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323030352f6267323032303035323330352e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/fee905000de9e53a6c391eb3bda3494ba6ce039da96a83608d4719d09f3e4fa9/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323030352f6267323032303035323330362e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/fee905000de9e53a6c391eb3bda3494ba6ce039da96a83608d4719d09f3e4fa9/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323030352f6267323032303035323330362e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/b283b83d2e25c2bbbf0391ffea14b4751f0402fe51200bbea0b0180df4691c9c/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323030352f6267323032303035323330372e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/b283b83d2e25c2bbbf0391ffea14b4751f0402fe51200bbea0b0180df4691c9c/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323030352f6267323032303035323330372e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这头恐龙长5.5米，下面是它的复原图。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/b9d2d0cbc9aae7d3c3303747bbe3dda76887c0d40042e1b98bfad2fadc0c7aa1/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323030352f6267323032303035323330332e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/b9d2d0cbc9aae7d3c3303747bbe3dda76887c0d40042e1b98bfad2fadc0c7aa1/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323030352f6267323032303035323330332e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;纽约住宅的前门楼梯httpsephemeralnewyorkwordpresscom20201207how-new-york-became-a-metropolis-of-stoops&#34;&gt;&lt;a href=&#34;https://ephemeralnewyork.wordpress.com/2020/12/07/how-new-york-became-a-metropolis-of-stoops/&#34;&gt;纽约住宅的前门楼梯&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;纽约市很多住宅楼，尤其是老住宅楼，都装有前门楼梯。这成了纽约市的一种特色。&lt;/p&gt;
&lt;p&gt;这是因为纽约最早是荷兰人的殖民地，早期的住宅楼都是荷兰式的。荷兰地势低洼，经常被水淹，所以住宅都修得较高，必须走楼梯进入，免得洪水淹没客厅的地板。&lt;/p&gt;
&lt;p&gt;后来的建筑师沿袭了这种风格，即使没有淹水的风险，也加高了客厅，修建了前门楼梯。&lt;/p&gt;
&lt;h3 id=&#34;科幻小说机器人排除协议httpswwwftraincomrobot_exclusion_protocol&#34;&gt;&lt;a href=&#34;https://www.ftrain.com/robot_exclusion_protocol&#34;&gt;科幻小说《机器人排除协议》&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;下面是 Paul Ford 创作的一篇极短篇科幻小说。&lt;/p&gt;
&lt;p&gt;我脱掉衣服，走进淋浴间，发现一个机器人在排水管旁边。它大概60厘米高，由金属制成，摄像头就是它的眼睛，还带有几十个机械抓手。&lt;/p&gt;
&lt;p&gt;它说：“Hi！我来自 Google，我是谷歌机器人，我不会伤害你。”&lt;/p&gt;
&lt;p&gt;我说：“我知道你是什么。”&lt;/p&gt;
&lt;p&gt;它说：“我正在对你的公寓编制索引。”&lt;/p&gt;
&lt;p&gt;我说：“我不允许你待在这里。谁让你进来的？”&lt;/p&gt;
&lt;p&gt;“我是 Google 的产品！我会发现很多好东西。我会找到你的内衣，还会观看你的录像带，那些属于你的独一无二的东西。我会找出关键词，并且编制链接。我的主人会说：‘干得好，小机器人！’ 很多用户会通过我们的链接，发现你，哈哈哈。”&lt;/p&gt;
&lt;p&gt;“我在大门上贴了《机器人排除协议》。你没看到吗？”&lt;/p&gt;
&lt;p&gt;“您了解Google吗？我索引了很多东西，如果我干得好，我可以去机器人公园，安装更多的处理器，还能上油。谢谢 Google！我必须进公寓来编制索引。必须的！” 他的摄像头向我眨了眨眼睛。&lt;/p&gt;
&lt;p&gt;“我知道我的权力。我给你10秒钟离开。”&lt;/p&gt;
&lt;p&gt;“好吧，我离开。但让我编完索引，每一样东西！我是 Google 的产品！”它伸出一支机械手臂，阅读洗发精瓶子上面的标签。我操起一把折叠椅，把它打烂。你去对垃圾桶编制索引吧。&lt;/p&gt;
&lt;h3 id=&#34;jetbrains-公司和-kotlin-语言httpswwwbloombergcomnewsarticles2020-12-18czech-startup-founders-turn-billionaires-without-vc-help&#34;&gt;&lt;a href=&#34;https://www.bloomberg.com/news/articles/2020-12-18/czech-startup-founders-turn-billionaires-without-vc-help&#34;&gt;JetBrains 公司和 Kotlin 语言&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;JetBrains 是一家位于捷克布拉格的软件公司。它由三个俄罗斯程序员2000年创立，现在依然是俄罗斯最大的程序员雇主之一，但是公司注册地搬到了捷克。&lt;/p&gt;
&lt;p&gt;它从来没有接受过外部的风险投资，今年的公司收益可望达到2亿美元，现在的估值已经达到了70亿美元。创始人之一和 CEO 马克西姆·沙菲罗夫（Maxim Shafirov）说：“公司有足够的资源来实现我们的抱负，不用接受风险投资。”&lt;/p&gt;
&lt;p&gt;它以开发各种语言的 IDE 而闻名，最著名的就是 IntelliJ IDEA，全世界最流行最强大的 Java IDE 之一。&lt;/p&gt;
&lt;p&gt;2011年，JetBrains 发布了一种新语言 Kotlin。它是基于 Java 虚拟机 JVM 的一种新语言，既有友好简单的语法，又像 Java 一样可以快速编译。&lt;/p&gt;
&lt;p&gt;考虑到 Java 是印尼的一个岛屿，开发团队希望也以一个岛屿命名这种新语言，就选择了圣彼得堡附近的 Kotlin 岛。&lt;/p&gt;
&lt;p&gt;谷歌大力支持 Kotlin。2019年，谷歌宣布 Kotlin 是 Android 开发的首选语言，目前有超过60％的专业安卓开发者都在使用 Kotlin，包括谷歌本身。&lt;/p&gt;
&lt;p&gt;据 JetBrains 透露，全世界有950万程序员在使用他们公司的软件，其中20％是付费用户。&lt;/p&gt;
&lt;h3 id=&#34;降噪头枕httpsspectrumieeeorgtech-talkconsumer-electronicsaudiovideoactive-noise-cancellation-using-ldvs&#34;&gt;&lt;a href=&#34;https://spectrum.ieee.org/tech-talk/consumer-electronics/audiovideo/active-noise-cancellation-using-ldvs&#34;&gt;降噪头枕&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;降噪耳机的原理是发出频率相同、波形相反的声波，与外部噪音互相抵消。悉尼科技大学的一个团队根据这个原理，开发出了降噪头枕，装在椅子上，不用戴耳机，只要把头靠在上面，就会听不到噪音。&lt;/p&gt;
&lt;p&gt;这个头枕内部，装了多个扬声器，会对着乘客的耳道发出抵消噪音的声波。根据测试，可以降低噪音10分贝～20分贝。但是，它有一个问题，乘客的头必须靠在指定位置，一旦转头，声波就无法对准耳道了。研究团队正在考虑开发一个头部跟踪系统，解决这个问题。&lt;/p&gt;
&lt;h3 id=&#34;定期商品评价httpswwwbuyforlifecomblog4kpaltbng6mksemj44nivvrecurring-reviews-to-track-the-whole-lifecycle-of-a-product&#34;&gt;&lt;a href=&#34;https://www.buyforlife.com/blog/4kpaLtbnG6MkseMj44niVV/recurring-reviews-to-track-the-whole-lifecycle-of-a-product&#34;&gt;定期商品评价&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/ed7feb386ec10f38ec377803a6c76286a9ac3e753f916aead20c8266953114dd/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031322f6267323032303132323930352e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/ed7feb386ec10f38ec377803a6c76286a9ac3e753f916aead20c8266953114dd/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031322f6267323032303132323930352e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;网上商品的用户评价，往往缺乏真实性。除了商家做假，很多评价是用户刚拿到商品时写的，来不及深入使用。一家美国的网上商店，为了保证用户评价的真实性，发明了“定期评价”机制。&lt;/p&gt;
&lt;p&gt;用户购买商品以后，每年会定期收到一份邮件，请用户上传照片和评价过去一年里面的使用感受。上图就是购买两月、两年、五年后，用户分别上传的照片。这样的话，就能看到整个生命周期的用户评价。&lt;/p&gt;
&lt;h3 id=&#34;木制卫星httpswwwbbccomnewsbusiness-55463366&#34;&gt;&lt;a href=&#34;https://www.bbc.com/news/business-55463366&#34;&gt;木制卫星&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;世界各国发射的卫星越来越多，其中绝大部分完成使命后，都会重返地球。卫星穿过大气层会发生燃烧，释放出有害物质，落到地面也会造成污染。&lt;/p&gt;
&lt;p&gt;为了解决这个环境问题，日本京都大学与一家林业公司合作，开发木制卫星，目标是到2023年发射世界上第一颗用木头制成的人造卫星，仪器放在木制外壳中。这种卫星重返地球时，会在大气层中彻底燃烧光，对环境没有影响。&lt;/p&gt;
&lt;h3 id=&#34;意念假肢httpsneurosciencenewscombci-prosthetic-limb-movement-17423&#34;&gt;&lt;a href=&#34;https://neurosciencenews.com/bci-prosthetic-limb-movement-17423/&#34;&gt;意念假肢&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;2019年1月，约翰霍普金斯大学在一个四肢瘫痪病人的大脑中，植入了六个电极。这个病人已经瘫痪了30年，只有前臂和手指能够微微移动。现在，经过两年的训练，他已经可以通过脑机接口，让大脑电极感受到手指的运动，从而操作假肢，完成一些简单的任务，比如给自己喂饭。&lt;/p&gt;
&lt;p&gt;这件事情最大的挑战在于，同时控制两个假肢，让左手和右手配合行动。研究团队的下一个目标是，尝试不通过视觉完成某些任务，比如不必看着就能系鞋带。&lt;/p&gt;
&lt;h3 id=&#34;贻贝水质检测httpswwwpolishnewscoukpoznan-the-clams-filter-the-water-they-check-whether-the-water-is-polluted-or-clean&#34;&gt;&lt;a href=&#34;https://www.polishnews.co.uk/poznan-the-clams-filter-the-water-they-check-whether-the-water-is-polluted-or-clean/&#34;&gt;贻贝水质检测&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;多年来，波兰城市波兹南（Poznań）一直使用贻贝，进行自来水的水质检测。这比化学检测更简单便宜，准确性也不差。贻贝对水质非常敏感，一旦发现自来水不干净，或者被污染，它就会闭合外壳。&lt;/p&gt;
&lt;p&gt;自来水公司一共有三个测量设备，每个设备使用8个贻贝。贻贝的外壳都贴了磁铁，用来监控它是闭合还是张开。如果有两三个贻贝闭合，那可能是偶然情况；如果八个同时闭合，那就一定是水质出了问题。一年总共消耗200多个贻贝。&lt;/p&gt;
&lt;h3 id=&#34;富士公司httpspetapixelcom20201226fujifilm-created-a-magnetic-tape-that-can-store-580-terabytes开发出容量达到-580tb-的磁带&#34;&gt;&lt;a href=&#34;https://petapixel.com/2020/12/26/fujifilm-created-a-magnetic-tape-that-can-store-580-terabytes/&#34;&gt;富士公司&lt;/a&gt;开发出容量达到 580TB 的磁带&lt;/h3&gt;
&lt;p&gt;是世界储存容量最大的磁带，比目前市场出售的产品大50倍。&lt;/p&gt;
&lt;h3 id=&#34;根据阳光和阴影推测拍摄信息httpstechnewstw20201215the-angle-of-sunlight-and-shadow-can-reveal-where-the-photo-was-taken&#34;&gt;&lt;a href=&#34;https://technews.tw/2020/12/15/the-angle-of-sunlight-and-shadow-can-reveal-where-the-photo-was-taken/&#34;&gt;根据阳光和阴影推测拍摄信息&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者介绍 SunCalc 这个软件，可以根据某个地点的阴影，推测拍摄时间，或者在已知拍摄时间的情况下，推测阳光在拍摄者的哪一个方向，进而缩小地点范围。&lt;/p&gt;
&lt;h3 id=&#34;中国-5g-网络的频率分配httpswwwtmtpostcom4912205html&#34;&gt;&lt;a href=&#34;https://www.tmtpost.com/4912205.html&#34;&gt;中国 5G 网络的频率分配&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这篇文章介绍国内无线电频谱调整的现状，一部分 4G 频率重新分配给5G，同时腾退了一些 2G 和 3G 的频率。&lt;/p&gt;
&lt;h3 id=&#34;有限状态机与正则表达式httpsqntmorgplants&#34;&gt;&lt;a href=&#34;https://qntm.org/plants&#34;&gt;有限状态机与正则表达式&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;有限状态机和正则表达式是等效的，作者举了一个两者转换的形象的例子。&lt;/p&gt;
&lt;h3 id=&#34;谷歌表格制作数字时钟httpswwwtherobinlordcommaking-a-digital-clock-in-google-sheets&#34;&gt;&lt;a href=&#34;https://www.therobinlord.com/making-a-digital-clock-in-google-sheets/&#34;&gt;谷歌表格制作数字时钟&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者介绍如何使用函数，在谷歌表格里面制作一个自动计时的数字时钟。&lt;/p&gt;
&lt;h3 id=&#34;编程需要多少数学httpslispmachinewordpresscom20141205how-much-math-you-need-for-programming&#34;&gt;&lt;a href=&#34;https://lispmachine.wordpress.com/2014/12/05/how-much-math-you-need-for-programming/&#34;&gt;编程需要多少数学？&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这是一个程序员学习数学的体会。结论很简单：你不需要懂数学就可以成为一流的程序员，但是通过学习数学，可以了解更多解决问题的方法。&lt;/p&gt;
&lt;h3 id=&#34;移动优先为什么是一个坏主意httpswebarchiveorgweb20201228005247if_httpsplanflowdevblogwhy-mobile-first-is-a-bad-idea&#34;&gt;&lt;a href=&#34;https://web.archive.org/web/20201228005247if_/https://planflow.dev/blog/why-mobile-first-is-a-bad-idea&#34;&gt;移动优先为什么是一个坏主意？&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;很多人提倡，网站的样式应该“移动优先”（mobile first）。作者认为，这种想法不正确，应该优先设计桌面端的样式，然后再考虑移动端。&lt;/p&gt;
&lt;h3 id=&#34;三个编程部落httpsjosephgcomblog3-tribes&#34;&gt;&lt;a href=&#34;https://josephg.com/blog/3-tribes/&#34;&gt;三个编程部落&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一篇探讨编程哲学的文章。作者认为，有三种不同的对待编程的观点，一种认为代码是艺术，一种认为代码是为硬件服务的，一种认为代码是为了创造新东西。&lt;/p&gt;
&lt;h3 id=&#34;如何通过-cloudflare-worker-搭建负载均衡服务器httpsjustyycomarchives44793&#34;&gt;&lt;a href=&#34;https://justyy.com/archives/44793&#34;&gt;如何通过 CloudFlare Worker 搭建负载均衡服务器&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Cloudflare Worker 是一种 Serverless 服务，本文给出示例，用它实现负载均衡器，每月可以免费10万次请求。&lt;/p&gt;
&lt;h3 id=&#34;librephotoshttpsgithubcomlibrephotoslibrephotos&#34;&gt;&lt;a href=&#34;https://github.com/LibrePhotos/librephotos&#34;&gt;librephotos&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个自托管的相册应用，后端是 Django，前端是 React。&lt;/p&gt;
&lt;h3 id=&#34;best-resume-everhttpsgithubcomsalomonellibest-resume-ever&#34;&gt;&lt;a href=&#34;https://github.com/salomonelli/best-resume-ever&#34;&gt;best-resume-ever&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个基于 Web 的简历模板，可以生成网页简历，然后用浏览器打印成 PDF 文件。&lt;/p&gt;
&lt;h3 id=&#34;artlinehttpsgithubcomvijishmadhavanartline&#34;&gt;&lt;a href=&#34;https://github.com/vijishmadhavan/ArtLine&#34;&gt;ArtLine&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个深度学习项目，将照片转为线条素描画，这里有可以运行的 &lt;a href=&#34;https://github.com/jwenjian/artline-demo&#34;&gt;Demo&lt;/a&gt;（Flask 应用）。&lt;/p&gt;
&lt;h3 id=&#34;ssdthttpsgithubcom62726164a-survey-of-security-dot-txt&#34;&gt;&lt;a href=&#34;https://github.com/62726164/a-survey-of-security-dot-txt&#34;&gt;ssdt&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;网站的 security.txt 文件提供安全漏洞的联系信息。这个项目抓取了世界前100万个网站的 security.txt 文件。&lt;/p&gt;
&lt;h3 id=&#34;pure-css-digital-clockhttpswwwquaxiocompure_css_digital_clockhtml&#34;&gt;&lt;a href=&#34;https://www.quaxio.com/pure_css_digital_clock.html&#34;&gt;pure CSS digital clock&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个纯 CSS 的数字时钟。但是，CSS 无法获取当前时间，所以只能显示为从12点开始。&lt;/p&gt;
&lt;h3 id=&#34;pipedreamhttpspipedreamcom&#34;&gt;&lt;a href=&#34;https://pipedream.com/&#34;&gt;Pipedream&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个计算平台，可以监听网络应用的各种事件，从而触发各种事先设定的操作。&lt;/p&gt;
&lt;h3 id=&#34;scrollamajshttpsgithubcomrussellgoldenbergscrollama&#34;&gt;&lt;a href=&#34;https://github.com/russellgoldenberg/scrollama&#34;&gt;Scrollama.js&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个网页滚动效果的封装库，基于 IntersectionObserver API。&lt;/p&gt;
&lt;h3 id=&#34;dall-ehttpsopenaicomblogdall-e&#34;&gt;&lt;a href=&#34;https://openai.com/blog/dall-e/&#34;&gt;DALL-E&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;OpenAI 公司又推出了一个神奇的软件 DALL-E，可以根据文字描述自动生成图片&lt;/p&gt;
&lt;h3 id=&#34;my-iconhttpsmyiconio&#34;&gt;&lt;a href=&#34;https://myicon.io/&#34;&gt;My Icon&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一套免费图标，用来更换 iOS 14 的图标。一共有几千个图标可供选择，还允许自定义和编辑。&lt;/p&gt;
&lt;h3 id=&#34;树莓派的-pci-express-兼容设备httpspipcijeffgeerlingcom&#34;&gt;&lt;a href=&#34;https://pipci.jeffgeerling.com/&#34;&gt;树莓派的 PCI Express 兼容设备&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;树莓派 Raspberry Pi 4 配有一个 PCI Express 1x 接口。该网站列出各种可以兼容这个接口的设备。&lt;/p&gt;
&lt;h3 id=&#34;苹果历史上的20个产品httpssixcolorscompost20201220-macs-for-2020-1-imac-g3&#34;&gt;&lt;a href=&#34;https://sixcolors.com/post/2020/12/20-macs-for-2020-1-imac-g3/&#34;&gt;苹果历史上的20个产品&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一组英语的系列文章，一共20篇，详细回顾苹果公司历史上具有重要意义的20个产品，每个产品都会深入介绍历史背景和设计制造过程。第一篇就是乔布斯回归苹果后的第一个产品 iMac G3。&lt;/p&gt;
&lt;h3 id=&#34;linux-加固指南httpsmadaidans-insecuritiesgithubioguideslinux-hardeninghtmllinux-hardening-guide&#34;&gt;&lt;a href=&#34;https://madaidans-insecurities.github.io/guides/linux-hardening.html&#34;&gt;Linux 加固指南&lt;/a&gt;（Linux Hardening Guide）&lt;/h3&gt;
&lt;p&gt;这篇英语长文整理了各种 Linux 的调整步骤，使得它变得更安全。&lt;/p&gt;
&lt;h3 id=&#34;bigdata_analysehttpsgithubcomturbowaybigdata_analyse&#34;&gt;&lt;a href=&#34;https://github.com/TurboWay/bigdata_analyse&#34;&gt;bigdata_analyse&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这个仓库收集一些真实的大数据分析案例，用来了解如何处理不同行业的分析指标。目前有4个案例，包括1亿条淘宝用户行为数据分析、7000条租房数据分析等等。&lt;/p&gt;
&lt;h3 id=&#34;hello-github第-57-期httpsgithubcom521xueweihanhellogithubblobmastercontent57hellogithub57md&#34;&gt;&lt;a href=&#34;https://github.com/521xueweihan/HelloGitHub/blob/master/content/57/HelloGitHub57.md&#34;&gt;Hello GitHub（第 57 期）&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;分享GitHub上有趣，入门级的开源项目的月刊，帮你找到编程的乐趣。&lt;/p&gt;
&lt;h3 id=&#34;go-语言高性能编程httpsgithubcomgeektutuhigh-performance-go&#34;&gt;&lt;a href=&#34;https://github.com/geektutu/high-performance-go&#34;&gt;Go 语言高性能编程&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;免费的中文电子书，作者介绍了 Go 程序提高性能的一些技巧。&lt;/p&gt;
&lt;h3 id=&#34;url-短链接服务设置-cookiehttpsylukemcomblogurl-shorteners-set-ad-tracking-cookies&#34;&gt;&lt;a href=&#34;https://ylukem.com/blog/url-shorteners-set-ad-tracking-cookies&#34;&gt;URL 短链接服务设置 Cookie&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者发现很多流行的 URL 短链接服务，比如 TinyURL、t.co、bit.ly 都在用户的计算机上设置 Cookie，用来广告追踪。&lt;/p&gt;
&lt;h3 id=&#34;excalidraw-的一年httpsblogexcalidrawcomone-year-of-excalidraw&#34;&gt;&lt;a href=&#34;https://blog.excalidraw.com/one-year-of-excalidraw/&#34;&gt;Excalidraw 的一年&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Excalidraw 是手绘风格的一个在线作图工具，2020年1月发布。本文讲述这个项目一年来的惊人发展。&lt;/p&gt;
&lt;h3 id=&#34;url-短链接服务设置-cookiehttpsylukemcomblogurl-shorteners-set-ad-tracking-cookies-1&#34;&gt;&lt;a href=&#34;https://ylukem.com/blog/url-shorteners-set-ad-tracking-cookies&#34;&gt;URL 短链接服务设置 Cookie&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者发现很多流行的 URL 短链接服务，比如 TinyURL、t.co、bit.ly 都在用户的计算机上设置 Cookie，用来广告追踪。&lt;/p&gt;
&lt;h3 id=&#34;使用-cloudflare-worker-提供短链接服务httpslucjanmediumcomfree-url-shortener-with-cloudflare-workers-125eaf87b1ec&#34;&gt;&lt;a href=&#34;https://lucjan.medium.com/free-url-shortener-with-cloudflare-workers-125eaf87b1ec&#34;&gt;使用 Cloudflare Worker 提供短链接服务&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Cloudflare Worker 是一个 Serverless 服务，可以使用很简单的代码，通过它自制一个简单的短链接服务。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.gkogan.co/blog/looks-vs-results/&#34;&gt;简陋的广告，不一定效果不好&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/883db455a8863bb550086e606f58e19b88b369358203a2d1e3a309d17b458a66/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323130312f6267323032313031303430332e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/883db455a8863bb550086e606f58e19b88b369358203a2d1e3a309d17b458a66/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323130312f6267323032313031303430332e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;广告不一定要设计得非常精美，简单粗糙的广告也可能有不错的效果。作者同时在 LinkedIn 投放了上面两个广告，结果发现右边广告的转化率更高。&lt;/p&gt;
&lt;h3 id=&#34;locusthttpslocustio&#34;&gt;&lt;a href=&#34;https://locust.io/&#34;&gt;locust&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个开源的负载压测工具。&lt;/p&gt;
&lt;h3 id=&#34;thonnyhttpsthonnyorg&#34;&gt;&lt;a href=&#34;https://thonny.org/&#34;&gt;Thonny&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个面向初学者的 Python IDE。&lt;/p&gt;
&lt;h3 id=&#34;html-editorhttpsno-gravitygithubiohtml_editor&#34;&gt;&lt;a href=&#34;https://no-gravity.github.io/html_editor/&#34;&gt;HTML Editor&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个最简易的 HTML 在线编辑器，可以实时自动预览效果。&lt;a href=&#34;https://github.com/no-gravity/html_editor/blob/main/index.html&#34;&gt;源码&lt;/a&gt;非常简单，有学习价值。&lt;/p&gt;
&lt;h3 id=&#34;piccolohttpspiccolo-ormcom&#34;&gt;&lt;a href=&#34;https://piccolo-orm.com/&#34;&gt;Piccolo&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个简单快速的异步 Python ORM 库。&lt;/p&gt;
&lt;h3 id=&#34;i2phttpsgeti2pneten&#34;&gt;&lt;a href=&#34;https://geti2p.net/en/&#34;&gt;I2P&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/I2P&#34;&gt;一个隐形互联网项目&lt;/a&gt;，构建在互联网的上方，主要用于网内用户的互相通信，不鼓励用户通过它来访问互联网。主要特点是用户看不到服务器，服务器也看不到用户。&lt;/p&gt;
&lt;h3 id=&#34;quicsshhttpsgithubcommoulquicssh&#34;&gt;&lt;a href=&#34;https://github.com/moul/quicssh&#34;&gt;quicssh&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这个工具将 SSH 的通信协议改成了 QUIC，重新包装了 SSH 的服务器和客户端。&lt;/p&gt;
&lt;h3 id=&#34;staticallyhttpsstaticallyio&#34;&gt;&lt;a href=&#34;https://statically.io/&#34;&gt;Statically&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;该服务可以免费将GitHub 和 GitLab 的源码文件放上 CDN，供外部调用。&lt;/p&gt;
&lt;h3 id=&#34;thumbnailaihttpsthumbnailai&#34;&gt;&lt;a href=&#34;https://thumbnail.ai/&#34;&gt;Thumbnail.AI&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这个在线服务可以为任意 URL，自动生成标题图片，便于在社交媒体引用文章时，提供缩略图。&lt;/p&gt;
&lt;h3 id=&#34;cdeclhttpscdeclorg&#34;&gt;&lt;a href=&#34;https://cdecl.org/&#34;&gt;cdecl&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这个在线工具可以将 C 语言难懂的类型声明（比如&lt;code&gt;int (*(*foo)(void ))[3]&lt;/code&gt;），转成浅显的英语。&lt;/p&gt;
&lt;h3 id=&#34;后端开发学习路线图httpsroadmapshbackend&#34;&gt;&lt;a href=&#34;https://roadmap.sh/backend&#34;&gt;后端开发学习路线图&lt;/a&gt;&lt;/h3&gt;
&lt;h3 id=&#34;半小时学习-rust-语言httpsfasterthanlimearticlesa-half-hour-to-learn-rust&#34;&gt;&lt;a href=&#34;https://fasterthanli.me/articles/a-half-hour-to-learn-rust&#34;&gt;半小时学习 Rust 语言&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一篇英语长文，详细介绍 Rust 语言的基本知识点。&lt;/p&gt;
&lt;h3 id=&#34;python-软件工程httpsmerely-usefulgithubiopy-rse&#34;&gt;&lt;a href=&#34;https://merely-useful.github.io/py-rse/&#34;&gt;Python 软件工程&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一本英文的免费书籍，介绍使用 Python 来做实际的软件项目时，需要了解的各种 Linux 知识，比如命令行、Git、Make 等等。&lt;/p&gt;
&lt;h3 id=&#34;techrewindhttpstechrewindco&#34;&gt;&lt;a href=&#34;https://techrewind.co/&#34;&gt;TechRewind&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;该网站收集了过去40年流行的技术产品，每10年为一个周期，用户可以查看每个周期的流行产品。比如，上图是上个世纪90年的流行。&lt;/p&gt;
&lt;h3 id=&#34;学校还是监狱httpswwwschoolprisoncom&#34;&gt;&lt;a href=&#34;https://www.schoolprison.com/&#34;&gt;学校还是监狱？&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;该网站每次刷新都会出现一张图片，让用户猜这是学校还是监狱？比如，上图是监狱。&lt;/p&gt;
&lt;h3 id=&#34;团队主管应该写代码吗httpsnngorokcommanagers-should-code-but-not-at-work&#34;&gt;&lt;a href=&#34;https://nngorok.com/managers-should-code-but-not-at-work&#34;&gt;团队主管应该写代码吗？&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;技术团队的主管应该写代码吗？&lt;/p&gt;
&lt;p&gt;这个问题似乎没有明确的答案，支持者和反对者都有各自的立场。&lt;/p&gt;
&lt;p&gt;我主管工程团队已经两年了，在这期间我停止写代码。主要原因是，团队主管写代码会妨碍团队管理，你会没有足够的时间来召开所有团队会议，以及一对一的谈话。另一方面，退出编码也表明我信任团队。&lt;/p&gt;
&lt;p&gt;但是，随着时间的流逝，我逐渐感到与团队脱节。开始忘记构建系统和产品的实际感觉。我发现很难跟上的某些技术决策。从长远来看，最坏的情况下，由于缺乏代码信誉，这可能导致你在团队失去尊重。&lt;/p&gt;
&lt;p&gt;这种矛盾，从本质上讲，是管理者与开发者的角色冲突。管理者的日程安排是一个接一个的会议，而开发者要求要大量连续时间，保证投入到关键任务上。管理者和开发者的时间表是不一样的。&lt;/p&gt;
&lt;p&gt;我真的很想念编码，想念从构建事物、定位和修复 Bug 中获得的成就感。我还意识到，我参与编码，就会与团队产生更多的联系。&lt;/p&gt;
&lt;p&gt;但我也明白，一旦参与编码，我就很难切换注意力，我的关注点无法在编码和会议之间及时切换。我的结论是，管理者与程序员的角色无法合一，解决方法可能是你在业余时间坚持编码，工作时间专心管理。&lt;/p&gt;
&lt;h3 id=&#34;故事的形状httpsavoidboringpeoplesubstackcompa-story-is-a-lie-and-a-story-is-true&#34;&gt;&lt;a href=&#34;https://avoidboringpeople.substack.com/p/a-story-is-a-lie-and-a-story-is-true&#34;&gt;故事的形状&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;美国小说家库尔特·冯内古特 （Kurt Vonnegut）在一次演讲中提到，小说的故事是有形状的。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/654d78b46857f88b51f97432a949183c4eb80870c3ce975a2fcb3c37e1a45d35/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323130312f6267323032313031313230362e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/654d78b46857f88b51f97432a949183c4eb80870c3ce975a2fcb3c37e1a45d35/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323130312f6267323032313031313230362e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;他画了一个坐标系，竖轴是主人公的境遇，横轴是时间轴，表示故事的进展。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/ce238af89b2656edf58f4e5fdfecca8b174b075a0e6ecfd0ffac007aaac506c2/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031322f6267323032303132323830392e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/ce238af89b2656edf58f4e5fdfecca8b174b075a0e6ecfd0ffac007aaac506c2/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031322f6267323032303132323830392e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在 《教父》中，主人公开始时过得很好，但后来陷入困境，被迫离开家族。他最终夺回了权力，并杀死了大部分反对派，成为新的教父。这个故事的形状就是一个大坑，先下跌，然后上升，并且过得比以前更好。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/0bfb7469c9142f897ea4cbd20dd78c21d387d0a900b6869140d230523bdd8f58/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031322f6267323032303132323831302e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/0bfb7469c9142f897ea4cbd20dd78c21d387d0a900b6869140d230523bdd8f58/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031322f6267323032303132323831302e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;很多爱情小说，主人公先坠入爱河，感到非常幸福，后来由于各种原因，发生了挫折，最后再次找到对方。它的形状则是先上升，再下降，然后再次上升。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/8a25c9a8b461f01c591c7fd54d4c8e0aad78282697f2d6d3d85d1f6c9e508127/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031322f6267323032303132323831312e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/8a25c9a8b461f01c591c7fd54d4c8e0aad78282697f2d6d3d85d1f6c9e508127/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031322f6267323032303132323831312e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;有些个人奋斗的故事，是从逆境不断上升，取得一定成就以后，遇到了重大打击，最后克服了困难。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/ce9842c935073a206b3a18a49ef849c8adde45d4b6117230a71dc93dc0624cf6/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031322f6267323032303132323831322e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/ce9842c935073a206b3a18a49ef849c8adde45d4b6117230a71dc93dc0624cf6/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031322f6267323032303132323831322e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;卡夫卡的小说《变形记》，则是主人公本来就过得很遭，一天早上醒来，发现自己变成了蟑螂，从此越过越糟糕。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/86e99719fe9c6097dfb7cc91700dab0c70a460b11f72ee833ad4fc17b427c8e2/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031322f6267323032303132323831332e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/86e99719fe9c6097dfb7cc91700dab0c70a460b11f72ee833ad4fc17b427c8e2/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031322f6267323032303132323831332e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;2020年排名前10-的-python库httpstryolabscomblog20201221top-10-python-libraries-of-2020&#34;&gt;&lt;a href=&#34;https://tryolabs.com/blog/2020/12/21/top-10-python-libraries-of-2020/&#34;&gt;2020年排名前10 的 Python库&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文介绍目前最流行的10个 Python 库。&lt;/p&gt;
&lt;h3 id=&#34;如何释放-macbook-的磁盘空间httpspawelurbanekcommacos-free-disk-space&#34;&gt;&lt;a href=&#34;https://pawelurbanek.com/macos-free-disk-space&#34;&gt;如何释放 MacBook 的磁盘空间&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;MacBook 用作开发笔记本时，长期下来，大量空间会被占用。本文介绍几个清理空间的方法。&lt;/p&gt;
&lt;h3 id=&#34;amd-ryzen-9-5950x-cpu-测评httpswwwtomshardwarecomreviewsamd-ryzen-9-5950x-5900x-zen-3-review&#34;&gt;&lt;a href=&#34;https://www.tomshardware.com/reviews/amd-ryzen-9-5950x-5900x-zen-3-review&#34;&gt;AMD Ryzen 9 5950X CPU 测评&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;国外媒体评测了 AMD 公司最新的 Zen 3 架构的高端 CPU，结论就是英特尔公司有大麻烦了，现在不仅性价比不如 AMD，连高端 CPU 的性能都输了。&lt;/p&gt;
&lt;h3 id=&#34;浏览器插件推荐httpsguillaumehrmediumcom21-best-free-browser-extensions-for-chrome-and-firefox-to-improve-privacy-productivity-and-web-a8c158d9216b&#34;&gt;&lt;a href=&#34;https://guillaumehr.medium.com/21-best-free-browser-extensions-for-chrome-and-firefox-to-improve-privacy-productivity-and-web-a8c158d9216b&#34;&gt;浏览器插件推荐&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文推荐了21个浏览器插件，可以提高使用效率，而且同时支持 Chrome 和 Firefox。&lt;/p&gt;
&lt;h3 id=&#34;反向面试httpsgithubcomyifeikongreverse-interview-zh&#34;&gt;&lt;a href=&#34;https://github.com/yifeikong/reverse-interview-zh&#34;&gt;反向面试&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;下面列表里的问题对于参加技术面试的人来说可能有些用。 列表里的问题并不一定适用于某个特定的职位或者工作类型，也没有排序 最开始的时候这只是我自己的问题列表，但是慢慢地添加了一些我觉得可能让我对这家公司亮红牌的问题。 我也注意到被我面试的人提问我的问题太少了，感觉他们挺浪费机会的。&lt;/p&gt;
&lt;h3 id=&#34;andalahttpswwwaliciaunderhillxyzandala&#34;&gt;&lt;a href=&#34;https://www.aliciaunderhill.xyz/Andala/&#34;&gt;andala&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/ab1ac921b8e03de9d8e3df011bb179a46b6ea707b884c71e8335c32f1552c512/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323130312f6267323032313031313231322e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/ab1ac921b8e03de9d8e3df011bb179a46b6ea707b884c71e8335c32f1552c512/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323130312f6267323032313031313231322e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;一个在线画板，画出来的线条都是对称的。&lt;/p&gt;
&lt;h3 id=&#34;在线视频片段合并httpsslowapicommerge-videos-files&#34;&gt;&lt;a href=&#34;https://slowapi.com/merge-videos-files/&#34;&gt;在线视频片段合并&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;很多在线视频都是许多 .ts 文件组成的，这个在线工具可以输入 .ts 文件的网址，然后将它们合并。&lt;/p&gt;
&lt;h3 id=&#34;ssh-mitmhttpsgithubcomssh-mitmssh-mitm&#34;&gt;&lt;a href=&#34;https://github.com/ssh-mitm/ssh-mitm&#34;&gt;ssh-mitm&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个 SSH 中间人服务器，拦截所有 SSH 操作。可以用作“蜜罐”，攻击者自以为登陆了真实服务器，从而让系统记录下他的操作。&lt;/p&gt;
&lt;h3 id=&#34;transformhttpstransformtools&#34;&gt;&lt;a href=&#34;https://transform.tools/&#34;&gt;Transform&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个在线工具，可以将各种代码互相转换，比如把 HTML 转为 JSX，或者把 JSON 转为 XML。&lt;/p&gt;
&lt;h3 id=&#34;electronic-referenceshttpscsgordongithubiobookshtml&#34;&gt;&lt;a href=&#34;https://csgordon.github.io/books.html&#34;&gt;Electronic References&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;该网页收集网上免费的计算机科学教科书。&lt;/p&gt;
&lt;h3 id=&#34;proton-游戏数据库httpswwwprotondbcom&#34;&gt;&lt;a href=&#34;https://www.protondb.com/&#34;&gt;Proton 游戏数据库&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;该网站提供所有可以通过 Proton 在 Linux 上运行的游戏资料。&lt;/p&gt;
&lt;h3 id=&#34;just-get-my-datahttpsjustgetmydatacom&#34;&gt;&lt;a href=&#34;https://justgetmydata.com/&#34;&gt;Just Get My Data&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这个网站收集了从各种在线服务取回个人数据的方法，并有“容易”、“中等”、“困难”、“不可能”四个难度评级。&lt;/p&gt;
&lt;h3 id=&#34;最繁忙的航线httpswwwoagcombusiest-routes-right-now&#34;&gt;&lt;a href=&#34;https://www.oag.com/busiest-routes-right-now&#34;&gt;最繁忙的航线&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;该网站可以查看世界各地的航线数据，比如本月最繁忙的10条国际和地区航线，以及各国国内最繁忙的航线。&lt;/p&gt;
&lt;h3 id=&#34;德国螺旋森林waldspiralehttpsenwikipediaorgwikiwaldspirale&#34;&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Waldspirale&#34;&gt;德国螺旋森林（Waldspirale）&lt;/a&gt;&lt;/h3&gt;
&lt;h3 id=&#34;白宫官网改版httpswptaverncombiden-white-house-sticks-with-wordpress-for-website-relaunch&#34;&gt;&lt;a href=&#34;https://wptavern.com/biden-white-house-sticks-with-wordpress-for-website-relaunch&#34;&gt;白宫官网改版&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;1月20日，美国新总统拜登上任，白宫官网 &lt;a href=&#34;https://www.whitehouse.gov/&#34;&gt;whitehouse.gov&lt;/a&gt; 当天就改版了。&lt;/p&gt;
&lt;p&gt;2017年，特朗普政府将白宫官网的 CMS（内容管理系统）从 Drupal 改成了 WordPress，原因是后者的维护和开发比较省钱，据说每年可以为美国纳税人节省300万美元。&lt;/p&gt;
&lt;p&gt;这一次，拜登政府的改版沿用了 WordPress，并没有改回奥巴马时代的 Drupal，看来不打算推翻特朗普政府的这个决定。值得一提的是，改版后的官网性能表现很好，Lighthouse 得分接近满分。&lt;/p&gt;
&lt;h3 id=&#34;elasticsearch-许可证httpsawsamazoncomcnblogsopensourcestepping-up-for-a-truly-open-source-elasticsearch&#34;&gt;&lt;a href=&#34;https://aws.amazon.com/cn/blogs/opensource/stepping-up-for-a-truly-open-source-elasticsearch/&#34;&gt;Elasticsearch 许可证&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;业界应用最广的开源搜索工具 Elasticsearch 上周修改了许可证，新版本将不允许云服务商使用它提供服务。这主要是针对亚马逊公司，后者出售 Elasticsearch 搜索服务，开源项目的维护者拿不到任何好处，等于是为亚马逊免费打工。&lt;/p&gt;
&lt;p&gt;亚马逊立刻回击了，宣布将提供自己的开源版本。Elasticsearch 等于是为自己找了一个竞争对手，而且对手有无限资源。这件事的启示就是，开源时要想好，如果大公司拿你的代码挣钱，也不会分给你，你怎么办。&lt;/p&gt;
&lt;h4 id=&#34;中国的大坝httpsmpweixinqqcomscliev282p1pxq93u_nw39w&#34;&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/cLiEv282p1PXQ93u_NW39w&#34;&gt;中国的大坝&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;中国有10万座水坝，是世界水坝最多的国家。本文以大量的图片，介绍不同类型水坝的知识。&lt;/p&gt;
&lt;h3 id=&#34;我开发付费-chrome-插件的经历httpsblogt9tiostar-history-2021-01-21&#34;&gt;&lt;a href=&#34;https://blog.t9t.io/star-history-2021-01-21/&#34;&gt;我开发付费 Chrome 插件的经历&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者介绍了在 Chrome 商店发布付费插件的过程，总收入有几百美元。&lt;/p&gt;
&lt;h3 id=&#34;如何用-github-actions-更新-wordpress-网站httpsgithubcomzhaooleewordpressxmlrpctools&#34;&gt;&lt;a href=&#34;https://github.com/zhaoolee/WordPressXMLRPCTools&#34;&gt;如何用 GitHub Actions 更新 WordPress 网站&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文介绍使用 GitHub Actions 将仓库里面的 Markdown 文章，远程发布到 WordPress 网站。&lt;/p&gt;
&lt;h4 id=&#34;二因素登陆-2fa-不能防止网络钓鱼httpsshksprmobiblog202101thats-not-how-2fa-works&#34;&gt;&lt;a href=&#34;https://shkspr.mobi/blog/2021/01/thats-not-how-2fa-works/&#34;&gt;二因素登陆 2FA 不能防止网络钓鱼&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;很多人有一种误解，只要开启了二因素登陆 2FA，就可以保证个人账户的安全。作者指出，2FA 只是保证其他人不能登录你的账户，但是防止不了网络钓鱼。&lt;/p&gt;
&lt;h4 id=&#34;tab-还是空格httpsanadoxinorgblogyoure-using-tabs-in-a-wrong-wayhtml&#34;&gt;&lt;a href=&#34;https://anadoxin.org/blog/youre-using-tabs-in-a-wrong-way.html/&#34;&gt;Tab 还是空格？&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;本文讨论了代码缩进使用 Tab 或空格的利弊，说得很有道理，并提供了推荐的缩进方式。&lt;/p&gt;
&lt;h3 id=&#34;使用-gnu-stow-管理配置文件httpsalexpearceme201602managing-dotfiles-with-stow&#34;&gt;&lt;a href=&#34;https://alexpearce.me/2016/02/managing-dotfiles-with-stow/&#34;&gt;使用 GNU Stow 管理配置文件&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Linux 系统有很多配置文件，比如&lt;code&gt;.bashrc&lt;/code&gt;、&lt;code&gt;.vimrc&lt;/code&gt;等等，一个很方便的管理方法，就是把它们放到一个 Git 仓库，然后使用 Stow 这个工具产生软链接。&lt;/p&gt;
&lt;h4 id=&#34;2021年-favicon-的设置httpsevilmartianscomchronicleshow-to-favicon-in-2021-six-files-that-fit-most-needs&#34;&gt;&lt;a href=&#34;https://evilmartians.com/chronicles/how-to-favicon-in-2021-six-files-that-fit-most-needs&#34;&gt;2021年 favicon 的设置&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;网站的 favicon 应该怎么设置？这篇文章给出了最新的建议&lt;/p&gt;
&lt;h3 id=&#34;我怎样建立没有一家全职员工的公司httpssahillavingiacomwork&#34;&gt;&lt;a href=&#34;https://sahillavingia.com/work&#34;&gt;我怎样建立没有一家全职员工的公司&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者讲述自己创立 Gumroad 这家公司，年收入达到1100万美元，但是没有一个全职员工，连作者自己都不是全职投入。这可以算是创业的理想境界。&lt;/p&gt;
&lt;h4 id=&#34;gmail-搜索语法httpsturriatecomarticlesadvanced-gmail-search-help-organize-your-inbox&#34;&gt;&lt;a href=&#34;https://turriate.com/articles/advanced-gmail-search-help-organize-your-inbox&#34;&gt;Gmail 搜索语法&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;本文通过一个例子，讲解 Gmail 的搜索语法。&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;unsubscribe
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;contains the word “unsubscribe”&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;-shipping -payment -&amp;quot;tracking number&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Does not contain the word “shipping,” “payment,” or “tracking number”&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;quot;YOUR ADDRESS&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Type in your mailing address. I want to keep any mail that contains my mailing address because it’s likely about something I purchased.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;-from:Robinhood -from:YOURBANK -from:&amp;quot;Whole Foods Market&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Do not find email coming from Robinhood, my bank, or Whole Foods&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;in:inbox
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;only find mail in my inbox.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;is:unread
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Email I haven’t opened&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;older_than:7d
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Email received over 7 days ago.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;-is:important
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Not labeled as important.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;-is:starred
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Email that has not been starred.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;-is:snoozed
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Email that has not been snoozed.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;has:nouserlabels
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Email that has not already been sorted or filtered&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;-has:attachment
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Email without an attachment. I give an “unsubscribe” email with an attachment high priority than other emails.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;视频编码器的专利费httpsblogmozillaorgblog20180711royalty-free-web-video-codecs&#34;&gt;&lt;a href=&#34;https://blog.mozilla.org/blog/2018/07/11/royalty-free-web-video-codecs/&#34;&gt;视频编码器的专利费&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;H.264 视频编码器需要交纳专利费，这篇文章介绍了这方面的情况。为了保证可以自由地对视频进行编码，Mozilla 一直在推动 AV1 这样的开源编码器。&lt;/p&gt;
&lt;h3 id=&#34;sosumihttpsgithubcompopeysosumi-snap&#34;&gt;&lt;a href=&#34;https://github.com/popey/sosumi-snap&#34;&gt;Sosumi&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个 Linux 系统的 Snap 包文件，可以在 Linux 系统运行 MacOS。&lt;/p&gt;
&lt;h3 id=&#34;archiveboxhttpsgithubcomarchiveboxarchivebox&#34;&gt;&lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox&#34;&gt;ArchiveBox&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个将网页存档的工具，可以将 HTML、CSS、JS、图片、媒体文件都保存下来，供日后查看。这里是&lt;a href=&#34;https://nixintel.info/osint-tools/make-your-own-internet-archive-with-archive-box/&#34;&gt;教程&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&#34;pyg2plothttpsgithubcomhustccpyg2plot&#34;&gt;&lt;a href=&#34;https://github.com/hustcc/PyG2Plot&#34;&gt;PyG2Plot&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Python 的数据可视化图表生成工具，基于蚂蚁集团开源的 G2Plot 封装。&lt;/p&gt;
&lt;h3 id=&#34;openpilothttpsgithubcomcommaaiopenpilot&#34;&gt;&lt;a href=&#34;https://github.com/commaai/openpilot&#34;&gt;openpilot&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个开源的辅助驾驶系统，可以自动车道居中和自适应巡航控制，已经支持85种车型。&lt;/p&gt;
&lt;h3 id=&#34;swagger-文档导出httpswwwdocs4devcomtoolszhswagger2markup&#34;&gt;&lt;a href=&#34;https://www.docs4dev.com/tools/zh/swagger2markup/&#34;&gt;Swagger 文档导出&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个在线工具，可以将 Swagger 文档（yaml 或者 json 格式）导出为PDF、Markdown、EPUB、HTML 等格式。&lt;/p&gt;
&lt;h3 id=&#34;localcdnhttpswwwlocalcdnorg&#34;&gt;&lt;a href=&#34;https://www.localcdn.org/&#34;&gt;LocalCDN&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个浏览器插件，将常用的前端 CDN 库集成在插件里面，避免发出网络请求，加快加载速度，以及降低隐私泄漏的可能。&lt;/p&gt;
&lt;h3 id=&#34;x6httpsx6antvvisionzh&#34;&gt;&lt;a href=&#34;https://x6.antv.vision/zh&#34;&gt;X6&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;蚂蚁集团数据可视化工具 AntV 旗下的图编辑引擎，用来在网页上生成 SVG 图形。&lt;/p&gt;
&lt;h3 id=&#34;vue3-源码解读httpsgithubcomcuixiaoruimini-vue&#34;&gt;&lt;a href=&#34;https://github.com/cuixiaorui/mini-vue&#34;&gt;Vue3 源码解读&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这个库把 Vue3 源码中最核心的逻辑剥离出来，只留下核心逻辑，以供大家学习。带有详细的中文注释，以及完善的输出，帮助用户理解运行时流程。&lt;/p&gt;
&lt;h3 id=&#34;games-on-githubhttpsgithubcomleereillygames&#34;&gt;&lt;a href=&#34;https://github.com/leereilly/games&#34;&gt;Games on GitHub&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这个仓库收集 GitHub 上面的各种开源游戏。&lt;/p&gt;
&lt;h3 id=&#34;机器学习面试题httpswwwinterviewquerycomblog-machine-learning-interview-questions&#34;&gt;&lt;a href=&#34;https://www.interviewquery.com/blog-machine-learning-interview-questions/&#34;&gt;机器学习面试题&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这个英文网站收集了一些机器学习面试的基本问题 。&lt;/p&gt;
&lt;h3 id=&#34;radiancehttpswwwradiancevrco&#34;&gt;&lt;a href=&#34;https://www.radiancevr.co/&#34;&gt;Radiance&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;该网站收集了全世界几十个国家的艺术家创作的 VR 视频，可以戴 VR 眼镜欣赏。&lt;/p&gt;
&lt;h3 id=&#34;2020数学艺术展httpwwwamsorgpublicoutreachmath-imagery2020-exhibition&#34;&gt;&lt;a href=&#34;http://www.ams.org/publicoutreach/math-imagery/2020-Exhibition&#34;&gt;2020数学艺术展&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;该网站展出各种根据数学概念创造的艺术品，比如上图这样的编织品和雕塑品。&lt;/p&gt;
&lt;h3 id=&#34;paludariumhttpsazumamakotocom3705&#34;&gt;&lt;a href=&#34;https://azumamakoto.com/3705/&#34;&gt;Paludarium&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;日本花卉艺术家 Azuma Makoto 建造的 Paludarium，是一种密封的玻璃容器，为植物创造一个自给自足的环境系统。&lt;/p&gt;
&lt;p&gt;Paludarium 不仅可以控制内部温度和湿度，还具有喷雾和滴灌系统，给植物供水。&lt;/p&gt;
&lt;h3 id=&#34;软件业的停滞httpsalarmingdevelopmentorgp1475&#34;&gt;&lt;a href=&#34;https://alarmingdevelopment.org/?p=1475&#34;&gt;软件业的停滞&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;软件技术的进步，在1996年左右基本停滞了。&lt;/p&gt;
&lt;p&gt;1996年之前，我们取得的软件成果：LISP，Algol，Basic，APL，Unix，C，SQL，Oracle，Smalltalk，Windows，C ++，LabView，HyperCard，Mathematica，Haskell，WWW，Python，Mosaic，Java，JavaScript，Ruby，Flash，Postgress。&lt;/p&gt;
&lt;p&gt;1996年以后的软件成果：IntelliJ，Eclipse，ASP，Spring，Rails，Scala，AWS，Clojure，Heroku，V8，Go，Rust，React，Docker，Kubernetes，Wasm。&lt;/p&gt;
&lt;p&gt;后面那些软件成果，都是对此前技术成果的增量改进。比如，Rails 通过良好的结构化方式将一堆现有技术粘合在一起，从而极大地提高了 Web 应用程序的生产率，但是它本身没有发明任何新东西。同样地，V8 通过扩展 Smalltalk 和 Java 中发明的技术，加速 JavaScript 执行速度。&lt;/p&gt;
&lt;p&gt;自从1996年以来，几乎所有东西都是巧妙地重新包装和重新设计了先前的发明。&lt;/p&gt;
&lt;p&gt;为什么1996年以后，软件技术突然停止了进展？1996年到底发生了什么？&lt;/p&gt;
&lt;p&gt;我认为原因就是互联网开始繁荣。突然之间，程序员有史以来第一次可以迅速致富，大量聪明的有抱负的人涌入了硅谷。但是，你不能在创业公司做研究，基础技术需要很长时间酝酿，并且风险很大。合理的商业计划是利用 VC 的资金，将其投入到最优秀的程序员，让他们改进当前糟糕的技术，然后兑现获利。创业公司没有发明基础技术的时间。&lt;/p&gt;
&lt;p&gt;如今，只有像 Google / Facebook / Amazon / Microsoft 这样的大型公司才有金钱和时间来创造新技术，但是他们似乎只对以最小的破坏性方式解决自己的问题感兴趣。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;罗尔德达尔的童话声音机器httpswwwnewyorkercommagazine19490917the-sound-machine&#34;&gt;&lt;a href=&#34;https://www.newyorker.com/magazine/1949/09/17/the-sound-machine&#34;&gt;罗尔德·达尔的童话《声音机器》&lt;/a&gt;&lt;/h3&gt;
&lt;h3 id=&#34;彩色小说httpslatimesblogslatimescomjacketcopy201207the-sound-and-the-fury-as-william-faulkner-imagined-in-colorhtml&#34;&gt;&lt;a href=&#34;https://latimesblogs.latimes.com/jacketcopy/2012/07/the-sound-and-the-fury-as-william-faulkner-imagined-in-color.html&#34;&gt;彩色小说&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/03950845da5d926d866c546eca432731e73eba4b5b70338f4cc421d33ce23271/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323130312f6267323032313031323231302e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/03950845da5d926d866c546eca432731e73eba4b5b70338f4cc421d33ce23271/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323130312f6267323032313031323231302e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;美国著名作家福克纳的成名作、被誉为20世纪最伟大的美国小说《喧哗与骚动》，出版于1929年，整页整页都是长篇的心理独白，经常是各种视角和回忆跳跃穿插在一起，而且没有标点符号，以此展示主人公混乱的内心。读者想要读懂此书，很不容易。&lt;/p&gt;
&lt;p&gt;福克纳曾经跟出版商讨论过，能不能用不同颜色的墨水，表示不同的叙述视角，囿于当时的技术条件，这个想法没能实现。&lt;/p&gt;
&lt;p&gt;现在，真的有一家出版社使用14种颜色，重新出版了这本小说的精装版，每种颜色表示在讲述一个不同的时期。该书预定今年7月6日（福克纳逝世59周年）发货，限量发行1,480本，售价345美元，目前1000本已经被预购了。&lt;/p&gt;
&lt;h3 id=&#34;ios-证书幕后原理httpchuquanme20200322ios-certificate-principle&#34;&gt;&lt;a href=&#34;http://chuquan.me/2020/03/22/ios-certificate-principle/&#34;&gt;iOS 证书幕后原理&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Apple 为了严格管理 app 的发布，制定了一套复杂的基于证书的校验机制，这对于开发者非常不友好。本文从技术面，图文并茂地介绍了 iOS 开发各种证书之间的关系及其背后的原理。&lt;/p&gt;
&lt;h3 id=&#34;新的-css-长宽比属性aspect-ratiohttpswebdevaspect-ratio&#34;&gt;&lt;a href=&#34;https://web.dev/aspect-ratio/&#34;&gt;新的 CSS 长宽比属性&lt;code&gt;aspect-ratio&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/741091fc0ced2746820aea8a3c3016268ecde02f099656c513538cc8372dfe2d/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323130312f6267323032313031333130332e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/741091fc0ced2746820aea8a3c3016268ecde02f099656c513538cc8372dfe2d/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323130312f6267323032313031333130332e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Chrome 88 浏览器支持新的 CSS 属性&lt;code&gt;aspect-ratio&lt;/code&gt;，可以设置容器的长宽比。&lt;/p&gt;
&lt;h3 id=&#34;我对软件开发的一些看法httpschriskiehlcomarticlethoughts-after-6-years&#34;&gt;&lt;a href=&#34;https://chriskiehl.com/article/thoughts-after-6-years&#34;&gt;我对软件开发的一些看法&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者总结在软件行业工作多年以后，哪些看法改变了，哪些看法没有改变。一共罗列出近30条观点，值得一看。&lt;/p&gt;
&lt;h3 id=&#34;如何将树莓派-4-代当作台式机httpsdebuggermediumcommy-impressions-on-using-a-raspberry-pi-4-as-a-desktop-replacement-ff677c885149&#34;&gt;&lt;a href=&#34;https://debugger.medium.com/my-impressions-on-using-a-raspberry-pi-4-as-a-desktop-replacement-ff677c885149&#34;&gt;如何将树莓派 4 代当作台式机？&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;树莓派 4 代的配置相当强，已经可以当作台式机。作者介绍了他的安装步骤，以及 Raspbian 和 Ubuntu 两个操作系统的比较。&lt;/p&gt;
&lt;h3 id=&#34;10个需要改掉的-typescript-编码习惯httpsstartup-ctonet10-bad-typescript-habits-to-break-this-year&#34;&gt;&lt;a href=&#34;https://startup-cto.net/10-bad-typescript-habits-to-break-this-year/&#34;&gt;10个需要改掉的 Typescript 编码习惯&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者分享了10个编写Typescript的坏习惯，并简述了原因，以及改正的建议。&lt;/p&gt;
&lt;h3 id=&#34;为什么-go-是我最喜欢的编程语言httpsmichaelstapelbergchposts2017-08-19-golang_favorite&#34;&gt;&lt;a href=&#34;https://michael.stapelberg.ch/posts/2017-08-19-golang_favorite/&#34;&gt;为什么 Go 是我最喜欢的编程语言？&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个程序员总结的 Go 语言的优点，文章没有展开，只是罗列了优点。&lt;/p&gt;
&lt;h3 id=&#34;ebook-readerhttpswwwloudreadercom&#34;&gt;&lt;a href=&#34;https://www.loudreader.com/&#34;&gt;Ebook Reader&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;浏览器里面的电子书阅读器，只要把 azw3、epub、mobi、pdf 格式的电子书拖到网页上，就能打开阅读。如果临时需要一个阅读器，这个就很方便。&lt;/p&gt;
&lt;h3 id=&#34;darkwireiohttpsgithubcomdarkwiredarkwireio&#34;&gt;&lt;a href=&#34;https://github.com/darkwire/darkwire.io&#34;&gt;Darkwire.io&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Web 端的多人在线聊天室，特色是支持端到端加密。&lt;/p&gt;
&lt;h3 id=&#34;xonshhttpsgithubcomxonshxonsh&#34;&gt;&lt;a href=&#34;https://github.com/xonsh/xonsh&#34;&gt;Xonsh&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个使用 Python 写的 Linux Shell，可以在 Bash 代码里面使用 Python 语法。&lt;/p&gt;
&lt;h3 id=&#34;filmulatorhttpsfilmulatororg&#34;&gt;&lt;a href=&#34;https://filmulator.org/&#34;&gt;Filmulator&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个开源的 Raw 格式相片编辑器。&lt;/p&gt;
&lt;h3 id=&#34;valetudohttpsgithubcomhypfervaletudo&#34;&gt;&lt;a href=&#34;https://github.com/Hypfer/Valetudo&#34;&gt;Valetudo&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;米家和石头扫地机器人的开源固件，提供一个 Web 界面进行操作。&lt;/p&gt;
&lt;h3 id=&#34;semgrephttpsgithubcomreturntocorpsemgrep&#34;&gt;&lt;a href=&#34;https://github.com/returntocorp/semgrep&#34;&gt;Semgrep&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个支持多种语言（Java、JS、Py、Ruby、TS&amp;hellip;）的代码静态分析工具，可以自定义扫描规则。&lt;/p&gt;
&lt;h3 id=&#34;text-to-handwritinghttpssaurabhdawaregithubiotext-to-handwriting&#34;&gt;&lt;a href=&#34;https://saurabhdaware.github.io/text-to-handwriting/&#34;&gt;Text to Handwriting&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/cd68a5fe273a1c107fe36dc35949a0839a24cb2e39b3248142574caa211f9531/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323130322f6267323032313032303130332e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/cd68a5fe273a1c107fe36dc35949a0839a24cb2e39b3248142574caa211f9531/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323130322f6267323032313032303130332e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这个在线的开源工具，可以将文字转为手写体，并提供图片下载。默认只支持英文，但可以自己添加中文字体，并指定背景图片。&lt;/p&gt;
&lt;h3 id=&#34;subalignerhttpsgithubcombaxtreesubaligner&#34;&gt;&lt;a href=&#34;https://github.com/baxtree/subaligner&#34;&gt;subaligner&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个开源工具，通过机器学习，自动为字幕文件生成时间轴。&lt;/p&gt;
&lt;h3 id=&#34;css-stripes-generatorhttpsstripesgeneratorcomstripe-samples&#34;&gt;&lt;a href=&#34;https://stripesgenerator.com/stripe-samples&#34;&gt;CSS Stripes Generator&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个纯 CSS 的条纹生成器，可以在线调节各种参数，网站就会生成相应的代码。&lt;/p&gt;
&lt;h3 id=&#34;archivyhttpsgithubcomarchivyarchivy&#34;&gt;&lt;a href=&#34;https://github.com/archivy/archivy/&#34;&gt;Archivy&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个开源的知识库软件，可以自己本地架设，管理个人笔记。&lt;/p&gt;
&lt;h3 id=&#34;肌肉维基httpsmusclewikicom&#34;&gt;&lt;a href=&#34;https://musclewiki.com/&#34;&gt;肌肉维基&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;英文的维基网站，提供人体每一块肌肉的详细资料。&lt;/p&gt;
&lt;h3 id=&#34;荷兰国家博物馆httpswwwrijksmuseumnlenrijksstudio&#34;&gt;&lt;a href=&#34;https://www.rijksmuseum.nl/en/rijksstudio&#34;&gt;荷兰国家博物馆&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;荷兰国家博物馆馆将收藏的71万件艺术品，都放上了网，有大量珍贵的名画，可以免费下载高清图片。&lt;/p&gt;
&lt;h3 id=&#34;python-的初学者练习题httpwwwpracticepythonorg&#34;&gt;&lt;a href=&#34;http://www.practicepython.org/&#34;&gt;Python 的初学者练习题&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/1263092af8d18e086c78b00b6d3574f8b96a58d5875b358378dc5722c4a9f8d1/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323130312f6267323032313031323230392e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/1263092af8d18e086c78b00b6d3574f8b96a58d5875b358378dc5722c4a9f8d1/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323130312f6267323032313031323230392e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;该网站提供大量英文的 Python 初学者练习题，并有详细的解答。&lt;/p&gt;
&lt;h3 id=&#34;classperthttpsclasspertcom&#34;&gt;&lt;a href=&#34;https://classpert.com/&#34;&gt;Classpert&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个在线课程搜索引擎，一共收入了各种语言的24万多门课程，包含免费课程和收费课程。&lt;/p&gt;
&lt;h3 id=&#34;akiyoshis-illusion-pageshttpwwwritsumeiacjpakitaokaindex-ehtml&#34;&gt;&lt;a href=&#34;http://www.ritsumei.ac.jp/~akitaoka/index-e.html&#34;&gt;Akiyoshi&amp;rsquo;s illusion pages&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/e3c8547e86009652e1cda31bb242302ff3f2fce5b7e0598e0ef8adfaf0529d1b/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323130312f6267323032313031313531362e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/e3c8547e86009652e1cda31bb242302ff3f2fce5b7e0598e0ef8adfaf0529d1b/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323130312f6267323032313031313531362e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;该网站是日本立命馆大学 Akiyoshi 教授的个人主页，收集了大量的视觉错觉图片。比如，随着页面滚动，你会觉得上图里面有一个图层在抖动。&lt;/p&gt;
&lt;h3 id=&#34;寄居蟹桥httpswwwtheguardiancomenvironment2021jan23how-wildlife-crossings-are-helping-reindeer-bears-and-even-crabs-aoe&#34;&gt;&lt;a href=&#34;https://www.theguardian.com/environment/2021/jan/23/how-wildlife-crossings-are-helping-reindeer-bears-and-even-crabs-aoe&#34;&gt;寄居蟹桥&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;在印度洋上的圣诞节岛（Christmas Island），每年十月或十一月，数以百万计的红蟹同时从森林中涌出，前往海洋进行交配和产卵。&lt;/p&gt;
&lt;p&gt;为了帮助它们安全通过公路，当地人在公路上建造了一座桥，专门供它们使用。&lt;/p&gt;
&lt;h3 id=&#34;地球的水和空气httpsourplntcomwater-air-earth&#34;&gt;&lt;a href=&#34;https://ourplnt.com/water-air-earth/&#34;&gt;地球的水和空气&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;如果地球上所有的水和空气集中在一起，就是下图的两个球，其中空气都以海平面的密度计算。&lt;/p&gt;
&lt;p&gt;上图中，水球的直径是1400公里，相比之下，地球的直径是12742公里。所有的生命就是靠这些水和空气而存在。&lt;/p&gt;
&lt;h3 id=&#34;软件的投入比例httpsblogfeenkcomdevelopers-spend-most-of-their-time-figuri-7aj1ocjhe765vvlln8qqbuhto&#34;&gt;&lt;a href=&#34;https://blog.feenk.com/developers-spend-most-of-their-time-figuri-7aj1ocjhe765vvlln8qqbuhto/&#34;&gt;软件的投入比例&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;1979年，美国出版了一本《软件工程与设计原理》（Principles of software engineering and design）。书里有一张图，给出了大型软件整个生命周期里面，程序员投入的时间比例。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/b79d0c7261d5dc1277e8bfe90e3eefe3074f3ccaf5d6d6a7cfe10a44747a958d/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323130312f6267323032313031323830382e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/b79d0c7261d5dc1277e8bfe90e3eefe3074f3ccaf5d6d6a7cfe10a44747a958d/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323130312f6267323032313031323830382e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;需求分析：3%&lt;/li&gt;
&lt;li&gt;系统分析：3%&lt;/li&gt;
&lt;li&gt;系统设计：5%&lt;/li&gt;
&lt;li&gt;编码：7%&lt;/li&gt;
&lt;li&gt;模块测试：8%&lt;/li&gt;
&lt;li&gt;集成测试：7%&lt;/li&gt;
&lt;li&gt;维护：67%&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;aws-的诞生httpsthreadreaderappcomthread1347677573900242944html&#34;&gt;&lt;a href=&#34;https://threadreaderapp.com/thread/1347677573900242944.html&#34;&gt;AWS 的诞生&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;2000年互联网泡沫破灭时，我在亚马逊工作。&lt;/p&gt;
&lt;p&gt;当时，资本市场已经枯竭了，无法融资，而我们每年的开销是10亿美元。最大的支出是数据中心那些昂贵的 Sun 服务器，那时 Sun 公司真是如日中天，它们的服务器是最可靠的，所有的互联网公司都在使用，但是非常昂贵。&lt;/p&gt;
&lt;p&gt;公司高层最终决定，使用 Linux 服务器替换 Sun 服务器。Linux 那时还是一种相当新颖的方案，使用它有一定的冒险性。我们把公司的未来押宝在它上面。&lt;/p&gt;
&lt;p&gt;服务器替换期间，产品开发因此停顿。我们冻结了所有新功能的交付超过一年。大量代码积压，直到完成向 Linux 的转换才能上线。收入增长随之减速，我们不得不提高了服务价格，减缓烧钱的速度。这是一个恶性循环，时间越来越少，钱也越来越少，亚马逊非常接近于破产。&lt;/p&gt;
&lt;p&gt;一旦我们开始向 Linux 过渡，就再也没有回头路了。所有人动手重构我们的代码库，为过渡做准备。按照预计，一旦服务器转换成功，我们的基础设施成本将下降80％以上。如果失败，网站将崩溃，公司将死亡。&lt;/p&gt;
&lt;p&gt;我们终于及时顺利地完成了服务器转换。对于整个工程团队来说，这是巨大的成就。网站没有任何中断，一夜之间，资本支出大幅减少。我们突然有了一个可以无限扩展的基础架构。&lt;/p&gt;
&lt;p&gt;接下来，发生了更有趣的事情。作为商品零售商，我们的销售额有巨大的季节性，每年的11月和12月的流量和收入都会激增。CEO 贝佐斯开始思考：每年当中，我们有46周的服务器容量是多余的，为什么不将其出租给其他公司呢？&lt;/p&gt;
&lt;p&gt;与此同时，他还对解耦内部的依赖关系感兴趣，一个团队可以在不受其他团队约束的情况下进行工作。整个公司开始启用松散的低耦合模型，随之而来的架构更改成为后来 AWS 的基础。&lt;/p&gt;
&lt;p&gt;这就是 AWS 的诞生背景。我记得，贝佐斯受到了电网的启发。1900年的时候，企业必须自己搞定发电机，才能开设一家商店。2000年的企业难道必须建立自己的数据中心？ 一定需要有人为企业提供网站的基础设置。&lt;/p&gt;
&lt;p&gt;虽然如果没有 AWS，云基础设施最终也将出现，但是没人知道需要花多少时间，付出多少成本？AWS 诞生以后，大大降低了创业公司的启动成本之后，创新爆炸了，现代风险投资生态系统也随之诞生了。&lt;/p&gt;
&lt;p&gt;亚马逊在2000-2003年几乎死亡。但是如果没有这场危机，公司不太可能会做出艰难的决定，转向一个全新的架构。如果没有这种转变，AWS 可能永远不会发生。所以，永远不要浪费危机带来的机会！&lt;/p&gt;
&lt;h3 id=&#34;智能坐垫httpswww19loucomforum-269-thread-88071608531317062-1-1html&#34;&gt;&lt;a href=&#34;https://www.19lou.com/forum-269-thread-88071608531317062-1-1.html&#34;&gt;智能坐垫&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;杭州本地论坛19楼有网友发帖，讲述公司给每个员工配了一个智能坐垫，“说是高科技的智能办公设备。坐在垫子上面会感应人体的很多数据，心跳、呼吸、坐姿正不正确之类的，连到自己手机上就可以看。但是，她没有想到，所有数据都上传到后台。有一天，公司的 HR 跟她说：“你为什么每天上午10点到10点半都不在工位上啊？带薪拉屎去了吗，小心老板扣你奖金哦！” 她顿时有一种上班被监控，像坐牢一样的感觉。&lt;/p&gt;
&lt;h3 id=&#34;华为的-harmonyos-是什么httpsarstechnicacomgadgets202102harmonyos-hands-on-huaweis-android-killer-is-just-android&#34;&gt;&lt;a href=&#34;https://arstechnica.com/gadgets/2021/02/harmonyos-hands-on-huaweis-android-killer-is-just-android/&#34;&gt;华为的 HarmonyOS 是什么？&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个老外安装了 HarmonyOS 进行体验，为了得到源码，华为甚至要他提供护照照片。他研究以后，认为 HarmonyOS （上图）其实只是 Android 10 的一个分支。&lt;/p&gt;
&lt;h3 id=&#34;为什么-haskell-是我们的首选httpswwwfoxhoundsystemsblogwhy-haskell-for-production&#34;&gt;&lt;a href=&#34;https://www.foxhound.systems/blog/why-haskell-for-production/&#34;&gt;为什么 Haskell 是我们的首选&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者使用 Haskell 作为主要的开发语言，本文解释了原因，读了才知道 Haskell 原来这么强。文章里面有一些代码的小例子，但是总体上以文字说明为主。&lt;/p&gt;
&lt;h3 id=&#34;如何成为数据工程师httpskhashtamovcomenhow-to-become-a-data-engineer&#34;&gt;&lt;a href=&#34;https://khashtamov.com/en/how-to-become-a-data-engineer/&#34;&gt;如何成为数据工程师&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这篇文章总结了数据工程师的需要掌握的技能和工具。&lt;/p&gt;
&lt;h3 id=&#34;关闭旧-api-的正确方法httpshttptoolkittechbloghow-to-turn-off-your-old-apis&#34;&gt;&lt;a href=&#34;https://httptoolkit.tech/blog/how-to-turn-off-your-old-apis/&#34;&gt;关闭旧 API 的正确方法&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;如果 API 需要变更或关闭，并不是给用户发一个通知那么简单，本文教你应该怎么做。&lt;/p&gt;
- https://www.openheart.icu/cs/interesting/ - ALL RIGHTS RESERVED KRIS NIE</description>
        </item>
    
    
  </channel>
</rss> 