<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>42th openheart</title>
    <link>https://www.openheart.icu/</link>
    <description>Recent content on 42th openheart</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>ALL RIGHTS RESERVED KRIS NIE</copyright>
    <lastBuildDate>Mon, 15 Nov 2021 23:28:00 +0000</lastBuildDate>
    
        <atom:link href="https://www.openheart.icu/index.xml" rel="self" type="application/rss+xml" />
    
    
    
        <item>
        <title>Serverless </title>
        <link>https://www.openheart.icu/cs/serverless/</link>
        <pubDate>Sat, 15 Aug 2020 16:27:30 +0000</pubDate>
        
        <guid>https://www.openheart.icu/cs/serverless/</guid>
        <description>42th openheart https://www.openheart.icu/cs/serverless/ -&lt;h1 id=&#34;implement&#34;&gt;Implement&lt;/h1&gt;
&lt;h2 id=&#34;aws-lambdahttpsawsamazoncomlambdanc1h_ls&#34;&gt;&lt;a href=&#34;https://aws.amazon.com/lambda/?nc1=h_ls&#34;&gt;AWS Lambda&lt;/a&gt;&lt;/h2&gt;
- https://www.openheart.icu/cs/serverless/ - ALL RIGHTS RESERVED KRIS NIE</description>
        </item>
    
    
    
        <item>
        <title>Static Search Table &amp; Dynamic Search Table</title>
        <link>https://www.openheart.icu/arithmetic/static-search-table-dynamic-search-table/</link>
        <pubDate>Sat, 25 Jul 2020 18:32:23 +0000</pubDate>
        
        <guid>https://www.openheart.icu/arithmetic/static-search-table-dynamic-search-table/</guid>
        <description>42th openheart https://www.openheart.icu/arithmetic/static-search-table-dynamic-search-table/ -&lt;p&gt;&lt;em&gt;今天在看&lt;code&gt;BST&lt;/code&gt;时，指导书上讲二叉排序树时与二分查找进行对比，引出几个模棱两可的概念（静态查找表、动态查找表），经查找后整理得本文&lt;/em&gt;&lt;/p&gt;
&lt;h1 id=&#34;概述&#34;&gt;概述&lt;/h1&gt;
&lt;p&gt;首先要了解几个基础概念&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;查找(Searching)&lt;/strong&gt; 是根据给定的某个值，在查找表中确定一个其关键字等于给定值的数据元素。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;查找表(Search Table)&lt;/strong&gt; 是由同⼀类型的数据元素(记录)构成的集合。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;关键字(Key)&lt;/strong&gt; 是数据元素中某个数据项的值，又称为键值，用它可以表示⼀个数据元素，也可以标识一个记录的某个数据项(字段)，我们称为关键码。
若关键字可以唯⼀地标识一个记录, 则称此关键字为&lt;strong&gt;主关键字 (Primary Key)&lt;/strong&gt;。
对于那些可以识别多个属于元素(记录)的关键字，我们称为&lt;strong&gt;次关键字(Secondary Key)&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;查找表操作可分为&lt;strong&gt;静态查找&lt;/strong&gt;和&lt;strong&gt;动态查找&lt;/strong&gt;。&lt;/p&gt;
&lt;h1 id=&#34;静态查找表static-search-table&#34;&gt;静态查找表(Static Search Table)&lt;/h1&gt;
&lt;p&gt;只作查找操作的查找表。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;查询某个”特定的”数据元素是否在查找表中;&lt;/li&gt;
&lt;li&gt;检索某个&amp;quot;特定的&amp;quot;数据元素和各种属性;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;静态查找只是仅查找，并不会去改变集合内的数据元素。常用的查找有。&lt;/p&gt;
&lt;h2 id=&#34;顺序查找-linear-search又称线性查找&#34;&gt;顺序查找（ Linear search，又称线性查找）&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;原理&lt;/strong&gt; ：顺序查找就是按顺序从头到尾依次往下查找，从表中的第一个(或最后一个)记录开始，逐个进行记录关键字和给定值比较，找到数据，则提前结束查找，找不到便一直查找下去，直到数据最后一位&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;linearSearch&lt;/span&gt;(&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt;[] a, &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; num) {        
		&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;for&lt;/span&gt;(&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; i = 0; i &amp;lt; a.&lt;span style=&#34;color:#658b00&#34;&gt;length&lt;/span&gt;; i++) {
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt;(a[i] == num){
          	&lt;span style=&#34;color:#228b22&#34;&gt;// 返回数据所在的下标，也就是位置
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; i;
        }
    }
  	&lt;span style=&#34;color:#228b22&#34;&gt;// 不存在的话返回-1
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; -1;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;索引顺序表查找分块查找&#34;&gt;索引顺序表查找（分块查找）&lt;/h2&gt;
&lt;p&gt;整个表中的元素未必有序，但若划分为若干块后，每一块中的所有元素均小于（或大于）其后面块中的所有元素。我们称这种为&lt;strong&gt;分块有序&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;分块查找要求把一个数据分为若干块，每一块里面的元素可以是无序的，但是块与块之间的元素需要是有序的。（对于一个非递减的数列来说，第&lt;code&gt;i&lt;/code&gt;块中的每个元素一定比第&lt;code&gt;i-1&lt;/code&gt;块中的任意元素大）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;原理&lt;/strong&gt;：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;首先建立一个索引表，索引表中为每一块都设置索引项；&lt;/li&gt;
&lt;li&gt;在索引表中查找，目的是找出关键所属的块的位置。如果索引表较大的话，可以采用折半查找；&lt;/li&gt;
&lt;li&gt;进入该块中，使用简单顺序表查找算法进行关键字查找。&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;这种带索引表的分块有序表查找的时间性能取决于两步查找时间之和：如前面所述，第一步可以采用简单顺序查找和折半查找之一进行。第二步只能采用简单顺序查找，但由于子表的长度较原表的长度小。因此，其时间性能介于顺序查找和折半查找之间。分块查找也同时有顺序查找和二分查找的优点：&lt;strong&gt;不需要有序&lt;/strong&gt;、&lt;strong&gt;速度快&lt;/strong&gt;。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#008b45;font-weight:bold&#34;&gt;BlockSearch&lt;/span&gt; {
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt;[] index;
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;private&lt;/span&gt; ArrayList&amp;lt;ArrayList&amp;lt;Integer&amp;gt;&amp;gt; list;
    
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;BlockSearch&lt;/span&gt;(&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt;[] index) {
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#658b00&#34;&gt;index&lt;/span&gt; = index;
        list = &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;new&lt;/span&gt; ArrayList&amp;lt;ArrayList&amp;lt;Integer&amp;gt;&amp;gt;();
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;for&lt;/span&gt;(&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; i = 0; i &amp;lt; index.&lt;span style=&#34;color:#658b00&#34;&gt;length&lt;/span&gt;; i++) {
            list.&lt;span style=&#34;color:#658b00&#34;&gt;add&lt;/span&gt;(&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;new&lt;/span&gt; ArrayList&amp;lt;Integer&amp;gt;());
        }
    }
    
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;insert&lt;/span&gt;(Integer value) {
        &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; i = binarySearch(value);
        list.&lt;span style=&#34;color:#658b00&#34;&gt;get&lt;/span&gt;(i).&lt;span style=&#34;color:#658b00&#34;&gt;add&lt;/span&gt;(value);
    }
    
  	&lt;span style=&#34;color:#228b22&#34;&gt;// 分块查找
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;boolean&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;search&lt;/span&gt;(&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; data) {
      	&lt;span style=&#34;color:#228b22&#34;&gt;// 二分查找所在块
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; i = binarySearch(data);
      	&lt;span style=&#34;color:#228b22&#34;&gt;// 顺序查找该元素
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;for&lt;/span&gt;(&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; j = 0; j &amp;lt; list.&lt;span style=&#34;color:#658b00&#34;&gt;get&lt;/span&gt;(i).&lt;span style=&#34;color:#658b00&#34;&gt;size&lt;/span&gt;(); j++) {
            &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt;(data == list.&lt;span style=&#34;color:#658b00&#34;&gt;get&lt;/span&gt;(i).&lt;span style=&#34;color:#658b00&#34;&gt;get&lt;/span&gt;(j)) {
                &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;true&lt;/span&gt;;
            }
        }
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;false&lt;/span&gt;;
    }
  
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;printAll&lt;/span&gt;() {
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;for&lt;/span&gt;(&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; i = 0; i &amp;lt; list.&lt;span style=&#34;color:#658b00&#34;&gt;size&lt;/span&gt;(); i++) {
            ArrayList&amp;lt;Integer&amp;gt; l = list.&lt;span style=&#34;color:#658b00&#34;&gt;get&lt;/span&gt;(i);
            System.&lt;span style=&#34;color:#658b00&#34;&gt;out&lt;/span&gt;.&lt;span style=&#34;color:#658b00&#34;&gt;println&lt;/span&gt;(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;ArrayList: &amp;#34;&lt;/span&gt; + i +  &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;:&amp;#34;&lt;/span&gt;);
            &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;for&lt;/span&gt;(&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; j = 0; j &amp;lt; l.&lt;span style=&#34;color:#658b00&#34;&gt;size&lt;/span&gt;(); j++) {
                System.&lt;span style=&#34;color:#658b00&#34;&gt;out&lt;/span&gt;.&lt;span style=&#34;color:#658b00&#34;&gt;println&lt;/span&gt;(l.&lt;span style=&#34;color:#658b00&#34;&gt;get&lt;/span&gt;(j));
            }
        }
    }
  
    &lt;span style=&#34;color:#228b22&#34;&gt;// 二分查找
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;binarySearch&lt;/span&gt;(&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; target) {
        &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; start = 0;
        &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; end = index.&lt;span style=&#34;color:#658b00&#34;&gt;length&lt;/span&gt; - 1 ;
        &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; mid = -1;
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;while&lt;/span&gt;(start &amp;lt;= end) {
            mid = (start + end) / 2;
            &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt;(target == index[mid]) {
                &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; mid;
            }&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt;(target &amp;lt; index[mid]) {
                end = mid - 1;
            }&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;else&lt;/span&gt; {
                start = mid + 1;
            }
        }
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; start;
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;折半查找二分查找&#34;&gt;折半查找（二分查找）&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;原理：首先确定该查找区间的中间点位置： int mid = (low+upper) / 2；然后将待查找的值与中间点位置的值比较：若相等，则查找成功并返回此位置。若中间点位置值大于待查值，则新的查找区间是中间点位置的左边区域。若中间点位置值小于待查值，则新的查找区间是中间点位置的右边区域。下一次查找是针对新的查找区间进行的&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;binarySearch&lt;/span&gt;(&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt;[] nums, &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; key) {
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; l = 0, h = nums.&lt;span style=&#34;color:#658b00&#34;&gt;length&lt;/span&gt; - 1;
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;while&lt;/span&gt; (l &amp;lt;= h) {
        &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; m = l + (h - l) / 2;
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt; (nums[m] == key) {
            &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; m;
        } &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt; (nums[m] &amp;gt; key) {
            h = m - 1;
        } &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;else&lt;/span&gt; {
            l = m + 1;
        }
    }
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; -1;
}

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;时间复杂度&#34;&gt;时间复杂度&lt;/h3&gt;
&lt;p&gt;二分查找也称为折半查找，每次都能将查找区间减半，这种折半特性的算法时间复杂度为 O(logN)。&lt;/p&gt;
&lt;h3 id=&#34;m-计算&#34;&gt;m 计算&lt;/h3&gt;
&lt;p&gt;有两种计算中值 m 的方式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;m = (l + h) / 2&lt;/li&gt;
&lt;li&gt;m = l + (h - l) / 2&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;l + h 可能出现加法溢出，也就是说加法的结果大于整型能够表示的范围。但是 l 和 h 都为正数，因此 h - l 不会出现加法溢出问题。所以，最好使用第二种计算法方法，该方法又被称为&lt;strong&gt;差值查找&lt;/strong&gt;，是对二分查找的优化。&lt;/p&gt;
&lt;h3 id=&#34;未成功查找的返回值&#34;&gt;未成功查找的返回值&lt;/h3&gt;
&lt;p&gt;循环退出时如果仍然没有查找到 key，那么表示查找失败。可以有两种返回值：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;-1：以一个错误码表示没有查找到 key&lt;/li&gt;
&lt;li&gt;l：将 key 插入到 nums 中的正确位置&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;斐波那契查找&#34;&gt;斐波那契查找&lt;/h2&gt;
&lt;p&gt;除了上面的查找方法，还有一种方法，斐波那契查找（Fibonacci Search），它充分利用了黄金分割的原理，是一种特殊的折半查找方法。&lt;/p&gt;
&lt;p&gt;首先要准备一个斐波那契数列：
&lt;strong&gt;F = {0, 1, 1, 2, 3, 5, 8, 13, 21, &amp;hellip;}&lt;/strong&gt;
然后再准备一个供查询的数组：
a[11] = {0, 1, 16, 24, 35, 47, 59, 62, 73, 88, 99}&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;斐波拉契查找算法的核心在于&lt;/strong&gt;:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;当&lt;code&gt;key = a[mid]&lt;/code&gt;时，表示查找成功;&lt;/li&gt;
&lt;li&gt;当&lt;code&gt;key &amp;lt; a[mid]&lt;/code&gt;时，将斐波那契数列分割下标k减小1（&lt;code&gt;k=k-1&lt;/code&gt;）向左查找，新范围是第&lt;code&gt;low&lt;/code&gt;个到第新&lt;code&gt;mid-1&lt;/code&gt;个,此时范围个数为&lt;code&gt;F[k-1]-1&lt;/code&gt;个;&lt;/li&gt;
&lt;li&gt;当&lt;code&gt;key &amp;gt; a[mid]&lt;/code&gt;时，将斐波那契数列分割下标k减小2（&lt;code&gt;k=k-2&lt;/code&gt;）向右查找，新范围是第&lt;code&gt;mid+1&lt;/code&gt;个到第&lt;code&gt;high&lt;/code&gt;个. 此时范围个数为&lt;code&gt;F[K-2]-1&lt;/code&gt;个;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;首先需要计算出黄金分割点k，如上面a数组中除哨兵外元素个数n=10.&lt;/p&gt;
&lt;p&gt;根据已知条件，计算k值&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#008b45;font-weight:bold&#34;&gt;FibonacciSearch&lt;/span&gt; {
 
	&lt;span style=&#34;color:#228b22&#34;&gt;/**
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;	 * @param args
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;	 */&lt;/span&gt;
	&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;final&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; MAXSIZE = 20;
 
	&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;main&lt;/span&gt;(String[] args) {
		&lt;span style=&#34;color:#228b22&#34;&gt;// TODO Auto-generated method stub
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;		&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt;[] f = fibonacci();
		&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; i : f) {
			System.&lt;span style=&#34;color:#658b00&#34;&gt;out&lt;/span&gt;.&lt;span style=&#34;color:#658b00&#34;&gt;print&lt;/span&gt;(i + &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;);
		}
		System.&lt;span style=&#34;color:#658b00&#34;&gt;out&lt;/span&gt;.&lt;span style=&#34;color:#658b00&#34;&gt;println&lt;/span&gt;();
 
		&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt;[] data = { 1, 5, 15, 22, 25, 31, 39, 42, 47, 49, 59, 68, 88 };
 
		&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; search = 39;
		&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; position = fibonacciSearch(data, search);
		System.&lt;span style=&#34;color:#658b00&#34;&gt;out&lt;/span&gt;.&lt;span style=&#34;color:#658b00&#34;&gt;println&lt;/span&gt;(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;值&amp;#34;&lt;/span&gt; + search + &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;的元素位置为：&amp;#34;&lt;/span&gt; + position);
	}
 
	&lt;span style=&#34;color:#228b22&#34;&gt;/**
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;	 * 斐波那契数列
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;	 * 
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;	 * @return
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;	 */&lt;/span&gt;
	&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt;[] &lt;span style=&#34;color:#008b45&#34;&gt;fibonacci&lt;/span&gt;() {
		&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt;[] f = &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt;[20];
		&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; i = 0;
		f[0] = 1;
		f[1] = 1;
		&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;for&lt;/span&gt; (i = 2; i &amp;lt; MAXSIZE; i++) {
			f[i] = f[i - 1] + f[i - 2];
		}
		&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; f;
	}
 
	&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;fibonacciSearch&lt;/span&gt;(&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt;[] data, &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; key) {
		&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; low = 0;
		&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; high = data.&lt;span style=&#34;color:#658b00&#34;&gt;length&lt;/span&gt; - 1;
		&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; mid = 0;
		&lt;span style=&#34;color:#228b22&#34;&gt;// 斐波那契分割数值下标
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;		&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; k = 0;
		&lt;span style=&#34;color:#228b22&#34;&gt;// 序列元素个数
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;		&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; i = 0;
		&lt;span style=&#34;color:#228b22&#34;&gt;// 获取斐波那契数列
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;		&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt;[] f = fibonacci();
 
		&lt;span style=&#34;color:#228b22&#34;&gt;// 获取斐波那契分割数值下标
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;		&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;while&lt;/span&gt; (data.&lt;span style=&#34;color:#658b00&#34;&gt;length&lt;/span&gt; &amp;gt; f[k] - 1) {
			k++;
		}
 
 		&lt;span style=&#34;color:#228b22&#34;&gt;// 利用Java工具类Arrays 构造新数组并指向 数组 a[]
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt;[] temp=Arrays.&lt;span style=&#34;color:#658b00&#34;&gt;copyOf&lt;/span&gt;(a, f[k]);
 
		&lt;span style=&#34;color:#228b22&#34;&gt;// 序列补充至f[k]个元素
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;		&lt;span style=&#34;color:#228b22&#34;&gt;// 补充的元素值为最后一个元素的值
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;		&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;for&lt;/span&gt; (i = data.&lt;span style=&#34;color:#658b00&#34;&gt;length&lt;/span&gt;; i &amp;lt; f[k] - 1; i++) {
			temp[i] = temp[high];
		}
 
		&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;while&lt;/span&gt; (low &amp;lt;= high) {
			&lt;span style=&#34;color:#228b22&#34;&gt;// low：起始位置
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;			&lt;span style=&#34;color:#228b22&#34;&gt;// 前半部分有f[k-1]个元素，由于下标从0开始
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;			&lt;span style=&#34;color:#228b22&#34;&gt;// 则-1 获取 黄金分割位置元素的下标
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;			mid = low + f[k - 1] - 1;
 
			&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt; (temp[mid] &amp;gt; key) {
				&lt;span style=&#34;color:#228b22&#34;&gt;// 查找前半部分，高位指针移动
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;				high = mid - 1;
				&lt;span style=&#34;color:#228b22&#34;&gt;// （全部元素） = （前半部分）+（后半部分）
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;				&lt;span style=&#34;color:#228b22&#34;&gt;// f[k] = f[k-1] + f[k-1]
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;				&lt;span style=&#34;color:#228b22&#34;&gt;// 因为前半部分有f[k-1]个元素，所以 k = k-1
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;				k = k - 1;
			} &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt; (temp[mid] &amp;lt; key) {
				&lt;span style=&#34;color:#228b22&#34;&gt;// 查找后半部分，高位指针移动
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;				low = mid + 1;
				&lt;span style=&#34;color:#228b22&#34;&gt;// （全部元素） = （前半部分）+（后半部分）
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;				&lt;span style=&#34;color:#228b22&#34;&gt;// f[k] = f[k-1] + f[k-1]
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;				&lt;span style=&#34;color:#228b22&#34;&gt;// 因为后半部分有f[k-1]个元素，所以 k = k-2
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;				k = k - 2;
			} &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;else&lt;/span&gt; {
				&lt;span style=&#34;color:#228b22&#34;&gt;// 如果为真则找到相应的位置
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;				&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt; (mid &amp;lt;= high) {
					&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; mid;
				} &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;else&lt;/span&gt; {
					&lt;span style=&#34;color:#228b22&#34;&gt;// 出现这种情况是查找到补充的元素
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;					&lt;span style=&#34;color:#228b22&#34;&gt;// 而补充的元素与high位置的元素一样
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;					&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; high;
				}
			}
		}
		&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; -1;
	}
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;算法复杂度分析&#34;&gt;算法复杂度分析&lt;/h3&gt;
&lt;p&gt;算法复杂度 O(logn)&lt;/p&gt;
&lt;p&gt;平均性能要优于折半查找，如果是最坏情况比如如本例程序中 key=1,那么始终在左侧长半区查找，则查找效率要低于折半查找。&lt;/p&gt;
&lt;p&gt;二分查找分割方式 mid = (low+high)/2&lt;/p&gt;
&lt;p&gt;插值查找分割方式 mid = low + (high-low)*(key-a[low])/(a[high]-a[low])&lt;/p&gt;
&lt;p&gt;斐波那契查找分割方式 mid = low + Fibonacci[index - 1] - 1&lt;/p&gt;
&lt;p&gt;海量数据查找中，这种细微的差距会影响最终的查找效率。&lt;/p&gt;
&lt;h1 id=&#34;动态查找表dynamic-search-table&#34;&gt;动态查找表(Dynamic Search Table)&lt;/h1&gt;
&lt;p&gt;当查找表以顺序存储结构存储且需要保持有序时，若对查找表进行插入、删除或排序操作，就必须移动大量的记录，当记录数很多时，这种移动的代价很大。若查找表无序，则插入删除可无需移动大量记录，但于查找不利。利用树的形式组织查找表，可以对查找表进行动态高效的查找。&lt;/p&gt;
&lt;p&gt;在查找过程中同时插入查找表中不存在的数据元素, 或者从查找表中删除已经存在的某个数据元素。显然动态查找表的操作就是2个动作：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;查找时插入数据元素&lt;/li&gt;
&lt;li&gt;查找时删除数据元素&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;动态查找表主要使用树形结构中的二叉排序树（Binary Sort Tree）、平衡二叉树（Balance Binary Tree或AVL Tree, Adelson-Velskii Landis Tree），&lt;strong&gt;AVL与BST均在961考纲中&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;二叉排序树&#34;&gt;二叉排序树&lt;/h2&gt;
&lt;p&gt;二叉排序树(Binary Sort Tree或Binary Search Tree) 的定义为：二叉排序树或者是空树，或者是满足下列性质的二叉树：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;若左子树不为空，则左子树上所有结点的值(关键字)都小于根结点的值；&lt;/li&gt;
&lt;li&gt;若右子树不为空，则右子树上所有结点的值(关键字)都大于根结点的值；&lt;/li&gt;
&lt;li&gt;左、右子树都分别是二叉排序树。&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;若按中序遍历一棵二叉排序树，所得到的结点序列是一个递增序列。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;二叉排序树性能&#34;&gt;二叉排序树性能&lt;/h3&gt;
&lt;p&gt;二叉排序树查找关键字的比较次数，等于该结点所在的层次数（查找成功）； 若查找不成功，其比较次数最多为树的深度。对于一棵具有n个结点的树来说，其深度介于㏒&lt;!-- raw HTML omitted --&gt;2&lt;!-- raw HTML omitted --&gt;(n+1)与n之间。二叉排序树的形态对于查找效率至关重要，或者说，一棵二叉排序树不一定就能提高查找的速度，而是要看这棵树的形态。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;指导书中二叉排序树与二分查找的对比&lt;/strong&gt;：就维护表的&lt;strong&gt;有序性&lt;/strong&gt;而言，二叉排序树无需移动结点，只需修改指针即可完成插入和删除操作，平均执行时间为O(log&lt;!-- raw HTML omitted --&gt;2&lt;!-- raw HTML omitted --&gt;n)。二分查找的对象是&lt;strong&gt;有序顺序表&lt;/strong&gt;，若有插入和删除结点的操作，所花时间是O(n)。当有序表是&lt;strong&gt;静态查找表&lt;/strong&gt;时，宜用&lt;strong&gt;顺序表&lt;/strong&gt;作为其&lt;strong&gt;存储结构&lt;/strong&gt;，而采用二分查找实现其查找操作；若有序表是动态查找表，则应该选择二叉排序树作为其逻辑结构。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;平衡二叉树&#34;&gt;平衡二叉树&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;为了避免树的高度增长过快，降低二叉排序的性能&lt;/strong&gt;，规定在插入和删除二叉树结点时，要保证任意结点的左、右树高度差的绝对值&lt;strong&gt;不超过1&lt;/strong&gt;，这样的二叉树称为平衡二叉树，简称平衡树。定义结点左子树和右子树的高度差为该节点的&lt;strong&gt;平衡因子&lt;/strong&gt;。平衡二叉树结点的平衡因子只可能是&lt;code&gt;-1&lt;/code&gt;、&lt;code&gt;0&lt;/code&gt;或&lt;code&gt;1&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;平衡二叉树的插入过程的前半部分与二叉排序树相同，但是在新节点插入后，若造成查找路径上的某个结点不再平衡，则需要作出相应的调整。归纳总结为以下四种情况：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;LL平衡旋转（右单旋转）&lt;/li&gt;
&lt;li&gt;RR平衡旋转（左单旋转）&lt;/li&gt;
&lt;li&gt;LR平衡旋转（先左后右双旋转）&lt;/li&gt;
&lt;li&gt;RL平衡旋转（先右后左双旋转）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;平衡二叉树性能&#34;&gt;平衡二叉树性能&lt;/h3&gt;
&lt;p&gt;含有n个结点的平衡二叉树最大深度为O(log&lt;!-- raw HTML omitted --&gt;2&lt;!-- raw HTML omitted --&gt;n)，因此平衡二叉树的平均查找长度为O(log&lt;!-- raw HTML omitted --&gt;2&lt;!-- raw HTML omitted --&gt;n)。&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;reference&#34;&gt;Reference&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://juejin.im/entry/5b6a89916fb9a04f86065737&#34;&gt;https://juejin.im/entry/5b6a89916fb9a04f86065737&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://segmentfault.com/a/1190000022654107&#34;&gt;数据结构与算法之查找（静态查找与动态查找）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.geeksforgeeks.org/fibonacci-search/&#34;&gt;Fibonacci Search on GeeksforGeeks&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
- https://www.openheart.icu/arithmetic/static-search-table-dynamic-search-table/ - ALL RIGHTS RESERVED KRIS NIE</description>
        </item>
    
    
    
        <item>
        <title>C# in Depth</title>
        <link>https://www.openheart.icu/dotnet/csharp-in-depth/</link>
        <pubDate>Sat, 25 Jul 2020 00:14:11 +0000</pubDate>
        
        <guid>https://www.openheart.icu/dotnet/csharp-in-depth/</guid>
        <description>42th openheart https://www.openheart.icu/dotnet/csharp-in-depth/ -&lt;p&gt;&lt;em&gt;本文为「C# in Depth」(4th edition)学习记录。&lt;/em&gt;&lt;/p&gt;
&lt;h1 id=&#34;part-1-c-in-context&#34;&gt;Part 1 C# in context&lt;/h1&gt;
&lt;h2 id=&#34;survival-of-the-sharpest&#34;&gt;Survival of the sharpest&lt;/h2&gt;
&lt;p&gt;本章主要讲C#的由来与介绍（吹嘘）。&lt;/p&gt;
&lt;p&gt;开始前可以回顾一下C#的历史，现在是北京时间2021-05-29 14:06:54，the last C# version is C# 9.&lt;/p&gt;
&lt;h2 id=&#34;reference&#34;&gt;Reference&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-version-history&#34;&gt;The history of C#&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;part-2-c-in-2-5&#34;&gt;Part 2 C# in 2-5&lt;/h1&gt;
&lt;h2 id=&#34;c-3-linq-and-everything-that-comes-with-it&#34;&gt;C# 3: LINQ and everything that comes with it&lt;/h2&gt;
&lt;h3 id=&#34;extension-methods&#34;&gt;Extension methods&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Extension methods allow existing classes to be extended without relying on inheritance or having to change the class&amp;rsquo;s source code. This means that if you want to add some methods into the existing String class you can do it quite easily. Here&amp;rsquo;s a couple of rules to consider when deciding on whether or not to use extension methods:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Extension methods cannot be used to override existing methods&lt;/li&gt;
&lt;li&gt;An extension method with the same name and signature as an instance method will not be called&lt;/li&gt;
&lt;li&gt;The concept of extension methods cannot be applied to fields, properties or events&lt;/li&gt;
&lt;li&gt;Use extension methods sparingly&amp;hellip;.overuse can be a bad thing!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Times to use extension methods:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;when you don&amp;rsquo;t control the types being extended&lt;/li&gt;
&lt;li&gt;where you don&amp;rsquo;t want to force the implementor to provide code that can be done using the existing methods&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For an example of the second point; you might have an extension method on &lt;code&gt;IList&amp;lt;T&amp;gt;&lt;/code&gt; (for example, &lt;code&gt;Sort&lt;/code&gt;) that can be written entirely using the existing &lt;code&gt;IList&amp;lt;T&amp;gt;&lt;/code&gt; members&amp;hellip; so why force anybody else to write anything? This is the foundation block of LINQ, and allowed Microsoft to provide &lt;em&gt;much&lt;/em&gt; more functionality without breaking anything.&lt;/p&gt;
&lt;p&gt;Times to &lt;strong&gt;not&lt;/strong&gt; use extension methods:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;when polymorphism is critical; you cannot guarantee that your code will be the version that gets executed with an extension method, as methods directly on the type take precedence&lt;/li&gt;
&lt;li&gt;when you need access to private/protected members&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;reference-1&#34;&gt;Reference&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/787324/when-do-you-use-extension-methods-ext-methods-vs-inheritance&#34;&gt;When do you use extension methods, ext. methods vs. inheritance?&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;part-3-c-in-6&#34;&gt;Part 3 C# in 6&lt;/h1&gt;
&lt;h2 id=&#34;super-sleek-properties-and-expression-bodied-members&#34;&gt;Super-sleek properties and expression-bodied members&lt;/h2&gt;
&lt;h3 id=&#34;upgrades-to-automatically-implemented-properties&#34;&gt;Upgrades to automatically implemented properties&lt;/h3&gt;
&lt;h4 id=&#34;automatically-implemented-properties-in-structs&#34;&gt;Automatically implemented properties in structs&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;In C# 6, the language and the compiler have a closer understanding of the relationship between automatically implemented properties and the fields they’re backed by:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You’re allowed to set an automatically implemented property before all the fields are initialized.&lt;/li&gt;
&lt;li&gt;Setting an automatically implemented property counts as initializing the field.&lt;/li&gt;
&lt;li&gt;You’re allowed to read an automatically implemented property before other fields are initialized, so long as you’ve set it beforehand.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-C#&#34; data-lang=&#34;C#&#34;&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#008b45;font-weight:bold&#34;&gt;Employee&lt;/span&gt;
{
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;string&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;alias&lt;/span&gt;;
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;string&lt;/span&gt; name;

    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; Employee(&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;string&lt;/span&gt; name, &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;string&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;alias&lt;/span&gt;) : &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;this&lt;/span&gt;()
    {
        &lt;span style=&#34;color:#228b22&#34;&gt;// Qualify the members of the class
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;      	&lt;span style=&#34;color:#228b22&#34;&gt;// Chaining to default constructor
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;this&lt;/span&gt;.name = name;
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;alias&lt;/span&gt; = &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;alias&lt;/span&gt;;
    }
}

&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#008b45;font-weight:bold&#34;&gt;ServiceDescriptor&lt;/span&gt;
{
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;private&lt;/span&gt; ServiceDescriptor(Type serviceType, ServiceLifetime lifetime)
    {
      	Lifetime = lifetime;
     		ServiceType = serviceType;
    }

  	&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; ServiceDescriptor(
    		Type serviceType,
    		&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;object&lt;/span&gt; instance)
    		: &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;this&lt;/span&gt;(serviceType, ServiceLifetime.Singleton)
    {
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt; (serviceType == &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;null&lt;/span&gt;)
        {
          	&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;throw&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;new&lt;/span&gt; ArgumentNullException(nameof(serviceType));
        }

        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt; (instance == &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;null&lt;/span&gt;)
        {
          	&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;throw&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;new&lt;/span&gt; ArgumentNullException(nameof(instance));
        }

        ImplementationInstance = instance;
    }
}

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h5 id=&#34;reference-2&#34;&gt;Reference&lt;/h5&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/classes-and-structs/using-constructors&#34;&gt;Using Constructors (C# Programming Guide)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/this&#34;&gt;this (C# Reference)&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;part-4-c-in-7-and-beyond&#34;&gt;Part 4 C# in 7 and beyond&lt;/h1&gt;
&lt;h2 id=&#34;concise-code-in-c-7&#34;&gt;Concise code in C# 7&lt;/h2&gt;
&lt;h3 id=&#34;minor-improvements-in-c-73&#34;&gt;Minor improvements in C# 7.3&lt;/h3&gt;
&lt;h4 id=&#34;generic-type-constraints&#34;&gt;Generic type constraints&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;Prior to C# 7.3, a type constraint couldn’t specify that the type argument must derive from Enum or Delegate.&lt;/p&gt;
&lt;p&gt;Before C# 7.3, &lt;a href=&#34;https://docs.microsoft.com/en-us/dotnet/api/system.enum&#34;&gt;Enum&lt;/a&gt;, &lt;a href=&#34;https://docs.microsoft.com/en-us/dotnet/api/system.delegate&#34;&gt;Delegate&lt;/a&gt;, and &lt;a href=&#34;https://docs.microsoft.com/en-us/dotnet/api/system.multicastdelegate&#34;&gt;MulticastDelegate&lt;/a&gt; were also disallowed as base class constraints.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-C#&#34; data-lang=&#34;C#&#34;&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;enum&lt;/span&gt; SampleEnum {}
&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;void&lt;/span&gt; EnumMethod&amp;lt;T&amp;gt;() &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;where&lt;/span&gt; T : struct, Enum {}
&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;void&lt;/span&gt; DelegateMethod&amp;lt;T&amp;gt;() &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;where&lt;/span&gt; T : Delegate {}
&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;void&lt;/span&gt; UnmanagedMethod&amp;lt;T&amp;gt;() &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;where&lt;/span&gt; T : unmanaged {}
&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#008b45;font-weight:bold&#34;&gt;MyClass&lt;/span&gt;&amp;lt;T, U&amp;gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;where&lt;/span&gt; T : &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#008b45;font-weight:bold&#34;&gt;where&lt;/span&gt; U : &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;struct&lt;/span&gt; {}

&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;abstract&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#008b45;font-weight:bold&#34;&gt;B&lt;/span&gt;
{
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;void&lt;/span&gt; M&amp;lt;T&amp;gt;(T? item) &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;where&lt;/span&gt; T : &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;struct&lt;/span&gt; { }
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;abstract&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;void&lt;/span&gt; M&amp;lt;T&amp;gt;(T? item);

}

&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#008b45;font-weight:bold&#34;&gt;D&lt;/span&gt; : B
{
    &lt;span style=&#34;color:#228b22&#34;&gt;// Without the &amp;#34;default&amp;#34; constraint, the compiler tries to override the first method in B
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;override&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;void&lt;/span&gt; M&amp;lt;T&amp;gt;(T? item) &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;where&lt;/span&gt; T : &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;default&lt;/span&gt; { }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;In a nullable context in C# 8.0 and later, the nullability of the base class type is enforced. If the base class is non-nullable (for example &lt;code&gt;Base&lt;/code&gt;), the type argument must be non-nullable. If the base class is nullable (for example &lt;code&gt;Base?&lt;/code&gt;), the type argument may be either a nullable or non-nullable reference type. The compiler issues a warning if the type argument is a nullable reference type when the base class is non-nullable.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5 id=&#34;type-parameter-naming-guidelinesreference3httpsdocsmicrosoftcomen-usdotnetcsharpprogramming-guidegenericsgeneric-type-parameters&#34;&gt;Type parameter naming guidelines(&lt;a href=&#34;https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/generics/generic-type-parameters&#34;&gt;Reference3&lt;/a&gt;)&lt;/h5&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Do&lt;/strong&gt; name generic type parameters with descriptive names, unless a single letter name is completely self explanatory and a descriptive name would not add value.&lt;/p&gt;
&lt;p&gt;C#Copy&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-csharp&#34; data-lang=&#34;csharp&#34;&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;interface&lt;/span&gt; ISessionChannel&amp;lt;TSession&amp;gt; { &lt;span style=&#34;color:#228b22&#34;&gt;/*...*/&lt;/span&gt; }
&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;delegate&lt;/span&gt; TOutput Converter&amp;lt;TInput, TOutput&amp;gt;(TInput &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;from&lt;/span&gt;);
&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#008b45;font-weight:bold&#34;&gt;List&lt;/span&gt;&amp;lt;T&amp;gt; { &lt;span style=&#34;color:#228b22&#34;&gt;/*...*/&lt;/span&gt; }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Consider&lt;/strong&gt; using T as the type parameter name for types with one single letter type parameter.&lt;/p&gt;
&lt;p&gt;C#Copy&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-csharp&#34; data-lang=&#34;csharp&#34;&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; IComparer&amp;lt;T&amp;gt;() { &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;; }
&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;delegate&lt;/span&gt; &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;bool&lt;/span&gt; Predicate&amp;lt;T&amp;gt;(T item);
&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;struct&lt;/span&gt; &lt;span style=&#34;color:#008b45;font-weight:bold&#34;&gt;Nullable&lt;/span&gt;&amp;lt;T&amp;gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;where&lt;/span&gt; T : &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;struct&lt;/span&gt; { &lt;span style=&#34;color:#228b22&#34;&gt;/*...*/&lt;/span&gt; }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Do&lt;/strong&gt; prefix descriptive type parameter names with &amp;ldquo;T&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;C#Copy&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-csharp&#34; data-lang=&#34;csharp&#34;&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;interface&lt;/span&gt; ISessionChannel&amp;lt;TSession&amp;gt;
{
    TSession Session { &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;get&lt;/span&gt;; }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Consider&lt;/strong&gt; indicating constraints placed on a type parameter in the name of parameter. For example, a parameter constrained to &lt;code&gt;ISession&lt;/code&gt; may be called &lt;code&gt;TSession&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h5 id=&#34;reference-3&#34;&gt;Reference:&lt;/h5&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/where-generic-type-constraint&#34;&gt;where (generic type constraint) (C# Reference)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/archive/blogs/ericlippert/constraints-are-not-part-of-the-signature&#34;&gt;Constraints are not part of the signature&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/generics/generic-type-parameters&#34;&gt;Generic type parameters (C# Programming Guide)&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;my-part-5-whats-new-in-c-90&#34;&gt;My Part 5 What&amp;rsquo;s new in C# 9.0&lt;/h1&gt;
&lt;h2 id=&#34;reference-4&#34;&gt;Reference&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-version-history&#34;&gt;What&amp;rsquo;s new in C# 9.0&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
- https://www.openheart.icu/dotnet/csharp-in-depth/ - ALL RIGHTS RESERVED KRIS NIE</description>
        </item>
    
    
    
        <item>
        <title>Architecture</title>
        <link>https://www.openheart.icu/cs/architecture/</link>
        <pubDate>Fri, 24 Jul 2020 00:00:50 +0000</pubDate>
        
        <guid>https://www.openheart.icu/cs/architecture/</guid>
        <description>42th openheart https://www.openheart.icu/cs/architecture/ -&lt;h1 id=&#34;evolvement&#34;&gt;Evolvement&lt;/h1&gt;
&lt;h2 id=&#34;monolithic&#34;&gt;Monolithic&lt;/h2&gt;
&lt;p&gt;“单体”只是表明系统中主要的过程调用都是进程内调用，不会发生进程间通信，仅此而已。&lt;/p&gt;
&lt;h3 id=&#34;monolithic-applicationhttpsenwikipediaorgwikimonolithic_application&#34;&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Monolithic_application&#34;&gt;Monolithic Application&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Monolith means composed all in one piece. The Monolithic application describes a single-tiered software application in which different components combined into a single program from a single platform.&lt;/p&gt;
&lt;p&gt;单体意味着自包含。单体应用描述了一种由同一技术平台的不同组件构成的单层软件。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;layered-architecture&#34;&gt;Layered Architecture&lt;/h3&gt;
&lt;p&gt;分层架构&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://icyfenix.cn/assets/img/layed-arch.8e054a47.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;从横向扩展（Scale Horizontally）的角度来衡量，可在负载均衡器之后同时部署若干个相同的单体系统副本，以达到分摊流量压力的效果。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2 id=&#34;service-oriented-architecture&#34;&gt;Service-Oriented Architecture&lt;/h2&gt;
&lt;p&gt;面向服务的架构（SOA）是一次具体地、系统性地成功解决分布式服务主要问题的架构模式。&lt;/p&gt;
&lt;h3 id=&#34;information-silo-architecturehttpsenwikipediaorgwikiinformation_silo&#34;&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Information_silo&#34;&gt;Information Silo Architecture&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;信息烟囱又名信息孤岛（Information Island），使用这种架构的系统也被称为孤岛式信息系统或者烟囱式信息系统。它指的是一种完全不与其他相关信息系统进行互操作或者协调工作的设计模式。这样的系统其实并没有什么“架构设计”可言。接着上一节中企业与部门的例子来说，如果两个部门真的完全不会发生任何交互，就并没有什么理由强迫它们必须在一栋楼里办公；两个不发生交互的信息系统，让它们使用独立的数据库和服务器即可实现拆分，而唯一的问题，也是致命的问题是，企业中真的存在完全不发生交互的部门吗？对于两个信息系统来说，哪怕真的毫无业务往来关系，但系统的人员、组织、权限等主数据，会是完全独立、没有任何重叠的吗？这样“独立拆分”“老死不相往来”的系统，显然不可能是企业所希望见到的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;microkernel-architecturehttpsenwikipediaorgwikimicrokernel&#34;&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Microkernel&#34;&gt;Microkernel Architecture&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;微内核架构也被称为插件式架构（Plug-in Architecture）。既然在烟囱式架构中，没有业务往来关系的系统也可能需要共享人员、组织、权限等一些的公共的主数据，那不妨就将这些主数据，连同其他可能被各子系统使用到的公共服务、数据、资源集中到一块，成为一个被所有业务系统共同依赖的核心（Kernel，也称为 Core System），具体的业务系统以插件模块（Plug-in Modules）的形式存在，这样也可提供可扩展的、灵活的、天然隔离的功能特性，即微内核架构。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;http://icyfenix.cn/assets/img/coresystem.f46f7c00.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;event-driven-architecturehttpsenwikipediaorgwikievent-driven_architecture&#34;&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Event-driven_architecture&#34;&gt;Event-Driven Architecture&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;为了能让子系统互相通信，一种可行的方案是在子系统之间建立一套事件队列管道（Event Queues），来自系统外部的消息将以事件的形式发送至管道中，各个子系统从管道里获取自己感兴趣、能够处理的事件消息，也可以为事件新增或者修改其中的附加信息，甚至可以自己发布一些新的事件到管道队列中去，如此，每一个消息的处理者都是独立的，高度解耦的，但又能与其他处理者（如果存在该消息处理者的话）通过事件管道进行互动。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;http://icyfenix.cn/assets/img/eventbus.a0c12890.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;microservices&#34;&gt;Microservices&lt;/h2&gt;
&lt;p&gt;微服务是一种通过多个小型服务组合来构建单个应用的架构风格，这些服务围绕业务能力而非特定的技术标准来构建。各个服务可以采用不同的编程语言，不同的数据存储技术，运行在不同的进程之中。服务采取轻量级的通信机制和自动化的部署机制实现通信与运维。&lt;/p&gt;
&lt;h4 id=&#34;microservices--soa&#34;&gt;Microservices &amp;amp; SOA&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;Microservices is a software development technique — a variant of the service-oriented architecture （SOA） structural style.&lt;/p&gt;
&lt;p&gt;微服务是一种软件开发技术，是一种 SOA 的变体形式。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;This common manifestation of SOA has led some microservice advocates to reject the SOA label entirely, although others consider microservices to be one form of SOA , perhaps service orientation done right. Either way, the fact that SOA means such different things means it&amp;rsquo;s valuable to have a term that more crisply defines this architectural style&lt;/p&gt;
&lt;p&gt;由于与 SOA 具有一致的表现形式，这让微服务的支持者更加迫切地拒绝再被打上 SOA 的标签，尽管有一些人坚持认为微服务就是 SOA 的一种变体形式，也许从面向服务方面这个方面来说是对的，但无论如何，SOA 与微服务都是两种不同的东西，正因如此，使用一个别的名称来简明地定义这种架构风格就显得更有必要。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;—— Martin Fowler / James Lewis，&lt;a href=&#34;https://martinfowler.com/articles/microservices.html&#34;&gt;Microservices&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;从微服务的定义和特征中，你应该可以明显地感觉到微服务追求的是更加自由的架构风格，摒弃了几乎所有 SOA 里可以抛弃的约束和规定，提倡以“实践标准”代替“规范标准”。可是，如果没有了统一的规范和约束，以前 SOA 所解决的那些分布式服务的问题，不也就一下子都重新出现了吗？的确如此，服务的注册发现、跟踪治理、负载均衡、故障隔离、认证授权、伸缩扩展、传输通信、事务处理，等等，这些问题，在微服务中不再会有统一的解决方案，即使只讨论 Java 范围内会使用到的微服务，光一个服务间远程调用问题，可以列入解决方案的候选清单的就有：RMI（Sun/Oracle）、Thrift（Facebook）、Dubbo（阿里巴巴）、gRPC（Google）、Motan2（新浪）、Finagle（Twitter）、brpc（百度）、Arvo（Hadoop）、JSON-RPC、REST，等等；光一个服务发现问题，可以选择的就有：Eureka（Netflix）、Consul（HashiCorp）、Nacos（阿里巴巴）、ZooKeeper（Apache）、Etcd（CoreOS）、CoreDNS（CNCF），等等。其他领域的情况也是与此类似。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;organized-around-business-capability&#34;&gt;Organized around Business Capability&lt;/h3&gt;
&lt;p&gt;围绕业务能力构建&lt;/p&gt;
&lt;h3 id=&#34;decentralized-governance&#34;&gt;Decentralized Governance&lt;/h3&gt;
&lt;p&gt;分散治理&lt;/p&gt;
&lt;h3 id=&#34;componentization-via-services&#34;&gt;Componentization via Services&lt;/h3&gt;
&lt;p&gt;通过服务来实现独立自治的组件&lt;/p&gt;
&lt;h3 id=&#34;products-not-projects&#34;&gt;Products not Projects&lt;/h3&gt;
&lt;p&gt;产品化思维&lt;/p&gt;
&lt;h3 id=&#34;decentralized-data-management&#34;&gt;Decentralized Data Management&lt;/h3&gt;
&lt;p&gt;数据去中心化：需要分布式，但需要考虑一致性的问题。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;微服务明确地提倡数据应该按领域分散管理、更新、维护、存储，在单体服务中，一个系统的各个功能模块通常会使用同一个数据库，诚然中心化的存储天生就更容易避免一致性问题，但是，同一个数据实体在不同服务的视角里，它的抽象形态往往也是不同的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;smart-endpoint-and-dumb-pipe&#34;&gt;Smart Endpoint and Dumb Pipe&lt;/h3&gt;
&lt;p&gt;强终端弱管道：弱管道（Dumb Pipe）几乎算是直接指名道姓地反对 SOAP 、BPM 、ESB 的那一堆复杂的通信机制。&lt;/p&gt;
&lt;h3 id=&#34;design-for-failure&#34;&gt;Design for Failure&lt;/h3&gt;
&lt;p&gt;容错性设计&lt;/p&gt;
&lt;h3 id=&#34;evolutionary-design&#34;&gt;Evolutionary Design&lt;/h3&gt;
&lt;p&gt;演进式设计&lt;/p&gt;
&lt;h3 id=&#34;infrastructure-automation&#34;&gt;Infrastructure Automation&lt;/h3&gt;
&lt;p&gt;基础设施自动化：如 CI/CD。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;cloud-native&#34;&gt;Cloud Native&lt;/h2&gt;
&lt;p&gt;从软件层面独力应对微服务架构问题，发展到软、硬一体，合力应对架构问题的时代，此即为“后微服务时代”。&lt;/p&gt;
&lt;h3 id=&#34;virtualizationhttpsenwikipediaorgwikivirtualization--os-level_virtualizationhttpsenwikipediaorgwikios-level_virtualization&#34;&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Virtualization&#34;&gt;Virtualization&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://en.wikipedia.org/wiki/OS-level_virtualization&#34;&gt;OS-level_virtualization&lt;/a&gt;&lt;/h3&gt;
&lt;h3 id=&#34;service-meshhttpsenwikipediaorgwikiservice_mesh&#34;&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Service_mesh&#34;&gt;Service Mesh&lt;/a&gt;&lt;/h3&gt;
&lt;h4 id=&#34;sidecar-proxy&#34;&gt;Sidecar Proxy&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;举个例子，微服务 A 调用了微服务 B 的两个服务，称为 B1和 B2，假设 B1表现正常但 B2出现了持续的 500 错，那在达到一定阈值之后就应该对 B2进行熔断，以避免产生&lt;a href=&#34;https://en.wikipedia.org/wiki/Snowball_effect&#34;&gt;雪崩效应&lt;/a&gt;。如果仅在基础设施层面来处理，这会遇到一个两难问题，切断 A 到 B 的网络通路则会影响到 B1的正常调用，不切断的话则持续受 B2的错误影响。&lt;/p&gt;
&lt;p&gt;以上问题在通过 Spring Cloud 这类应用代码实现的微服务中并不难处理，既然是使用程序代码来解决问题，只要合乎逻辑，想要实现什么功能，只受限于开发人员的想象力与技术能力，但基础设施是针对整个容器来管理的，粒度相对粗旷，只能到容器层面，对单个远程服务就很难有效管控……&lt;/p&gt;
&lt;p&gt;……所谓的“边车”是一种带垮斗的三轮摩托，我小时候还算常见，现在基本就只在影视剧中才会看到了。这个场景里指的具体含义是由系统自动在服务容器（通常是指 Kubernetes 的 Pod）中注入一个&lt;strong&gt;通信代理服务器&lt;/strong&gt;，相当于那个挎斗，以类似网络安全里中间人攻击的方式进行流量劫持，在应用毫无感知的情况下，悄然接管应用所有对外通信。这个代理除了实现正常的服务间通信外（称为数据平面通信），还接收来自控制器的指令（称为控制平面通信），根据控制平面中的配置，对数据平面通信的内容进行分析处理，以实现熔断、认证、度量、监控、负载均衡等各种附加功能。这样便实现了既不需要在应用层面加入额外的处理代码，也提供了几乎不亚于程序代码的精细管理能力。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2 id=&#34;serverless&#34;&gt;Serverless&lt;/h2&gt;
&lt;p&gt;如果说微服务架构是分布式系统这条路的极致，那无服务架构，也许就是“不分布式”的云端系统这条路的起点。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;We predict that serverless computing will grow to dominate the future of cloud computing&lt;/p&gt;
&lt;p&gt;我们预测无服务将会发展成为未来云计算的主要形式&lt;/p&gt;
&lt;p&gt;—— &lt;a href=&#34;https://arxiv.org/abs/1902.03383&#34;&gt;Cloud Programming Simplified: A Berkeley View on Serverless Computing&lt;/a&gt;, 2019&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;backend&#34;&gt;Backend&lt;/h3&gt;
&lt;p&gt;后端设施：指数据库、消息队列、日志、存储，等等这一类用于支撑业务逻辑运行，但本身无业务含义的技术组件，这些后端设施都运行在云中，无服务中称其为“后端即服务”（Backend as a Service，BaaS）&lt;/p&gt;
&lt;h3 id=&#34;function&#34;&gt;Function&lt;/h3&gt;
&lt;p&gt;函数：指业务逻辑代码，这里函数的概念与粒度，都已经很接近于程序编码角度的函数了，其区别是无服务中的函数运行在云端，不必考虑算力问题，不必考虑容量规划（从技术角度可以不考虑，从计费的角度你的钱包够不够用还是要掂量一下的），无服务中称其为“函数即服务”（Function as a Service，FaaS）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;We can only see a short distance ahead, but we can see plenty there that needs to be done.&lt;/p&gt;
&lt;p&gt;尽管目光所及之处，只是不远的前方，即使如此，依然可以看到那里有许多值得去完成的工作在等待我们。&lt;/p&gt;
&lt;p&gt;—— &lt;a href=&#34;https://en.wikipedia.org/wiki/Alan_Turing&#34;&gt;Alan Turing&lt;/a&gt;，&lt;a href=&#34;https://en.wikipedia.org/wiki/Computing_Machinery_and_Intelligence&#34;&gt;Computing Machinery and Intelligence&lt;/a&gt;，1950&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;reference&#34;&gt;Reference&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;http://icyfenix.cn/architecture/architect-history/&#34;&gt;http://icyfenix.cn/architecture/architect-history/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www2.eecs.berkeley.edu/Pubs/TechRpts/2009/EECS-2009-28.pdf&#34;&gt;Above the Clouds: A Berkeley View of Cloud Computing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://arxiv.org/abs/1902.03383&#34;&gt;Cloud Programming Simplified: A Berkeley View on Serverless Computing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://aws.amazon.com/lambda/&#34;&gt;AWS Lambda&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;O&amp;rsquo;Reilly, 《&lt;a href=&#34;https://www.oreilly.com/content/software-architecture-patterns/&#34;&gt;Software Architecture Patterns&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;Martin Fowler / James Lewis，&lt;a href=&#34;https://martinfowler.com/articles/microservices.html&#34;&gt;Microservices&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Computing_Machinery_and_Intelligence&#34;&gt;Computing Machinery and Intelligence&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
- https://www.openheart.icu/cs/architecture/ - ALL RIGHTS RESERVED KRIS NIE</description>
        </item>
    
    
    
        <item>
        <title>Binary relation</title>
        <link>https://www.openheart.icu/cs/binary-relation/</link>
        <pubDate>Fri, 24 Jul 2020 00:00:50 +0000</pubDate>
        
        <guid>https://www.openheart.icu/cs/binary-relation/</guid>
        <description>42th openheart https://www.openheart.icu/cs/binary-relation/ -&lt;h1 id=&#34;binary-relation&#34;&gt;Binary relation&lt;/h1&gt;
&lt;h1 id=&#34;total-order&#34;&gt;Total order&lt;/h1&gt;
&lt;h1 id=&#34;partially-ordered-set&#34;&gt;Partially ordered set&lt;/h1&gt;
- https://www.openheart.icu/cs/binary-relation/ - ALL RIGHTS RESERVED KRIS NIE</description>
        </item>
    
    
    
        <item>
        <title>Distributed</title>
        <link>https://www.openheart.icu/cs/distributed/</link>
        <pubDate>Fri, 24 Jul 2020 00:00:50 +0000</pubDate>
        
        <guid>https://www.openheart.icu/cs/distributed/</guid>
        <description>42th openheart https://www.openheart.icu/cs/distributed/ -&lt;h1 id=&#34;cap&#34;&gt;CAP&lt;/h1&gt;
&lt;h2 id=&#34;consistencyhttpsenwikipediaorgwikiconsistency_model&#34;&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Consistency_model&#34;&gt;Consistency&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Every read receives the most recent write or an error.&lt;/p&gt;
&lt;h2 id=&#34;availabilityhttpsenwikipediaorgwikiavailability&#34;&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Availability&#34;&gt;Availability&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Every request receives a (non-error) response, without the guarantee that it contains the most recent write.&lt;/p&gt;
&lt;h2 id=&#34;partition-tolerancehttpsenwikipediaorgwikinetwork_partitioning&#34;&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Network_partitioning&#34;&gt;Partition tolerance&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The system continues to operate despite an arbitrary number of messages being dropped (or delayed) by the network between nodes.&lt;/p&gt;
&lt;h3 id=&#34;solution&#34;&gt;Solution&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://cloud.google.com/spanner&#34;&gt;Cloud Spanner&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;reference&#34;&gt;Reference&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/CAP_theorem&#34;&gt;CAP theorem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mwhittaker.github.io/blog/an_illustrated_proof_of_the_cap_theorem/&#34;&gt;An Illustrated Proof of the CAP Theorem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.hollischuang.com/archives/666&#34;&gt;分布式系统的CAP理论&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;distributed-cache&#34;&gt;Distributed cache&lt;/h1&gt;
&lt;h2 id=&#34;缓存雪崩&#34;&gt;缓存雪崩&lt;/h2&gt;
&lt;p&gt;缓存雪崩我们可以简单的理解为：由于原有&lt;strong&gt;缓存失效&lt;/strong&gt;，新缓存未到期间所有原本应该访问缓存的请求都去查询数据库了，而对数据库 CPU 和内存造成巨大压力，严重的会造成数据库宕机。从而形成一系列连锁反应，造成整个系统崩溃。&lt;/p&gt;
&lt;p&gt;关键词：缓存失效，针对这种情况一般有三种处理办法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一般并发量不是特别多的时候，使用最多的解决方案是加锁排队。&lt;/li&gt;
&lt;li&gt;&lt;!-- raw HTML omitted --&gt;给每一个缓存数据增加相应的缓存标记，记录缓存的是否失效，如果缓存标记失效，则更新数据缓存。&lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;&lt;!-- raw HTML omitted --&gt;为 key 设置不同的缓存失效时间。&lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;缓存穿透&#34;&gt;缓存穿透&lt;/h2&gt;
&lt;p&gt;缓存穿透是指用户查询数据，在数据库没有，自然在缓存中也不会有。这样就导致用户查询的时候，在 缓存中找不到，每次都要去数据库再查询一遍，然后返回空（相当于进行了两次无用的查询）。这样请求就绕过缓存直接查数据库，这也是经常提的缓存命中率问题。&lt;/p&gt;
&lt;p&gt;有很多种方法可以有效地解决缓存穿透问题，最常见的则是采用布隆过滤器，将所有可能存在的数据哈 希到一个足够大的 bitmap 中，一个一定不存在的数据会被这个 bitmap 拦截掉，从而避免了对底层存 储系统的查询压力。&lt;/p&gt;
&lt;p&gt;另外也有一个更为简单粗暴的方法，如果一个查询返回的数据为空（不管是数据不 存在，还是系统故障），我们仍然把这个空结果进行缓存，但它的过期时间会很短，最长不超过五分钟。 通过这个直接设置的默认值存放到缓存，这样第二次到缓冲中获取就有值了，而不会继续访问数据库。&lt;/p&gt;
&lt;h2 id=&#34;缓存预热&#34;&gt;缓存预热&lt;/h2&gt;
&lt;p&gt;缓存预热就是系统上线后，将相关的缓存数据直接加载到缓存系统。这样就可以避免在用户请求的时候，先查询数据库，然后再将数据缓存的问题。用户直接查询事先被预热的缓存数据。&lt;/p&gt;
&lt;h2 id=&#34;缓存更新&#34;&gt;缓存更新&lt;/h2&gt;
&lt;p&gt;缓存更新除了缓存服务器自带的缓存失效策略之外（Redis 默认的有 6 中策略可供选择），我们还可以根据具体的业务需求进行自定义的缓存淘汰，常见的策略有两种：&lt;/p&gt;
&lt;p&gt;（1）定时去清理过期的缓存；&lt;/p&gt;
&lt;p&gt;（2）当有用户请求过来时，再判断这个请求所用到的缓存是否过期，过期的话就去底层系统得到新数据并更新缓存。&lt;/p&gt;
&lt;h2 id=&#34;缓存降级&#34;&gt;缓存降级&lt;/h2&gt;
&lt;p&gt;当访问量剧增、服务出现问题（如响应时间慢或不响应）或非核心服务影响到核心流程的性能时，仍然需要保证服务还是可用的，即使是有损服务。系统可以根据一些关键数据进行自动降级，也可以配置开关实现人工降级。 降级的最终目的是保证核心服务可用，即使是有损的。 而且有些服务是无法降级的（如加入购物车、结算）。&lt;/p&gt;
&lt;h1 id=&#34;issue&#34;&gt;Issue&lt;/h1&gt;
&lt;h2 id=&#34;andrew-file-systemhttpsenwikipediaorgwikiandrew_file_system&#34;&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Andrew_File_System&#34;&gt;Andrew File System&lt;/a&gt;&lt;/h2&gt;
&lt;h2 id=&#34;distributed-and-global-time&#34;&gt;Distributed and global time&lt;/h2&gt;
&lt;h3 id=&#34;reference-1&#34;&gt;Reference&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://www.v2ex.com/t/816940#reply20&#34;&gt;分布式没有全局时间 - V2EX&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E6%97%B6%E9%92%9F%E5%81%8F%E7%A7%BB&#34;&gt;时钟偏移&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mwhittaker.github.io/blog/an_illustrated_proof_of_the_cap_theorem/&#34;&gt;An Illustrated Proof of the CAP Theorem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://vonng.gitbooks.io/ddia-cn/content/&#34;&gt;设计数据密集型应用 - 中文翻译&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E7%9F%B3%E8%8B%B1%E6%99%B6%E4%BD%93%E8%B0%90%E6%8C%AF%E5%99%A8&#34;&gt;石英晶体谐振器&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E5%8E%9F%E5%AD%90%E9%90%98&#34;&gt;原子钟&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E7%B3%BB%E7%BB%9F%E6%97%B6%E9%97%B4&#34;&gt;系统时间&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;heading&#34;&gt;&lt;/h2&gt;
- https://www.openheart.icu/cs/distributed/ - ALL RIGHTS RESERVED KRIS NIE</description>
        </item>
    
    
    
        <item>
        <title>Microservice</title>
        <link>https://www.openheart.icu/cs/microservice/</link>
        <pubDate>Fri, 24 Jul 2020 00:00:50 +0000</pubDate>
        
        <guid>https://www.openheart.icu/cs/microservice/</guid>
        <description>42th openheart https://www.openheart.icu/cs/microservice/ -&lt;h1 id=&#34;api-gateways&#34;&gt;API Gateways&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;The reference microservice application &lt;a href=&#34;https://github.com/dotnet-architecture/eShopOnContainers&#34;&gt;eShopOnContainers&lt;/a&gt; is currently using features provided by &lt;a href=&#34;https://www.envoyproxy.io/&#34;&gt;Envoy&lt;/a&gt; to implement the API Gateway instead of the earlier referenced &lt;a href=&#34;https://github.com/ThreeMammals/Ocelot&#34;&gt;Ocelot&lt;/a&gt;. We made this design choice because of Envoy&amp;rsquo;s built-in support for the WebSocket protocol, required by the new gRPC inter-service communications implemented in eShopOnContainers. However, we&amp;rsquo;ve retained this section in the guide so you can consider Ocelot as a simple, capable, and lightweight API Gateway suitable for production-grade scenarios. Also, latest Ocelot version contains a breaking change on its json schema. Consider using Ocelot &amp;lt; v16.0.0, or use the key Routes instead of ReRoutes.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;service-mesh&#34;&gt;Service Mesh&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;A service mesh, like the open source project &lt;a href=&#34;https://www.redhat.com/en/topics/microservices/what-is-istio&#34;&gt;Istio,&lt;/a&gt; is a way to control how different parts of an application share data with one another. Unlike other systems for managing this communication, a service mesh is a dedicated infrastructure layer built right into an app. This visible infrastructure layer can document how well (or not) different parts of an app interact, so it becomes easier to optimize communication and avoid downtime as an app grows.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Istio uses an extended version of the &lt;a href=&#34;https://www.envoyproxy.io/&#34;&gt;Envoy&lt;/a&gt; proxy. Envoy is a high-performance proxy developed in C++ to mediate all inbound and outbound traffic for all services in the service mesh. Envoy proxies are the only Istio components that interact with data plane traffic.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;sidecar&#34;&gt;SideCar&lt;/h3&gt;
&lt;p&gt;A service mesh doesn’t introduce new functionality to an app’s runtime environment—apps in any architecture have always needed rules to specify how requests get from point A to point B. What’s different about a service mesh is that it takes the logic governing service-to-service communication out of individual services and abstracts it to a layer of infrastructure.&lt;/p&gt;
&lt;p&gt;To do this, a service mesh is built into an app as an array of network proxies. Proxies are a familiar concept in enterprise IT—if you are accessing this webpage from a work computer, there’s a good chance you just used one:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;As your request for this page went out, it was first received by your company’s web proxy…&lt;/li&gt;
&lt;li&gt;After passing the proxy’s security measure, it was sent to the server that hosts this page…&lt;/li&gt;
&lt;li&gt;Next, this page was returned to the proxy and again checked against its security measures…&lt;/li&gt;
&lt;li&gt;And then it was finally sent from the proxy to you.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://www.redhat.com/cms/managed-files/web-proxy-1680.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;In a service mesh, requests are routed between microservices through proxies in their own infrastructure layer. For this reason, individual proxies that make up a service mesh are sometimes called &amp;ldquo;sidecars,&amp;rdquo; since they run &lt;em&gt;alongside&lt;/em&gt; each service, rather than &lt;em&gt;within&lt;/em&gt; them. Taken together, these &amp;ldquo;sidecar&amp;rdquo; proxies—decoupled from each service—form a mesh network.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.redhat.com/cms/managed-files/service-mesh-1680.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;A sidecar proxy sits alongside a microservice and routes requests to other proxies. Together, these sidecars form a mesh network.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Without a service mesh, each microservice needs to be coded with logic to govern service-to-service communication, which means developers are less focused on business goals. It also means communication failures are harder to diagnose because the logic that governs interservice communication is hidden within each service.&lt;/p&gt;
&lt;h1 id=&#34;certificate-authority&#34;&gt;Certificate Authority&lt;/h1&gt;
&lt;p&gt;OAuth2 Security&lt;/p&gt;
&lt;h1 id=&#34;infrastructure&#34;&gt;Infrastructure&lt;/h1&gt;
&lt;p&gt;Configuration Center&lt;/p&gt;
&lt;p&gt;Service discovery&lt;/p&gt;
&lt;p&gt;Service monitoring&lt;/p&gt;
&lt;p&gt;Log analysis&lt;/p&gt;
&lt;h1 id=&#34;virtualizationhttpsenwikipediaorgwikivirtualization--containerizationhttpsenwikipediaorgwikicontainerization&#34;&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Virtualization&#34;&gt;Virtualization&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://en.wikipedia.org/wiki/Containerization&#34;&gt;Containerization&lt;/a&gt;&lt;/h1&gt;
&lt;h2 id=&#34;os-level_virtualizationhttpsenwikipediaorgwikios-level_virtualization&#34;&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/OS-level_virtualization&#34;&gt;OS-level_virtualization&lt;/a&gt;&lt;/h2&gt;
&lt;h2 id=&#34;wslwindows-subsystem-for-linux&#34;&gt;WSL(Windows Subsystem for Linux)&lt;/h2&gt;
&lt;h3 id=&#34;reference&#34;&gt;Reference&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://jmmv.dev/2020/11/wsl-lost-potential.html&#34;&gt;WSL1 &amp;amp; WSL2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/windows/wsl/compare-versions&#34;&gt;Comparing WSL 1 and WSL 2 | Microsoft Docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Architecture_of_Windows_NT&#34;&gt;Architecture of Windows NT&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;reference-1&#34;&gt;Reference&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/dotnet/architecture/microservices/&#34;&gt;.NET Microservices. Architecture for Containerized .NET Applications | Microsoft Docs&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
- https://www.openheart.icu/cs/microservice/ - ALL RIGHTS RESERVED KRIS NIE</description>
        </item>
    
    
    
        <item>
        <title>Interesting</title>
        <link>https://www.openheart.icu/speech/interesting/</link>
        <pubDate>Wed, 22 Jul 2020 19:45:28 +0000</pubDate>
        
        <guid>https://www.openheart.icu/speech/interesting/</guid>
        <description>42th openheart https://www.openheart.icu/speech/interesting/ -&lt;h3 id=&#34;list-of-computer-science-conferenceshttpsenwikipediaorgwikilist_of_computer_science_conferences&#34;&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/List_of_computer_science_conferences&#34;&gt;List of computer science conferences&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;CS Conferences&lt;/p&gt;
&lt;h3 id=&#34;texturesjshttpsriccardoscalcoittextures&#34;&gt;&lt;a href=&#34;https://riccardoscalco.it/textures/&#34;&gt;Textures.js&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个 JS 纹理库，基于 D3.js&lt;/p&gt;
&lt;h3 id=&#34;elevatorjshttpsgithubcomtholmanelevatorjs&#34;&gt;&lt;a href=&#34;https://github.com/tholman/elevator.js&#34;&gt;elevator.js&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Finally, a &amp;ldquo;back to top&amp;rdquo; button that behaves like a real elevator, by adding elevator music to quietly soothe the awkwardness that can ensue when being smoothly scrolled to the top of the screen.&lt;/p&gt;
&lt;p&gt;This is very serious stuff, &lt;a href=&#34;http://tholman.com/elevator.js&#34;&gt;here&amp;rsquo;s a demo&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;一个使得“回到顶部”的网页滚动，具有电梯效果的 JS 库。&lt;/p&gt;
&lt;h3 id=&#34;mownedhttpsmownedcom&#34;&gt;&lt;a href=&#34;https://mowned.com/&#34;&gt;Mowned&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个手机数据库&lt;/p&gt;
&lt;h3 id=&#34;javascript-生成艺术图形教程httpsgenerativeartistrycomtutorials&#34;&gt;&lt;a href=&#34;https://generativeartistry.com/tutorials/&#34;&gt;JavaScript 生成艺术图形教程&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;介绍 如何使用JavaScript 生成8种艺术图形。&lt;/p&gt;
&lt;h3 id=&#34;使用-raspberry-pi-学习操作系统开发httpss-matyukevichgithubioraspberry-pi-os&#34;&gt;&lt;a href=&#34;https://s-matyukevich.github.io/raspberry-pi-os/&#34;&gt;使用 Raspberry Pi 学习操作系统开发&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这是一个免费英文教程，教大家怎么用树莓派，一步步开发一个简单的操作系统内核，每一步都有实例代码&lt;/p&gt;
&lt;h3 id=&#34;vim-的由来httpspragmaticpineapplecomhow-did-vim-become-so-popular&#34;&gt;&lt;a href=&#34;https://pragmaticpineapple.com/how-did-vim-become-so-popular/&#34;&gt;Vim 的由来&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Vim 有30多年历史，目前依然是最流行的编辑器之一。本文简要地回顾了历史，它的一些主要的设计决定，到底是怎么来的&lt;/p&gt;
&lt;h3 id=&#34;makefile-的静态网站实现httpsmetinnextcorgpoststhe_idea_of_makefile_bloghtml&#34;&gt;&lt;a href=&#34;https://metin.nextc.org/posts/The_Idea_Of_Makefile_Blog.html&#34;&gt;Makefile 的静态网站实现&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;现在有各种各样的静态网站工具，比如 Jekyll 和 Hugo 等。作者提出，Makefile 也可以用来实现静态网站，这样就不需要任何外部工具了，只维护一个 Makefile 配置文件即可&lt;/p&gt;
&lt;h3 id=&#34;字体反爬的攻与防httpscjtingme20200701douyu-crawler-and-font-anti-crawling&#34;&gt;&lt;a href=&#34;https://cjting.me/2020/07/01/douyu-crawler-and-font-anti-crawling/&#34;&gt;字体反爬的攻与防&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者因为业务原因需要爬取一批斗鱼主播的相关数据，结果发现斗鱼使用了一种很有意思的反爬技术：字体反爬&lt;/p&gt;
&lt;h3 id=&#34;分页查询不要使用-offset-和-limit-语法httpshackernooncomplease-dont-use-offset-and-limit-for-your-pagination-8ux3u4y&#34;&gt;&lt;a href=&#34;https://hackernoon.com/please-dont-use-offset-and-limit-for-your-pagination-8ux3u4y&#34;&gt;分页查询不要使用 OFFSET 和 LIMIT 语法&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;数据查询时，如果数据多，就需要分页，一般使用 OFFSET 和 LIMIT 语法。这篇文章提出，这样做不好，耗费资源，有性能问题&lt;/p&gt;
&lt;h3 id=&#34;git-多行提交信息的简单方法httpswwwstefanjudiscomtoday-i-learnedgit-commit-accepts-several-message-flags-m-to-allow-multiline-commits&#34;&gt;&lt;a href=&#34;https://www.stefanjudis.com/today-i-learned/git-commit-accepts-several-message-flags-m-to-allow-multiline-commits/&#34;&gt;Git 多行提交信息的简单方法&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;git commit&lt;/code&gt;命令的&lt;code&gt;-m&lt;/code&gt;参数用来指定提交信息，但是这样提交的信息只有一行。本文介绍实现多行信息的简单方法&lt;/p&gt;
&lt;p&gt;eg:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;git co -m &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;commit title&amp;#34;&lt;/span&gt; -m &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;commit description&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;盲文的由来httpsstitcherioblogbraille-and-the-history-of-software&#34;&gt;&lt;a href=&#34;https://stitcher.io/blog/braille-and-the-history-of-software&#34;&gt;盲文的由来&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;如题&lt;/p&gt;
&lt;h3 id=&#34;漫长的雨httpwwwsamwellernetbradbury-120181129the-essential-bradbury&#34;&gt;&lt;a href=&#34;http://www.samweller.net/bradbury-1/2018/11/29/the-essential-bradbury&#34;&gt;漫长的雨&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;《漫长的雨》（The long rain，&lt;strong&gt;&lt;a href=&#34;https://www.sohu.com/a/337866552_771944&#34;&gt;中译全文&lt;/a&gt;&lt;/strong&gt;）是美国科幻小说作家雷·布拉德伯里（Ray Bradbury）1950年发表的一篇短篇小说。&lt;/p&gt;
&lt;p&gt;它讲述四个宇航员因为火箭失事，来到一个不停下雨的星球。这个星球永远在下瓢泼大雨，过去10年一秒都没有停过。宇航员冒着雨水，在丛林里面穿行，拼命寻找前人修建的“阳光穹顶”，那里是一个大屋顶，有温暖的人造阳光，以及充足的食物和休息的场所。&lt;/p&gt;
&lt;p&gt;小说的开头是这样的：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;大雨，永远的雨，升腾着汗水和蒸汽的雨。这是密集的瓢泼大雨，像鞭子一样打在眼睛上，飞溅到脚踝上。它是一场淹没其他所有雨水的雨，让人遗忘所有关于雨水的记忆。”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;6个最常见的网页可访问性问题httpsblogscottlogiccom202007026-most-common-accessibility-problemshtmlempty-links-and-empty-buttons&#34;&gt;&lt;a href=&#34;https://blog.scottlogic.com/2020/07/02/6-most-common-accessibility-problems.html#empty-links-and-empty-buttons&#34;&gt;6个最常见的网页可访问性问题&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;可访问性（accessibility）指的是，网页对生理缺陷的用户是否友好。本文总结了6个最常见的可访问性问题及其解决方法&lt;/p&gt;
&lt;h3 id=&#34;伪随机数生成器httpsgithubcombryccodeblobmasterjshashprngsmd&#34;&gt;&lt;a href=&#34;https://github.com/bryc/code/blob/master/jshash/PRNGs.md&#34;&gt;伪随机数生成器&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;伪随机数指的是通过一种算法，由种子值得到的随机数。本文介绍了几种简单的伪随机数算法&lt;/p&gt;
&lt;h3 id=&#34;75行代码入门-webglhttpsavikdascom20200708barebones-webgl-in-75-lines-of-codehtml&#34;&gt;&lt;a href=&#34;https://avikdas.com/2020/07/08/barebones-webgl-in-75-lines-of-code.html&#34;&gt;75行代码入门 WebGL&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;WebGL 是浏览器对 OpenGL API 的调用接口，可以在浏览器里面实现 3D 动画。本文用一个简短的例子，介绍了这个 API。这只是一篇简介，另有&lt;a href=&#34;https://www.toptal.com/javascript/3d-graphics-a-webgl-tutorial&#34;&gt;完整的 WebGL 教程&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;redisearchhttpsossredislabscomredisearch&#34;&gt;&lt;a href=&#34;https://oss.redislabs.com/redisearch/&#34;&gt;RediSearch&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;以 Redis 作为后端的全文搜索引擎，支持中文&lt;/p&gt;
&lt;h3 id=&#34;onelook-thesaurushttpswwwonelookcomthesaurus&#34;&gt;&lt;a href=&#34;https://www.onelook.com/thesaurus/&#34;&gt;OneLook Thesaurus&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;英语的同义词词典，可以查询同义词，也可以根据描述返回对应的词（比如 &lt;a href=&#34;https://www.onelook.com/thesaurus/?s=large%20birds&amp;amp;loc=revfp&#34;&gt;large bird&lt;/a&gt; 对应哪些词），加载速度很快&lt;/p&gt;
&lt;h3 id=&#34;crdttechhttpscrdttech&#34;&gt;&lt;a href=&#34;https://crdt.tech/&#34;&gt;CRDT.tech&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;CRDT 是一种数据结构，用于分布式网络的数据同步，最典型的例子就是多人同时编辑文档。该网站收集了 CRDT 的相关资料&lt;/p&gt;
&lt;h3 id=&#34;progressive-app-storehttpsprogressiveappstorehome&#34;&gt;&lt;a href=&#34;https://progressiveapp.store/home&#34;&gt;Progressive App Store&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个渐进式 App 的在线商店，收集各种 Progessive App，是网友搭建的&lt;/p&gt;
&lt;h3 id=&#34;网页设计博物馆httpswwwwebdesignmuseumorg&#34;&gt;&lt;a href=&#34;https://www.webdesignmuseum.org/&#34;&gt;网页设计博物馆&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;该网站收集了1600多个经过精心挑选和分类的网页，展示了1991年至2006年之间的网站设计趋势&lt;/p&gt;
&lt;h3 id=&#34;窗口交换httpswindow-swapcom&#34;&gt;&lt;a href=&#34;https://window-swap.com/&#34;&gt;窗口交换&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;该网站让世界各地的人上传他们窗外的镜像，一段5到10分钟的视频。其他用户就可以在网站上随机看到别人的窗外&lt;/p&gt;
&lt;h3 id=&#34;cnetcomhttpswwwcnetcompicturesinside-the-kansas-survival-condo-designed-to-save-you-from-nuclear-winter&#34;&gt;&lt;a href=&#34;https://www.cnet.com/pictures/inside-the-kansas-survival-condo-designed-to-save-you-from-nuclear-winter/&#34;&gt;cnet.com&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;幸存者公寓&lt;/p&gt;
&lt;h3 id=&#34;平流层飞船httpswwwgeekwirecom2020space-perspective-reboots-vision-flying-passengers-stratosphere-balloon&#34;&gt;&lt;a href=&#34;https://www.geekwire.com/2020/space-perspective-reboots-vision-flying-passengers-stratosphere-balloon/&#34;&gt;平流层飞船&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;美国一家私人公司提出了“平流层飞船”计划，让游客乘坐飞船上升到平流层（距离地面30公里），体验一下太空的感觉，票价预计为每人12.5万美元。飞船可以乘坐八名乘客和一名飞行员，先进行长达两个小时的上升，然后在空中停留两个小时，最后再花两个小时下降。&lt;/p&gt;
&lt;p&gt;飞船的上升动力，主要来自一个巨大的充满氢气的气球。飞船内部有酒吧，还有一个“拥有世界上最佳视野”的厕所，甚至有 Wifi。该公司计划飞船在2024年完工，目前已经在&lt;a href=&#34;https://thespaceperspective.com/fly/&#34;&gt;官网&lt;/a&gt;接受预订。&lt;/p&gt;
&lt;h3 id=&#34;sha-256-的原理httpsqvaultio20200708how-sha-2-works-step-by-step-sha-256&#34;&gt;&lt;a href=&#34;https://qvault.io/2020/07/08/how-sha-2-works-step-by-step-sha-256/&#34;&gt;SHA-256 的原理&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文通过一个简单的例子，一步步演示 SHA-256 算法，如何将字符串变成一个256位的哈希值。&lt;/p&gt;
&lt;h3 id=&#34;javascript-函数作用域解释httpsbloggreenrootsinfojavascript-scope-fundamentals-with-tom-and-jerry-ckcq723h4007vkxs18dxa97ae&#34;&gt;&lt;a href=&#34;https://blog.greenroots.info/javascript-scope-fundamentals-with-tom-and-jerry-ckcq723h4007vkxs18dxa97ae&#34;&gt;JavaScript 函数作用域解释&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;通过一个简单的例子，解释 JavaScript 的函数作用域规则&lt;/p&gt;
&lt;h3 id=&#34;gpt-3-模型的图灵测试httplackerioai20200706giving-gpt-3-a-turing-testhtml&#34;&gt;&lt;a href=&#34;http://lacker.io/ai/2020/07/06/giving-gpt-3-a-turing-test.html&#34;&gt;GPT-3 模型的图灵测试&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;GPT-3 是 OpenAI 公司开发的一个 AI 模型，能够自动生成文本。作者对它进行了图灵测试，跟它对话，看能不能分辨出对方是一个软件。&lt;/p&gt;
&lt;h3 id=&#34;pastemecnhttpspastemecn&#34;&gt;&lt;a href=&#34;https://pasteme.cn/&#34;&gt;PasteMe.cn&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个文本分享网站，不需要注册，会对输入的文本或代码生成 URL，支持密码和阅后即焚&lt;/p&gt;
&lt;h3 id=&#34;shoelacehttpsshoelacestyle&#34;&gt;&lt;a href=&#34;https://shoelace.style/&#34;&gt;Shoelace&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个 Web Components 组件库，易用&lt;/p&gt;
&lt;h3 id=&#34;3d-封面生成器https3d-book-cssnetlifyapp&#34;&gt;&lt;a href=&#34;https://3d-book-css.netlify.app/&#34;&gt;3D 封面生成器&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;在线工具，让一张平面图片变成 3D 书籍封面。&lt;/p&gt;
&lt;h3 id=&#34;easy-monitorhttpsgithubcomhyj1991easy-monitor&#34;&gt;&lt;a href=&#34;https://github.com/hyj1991/easy-monitor&#34;&gt;easy-monitor&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Node.js 应用的性能监控工具，可以定位线上故障。代码开源，支持私有部署&lt;/p&gt;
&lt;h3 id=&#34;remark42httpsgithubcomumputunremark42&#34;&gt;&lt;a href=&#34;https://github.com/umputun/remark42&#34;&gt;remark42&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;开源的评论服务，可以用来为静态网页加上留言功能。&lt;/p&gt;
&lt;h3 id=&#34;wikijshttpswikijsorg&#34;&gt;&lt;a href=&#34;https://wiki.js.org/&#34;&gt;Wiki.js&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;架设个人 Wiki 的 Node.js 应用。&lt;/p&gt;
&lt;h3 id=&#34;rust-语言之旅httpstourofrustcom00_zh-cnhtml&#34;&gt;&lt;a href=&#34;https://tourofrust.com/00_zh-cn.html&#34;&gt;Rust 语言之旅&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Rust 语言的中文版在线教程，通过可以运行的小例子介绍语法，从 Hello World 开始讲起&lt;/p&gt;
&lt;h3 id=&#34;木星相册httpswwwflickrcomphotoskevinmgillalbums72157709069900506&#34;&gt;&lt;a href=&#34;https://www.flickr.com/photos/kevinmgill/albums/72157709069900506&#34;&gt;木星相册&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个天文爱好者收集的木星照片。&lt;/p&gt;
&lt;h3 id=&#34;麻省理工学院的统计学课件httpsocwmiteducoursesmathematics18-650-statistics-for-applications-fall-2016lecture-slides&#34;&gt;&lt;a href=&#34;https://ocw.mit.edu/courses/mathematics/18-650-statistics-for-applications-fall-2016/lecture-slides/&#34;&gt;麻省理工学院的统计学课件&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;麻省理工学院本科生统计学课程的 PPT 课件&lt;/p&gt;
&lt;h3 id=&#34;没有博士学位者的-tensorflow-和深度学习教程httpscodelabsdevelopersgooglecomcodelabscloud-tensorflow-mnist&#34;&gt;&lt;a href=&#34;https://codelabs.developers.google.com/codelabs/cloud-tensorflow-mnist/&#34;&gt;没有博士学位者的 TensorFlow 和深度学习教程&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;谷歌发布的英文教程，没有高深的数学，向初学者介绍 TensorFlow 和深度学习。&lt;/p&gt;
&lt;h3 id=&#34;javascript-的第三纪元httpswwwswyxiowritingjs-third-age&#34;&gt;&lt;a href=&#34;https://www.swyx.io/writing/js-third-age/&#34;&gt;JavaScript 的第三纪元&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者认为，JavaScript 的发展可以分成三个阶段：原始阶段、Node.js 阶段和目前的超越阶段。&lt;/p&gt;
&lt;p&gt;当前阶段的主要特征是，JavaScript 开始作为底层技术，ES6 模块、TypeScript、WebAssembly 逐渐普及&lt;/p&gt;
&lt;h3 id=&#34;如何构建优秀的-apihttpswwwstxnextcombloghow-to-build-a-good-api-that-wont-embarrass-you&#34;&gt;&lt;a href=&#34;https://www.stxnext.com/blog/how-to-build-a-good-api-that-wont-embarrass-you&#34;&gt;如何构建优秀的 API&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文介绍设计一个优秀的 RESTful API 的注意事项，以及 REST 和 GraphQL 两种 API 的差异&lt;/p&gt;
&lt;h3 id=&#34;python-的-sqlite-数据库教程httpstowardsdatasciencecomdo-you-know-python-has-a-built-in-database-d553989c87bd&#34;&gt;&lt;a href=&#34;https://towardsdatascience.com/do-you-know-python-has-a-built-in-database-d553989c87bd&#34;&gt;Python 的 SQLite 数据库教程&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文是入门教程，介绍如何在 Python 语言使用内置的 SQLite 数据库，不需要任何安装步骤&lt;/p&gt;
&lt;h3 id=&#34;10个有用的-git-log-技巧httpshackernooncomten-useful-git-log-tricks-7nt3yxy&#34;&gt;&lt;a href=&#34;https://hackernoon.com/ten-useful-git-log-tricks-7nt3yxy&#34;&gt;10个有用的 git log 技巧&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文介绍&lt;code&gt;git log&lt;/code&gt;命令的10个参数用法&lt;/p&gt;
&lt;h3 id=&#34;async-函数的一个注意点httpswwwbrandonsmithninjablogasync-await&#34;&gt;&lt;a href=&#34;https://www.brandonsmith.ninja/blog/async-await&#34;&gt;async 函数的一个注意点&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文提醒大家注意，使用 JavaScript 的 async/await 函数时，要区分并发操作和继发操作&lt;/p&gt;
&lt;h3 id=&#34;react-spectrumhttpsreact-spectrumadobecomreact-spectrumindexhtml&#34;&gt;&lt;a href=&#34;https://react-spectrum.adobe.com/react-spectrum/index.html&#34;&gt;React Spectrum&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Adobe 公司的 React 组件库&lt;/p&gt;
&lt;h3 id=&#34;css-sweeperhttpsgithubcompropjockeycss-sweeper&#34;&gt;&lt;a href=&#34;https://github.com/propjockey/css-sweeper&#34;&gt;css-sweeper&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个只用 HTML 和 CSS 实现的扫雷游戏，不使用 JavaScript&lt;/p&gt;
&lt;h3 id=&#34;react-tablehttpsgithubcomtannerlinsleyreact-table&#34;&gt;&lt;a href=&#34;https://github.com/tannerlinsley/react-table&#34;&gt;react-table&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;React 的表格组件库，新的 7.0 版完全采用 Hooks 设计&lt;/p&gt;
&lt;h3 id=&#34;数据可视化图表目录httpsdatavizcataloguecomzh&#34;&gt;&lt;a href=&#34;https://datavizcatalogue.com/ZH/&#34;&gt;数据可视化图表目录&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这个网站收集各种数据可视化的图表类型，简要讲解每种类型的用途和特点&lt;/p&gt;
&lt;h3 id=&#34;拥抱扩展扑灭httpsenwikipediaorgwikiembrace_extend_and_extinguish&#34;&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Embrace,_extend,_and_extinguish&#34;&gt;拥抱，扩展，扑灭&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;1996年，美国司法部发现，微软公司内部使用“拥抱，扩展，扑灭”（Embrace, extend, and extinguish，简称 EEE ）这个短语，描述对付竞争对手的策略。&lt;/p&gt;
&lt;p&gt;首先，拥抱对方的产品种类，进入对方的市场；然后，使用自己的专有功能扩展产品标准；最后，利用这些差异，使竞争对手处于不利地位。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;拥抱阶段&lt;/strong&gt; ：开发与竞争产品基本兼容的软件，或实施公共标准。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;扩展阶段&lt;/strong&gt;：添加和推广竞争对手或标准不支持的功能。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;扑灭阶段&lt;/strong&gt;：由于市场份额的扩展，添加的功能成为事实上的标准时，再将竞争对手边缘化。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;微软的 IE 浏览器就是使用这种策略的最好例子。&lt;/p&gt;
&lt;p&gt;现在有人认为，微软对于开源软件的态度，从敌对变成拥抱，也有可能是在实施这种策略。另一方面，谷歌公司在很多技术领域的作为，也让人疑虑，它在实施这种策略。&lt;/p&gt;
&lt;h3 id=&#34;javascript-语言的多态httpszellwkcomblogpolymorphism-javascript&#34;&gt;&lt;a href=&#34;https://zellwk.com/blog/polymorphism-javascript/&#34;&gt;JavaScript 语言的多态&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;多态（Polymorph）是面向对象编程的一个术语，有多种含义。本文讨论 JavaScript 语言如何实现多态&lt;/p&gt;
&lt;h3 id=&#34;github-actions-的-go-语言示例httpswwwfreecodecamporgnewsgo-automate-your-github-profile-readme&#34;&gt;&lt;a href=&#34;https://www.freecodecamp.org/news/go-automate-your-github-profile-readme/&#34;&gt;GitHub Actions 的 Go 语言示例&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文介绍如何在 GitHub 仓库里面定时跑 Go 语言脚本，再将代码推送回仓库&lt;/p&gt;
&lt;h3 id=&#34;javascript-测试框架比较httpsgithubcomscraggocomparing-javascript-test-runnersblobmasterreadmemd&#34;&gt;&lt;a href=&#34;https://github.com/scraggo/comparing-javascript-test-runners/blob/master/README.md&#34;&gt;JavaScript 测试框架比较&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Mocha、Ava、Jest 是目前非常流行的三大 JavaScript 测试框架，本文对它们进行了比较，每个框架最合适的运行场景&lt;/p&gt;
&lt;h3 id=&#34;git-工作流程的图示httpszepelioblog5-git-workflows-to-improve-development&#34;&gt;&lt;a href=&#34;https://zepel.io/blog/5-git-workflows-to-improve-development/&#34;&gt;Git 工作流程的图示&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文用清晰的图形解释了五种 Git 工作流程&lt;/p&gt;
&lt;h3 id=&#34;tailwind-css从业余项目到数百万美元的业务httpsadamwathanmetailwindcss-from-side-project-byproduct-to-multi-mullion-dollar-business&#34;&gt;&lt;a href=&#34;https://adamwathan.me/tailwindcss-from-side-project-byproduct-to-multi-mullion-dollar-business/&#34;&gt;Tailwind CSS：从业余项目到数百万美元的业务&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Tailwind CSS 的作者介绍这个框架的诞生过程，以及他们如何通过它赚到几百万美元。&lt;/p&gt;
&lt;h3 id=&#34;windows-10-阻止修改-hosts-文件httpswwwbleepingcomputercomnewsmicrosoftwindows-10-hosts-file-blocking-telemetry-is-now-flagged-as-a-risk&#34;&gt;&lt;a href=&#34;https://www.bleepingcomputer.com/news/microsoft/windows-10-hosts-file-blocking-telemetry-is-now-flagged-as-a-risk/&#34;&gt;Windows 10 阻止修改 HOSTS 文件&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;HOSTS 文件用于修改网站域名对应的 IP 地址，WIndows 10 内置的 Windows Defender 软件最近开始警告和阻止修改这个文件。&lt;/p&gt;
&lt;h3 id=&#34;我用-gpt-3-写了一篇博客文章httpsliampsubstackcompmy-gpt-3-blog-got-26-thousand-visitors&#34;&gt;&lt;a href=&#34;https://liamp.substack.com/p/my-gpt-3-blog-got-26-thousand-visitors&#34;&gt;我用 GPT-3 写了一篇博客文章&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;GPT-3 是目前最先进的人工智能模型，可以根据输入，返回一篇人类可读的文章。&lt;/p&gt;
&lt;p&gt;作者输入文章的标题和简介，GPT-3 就自动返回了一篇博客文章，这篇文章还登上了 Hacker News 的第一名，许多人都没有发现这是计算机写的。&lt;/p&gt;
&lt;h3 id=&#34;随机数据生成器httpsrandom-data-apicom&#34;&gt;&lt;a href=&#34;https://random-data-api.com/&#34;&gt;随机数据生成器&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这个网站提供一个 API，可以让你定制想要的随机数据，以 JSON 格式返回。&lt;/p&gt;
&lt;h3 id=&#34;compiler-explorerhttpsgodboltorg&#34;&gt;&lt;a href=&#34;https://godbolt.org/&#34;&gt;Compiler Explorer&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个在线的编译器学习工具，可以显示高级语言对应的汇编代码，支持多种语言。&lt;/p&gt;
&lt;h3 id=&#34;yandex-图片搜索httpsyandexcomimages&#34;&gt;&lt;a href=&#34;https://yandex.com/images/&#34;&gt;Yandex 图片搜索&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;俄罗斯的搜索引擎 Yandex&lt;/p&gt;
&lt;h3 id=&#34;nightcafehttpscreatornightcafestudio&#34;&gt;&lt;a href=&#34;https://creator.nightcafe.studio/&#34;&gt;NightCafe&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个图片处理的在线工具，可以让普通照片变成世界名画&lt;/p&gt;
&lt;h3 id=&#34;js-1024-竞赛httpsjs1024funresults2020&#34;&gt;&lt;a href=&#34;https://js1024.fun/results/2020&#34;&gt;JS 1024 竞赛&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这是代码长度不超过1024字节的 JS 程序的比赛，2020年的结果已经公布了。第一名是一个&lt;a href=&#34;https://js1024.fun/demos/2020/16&#34;&gt;钢琴键盘&lt;/a&gt;，第二名和第三名是动画渲染，第四名是一个游戏。&lt;/p&gt;
&lt;h3 id=&#34;stackoverflow-top-cpphttpsgithubcomethsonliustackoverflow-top-cpptreemasterquestion&#34;&gt;&lt;a href=&#34;https://github.com/EthsonLiu/stackoverflow-top-cpp/tree/master/question&#34;&gt;stackoverflow-top-cpp&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;StackOverflow 上面高票排名的 C/C++ 问题的中文翻译&lt;/p&gt;
&lt;h3 id=&#34;gitenberghttpswwwgitenbergorg&#34;&gt;&lt;a href=&#34;https://www.gitenberg.org/&#34;&gt;Gitenberg&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个公共领域的英文电子书的搜索引擎。&lt;/p&gt;
&lt;h3 id=&#34;svg-repohttpswwwsvgrepocom&#34;&gt;&lt;a href=&#34;https://www.svgrepo.com/&#34;&gt;SVG Repo&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个 SVG 图片（主要是图标）的搜索引擎。&lt;/p&gt;
&lt;h3 id=&#34;motherboard-dbhttpsmotherboarddbcom&#34;&gt;&lt;a href=&#34;https://motherboarddb.com/&#34;&gt;Motherboard DB&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;电脑主板的数据库&lt;/p&gt;
&lt;h3 id=&#34;kindle-的诞生httpsthreadreaderappcomthread1287944667414196225html&#34;&gt;&lt;a href=&#34;https://threadreaderapp.com/thread/1287944667414196225.html&#34;&gt;Kindle 的诞生&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;如题&lt;/p&gt;
&lt;h3 id=&#34;我参加-pixar-2020-渲染大赛的作品httpsblogyiningkarllicom202007shipshape-renderman-challengehtml&#34;&gt;&lt;a href=&#34;https://blog.yiningkarlli.com/2020/07/shipshape-renderman-challenge.html&#34;&gt;我参加 Pixar 2020 渲染大赛的作品&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Pixar 动画公司每年举办一个比赛，提供一些数字模型，邀请全世界爱好者对它们进行渲染着色，评选出优胜者。作者介绍了他如何创作第一名作品&lt;/p&gt;
&lt;h3 id=&#34;如何自己实现一个全文搜索引擎httpsartemkrylysovcomblog20200728lets-build-a-full-text-search-engine&#34;&gt;&lt;a href=&#34;https://artem.krylysov.com/blog/2020/07/28/lets-build-a-full-text-search-engine/&#34;&gt;如何自己实现一个全文搜索引擎&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者通过一个简单的例子，讲解全文搜索引擎的原理，自己如何实现倒排索引。举例用的是 Go 语言，代码很简单，接近伪代码&lt;/p&gt;
&lt;h3 id=&#34;如何发布-deno-模块httpsdevtocraigmortenhow-to-publish-deno-modules-2cg6&#34;&gt;&lt;a href=&#34;https://dev.to/craigmorten/how-to-publish-deno-modules-2cg6&#34;&gt;如何发布 Deno 模块&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Deno 是一个 TypeScript 运行时，可以替代 Node.js。它有一个模块托管服务，本文介绍如果将 GitHub 上面的模块源码，通过 Webhook 发布到官方的托管服务。&lt;/p&gt;
&lt;h3 id=&#34;财政部为什么使用-arctan-函数调节工资总额httpsmpweixinqqcomsig_ftmp6xbbse7q-xr70fa&#34;&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/ig_FTMp6XbbSE7q-XR70fA&#34;&gt;财政部为什么使用 arctan 函数调节工资总额&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;财政部最近下发了一个文件，使用 arctan 函数调节国有金融企业的工资总额。这个函数到底有什么特别之处？&lt;/p&gt;
&lt;h3 id=&#34;2020年值得推荐的13本-java-书籍httpsmediumcomjavarevisited10-books-java-developers-should-read-in-2020-e6222f25cc72&#34;&gt;&lt;a href=&#34;https://medium.com/javarevisited/10-books-java-developers-should-read-in-2020-e6222f25cc72&#34;&gt;2020年值得推荐的13本 Java 书籍&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者列了一个书单，推荐了13本 Java 学习书籍。&lt;/p&gt;
&lt;p&gt;2020-8-14&lt;/p&gt;
&lt;h3 id=&#34;如何在谷歌查找到任何信息httpswwwalecfyidorking-how-to-find-anything-on-the-internethtml&#34;&gt;&lt;a href=&#34;https://www.alec.fyi/dorking-how-to-find-anything-on-the-internet.html&#34;&gt;如何在谷歌查找到任何信息&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文通过一些小例子，介绍谷歌的搜索语法。这里还有完整的&lt;a href=&#34;https://ahrefs.com/blog/google-advanced-search-operators/&#34;&gt;搜索命令列表&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;张汝京谈中国半导体产业的发展httpswwwtmtpostcom4616621html&#34;&gt;&lt;a href=&#34;https://www.tmtpost.com/4616621.html&#34;&gt;张汝京谈中国半导体产业的发展&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;张汝京是中芯国际创始人，他在最近一次演讲中，回顾了第一到第三代半导体的发展，以及谈了中国半导体产业如何实现“超车”、第三代半导体未来的发展模式是什么等问题。&lt;/p&gt;
&lt;h3 id=&#34;停电时冰箱会保持低温多长时间httpswoodgearscaheatingfreezerhtml&#34;&gt;&lt;a href=&#34;https://woodgears.ca/heating/freezer.html&#34;&gt;停电时，冰箱会保持低温多长时间？&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者做了一个有趣的实验，在冰箱里面放入传感器和树莓派，看看停电后，冷冻室能保持低温多长时间。结果发现，室温19°C的房间中，冷冻室每小时损失的冷度为2.6％，大约26小时后温度将达到0°。&lt;/p&gt;
&lt;h3 id=&#34;fasthttpsfastdesigndocsintroduction&#34;&gt;&lt;a href=&#34;https://fast.design/docs/introduction&#34;&gt;Fast&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;微软官方的 Web Components 组件库。&lt;/p&gt;
&lt;h3 id=&#34;p2httpswordpresscomp2&#34;&gt;&lt;a href=&#34;https://wordpress.com/p2/&#34;&gt;P2&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;WordPress 团队新发布的团队协作工具，有点类似公司内部的博客系统，可以免费使用，计划会在未来开源。&lt;/p&gt;
&lt;h3 id=&#34;hasura-graphql-引擎httpsgithubcomhasuragraphql-engineblobmastertranslationsreadmechinesemd&#34;&gt;&lt;a href=&#34;https://github.com/hasura/graphql-engine/blob/master/translations/README.chinese.md&#34;&gt;Hasura GraphQL 引擎&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个高性能的 GraphQL 服务器，提供 Postgres上开箱即用的实时GraphQL API&lt;/p&gt;
&lt;h3 id=&#34;codotahttpswwwcodotacom&#34;&gt;&lt;a href=&#34;https://www.codota.com/&#34;&gt;codota&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个人工智能的代码提示和补全插件，支持各大主要的 IDE。&lt;/p&gt;
&lt;h3 id=&#34;github-readme-statshttpsgithubcomanuraghazragithub-readme-statsblobmasterdocsreadme_cnmd&#34;&gt;&lt;a href=&#34;https://github.com/anuraghazra/github-readme-stats/blob/master/docs/readme_cn.md&#34;&gt;github-readme-stats&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个可以自己部署的服务，生成个人 GitHub 账户的统计，可以插在自述文件里面。这里还有另一个&lt;a href=&#34;https://github.com/athul/waka-readme&#34;&gt;类似的服务&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&#34;danfojshttpsgithubcomopensource9jadanfojs&#34;&gt;&lt;a href=&#34;https://github.com/opensource9ja/danfojs&#34;&gt;Danfo.js&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个提供跟 Pandas 相同功能的 JS 数学计算库。&lt;/p&gt;
&lt;h3 id=&#34;meilisearchhttpsgithubcommeilisearchmeilisearch&#34;&gt;&lt;a href=&#34;https://github.com/meilisearch/MeiliSearch&#34;&gt;MeiliSearch&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个开源的全文搜索软件，可以自己搭建服务，支持汉语搜索。&lt;/p&gt;
&lt;h3 id=&#34;mvpcsshttpsandybrewergithubiomvp&#34;&gt;&lt;a href=&#34;https://andybrewer.github.io/mvp/&#34;&gt;mvp.css&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个最简化的 CSS 库，不提供任何自定义的类，只给出最基本的 HTML 元素的样式，适合在它的基础上添加自定义的样式。&lt;/p&gt;
&lt;h3 id=&#34;技术树httpsgithubcomgithubarchive-programblobmasterthetechtreemd&#34;&gt;&lt;a href=&#34;https://github.com/github/archive-program/blob/master/TheTechTree.md&#34;&gt;技术树&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;为了让后代了解我们如何开发和使用软件，GitHub 官方开出了一个书单，称为“技术树”（the Tech Tree），包括16个大类的200多本经典书籍。这些书籍的数字化版本，将存放在 GitHub 的北极仓库。&lt;/p&gt;
&lt;h3 id=&#34;sql-实例教程httpswwwsqlteachingcom&#34;&gt;&lt;a href=&#34;https://www.sqlteaching.com/&#34;&gt;SQL 实例教程&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个针对初学者的 SQL 简单教程，通过在网页上运行示例来学习 SQL&lt;/p&gt;
&lt;h3 id=&#34;如何管理-redis-数据库httpswwwdigitaloceancomcommunitybookshow-to-manage-a-redis-database-ebook&#34;&gt;&lt;a href=&#34;https://www.digitalocean.com/community/books/how-to-manage-a-redis-database-ebook&#34;&gt;如何管理 Redis 数据库&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;DigitalOcean 发布的免费英文电子书，向初学者介绍什么是 Redis 和它的基本用法。&lt;/p&gt;
&lt;h3 id=&#34;bui-app-开发教程httpsmpweixinqqcommpappmsgalbum__bizmziynjqxnjuwmgactiongetalbumalbum_id1338511290868006913subscene159subscene158scenenotehttpsmpweixinqqcoms__bizmziynjqxnjuwmgmid2247483675idx1snfc494fc7e05dd5d05c2049e04816190dchksme8718302df060a14dc64d5ffddc76c319fd7cbfc8f7ac9c2ca09975a5431f23e85309cdb1820scene158rdwechat_redirect&#34;&gt;&lt;a href=&#34;https://mp.weixin.qq.com/mp/appmsgalbum?__biz=MzIyNjQxNjUwMg==&amp;amp;action=getalbum&amp;amp;album_id=1338511290868006913&amp;amp;subscene=159&amp;amp;subscene=158&amp;amp;scenenote=https://mp.weixin.qq.com/s?__biz=MzIyNjQxNjUwMg==&amp;amp;mid=2247483675&amp;amp;idx=1&amp;amp;sn=fc494fc7e05dd5d05c2049e04816190d&amp;amp;chksm=e8718302df060a14dc64d5ffddc76c319fd7cbfc8f7ac9c2ca09975a5431f23e85309cdb1820&amp;amp;scene=158#rd#wechat_redirect&#34;&gt;BUI App 开发教程&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;BUI 是一个国产的移动端 H5 框架，这是框架作者写的系列教程，演示如何用 BUI 开发一个网易新闻 App。&lt;/p&gt;
&lt;h3 id=&#34;鞋带暗语httpswwwfieggencomshoelacecialacinghtm&#34;&gt;&lt;a href=&#34;https://www.fieggen.com/shoelace/cialacing.htm&#34;&gt;鞋带暗语&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;冷战时期，中央情报局曾经采用一种鞋带暗语。只要根据鞋面上，鞋带交叉的位置和次数，就能传递事先约定的信息。这种方法非常简单，不受环境约束，外人很难察觉。&lt;/p&gt;
&lt;h3 id=&#34;css-生成艺术httpsgenerative-art-with-csscommonshost&#34;&gt;&lt;a href=&#34;https://generative-art-with-css.commons.host/&#34;&gt;CSS 生成艺术&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;如何用 CSS 生成各种形状的图形&lt;/p&gt;
&lt;h3 id=&#34;manjaro-与-arch-linux-的区别httpsitsfosscommanjaro-vs-arch-linux&#34;&gt;&lt;a href=&#34;https://itsfoss.com/manjaro-vs-arch-linux/&#34;&gt;Manjaro 与 Arch Linux 的区别&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Manjaro 与 Arch 都是流行的 Linux 发行版，Manjaro 基于 Arch，但是有自己显著的特点。&lt;/p&gt;
&lt;h3 id=&#34;单个创始人的表现更好httpswwwgrowthclubonlinepostresearch-says-solo-founders-perform-better-here-is-why&#34;&gt;&lt;a href=&#34;https://www.growthclub.online/post/research-says-solo-founders-perform-better-here-is-why&#34;&gt;单个创始人的表现更好&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;统计显示，单个创始人的公司更可能盈利，本文分析原因&lt;/p&gt;
&lt;h3 id=&#34;熵的羊群解释httpsaatishbcomentropy&#34;&gt;&lt;a href=&#34;https://aatishb.com/entropy/&#34;&gt;熵的羊群解释&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;较为通俗地解释了，物理学的熵（entropy）是概率导致的。&lt;/p&gt;
&lt;h3 id=&#34;crdt-算法是否适合多人实时编辑httpsblogkevinjahnsdeare-crdts-suitable-for-shared-editing&#34;&gt;&lt;a href=&#34;https://blog.kevinjahns.de/are-crdts-suitable-for-shared-editing/&#34;&gt;CRDT 算法是否适合多人实时编辑？&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;CRDT 算法用于分布式服务实现数据同步，比如同一篇文档的多人实时编辑。&lt;a href=&#34;https://github.com/yjs/yjs&#34;&gt;Yjs&lt;/a&gt; 是 CRDT 的一个实现，本文是它的作者对这个算法的解释，内容有一定深度。&lt;/p&gt;
&lt;h3 id=&#34;typescript-简明介绍httpswwwwarambilcomtypescript-why-is-so-important&#34;&gt;&lt;a href=&#34;https://www.warambil.com/typescript-why-is-so-important&#34;&gt;TypeScript 简明介绍&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;针对初学者的 TypeScript 介绍&lt;/p&gt;
&lt;h3 id=&#34;html-smuggling-解释httpsoutflanknlblog20180814html-smuggling-explained&#34;&gt;&lt;a href=&#34;https://outflank.nl/blog/2018/08/14/html-smuggling-explained/&#34;&gt;HTML smuggling 解释&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;很多人不知道，JavaScript 可以脚本生成 exe 文件，让用户下载。本文介绍如何在网页里面嵌入一个恶意的可执行文件。&lt;/p&gt;
&lt;h3 id=&#34;广告短信的退订内幕httpsdailyzhihucomstory9726870&#34;&gt;&lt;a href=&#34;https://daily.zhihu.com/story/9726870&#34;&gt;广告短信的退订内幕&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;很多促销广告短信都说回复 T 退订，但是回复了 T 之后会发生什么&lt;/p&gt;
&lt;h3 id=&#34;qrpicturehttpswwwqrpicturecom&#34;&gt;&lt;a href=&#34;https://www.qrpicture.com/&#34;&gt;QRpicture&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个在线工具，把图片变成可以扫描的二维码。&lt;/p&gt;
&lt;h3 id=&#34;screenplaysubshttpsscreenplaysubscom&#34;&gt;&lt;a href=&#34;https://screenplaysubs.com/&#34;&gt;ScreenplaySubs&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;浏览器插件，播放 Netflix 视频的时候，同步显示剧本内容。&lt;/p&gt;
&lt;h3 id=&#34;umamihttpsumamiis&#34;&gt;&lt;a href=&#34;https://umami.is/&#34;&gt;umami&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个开源的网站访问统计服务。&lt;/p&gt;
&lt;h3 id=&#34;ts-migratehttpsgithubcomairbnbts-migrate&#34;&gt;&lt;a href=&#34;https://github.com/airbnb/ts-migrate&#34;&gt;ts-migrate&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Airbnb 公司新的开源项目，可以将 JavaScript 代码转成 TypeScript 代码。&lt;/p&gt;
&lt;h3 id=&#34;jscoolhttpsgithubcomjs-cooljscool&#34;&gt;&lt;a href=&#34;https://github.com/js-cool/js.cool&#34;&gt;js.cool&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;为开源项目提供免费的&lt;code&gt;js.cool&lt;/code&gt;的子域名，类似&lt;code&gt;js.org&lt;/code&gt;，支持 CNAME 绑定&lt;/p&gt;
&lt;h3 id=&#34;screen-share-partyhttpsbanetscreen-share-party&#34;&gt;&lt;a href=&#34;https://ba.net/screen-share-party&#34;&gt;Screen Share Party&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;该网站通过 WebRTC 协议把你的桌面分享给其他人。它生成一个 URL，其他人访问这个 URL，就能看到你的桌面&lt;/p&gt;
&lt;h3 id=&#34;mazahttpsgithubcomtanraxmaza-ad-blocking&#34;&gt;&lt;a href=&#34;https://github.com/tanrax/maza-ad-blocking&#34;&gt;maza&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个本地的广告拦截器，通过封锁 DNS 达到拦截广告的目的。它的特点就是非常简单，就是一个 Bash 脚本，可以作为学习脚本编程的范例。&lt;/p&gt;
&lt;h3 id=&#34;统计学习导论httpfacultymarshalluscedugareth-jamesislan-introduction-to-statistical-learning&#34;&gt;&lt;a href=&#34;http://faculty.marshall.usc.edu/gareth-james/ISL/&#34;&gt;统计学习导论&lt;/a&gt;（An Introduction to Statistical Learning）&lt;/h3&gt;
&lt;p&gt;免费英文电子书，可以作为非数学专业学生的统计学教材，侧重机器学习的统计基础，提供 R 语言的例子。&lt;/p&gt;
&lt;h3 id=&#34;1940年纽约历史地图https1940snycmap&#34;&gt;&lt;a href=&#34;https://1940s.nyc/map/&#34;&gt;1940年纽约历史地图&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这个网站提供1940年代的纽约在线地图，并且还可以查看各个地点的历史照片。&lt;/p&gt;
&lt;h3 id=&#34;ai-还原古罗马皇帝httpsvoshartcomroman-emperor-project&#34;&gt;&lt;a href=&#34;https://voshart.com/ROMAN-EMPEROR-PROJECT&#34;&gt;AI 还原古罗马皇帝&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这个项目使用 AI 模型，将古罗马皇帝的塑像还原成高清晰度人像照片。&lt;/p&gt;
&lt;h3 id=&#34;物理学书单httpswwwsusanjfowlercomblog2016813so-you-want-to-learn-physics&#34;&gt;&lt;a href=&#34;https://www.susanjfowler.com/blog/2016/8/13/so-you-want-to-learn-physics&#34;&gt;物理学书单&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者列了一个英文书单，对于想自学物理学、达到本科以及研究生水平的读者，应该阅读哪些教材。&lt;/p&gt;
&lt;h3 id=&#34;covid-19-舆论新闻可视化httpspearminigiteeioncovis-2020&#34;&gt;&lt;a href=&#34;https://pearmini.gitee.io/ncovis-2020/#/&#34;&gt;COVID-19 舆论新闻可视化&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;山东大学 VisLab 的一个可视化项目，分析疫情对舆论和新闻的影响&lt;/p&gt;
&lt;h3 id=&#34;next-徽标httpswwwlogodesignlovecomnext-logo-paul-rand&#34;&gt;&lt;a href=&#34;https://www.logodesignlove.com/next-logo-paul-rand&#34;&gt;NeXT 徽标&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;1986年，乔布斯向著名的平面设计师保罗·兰德（Paul Rand）支付了10万美元，要求为自己的 NeXT 计算机公司设计徽标。&lt;/p&gt;
&lt;h3 id=&#34;姆潘巴现象httpsenwikipediaorgwikimpemba_effect&#34;&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Mpemba_effect&#34;&gt;姆潘巴现象&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;1963年，坦桑尼亚的一个高中上烹饪课，学生们做冰淇淋。&lt;/p&gt;
&lt;p&gt;一个叫做姆潘巴（Erasto Mpemba）的学生，发现了一个奇怪的现象。两个装有相同体积水的容器，一个是35°C，另一个是100°C，同时放进冰箱，竟然是100°C的水首先开始结冰。也就是说，温度高的水会更快结冰，这是为什么？&lt;/p&gt;
&lt;p&gt;物理老师也不知道这是怎么回事，就把这个结果发表出来。这引起物理学界的争论，科学家也无法解释，就把它称为“姆潘巴现象”。&lt;/p&gt;
&lt;p&gt;2012年，英国皇家化学学会举行了一场竞赛，征集论文，对姆潘巴现象进行解释。共有22,000人参加，获胜者提出了两种解释。&lt;/p&gt;
&lt;p&gt;（1）过冷（Supercooling）。低温液体会在一定时间内存在过冷现象，低于凝固点仍维持液体。&lt;/p&gt;
&lt;p&gt;（2）对流。温度高的液体有更高的对流，有利于散热。&lt;/p&gt;
&lt;h3 id=&#34;网络安全工程师的修炼途径httpsdanielmiesslercomblogbuild-successful-infosec-career&#34;&gt;&lt;a href=&#34;https://danielmiessler.com/blog/build-successful-infosec-career/&#34;&gt;网络安全工程师的修炼途径&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者在网络安全方面有20年的从业经验。他在本文中介绍网络安全工程所需的技能和培养途径。他提出，学习者一定要有自己的实验室，熟练使用虚拟机测试各种系统。&lt;/p&gt;
&lt;h3 id=&#34;如何用神经网络玩超级马里奥兄弟httpschrispressogithubioai_learns_to_play_smb_using_ga_and_nn&#34;&gt;&lt;a href=&#34;https://chrispresso.github.io/AI_Learns_To_Play_SMB_Using_GA_And_NN&#34;&gt;如何用神经网络玩超级马里奥兄弟&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/341c2569aca0476fcea72a82669b5926fd8311d6/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323030382f6267323032303038323230312e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/341c2569aca0476fcea72a82669b5926fd8311d6/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323030382f6267323032303038323230312e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;作者展示了如何用 Python 写一个神经网络模型，自动玩超级马里奥兄弟，可以很清晰地看懂他的算法，就是将游戏画面转化成一帧帧的像素网格（注意下图两侧画面的对比），根据网格的变化，程序自动做出反应。&lt;/p&gt;
&lt;h3 id=&#34;深入了解-python的官方-docker-映像httpspythonspeedcomarticlesofficial-python-docker-image&#34;&gt;&lt;a href=&#34;https://pythonspeed.com/articles/official-python-docker-image/&#34;&gt;深入了解 Python的官方 Docker 映像&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文是一篇 Docker 教程，一步步介绍 Python 官方的 Docker 镜像是怎么制作的，详细解读 Dockefile 文件&lt;/p&gt;
&lt;h3 id=&#34;理解-python-哈希表httpthepythoncornercomdevhash-tables-understanding-dictionaries&#34;&gt;&lt;a href=&#34;http://thepythoncorner.com/dev/hash-tables-understanding-dictionaries/&#34;&gt;理解 Python 哈希表&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文详细讲解 Python 哈希函数的用法，然后用它实现一个简单的哈希表。&lt;/p&gt;
&lt;h3 id=&#34;如何在谷歌云安装-pi-holehttpsmediumcomdevinjaystokeshow-to-set-up-a-pi-hole-ad-blocking-vpn-server-on-google-clouds-always-free-usage-tier-ff1d8a8c407e&#34;&gt;&lt;a href=&#34;https://medium.com/@devinjaystokes/how-to-set-up-a-pi-hole-ad-blocking-vpn-server-on-google-clouds-always-free-usage-tier-ff1d8a8c407e&#34;&gt;如何在谷歌云安装 Pi-Hole&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一篇非常详细的教程，一步步教你在谷歌云上安装 Pi-Hole，自己搭建一个 DNS 服务器，能够屏蔽广告。&lt;/p&gt;
&lt;h3 id=&#34;如何使用-firebase-开发一个自己的评论系统httpswwwsmashingmagazinecom202008comment-system-firebase英文&#34;&gt;&lt;a href=&#34;https://www.smashingmagazine.com/2020/08/comment-system-firebase/&#34;&gt;如何使用 Firebase 开发一个自己的评论系统&lt;/a&gt;（英文）&lt;/h3&gt;
&lt;p&gt;Firebase 是谷歌的实时数据库服务，本文是如何使用它来储存前端数据的详细教程&lt;/p&gt;
&lt;h3 id=&#34;使用-safari-web-share-api-窃取本地文件httpsblogredteampl202008stealing-local-files-using-safari-webhtml&#34;&gt;&lt;a href=&#34;https://blog.redteam.pl/2020/08/stealing-local-files-using-safari-web.html&#34;&gt;使用 Safari Web Share API 窃取本地文件&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文介绍如何在苹果设备上，利用 Safari 浏览器的 Web Share API 在用户不知情的情况下，将本地文件分享出去。&lt;/p&gt;
&lt;h3 id=&#34;cipheyhttpsgithubcomcipheyciphey&#34;&gt;&lt;a href=&#34;https://github.com/Ciphey/Ciphey&#34;&gt;Ciphey&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;有时，我们有一段加密文本，但是不知道它使用什么加密方法。这个命令行工具，会根据人工智能算法，自动判断加密方法，能不能解密。&lt;/p&gt;
&lt;h3 id=&#34;ztextjshttpsbennettfeelycomztext&#34;&gt;&lt;a href=&#34;https://bennettfeely.com/ztext/&#34;&gt;ztext.js&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这个 JS 库可以将任何字体变成 3D 效果，支持中文。&lt;/p&gt;
&lt;h3 id=&#34;css-渐变魔法httpswwwgradientmagiccom&#34;&gt;&lt;a href=&#34;https://www.gradientmagic.com/&#34;&gt;CSS 渐变魔法&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;该网站收集各种 CSS 渐变图像，可以复制到自己的项目。&lt;/p&gt;
&lt;h3 id=&#34;labuladong-的算法小抄httpslabuladonggitbookioalgo&#34;&gt;&lt;a href=&#34;https://labuladong.gitbook.io/algo/&#34;&gt;labuladong 的算法小抄&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;100 多道 LeetCode 算法题目的中文解释。&lt;/p&gt;
&lt;h3 id=&#34;不可能的几何形状httpsim-possibleinfoenglishlibraryindexhtml&#34;&gt;&lt;a href=&#34;https://im-possible.info/english/library/index.html&#34;&gt;不可能的几何形状&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;该网站收集各种不可能的几何形状图片，目前已经有两千多张了。&lt;/p&gt;
&lt;h3 id=&#34;puppeteer--playwright-学习教程httpstheheadlessdev&#34;&gt;&lt;a href=&#34;https://theheadless.dev/&#34;&gt;Puppeteer &amp;amp; Playwright 学习教程&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一份英语教程，介绍无头浏览器操作库 Puppeteer 和 Playwright 的用法。&lt;/p&gt;
&lt;h3 id=&#34;讲解开源项目httpsgithubcomhellogithub-teamarticle&#34;&gt;&lt;a href=&#34;https://github.com/HelloGitHub-Team/Article&#34;&gt;讲解开源项目&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一组中文的系列文章，介绍各种开源项目和用法&lt;/p&gt;
&lt;h3 id=&#34;富士山公路httpswwwatlasobscuracomarticlessnow-canyon-japan&#34;&gt;&lt;a href=&#34;https://www.atlasobscura.com/articles/snow-canyon-japan&#34;&gt;富士山公路&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;日本有一条通往富士山的高速公路。冬天下雪时，积雪有时厚达几米。扫除路上的积雪以后，就形成了公路两边有雪墙的奇特景象。&lt;/p&gt;
&lt;h3 id=&#34;大公司如何合法避税httpswwwredditcomrcoolguidescommentsifz1nohow_to_not_pay_taxes&#34;&gt;&lt;a href=&#34;https://www.reddit.com/r/coolguides/comments/ifz1no/how_to_not_pay_taxes/&#34;&gt;大公司如何合法避税&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;如题&lt;/p&gt;
&lt;h3 id=&#34;肉鸡的由来httpswwwtheguardiancomenvironment2020aug17from-farm-to-factory-the-unstoppable-rise-of-american-chicken&#34;&gt;&lt;a href=&#34;https://www.theguardian.com/environment/2020/aug/17/from-farm-to-factory-the-unstoppable-rise-of-american-chicken&#34;&gt;肉鸡的由来&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;如题&lt;/p&gt;
&lt;h3 id=&#34;如何用简单英语写作httpwwwplainenglishcoukhow-to-write-in-plain-englishhtml&#34;&gt;&lt;a href=&#34;http://www.plainenglish.co.uk/how-to-write-in-plain-english.html&#34;&gt;如何用简单英语写作&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文介绍几个很实用的英语写作规则，帮助你写出简单易懂的英语。&lt;/p&gt;
&lt;h3 id=&#34;gps-定位原理httpsblogdigitalbunkerdev20200828how-do-global-positioning-systems-gps-work&#34;&gt;&lt;a href=&#34;https://blog.digitalbunker.dev/2020/08/28/how-do-global-positioning-systems-gps-work/&#34;&gt;GPS 定位原理&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文介绍 GPS 卫星系统如何能够定位，写得比较容易懂。定位的关键是卫星上的原子钟必须准确报时。&lt;/p&gt;
&lt;h3 id=&#34;异步操作需要设置超时httpsrobertovitillocomdefault-timeouts&#34;&gt;&lt;a href=&#34;https://robertovitillo.com/default-timeouts/&#34;&gt;异步操作需要设置超时&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文是一个提醒，进行异步操作的时候（比如 AJAX 请求），要设置超时。因为 AJAX 默认没有超时限制，浏览器会一直等下去，极端情况下，可能会耗尽套接字的资源池。&lt;/p&gt;
&lt;h3 id=&#34;如何让-linux-不区分文件名大小写httpswwwcollaboracomnews-and-blogblog20200827using-the-linux-kernel-case-insensitive-feature-in-ext4&#34;&gt;&lt;a href=&#34;https://www.collabora.com/news-and-blog/blog/2020/08/27/using-the-linux-kernel-case-insensitive-feature-in-ext4/&#34;&gt;如何让 Linux 不区分文件名大小写&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Linux 5.2 开始，支持不区分文件名大小写，本文教你怎么打开这个功能。&lt;/p&gt;
&lt;h3 id=&#34;短消息发送一次性验证码的标准httpstrineocomblog202008phishing-resistant-one-time-codes&#34;&gt;&lt;a href=&#34;https://trineo.com/blog/2020/08/phishing-resistant-one-time-codes&#34;&gt;短消息发送一次性验证码的标准&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;很多网站采用短消息发送一次性验证码，作为用户认证的手段。苹果和谷歌已经商定了短消息格式标准，GitHub 开始采用这个标准。&lt;/p&gt;
&lt;h3 id=&#34;react-列表-key-属性的三个常见错误httpsdevtothawkin3common-mistakes-with-react-keys-1jcc&#34;&gt;&lt;a href=&#34;https://dev.to/thawkin3/common-mistakes-with-react-keys-1jcc&#34;&gt;React 列表 key 属性的三个常见错误&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;React 框架要求列表的每一项都带有&lt;code&gt;key&lt;/code&gt;属性，本文介绍这个属性的三个需要注意的地方。&lt;/p&gt;
&lt;h3 id=&#34;bootstrap-图标库httpsgithubcomtwbsicons&#34;&gt;&lt;a href=&#34;https://github.com/twbs/icons&#34;&gt;Bootstrap 图标库&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Bootstrap 的图标库发布1.0正式版，包含1100多个图标，全部都是 SVG 格式，可以插入 img 标签。&lt;/p&gt;
&lt;h3 id=&#34;lunarhttpsgithubcomalin23lunar&#34;&gt;&lt;a href=&#34;https://github.com/alin23/Lunar&#34;&gt;Lunar&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;调节 Mac 电脑外接显示器亮度的软件，可以根据时间，自动调节亮度。&lt;/p&gt;
&lt;h3 id=&#34;nginx-日志分析可视化httpsgithubcomturbowaybigdata_practice&#34;&gt;&lt;a href=&#34;https://github.com/TurboWay/bigdata_practice&#34;&gt;nginx 日志分析可视化&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个完整的大数据实践项目，通过 hive 分析 nginx 日志，将分析结果通过 flask + echarts 进行可视化展示。&lt;/p&gt;
&lt;h3 id=&#34;go-zerohttpsgithubcomtal-techgo-zero&#34;&gt;&lt;a href=&#34;https://github.com/tal-tech/go-zero&#34;&gt;go-zero&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个国产的 web 和 rpc 微服务框架，含极简的 API 定义和生成工具 goctl，可以根据定义的 api 文件一键生成各语言的调用代码。&lt;/p&gt;
&lt;h3 id=&#34;ios-开发课程httpscs193psitesstanfordedu&#34;&gt;&lt;a href=&#34;https://cs193p.sites.stanford.edu/&#34;&gt;iOS 开发课程&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;斯坦福大学的高质量免费课程，使用了最新的 SwiftUI，充分展示了 APP 开发的整个流程，适合新手进行 iOS 的开发入门。&lt;/p&gt;
&lt;h3 id=&#34;1gb-手机流量的价格httpswwwcablecoukmobilesworldwide-data-pricing&#34;&gt;&lt;a href=&#34;https://www.cable.co.uk/mobiles/worldwide-data-pricing/&#34;&gt;1GB 手机流量的价格&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;该网站收集全世界各国家和地区的 1GB 手机流量的价格。中国大陆的平均价格是0.61美元，排在第12位，属于手机上网很便宜的地方。美国平均需要8美元，排在第188位，是非常贵的地方。&lt;/p&gt;
&lt;h3 id=&#34;面向初学者的-python-项目httpswwwcodewithreplitpython-projects-for-beginnershtml&#34;&gt;&lt;a href=&#34;https://www.codewithrepl.it/python-projects-for-beginners.html&#34;&gt;面向初学者的 Python 项目&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;如题，一本免费 Python 教程，使用 Repl.it 在线编程环境学习 Python。&lt;/p&gt;
&lt;h3 id=&#34;在线工具秘籍httpsgithubcomzhaooleeonlinetoolsbook&#34;&gt;&lt;a href=&#34;https://github.com/zhaoolee/OnlineToolsBook&#34;&gt;在线工具秘籍&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这个中文仓库收集各种好用的在线小工具。&lt;/p&gt;
&lt;h3 id=&#34;面向程序员的实用深度学习httpscoursefastai&#34;&gt;&lt;a href=&#34;https://course.fast.ai/&#34;&gt;面向程序员的实用深度学习&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;fast.ai 公司推出的深度学习教程。&lt;/p&gt;
&lt;h3 id=&#34;世界最长的火车路线httpsbasementgeographercomthe-longest-train-ride-in-the-world&#34;&gt;&lt;a href=&#34;https://basementgeographer.com/the-longest-train-ride-in-the-world/&#34;&gt;世界最长的火车路线&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;目前，世界最长的火车路线是从葡萄牙首都波尔多开始，一直到达越南南部，全长17000公里。你可以全程乘坐火车，但需要经过多次换车。&lt;/p&gt;
&lt;p&gt;整个路程最快也要耗时327小时，相当于13天半，总票价2000美元以上。&lt;/p&gt;
&lt;h3 id=&#34;巴比伦乘法公式httpswwwiquilezlesorgblogp4582&#34;&gt;&lt;a href=&#34;https://www.iquilezles.org/blog/?p=4582&#34;&gt;巴比伦乘法公式&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;古代巴比伦人使用下面的公式，计算两个数的乘积。
$$
ab=\frac{(a+b)^2-(a-b)^2}4
$$&lt;/p&gt;
&lt;h3 id=&#34;高德納自述我对电子邮件的态度httpswww-cs-facultystanfordeduknuthemailhtml&#34;&gt;&lt;a href=&#34;https://www-cs-faculty.stanford.edu/~knuth/email.html&#34;&gt;高德納自述：我对电子邮件的态度&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Donald E. Knuth 教授
计算机科学系 斯坦福大学
盖茨大楼4B
斯坦福大学
CA 94305-9045美国&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;沙皇核弹纪录片httpsthebarentsobservercomensecurity202008rosatom-releases-previously-classified-documentary-video-50-mt-novaya-zemlya-test&#34;&gt;&lt;a href=&#34;https://thebarentsobserver.com/en/security/2020/08/rosatom-releases-previously-classified-documentary-video-50-mt-novaya-zemlya-test&#34;&gt;沙皇核弹纪录片&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;今年8月20日，为了纪念苏联核工业发展75周年，俄罗斯在 YouTube 上发布了一部讲述沙皇核弹的纪录片。&lt;/p&gt;
&lt;h3 id=&#34;我的业余作品如何以3万美元出售httpsmarciotweet-photo-acquired&#34;&gt;&lt;a href=&#34;https://marc.io/tweet-photo-acquired&#34;&gt;我的业余作品如何以3万美元出售&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者最初写了一篇文章，介绍如何将 Instagram 图片同步到推特，结果发现浏览量很高。有人还写信，愿意付费使用该功能。作者就把它做成一个小服务，结果被3万美元收购。&lt;/p&gt;
&lt;h3 id=&#34;如何使用-github-管理个人笔记httpswwwbit-101comblog202009git-based-wiki&#34;&gt;&lt;a href=&#34;https://www.bit-101.com/blog/2020/09/git-based-wiki/&#34;&gt;如何使用 GitHub 管理个人笔记&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者介绍他如何将 GitHub 仓库当作 Wiki 使用，管理个人笔记。&lt;/p&gt;
&lt;h3 id=&#34;10个你可能不知道的-web-apihttpsbloggreenrootsinfo10-lesser-known-web-apis-you-may-want-to-use-ckejv75cr012y70s158n85yhn&#34;&gt;&lt;a href=&#34;https://blog.greenroots.info/10-lesser-known-web-apis-you-may-want-to-use-ckejv75cr012y70s158n85yhn&#34;&gt;10个你可能不知道的 Web API&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Chrome 浏览器提供的 Web API 非常多，本文介绍其中10个。&lt;/p&gt;
&lt;h3 id=&#34;如何在浏览器里制作一个互动地球仪httpsstripecomblogglobe&#34;&gt;&lt;a href=&#34;https://stripe.com/blog/globe&#34;&gt;如何在浏览器里制作一个互动地球仪&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者介绍如何使用 WebGL（通过 three.js）在浏览器里面做出一个可以互动的地球仪。&lt;/p&gt;
&lt;h3 id=&#34;浮点数原理httpstimroderickcomfloating-point-introduction&#34;&gt;&lt;a href=&#34;https://timroderick.com/floating-point-introduction/&#34;&gt;浮点数原理&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文较为通俗地解释，什么是浮点数，为什么这么设计。&lt;/p&gt;
&lt;h3 id=&#34;如何在亚马逊网络服务上部署一个-react-apphttpsawsamazoncomgetting-startedhands-onbuild-react-app-amplify-graphqlmodule-one&#34;&gt;&lt;a href=&#34;https://aws.amazon.com/getting-started/hands-on/build-react-app-amplify-graphql/module-one/&#34;&gt;如何在亚马逊网络服务上部署一个 React App&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;官方文档，介绍如何用 AWS Amplify 自动构建和部署一个 React 应用。跟亚马逊的其他文档相比，写得非常好懂。&lt;/p&gt;
&lt;h3 id=&#34;mongodb-的历史httpswwwquickprogrammingtipscommongodbmongodb-historyhtml&#34;&gt;&lt;a href=&#34;https://www.quickprogrammingtips.com/mongodb/mongodb-history.html&#34;&gt;MongoDB 的历史&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;MongoDB 是现在最流行的 NoSQL 数据库，本文详尽介绍了它的历史，以及早期的设计决定。&lt;/p&gt;
&lt;h3 id=&#34;55k-月用户的-web-应用成本httpskeepthescorecoblogpostscosts-of-running-webapp&#34;&gt;&lt;a href=&#34;https://keepthescore.co/blog/posts/costs-of-running-webapp/&#34;&gt;55K 月用户的 Web 应用成本&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者维护着一个 Python flask 应用，每月有5.5万访问者。本文总结了他每月花在这个网站上的账单。&lt;/p&gt;
&lt;h3 id=&#34;responsivelyhttpsgithubcomresponsively-orgresponsively-app&#34;&gt;&lt;a href=&#34;https://github.com/responsively-org/responsively-app&#34;&gt;responsively&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个方便的桌面软件，集成了开发和调试响应式网页的各种功能。&lt;/p&gt;
&lt;h3 id=&#34;网页骨架布局生成器httpsskeletonreactcom&#34;&gt;&lt;a href=&#34;https://skeletonreact.com/&#34;&gt;网页骨架布局生成器&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;有些网页加载时，会显示一个骨架布局（上图），获取正式内容后再替换掉。这个在线工具就用来生成骨架布局，支持 React、React Native、Vue 和 普通 HTML。&lt;/p&gt;
&lt;h3 id=&#34;解决算法和数据结构问题python-版httpswwwcsaucklandacnzcompsci105s1cresourcesproblemsolvingwithalgorithmsanddatastructurespdf&#34;&gt;&lt;a href=&#34;https://www.cs.auckland.ac.nz/compsci105s1c/resources/ProblemSolvingwithAlgorithmsandDataStructures.pdf&#34;&gt;解决算法和数据结构问题（Python 版）&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;免费的英文电子书， 使用 Python 语言介绍基本的算法和数据结构，内容比较简单，也不厚200多页，适合初学者。&lt;/p&gt;
&lt;h3 id=&#34;degooglehttpsdegooglejmooredev&#34;&gt;&lt;a href=&#34;https://degoogle.jmoore.dev/&#34;&gt;degoogle&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;该网站收集各种谷歌服务的替代品。&lt;/p&gt;
&lt;h3 id=&#34;winamp-皮肤图书馆httpsskinswebamporg&#34;&gt;&lt;a href=&#34;https://skins.webamp.org/&#34;&gt;Winamp 皮肤图书馆&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;该网站收集各种 Winamp 播放器的皮肤。&lt;/p&gt;
&lt;h3 id=&#34;web-api-设计httpslivebookmanningcombookthe-design-of-web-apischapter-1originproduct-tocthe-design-of-web-apis&#34;&gt;&lt;a href=&#34;https://livebook.manning.com/book/the-design-of-web-apis/chapter-1?origin=product-toc&#34;&gt;Web API 设计&lt;/a&gt;（The Design of Web APIs）&lt;/h3&gt;
&lt;p&gt;Manning 出版社的英文书籍，现在官方提供在线免费阅读，内容很不错，关于怎么设计 Web 应用的 API。&lt;/p&gt;
&lt;h3 id=&#34;inux-从零开始httpwwwlinuxfromscratchorglfsview100-rc1prologueforewordhtmllinux-from-scratch&#34;&gt;&lt;a href=&#34;http://www.linuxfromscratch.org/lfs/view/10.0-rc1/prologue/foreword.html&#34;&gt;inux 从零开始&lt;/a&gt;（Linux From Scratch）&lt;/h3&gt;
&lt;p&gt;一本英文的免费书籍，讲述如何从源码一步步编译一个自己的 Linux 系统，帮助你深入理解 Linux。&lt;/p&gt;
&lt;h3 id=&#34;水上飞行器-ekranoplanhttpswwwpopularmechanicscommilitaryaviationa33808381russia-ekranoplan-plane-boat-wrecked&#34;&gt;&lt;a href=&#34;https://www.popularmechanics.com/military/aviation/a33808381/russia-ekranoplan-plane-boat-wrecked/&#34;&gt;水上飞行器 Ekranoplan&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;RT.&lt;/p&gt;
&lt;h3 id=&#34;核电池可以用于太空旅行httpswwwgenerationatomicorgskimthe-nuclear-heartbeat-of-space-exploration&#34;&gt;&lt;a href=&#34;https://www.generationatomic.org/skim/the-nuclear-heartbeat-of-space-exploration&#34;&gt;核电池可以用于太空旅行&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文介绍了核电池的原理（利用放射性元素衰变产生的能量），以及用于太空旅行的可能性。&lt;/p&gt;
&lt;h3 id=&#34;使用蒙特卡洛算法玩2048httpsxtrpioblog20200912using-the-monte-carlo-tree-search-algorithm-in-an-ai-to-beat-2048-and-other-games&#34;&gt;&lt;a href=&#34;https://xtrp.io/blog/2020/09/12/using-the-monte-carlo-tree-search-algorithm-in-an-ai-to-beat-2048-and-other-games/&#34;&gt;使用蒙特卡洛算法玩2048&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;2048 是一个4x4的方块游戏，只要两个相同数字相邻，就可以合并为一个数字。本文讲解了如何用蒙特卡洛算法进行简单模拟，让计算机自己解决2048游戏。&lt;/p&gt;
&lt;h3 id=&#34;for-await--of-语句解释httpswwwmikealchecomsoftware-developmenta-simple-explanation-of-the-for-await-of-statement-in-node-js&#34;&gt;&lt;a href=&#34;https://www.mikealche.com/software-development/a-simple-explanation-of-the-for-await-of-statement-in-node-js&#34;&gt;for await &amp;hellip; of 语句解释&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;ES6 引入了 for await &amp;hellip; of 新语法，用来遍历异步迭代器，很多人还不熟悉。本文是对它的简单解释。&lt;/p&gt;
&lt;h3 id=&#34;使用-react-钩子而不是类的6个理由httpsblogbitsrcio6-reasons-to-use-react-hooks-instead-of-classes-7e3ee745fe04&#34;&gt;&lt;a href=&#34;https://blog.bitsrc.io/6-reasons-to-use-react-hooks-instead-of-classes-7e3ee745fe04&#34;&gt;使用 React 钩子而不是类的6个理由&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文总结 React 钩子比类更有优势的6个方面，比如不再有 this 问题，也不用再绑定方法了。&lt;/p&gt;
&lt;h3 id=&#34;avif-格式初探httpsjakearchibaldcom2020avif-has-landed&#34;&gt;&lt;a href=&#34;https://jakearchibald.com/2020/avif-has-landed/&#34;&gt;AVIF 格式初探&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://camo.githubusercontent.com/5a8b70251077f1c3b472fcd2438532845eeb85d0/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323030392f6267323032303039313731312e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;AVIF 是一种开源图片格式，源自 AV1 视频格式。各个平台基本上都会支持，这篇文章对比了它与 JPEG 和 WebP 格式，结果很不错。&lt;/p&gt;
&lt;h3 id=&#34;nodejs-如何下载流传输文件httpsphilnashblog20200806how-to-stream-file-downloads-in-node-js-with-got&#34;&gt;&lt;a href=&#34;https://philna.sh/blog/2020/08/06/how-to-stream-file-downloads-in-Node-js-with-got/&#34;&gt;Node.js 如何下载流传输文件&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文介绍如何使用 Got 这个库，以流传输的形式（stream）下载文件。&lt;/p&gt;
&lt;h3 id=&#34;diffcheckerhttpswwwdiffcheckercom&#34;&gt;&lt;a href=&#34;https://www.diffchecker.com/&#34;&gt;Diffchecker&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个在线工具，可以检查文本、图片、PDF 之间的差异。&lt;/p&gt;
&lt;h3 id=&#34;screelyhttpswwwscreelycom&#34;&gt;&lt;a href=&#34;https://www.screely.com/&#34;&gt;Screely&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个在线工具，可以生成网页展示效果的示意图。&lt;/p&gt;
&lt;h3 id=&#34;poolside-fmhttpspoolsidefm&#34;&gt;&lt;a href=&#34;https://poolside.fm/&#34;&gt;Poolside FM&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个在线的复古风格音乐电台。&lt;/p&gt;
&lt;h3 id=&#34;mimestreamhttpsmimestreamcom&#34;&gt;&lt;a href=&#34;https://mimestream.com/&#34;&gt;Mimestream&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;前苹果邮件客户端工程师 Neil Jhaveri 推出的 Gmail macOS 原生客户端，外观简洁大方，十分契合原生风格&lt;/p&gt;
&lt;h3 id=&#34;kibana-eyehttpsgithubcomcasterwxkibana-eye&#34;&gt;&lt;a href=&#34;https://github.com/CasterWx/kibana-eye&#34;&gt;kibana-eye&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;ELK 平台（Elasticsearch，Logstash，Kibana）的定时任务管理工具，可以聚合处理日志，生成报表信息，通过邮件/钉钉等方式发送通知。&lt;/p&gt;
&lt;h3 id=&#34;lofimusichttpslofimusicapp&#34;&gt;&lt;a href=&#34;https://lofimusic.app/&#34;&gt;LofiMusic&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个开源的背景音乐播放网站。&lt;/p&gt;
&lt;h3 id=&#34;beewarehttpsbeewareorg&#34;&gt;&lt;a href=&#34;https://beeware.org/&#34;&gt;BeeWare&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个 Python 工具，让你的 Python 代码可以打包成跨平台图形界面应用，尤其是可以打包成手机 App，支持 iOS、Android、Windows、MacOS、Linux、Web 等平台。&lt;/p&gt;
&lt;h3 id=&#34;aggregated-awesomehttpsaggregatedawesomecom&#34;&gt;&lt;a href=&#34;https://aggregatedawesome.com/&#34;&gt;Aggregated Awesome&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;GitHub 上面有很多 awesome 的仓库，收集某个主题的所有有用的内容。这个网页整理了一个 awesome 仓库的清单。&lt;/p&gt;
&lt;h3 id=&#34;fuel-collectionhttpsappignitionroboticsorggoogleresearchfuelcollectionsgoogle-scanned-objects&#34;&gt;[Fuel Collection](&lt;a href=&#34;https://app.ignitionrobotics.org/GoogleResearch/fuel/collections/Google&#34;&gt;https://app.ignitionrobotics.org/GoogleResearch/fuel/collections/Google&lt;/a&gt; Scanned Objects)&lt;/h3&gt;
&lt;p&gt;谷歌对大量日常物品进行了 3D 扫描，将数据放在网上，提供公开下载。&lt;/p&gt;
&lt;h3 id=&#34;prime-curioshttpsprimesutmeducurios&#34;&gt;&lt;a href=&#34;https://primes.utm.edu/curios/&#34;&gt;Prime Curios!&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这个网站收集各种与质数相关的数字，比如 561 的平方加2和减2会得到两个连续的质数。&lt;/p&gt;
&lt;h3 id=&#34;顶级域名列表httpdataianaorgtldtlds-alpha-by-domaintxt&#34;&gt;&lt;a href=&#34;http://data.iana.org/TLD/tlds-alpha-by-domain.txt&#34;&gt;顶级域名列表&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;互联网号码分配局（IANA）官方的目前所有顶级域名（TLD）的列表，共有1508个。如果排除国家和地区的 TLD，则为1260个。&lt;/p&gt;
&lt;h3 id=&#34;如何写一个简单的-c-语言解释器httpsgithubcomlotaboutwrite-a-c-interpretertreemastertutorialen&#34;&gt;&lt;a href=&#34;https://github.com/lotabout/write-a-C-interpreter/tree/master/tutorial/en&#34;&gt;如何写一个简单的 C 语言解释器&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个英语教程，通过写一个简单的 C 语言解释器，理解编译原理。&lt;/p&gt;
&lt;h3 id=&#34;webrtc-示例仓库httpswebrtcgithubiosamples&#34;&gt;&lt;a href=&#34;https://webrtc.github.io/samples/&#34;&gt;WebRTC 示例仓库&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;WebRTC 是浏览器点对点通信的 API，这个仓库给出了各种使用示例，覆盖了主要的使用场景。&lt;/p&gt;
&lt;h3 id=&#34;黑河-腾冲线httpszhwikipediaorgwiki黑河-腾冲线&#34;&gt;&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E9%BB%91%E6%B2%B3-%E8%85%BE%E5%86%B2%E7%BA%BF&#34;&gt;黑河-腾冲线&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;中国地图上，从黑河到腾冲画一条线，这条线以东住着全国94%的人口。这是1935年由地理学家胡焕庸首次提出。&lt;/p&gt;
&lt;h3 id=&#34;内卷化是什么&#34;&gt;内卷化是什么？&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;“内卷化，指一种社会或文化模式在某一发展阶段达到一种确定的形式后，便停滞不前或无法转化为另一种高级模式的现象。”（&lt;a href=&#34;https://baike.baidu.com/item/%E5%86%85%E5%8D%B7%E5%8C%96&#34;&gt;百度百科&lt;/a&gt;）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;网上说，这个词是美国人首先提出的，英语单词是 involution，出自1960年的一本著作《农业内卷化——印度尼西亚的生态变化过程》（Agricultural Involution）。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://camo.githubusercontent.com/43670d57cc2dda62be2c511252673eb480023b1d/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323030392f6267323032303039313930342e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;Involution 是一个很罕见的英语单词，平时用得很少，小型词典都不收，维基百科甚至都没有加入“发展停滞”这个涵义，反而是中国人比较多用“内卷化”这个概念。&lt;/p&gt;
&lt;p&gt;虽然不熟悉 involution，但是我想起另外两个常用词：evolution（进化）和 revolution（革命）。它们共同的词根&lt;code&gt;volute&lt;/code&gt;，拉丁语原意是“滚动”。&lt;/p&gt;
&lt;p&gt;有了“滚动”这个词根，这些词的含义就比较清楚了。&lt;code&gt;evolution&lt;/code&gt;的前缀是&lt;code&gt;ex-&lt;/code&gt;（“向外的”），向外滚动就是进化；&lt;code&gt;revolution&lt;/code&gt;的前缀是&lt;code&gt;re-&lt;/code&gt;（“再次的”），再次滚动、颠覆现状就是革命；&lt;code&gt;involution&lt;/code&gt;的前缀是&lt;code&gt;in-&lt;/code&gt;（“向内的”），向内滚动当然就是内卷了。&lt;/p&gt;
&lt;p&gt;我现在对“内卷化”的理解是， &lt;strong&gt;当一个组织不能或不愿向外发展时，成员的精力就只好用到组织内部，这时就会出现“内卷化”，也就是内部的过度发展。&lt;/strong&gt; 举例来说，海上的一艘船，外卷化就是大家齐心协力划向对岸，内卷化就是大家心思不在划船，而放在内部的互相牵扯（组织建设、规章制度、人事安排等等）。&lt;/p&gt;
&lt;p&gt;一旦出现“内卷化”，对外的扩张和发展就停滞了。希望我们国家继续“外卷化”，不要出现“内卷化”。&lt;/p&gt;
&lt;h3 id=&#34;板书的直播方法httpsmothershipsg202009cd-zoom-hack-camera-teacher&#34;&gt;&lt;a href=&#34;https://mothership.sg/2020/09/cd-zoom-hack-camera-teacher/&#34;&gt;板书的直播方法&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;疫情期间，老师们都通过网络直播进行教学。但是，摄像头都是拍人脸，直播板书非常困难。美国一个老师想出了简单的解决方法，她在笔记本盖子上，用胶纸绑了一支铅笔，然后以铅笔作为支柱，放了一张 CD 碟片，当作反光的镜子。&lt;/p&gt;
&lt;p&gt;她把本子放在键盘上做笔记，内容就会通过 CD 碟片反射到摄像头，从而直播出去。&lt;/p&gt;
&lt;h3 id=&#34;a-picture-of-java-in-2020httpsblogjetbrainscomidea202009a-picture-of-java-in-2020&#34;&gt;&lt;a href=&#34;https://blog.jetbrains.com/idea/2020/09/a-picture-of-java-in-2020/&#34;&gt;A Picture of Java in 2020&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;IntelliJ IDEA 的最新调查发现，中国有51%的程序员使用 Java 语言，这个比例全球最高。由于 Java 主要是大中型企业在用，这是不是说明，中国的个人开发者和小企业程序员其实比例很小？&lt;/p&gt;
&lt;h3 id=&#34;vscode-如何调试可视化数据结构httpsaddyosmanicomblogvisualize-data-structures-vscode&#34;&gt;&lt;a href=&#34;https://addyosmani.com/blog/visualize-data-structures-vscode/&#34;&gt;VSCode 如何调试可视化数据结构&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;VSCode 有一个插件，可以用可视化的方式调试代码。本文介绍这个插件的用法。&lt;/p&gt;
&lt;h3 id=&#34;cs107e-树莓派arm-和操作系统httpscjtingme20200911cs107e-review&#34;&gt;&lt;a href=&#34;https://cjting.me/2020/09/11/cs107e-review/&#34;&gt;CS107e: 树莓派，ARM 和操作系统&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;CS107e 是斯坦福大学的一门计算机课程，内容关于硬件、底层和 C 语言 。这篇文章是作者的学习感受&lt;/p&gt;
&lt;h3 id=&#34;我如何使用-netlify-的-serverless-功能httpsttntmmeblogserverless-recipes-app-faunadb-vuejs&#34;&gt;&lt;a href=&#34;https://ttntm.me/blog/serverless-recipes-app-faunadb-vuejs/&#34;&gt;我如何使用 Netlify 的 Serverless 功能&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者介绍他如何开发一个没有后端服务器、只有前端静态网页的 Web 数据库应用。&lt;/p&gt;
&lt;h3 id=&#34;谷歌搜索的10个小技巧httpsmediumcomshalithasuranga10-hidden-features-in-google-search-83b347b48157&#34;&gt;&lt;a href=&#34;https://medium.com/@shalithasuranga/10-hidden-features-in-google-search-83b347b48157&#34;&gt;谷歌搜索的10个小技巧&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;谷歌搜索有很多小功能，比如搜索&lt;code&gt;stopwatch&lt;/code&gt;会出现一个倒计时器&lt;/p&gt;
&lt;h3 id=&#34;中国大周期httpsfinancesinacomcnchinagncj2020-09-21doc-iivhvpwy8038347shtml&#34;&gt;&lt;a href=&#34;https://finance.sina.com.cn/china/gncj/2020-09-21/doc-iivhvpwy8038347.shtml&#34;&gt;中国大周期&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;桥水基金创始人瑞·达利欧（Ray Dalio）的长文，以一个美国人的角度，谈了他对中国历史和经济政策的理解。这里是中文摘译版，也有&lt;a href=&#34;https://www.principles.com/the-changing-world-order/#chapter5&#34;&gt;英文原版&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&#34;github-仓库的默认分支不叫master了httpswwwjiqizhixincomarticles2020-09-21-10&#34;&gt;&lt;a href=&#34;https://www.jiqizhixin.com/articles/2020-09-21-10&#34;&gt;GitHub 仓库的默认分支不叫“master”了&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;从 2020 年 10 月 1 日开始，GitHub 所有新库的默认分支都将用中性词“main”命名，取代原来的“master”。&lt;/p&gt;
&lt;h3 id=&#34;javascript-原生的日期和时间格式化httpselijahmanorcomblogformat-js-dates-and-times&#34;&gt;&lt;a href=&#34;https://elijahmanor.com/blog/format-js-dates-and-times&#34;&gt;JavaScript 原生的日期和时间格式化&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;通常使用外部库处理 JavaScript 的时间格式，但是原生的&lt;code&gt;Date.prototype.toLocale*&lt;/code&gt;方法其实也能满足需求。&lt;/p&gt;
&lt;h3 id=&#34;如何使用-canvas-模拟对象碰撞httpsjoshbradleymeobject-collisions-with-canvas&#34;&gt;&lt;a href=&#34;https://joshbradley.me/object-collisions-with-canvas/&#34;&gt;如何使用 Canvas 模拟对象碰撞&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文从头教你在网页上，用 Canvas 做出对象不断碰撞的动画效果。&lt;/p&gt;
&lt;h3 id=&#34;instantpagehttpsinstantpage&#34;&gt;&lt;a href=&#34;https://instant.page/&#34;&gt;instant.page&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个 JavaScript 库，用户鼠标悬停在某个链接上方时，就自动加载该链接，从而加快页面跳转的速度。&lt;/p&gt;
&lt;h3 id=&#34;toonifyhttpstoonifyjustinpinkneycom&#34;&gt;&lt;a href=&#34;https://toonify.justinpinkney.com/&#34;&gt;Toonify&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个在线工具，可以将真人头像变成卡通头像。&lt;/p&gt;
&lt;h3 id=&#34;advanced-rest-clienthttpsinstalladvancedrestclientcominstall&#34;&gt;&lt;a href=&#34;https://install.advancedrestclient.com/install&#34;&gt;Advanced Rest Client&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个 Rest API 测试工具，基于 Electron 的跨平台桌面软件。&lt;/p&gt;
&lt;h3 id=&#34;kbhttpsgithubcomgnebbiakb&#34;&gt;&lt;a href=&#34;https://github.com/gnebbia/kb&#34;&gt;kb&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个极简的命令行笔记管理软件。&lt;/p&gt;
&lt;h3 id=&#34;kivyhttpsgithubcomkivykivy&#34;&gt;&lt;a href=&#34;https://github.com/kivy/kivy&#34;&gt;Kivy&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个 Python 的 UI 框架，可以打包成 Windows、Linux、MacOS、 Android 和 iOS 应用，特别为多点触摸设备而设计。&lt;/p&gt;
&lt;h3 id=&#34;openglcamera2httpsgithubcomgithubhaohaoopenglcamera2&#34;&gt;&lt;a href=&#34;https://github.com/githubhaohao/OpenGLCamera2&#34;&gt;OpenGLCamera2&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个安卓相机 App 的源码，使用 OpenGL ES 3.0 实现 30 种相机滤镜。&lt;/p&gt;
&lt;h3 id=&#34;twister-oshttpstwisteroscom&#34;&gt;&lt;a href=&#34;https://twisteros.com/&#34;&gt;Twister OS&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个树莓派的操作系统，可以让桌面变得像 MacOS 或 Windows。&lt;/p&gt;
&lt;h3 id=&#34;things-come-aparthttpswwwtoddmclellancomthingscomeapart&#34;&gt;&lt;a href=&#34;https://www.toddmclellan.com/thingscomeapart&#34;&gt;Things come apart&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个艺术项目，将各种东西拆开，零件放在一起，做成一张海报。&lt;/p&gt;
&lt;h3 id=&#34;一页-pythonhttpdamiantgordoncompythonmonday&#34;&gt;&lt;a href=&#34;http://damiantgordon.com/PythonMonday/&#34;&gt;一页 Python&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个英文的 Python 初学者教程，特点是每一讲的讲义都只有一页 A4 纸。&lt;/p&gt;
&lt;h3 id=&#34;吉布力动画图片httpwwwghiblijpinfo013344&#34;&gt;&lt;a href=&#34;http://www.ghibli.jp/info/013344/&#34;&gt;吉布力动画图片&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;吉布力工作室在官网上放出了8部影片的动画图片下载，一共400张。&lt;/p&gt;
&lt;h3 id=&#34;暴力破解密码所需的时间httpsdiggcom2020password-difficulty-hacking&#34;&gt;&lt;a href=&#34;https://digg.com/2020/password-difficulty-hacking&#34;&gt;暴力破解密码所需的时间&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;下表列出了暴力破解各种密码所需的时间。标题行的各栏依次为，纯数字密码、小写字母密码、字母密码、数字字母密码、数字字母符号密码。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://camo.githubusercontent.com/fe1b9b2328339ed865d9a29ef3f2111b1ef2a847/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323030392f6267323032303039313332322e6a7067&#34; alt=&#34;TIME&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;第一个魔方rubiks-cubehttpswwwnytimescom20200916bookserno-rubik-rubiks-cube-inventor-cubedhtml&#34;&gt;&lt;a href=&#34;https://www.nytimes.com/2020/09/16/books/erno-rubik-rubiks-cube-inventor-cubed.html&#34;&gt;第一个魔方Rubik&amp;rsquo;s cube&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;1974年，匈牙利建筑学教授 Erno Rubik，发明了魔方，当时他30岁。&lt;/p&gt;
&lt;p&gt;下图就是他的第一个魔方，是用木头做的。为了识别，有的方块缺了一个圆圈，有的方块贴了白纸，有的方块缺了一个角……&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://camo.githubusercontent.com/cf3ef5fb79a7815d464b2b6c4bbbde82c7aae026/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323030392f6267323032303039313731322e6a7067&#34; alt=&#34;Rubik&amp;rsquo;s cube&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;dufhttpsgithubcommuesliduf&#34;&gt;&lt;a href=&#34;https://github.com/muesli/duf&#34;&gt;duf&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;磁盘空间占用统计工具，支持 Linux 和 MacOS。&lt;/p&gt;
&lt;h3 id=&#34;别在网页上显示注册httpswwwgkogancoblogstop-asking-me-to-sign-up&#34;&gt;&lt;a href=&#34;https://www.gkogan.co/blog/stop-asking-me-to-sign-up/&#34;&gt;别在网页上显示“注册”&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;经过他的实验，只要将“注册”改成“开始使用”或“免费试用”，就能将转化率提高三倍。&lt;/p&gt;
&lt;h3 id=&#34;11-种-nodejs-orm-库的简介httpswwwprismaiodataguidedatabase-toolstop-nodejs-orms-query-builders-and-database-libraries-in-2020&#34;&gt;&lt;a href=&#34;https://www.prisma.io/dataguide/database-tools/top-nodejs-orms-query-builders-and-database-libraries-in-2020&#34;&gt;11 种 Node.js ORM 库的简介&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;RT&lt;/p&gt;
&lt;h3 id=&#34;如何通过new-function创建-async-函数httpsdavidwalshnameasync-function-class&#34;&gt;&lt;a href=&#34;https://davidwalsh.name/async-function-class&#34;&gt;如何通过&lt;code&gt;new Function&lt;/code&gt;创建 async 函数&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;JavaScript 语言允许通过&lt;code&gt;Funtion（）&lt;/code&gt;生成函数，async 函数能通过这种方式生成吗？&lt;/p&gt;
&lt;h3 id=&#34;intlrelativetimeformat相对时间格式化httpwwwdeathghostcnarticlejavascript53&#34;&gt;&lt;a href=&#34;http://www.deathghost.cn/article/javascript/53&#34;&gt;&lt;code&gt;Intl.RelativeTimeFormat()&lt;/code&gt;：相对时间格式化&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;有时需要显示相对时间，比如“5分钟前”、“2天前”等等。一般使用外部库来实现，其实浏览器原生的 Intl.RelativeTimeFormat API 就可以做到。&lt;/p&gt;
&lt;h3 id=&#34;如何写一个-nodejs-命令行程序获取-slack-的-oauth-授权httpthecodebarbariancomoauth-in-nodejs-cli-appshtml&#34;&gt;&lt;a href=&#34;http://thecodebarbarian.com/oauth-in-nodejs-cli-apps.html&#34;&gt;如何写一个 Node.js 命令行程序，获取 Slack 的 OAuth 授权？&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文是一个 OAuth 授权示例，演示如何用 Node.js 在命令行获得 Slack 的授权，从而可以操作 Slack 的 API。&lt;/p&gt;
&lt;h3 id=&#34;tableshttpstablesarea120googlecomu0about&#34;&gt;&lt;a href=&#34;https://tables.area120.google.com/u/0/about#/&#34;&gt;Tables&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;谷歌发布的新产品，主要用于项目管理。跟 Trello 有点类似。&lt;/p&gt;
&lt;h3 id=&#34;visxhttpsairbnbiovisx&#34;&gt;&lt;a href=&#34;https://airbnb.io/visx/&#34;&gt;visx&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Airbnb 推出的一套数据可视化组件库，基于 D3 和 React。&lt;/p&gt;
&lt;h3 id=&#34;releasehttpsgithubcomvercelrelease&#34;&gt;&lt;a href=&#34;https://github.com/vercel/release&#34;&gt;Release&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个 Node.js 库，一键生成软件包的 changelog。&lt;/p&gt;
&lt;h3 id=&#34;taskwarriorhttpstaskwarriororg&#34;&gt;&lt;a href=&#34;https://taskwarrior.org/&#34;&gt;Taskwarrior&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个命令行的待办事项（todo）管理软件，功能相当强。&lt;/p&gt;
&lt;h3 id=&#34;malware-bazaarhttpsbazaarabusech&#34;&gt;&lt;a href=&#34;https://bazaar.abuse.ch/&#34;&gt;Malware Bazaar&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;恶意软件数据库，提供恶意软件样本下载。&lt;/p&gt;
&lt;h3 id=&#34;currentlydowncomhttpcurrentlydowncom&#34;&gt;&lt;a href=&#34;http://currentlydown.com/&#34;&gt;CurrentlyDown.com&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;该网站可以查询，哪些服务现在正在宕机，以及宕机的历史记录。&lt;/p&gt;
&lt;h3 id=&#34;flexbox-defensehttpwwwflexboxdefensecom&#34;&gt;&lt;a href=&#34;http://www.flexboxdefense.com/&#34;&gt;Flexbox Defense&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个在线的塔防小游戏，通过 CSS Flexbox 的练习，击退一波波进攻的敌人。&lt;/p&gt;
&lt;h3 id=&#34;webrtc-教程httpswebrtcforthecuriouscom&#34;&gt;&lt;a href=&#34;https://webrtcforthecurious.com/&#34;&gt;WebRTC 教程&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一本英文的免费电子书，介绍 WebRTC 的基础知识。&lt;/p&gt;
&lt;h3 id=&#34;一天的毫秒数httpstwittercom3blue1brownstatus1282480577036251136&#34;&gt;&lt;a href=&#34;https://twitter.com/3blue1brown/status/1282480577036251136&#34;&gt;一天的毫秒数&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;下面计算式的结果，就是一天的毫秒数。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/9ae1f27ecfdfd15272e71e0023cc350bd56f2aa135355bb16e1106a3bdd31df8/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323030392f6267323032303039323231382e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/9ae1f27ecfdfd15272e71e0023cc350bd56f2aa135355bb16e1106a3bdd31df8/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323030392f6267323032303039323231382e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这个式子的来历如下。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/0b7a5717e64eb34a3b90f774cef67f4a8ece6e938651a2b802c3d800779f0613/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323030392f6267323032303039323231392e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/0b7a5717e64eb34a3b90f774cef67f4a8ece6e938651a2b802c3d800779f0613/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323030392f6267323032303039323231392e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;印度如何审查互联网httpiamkushmehow-india-censors-the-web&#34;&gt;&lt;a href=&#34;http://iamkush.me/how-india-censors-the-web/&#34;&gt;印度如何审查互联网&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一篇英语论文，研究印度政府如何对互联网进行审查。根据该文，一共有4379个网站在印度被限制访问。&lt;/p&gt;
&lt;h3 id=&#34;如何只对某些提交执行-github-actionshttpsryangjchandlercoukarticlesrunning-github-actions-for-certain-commit-messages&#34;&gt;&lt;a href=&#34;https://ryangjchandler.co.uk/articles/running-github-actions-for-certain-commit-messages&#34;&gt;如何只对某些提交执行 GitHub Actions&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个 GitHub Actions 的小技巧，根据 commit message，自动过滤某些提交，跳过持续构建。&lt;/p&gt;
&lt;h3 id=&#34;改变世界的一次代码提交httpshutusicomthe-greatest-git-commit&#34;&gt;&lt;a href=&#34;https://hutusi.com/the-greatest-git-commit&#34;&gt;改变世界的一次代码提交&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Linus 在假期十天时间完成了 Git 的首个版本，第一次提交仅有 848 行代码实现了 Git 的核心功能，本文通过分析这第一个 Git 提交来分析 Git 的设计及产品实现。&lt;/p&gt;
&lt;h3 id=&#34;大-o-和小-nhttpsadamzernerbearblogdevbig-o-little-n&#34;&gt;&lt;a href=&#34;https://adamzerner.bearblog.dev/big-o-little-n/&#34;&gt;大 O 和小 n&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者讨论了表示算法效率的大 O 表示法的含义，提出对于一般的应用，提高算法效率并不太重要，因为你的 n 根本不够大。&lt;/p&gt;
&lt;h3 id=&#34;只用-css-的-clamp-函数的响应式布局httpsdevtodip15739responsive-website-with-only-1-css-property-3ea9&#34;&gt;&lt;a href=&#34;https://dev.to/dip15739/responsive-website-with-only-1-css-property-3ea9&#34;&gt;只用 CSS 的 clamp() 函数的响应式布局&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;CSS 的 clamp() 函数已经可以用了，最新浏览器都支持了，只用这个函数就能实现响应式布局。如果元素的属性值有上限和下限，它比 min() 和 max() 都方便，语法是 &lt;code&gt;clamp(最小值, 属性值, 最大值)&lt;/code&gt; 。&lt;/p&gt;
&lt;h3 id=&#34;go-diagramshttpsgithubcomblushftgo-diagrams&#34;&gt;&lt;a href=&#34;https://github.com/blushft/go-diagrams&#34;&gt;Go-Diagrams&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个 Go 语言的图表生成软件。&lt;/p&gt;
&lt;h3 id=&#34;actionsflowhttpsgithubcomactionsflowactionsflow&#34;&gt;&lt;a href=&#34;https://github.com/actionsflow/actionsflow&#34;&gt;Actionsflow&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个 GitHub Actions 的模板库，用于对网上各种数据源，进行自动化组合操作，类似于 IFTTT。&lt;/p&gt;
&lt;h3 id=&#34;inferhttpsgithubcomfacebookinfer&#34;&gt;&lt;a href=&#34;https://github.com/facebook/infer&#34;&gt;Infer&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Facebook 推出的一个静态代码分析工具，可以分析 Java、C++、Objective-C、C 代码里面的错误。&lt;/p&gt;
&lt;h3 id=&#34;big_screenhttpsgithubcomturbowaybig_screen&#34;&gt;&lt;a href=&#34;https://github.com/TurboWay/big_screen&#34;&gt;big_screen&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;数据大屏生成工具，后端使用 flask。只要传一下数据，就可以制作出数据大屏，适合不了解前端的数据工作者。&lt;/p&gt;
&lt;h3 id=&#34;asmrionhttpsasmrioncom&#34;&gt;&lt;a href=&#34;https://asmrion.com/&#34;&gt;Asmrion&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个声效网站，用户点击不同图标（比如下雨、刮风、海边），就可以听到不同的声效作为背景音。&lt;/p&gt;
&lt;h3 id=&#34;ogdens-basic-englishhttpogdenbasic-englishorg&#34;&gt;&lt;a href=&#34;http://ogden.basic-english.org/&#34;&gt;OGDEN&amp;rsquo;s BASIC ENGLISH&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;根据研究，850 个最常用的英语单词，可以表达90%的英语概念。这些基本单词就称为“基础英语”。该网站收集基础英语的研究和学习资料&lt;/p&gt;
&lt;h3 id=&#34;静态网站的开源评论系统httpslisakovcomprojectsopen-source-comments&#34;&gt;&lt;a href=&#34;https://lisakov.com/projects/open-source-comments/&#34;&gt;静态网站的开源评论系统&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;该网站列出了各种静态网站的开源评论系统，并进行了比较&lt;/p&gt;
&lt;h3 id=&#34;金字塔之巅httpsmashablecom20170212visiting-the-pyramids&#34;&gt;&lt;a href=&#34;https://mashable.com/2017/02/12/visiting-the-pyramids/&#34;&gt;金字塔之巅&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;埃及最大的胡夫金字塔，现在已经不允许攀登了。但是，第二次世界大战之前，它是可以攀登的，事实上根本没人管。&lt;/p&gt;
&lt;p&gt;当时，攀登金字塔在埃及的欧洲人之中很流行，留下了很多照片。&lt;/p&gt;
&lt;h3 id=&#34;你并没有迟到httpskkorgthetechniumyou-are-not-late&#34;&gt;&lt;a href=&#34;https://kk.org/thetechnium/you-are-not-late/&#34;&gt;你并没有迟到&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者：凯文·凯利（原文写于2014年）&lt;/p&gt;
&lt;p&gt;想象一下，在1985年成为一名创业者，是多么棒的事情！你想要的几乎任何域名，都可以轻易获得。&lt;/p&gt;
&lt;p&gt;直到1994年，有人发现 mcdonalds.com 这个域名依然可以注册，在我们的鼓励下，他买下了，然后尝试将其转卖给麦当劳。麦当劳的人当时居然不知道互联网是什么。&lt;/p&gt;
&lt;p&gt;此前，我注意到 abc.com 这个域名也可以买下。当我去 ABC 电视网演讲时，就告诉高层管理人员，应该注册自己的域名。他们没听进去。&lt;/p&gt;
&lt;p&gt;那时，互联网是一个广阔的领域，在任何一个分类中都很容易成为第一名。消费者的期望值很小，而且进入障碍极低。现在一波又一波涌入的创业者推波助澜，扩大了每个战场。30年过去了，互联网已经令人感觉饱和、臃肿、塞满各种应用程序和平台服务，网上的内容足够让我们看上未来一百万年。即使你能设法完成另外一个微小的创新，挤进这个战场，谁又能注意到它呢？&lt;/p&gt;
&lt;p&gt;但是，互联网仍处于起步阶段。如果我们能爬进一台时光机，来到2044年，我们就会意识到，影响2044年的人们生活的最伟大产品都是在2014年之后才发明的，比如智能住宅、虚拟眼镜、AI 智能界面。那时的人们会说：“2014年？哦，那时的互联网还很低级。”&lt;/p&gt;
&lt;p&gt;他们是对的。因为从我们现在的角度来看，当前最伟大的互联网事物，都是1984年之后发明的。&lt;/p&gt;
&lt;p&gt;所以，这就是2044年的人会告诉你的另一件事：你能想象2014年成为一名企业家有多棒吗？这是一个开放的世界，你几乎可以选择任何分类，为其添加一些 AI，并将其放置在云中。现在的很多设备即使具有传感器，也只有一两个，消费者的期望和市场障碍都很低，成为分类市场的第一个很容易。2044年的人会叹息：“哦，要是我们那时意识到那么多机会有多好！”&lt;/p&gt;
&lt;p&gt;所以事实是，现在，就是今天，2014年依然是互联网创业的最佳时机。整个世界历史上，从来没有比现在更好的时机发明一些东西。你有更多的机会，更低的障碍，更高的收益/风险比，更好的回报，更大的上涨空间。现在，这一分钟就是将来人们回顾说：“哦，那是一个很好的时机！”&lt;/p&gt;
&lt;p&gt;过去30年创造了一个奇妙的起点，一个构建真正伟大事物的坚实平台。但是，最酷的东西还没有发明出来，尽管这种新的发明将不再与以前的发明相同。它不仅仅是“更好”，而是有所不同，有所超越。&lt;/p&gt;
&lt;p&gt;你可能没有意识到，今天我们确实刚刚开始进入一个广阔的领域。这是人类历史上开始创业的最佳时间。&lt;/p&gt;
&lt;p&gt;你并没有迟到。&lt;/p&gt;
&lt;h3 id=&#34;创业的凸函数和凹函数httpswwwindiehackerscompostbootstrapping-and-convexity-fb3b2da7c9&#34;&gt;&lt;a href=&#34;https://www.indiehackers.com/post/bootstrapping-and-convexity-fb3b2da7c9&#34;&gt;创业的凸函数和凹函数&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;好的创业是这个样子：外部环境有利时，你的收益会快速上升，并且上升空间是巨大的；外部环境不利时，你的亏损会缓慢累积，并且最大损失是有限的。这种曲线正是凸函数，如果反过来，你的创业是凹函数，那就完了：盈利有天花板，上升缓慢，亏损则可能无限地快速上升。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;身份云-authinghttpswwwauthingcn&#34;&gt;&lt;a href=&#34;https://www.authing.cn/&#34;&gt;身份云 Authing&lt;/a&gt;&lt;/h3&gt;
&lt;h3 id=&#34;unity-游戏开发的基本概念httpsblogeyassh202010unity-for-engineers-pt1-basic-concepts&#34;&gt;&lt;a href=&#34;https://blog.eyas.sh/2020/10/unity-for-engineers-pt1-basic-concepts/&#34;&gt;Unity 游戏开发的基本概念&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Basic Concepts in Unity for Software Engineers&lt;/p&gt;
&lt;h3 id=&#34;使用-css--marker-自定义列表符号httpswebdevcss-marker-pseudo-element&#34;&gt;&lt;a href=&#34;https://web.dev/css-marker-pseudo-element/&#34;&gt;使用 CSS &lt;code&gt;:: marker&lt;/code&gt; 自定义列表符号&lt;/a&gt;&lt;/h3&gt;
&lt;h3 id=&#34;忘记业余项目专注于工作httpsmanueldarcemontfrpostsfocus-on-jour-job&#34;&gt;&lt;a href=&#34;https://manuel.darcemont.fr/posts/focus-on-jour-job/&#34;&gt;忘记业余项目，专注于工作&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;不要漫无目的做业余项目，尤其不要喜欢什么就做什么，而要做那些跟你的工作有直接关系的业余项目。&lt;/p&gt;
&lt;h3 id=&#34;chrome-浏览器改变缓存机制httpsdevelopersgooglecomwebupdates202010http-cache-partitioning&#34;&gt;&lt;a href=&#34;https://developers.google.com/web/updates/2020/10/http-cache-partitioning&#34;&gt;Chrome 浏览器改变缓存机制&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;用户访问网页以后，浏览器会缓存静态资源。用户再次访问时，就会加快显示速度。但是，这种机制可以用来追踪用户，脚本通过识别缓存，了解用户访问过哪个网站。&lt;/p&gt;
&lt;p&gt;Chrome 86 启用了新的缓存防追踪机制，具体来说，就是为缓存加上数字密钥，使得第三方脚本无法加载缓存，也就是说，禁止使用其他网站留下的缓存。&lt;/p&gt;
&lt;h3 id=&#34;javascript-代码库的共享-cdn-不是一个好主意httpsshksprmobiblog202010please-stop-using-cdns-for-external-javascript-libraries&#34;&gt;&lt;a href=&#34;https://shkspr.mobi/blog/2020/10/please-stop-using-cdns-for-external-javascript-libraries/&#34;&gt;JavaScript 代码库的共享 CDN 不是一个好主意&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;有一些 CDN 专供 JS 脚本使用，本文认为脚本共享类的 CDN 并不可取。最有说服力的一条理由大概是，由于 Chrome 86 开始禁止使用其他网站留下的缓存，这类 CDN 的最大好处就消失了：不同网站的脚本使用同一个 CDN，并不会令加载变快&lt;/p&gt;
&lt;h3 id=&#34;如何写一个最简单的-react-实现httpszsergecompostsworst-react-ever&#34;&gt;&lt;a href=&#34;https://zserge.com/posts/worst-react-ever/&#34;&gt;如何写一个最简单的 React 实现&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者讲解如何自己实现一个最简单的 React，支持 JSX 语法和一些基本 API，压缩后代码不超过 1KB。本文可以用来了解 React 原理。&lt;/p&gt;
&lt;h3 id=&#34;github-的中国乱象httpswwwpingwestcoma177413&#34;&gt;&lt;a href=&#34;https://www.pingwest.com/a/177413&#34;&gt;GitHub 的中国乱象&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;很多中国程序员正在滥用 GitHub，比如有人买 Star 登上 GitHub Trends 排行榜。&lt;/p&gt;
&lt;h3 id=&#34;playwright-pythonhttpsgithubcommicrosoftplaywright-python&#34;&gt;&lt;a href=&#34;https://github.com/microsoft/playwright-python&#34;&gt;playwright-python&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;微软推出的浏览器自动化工具，特点是浏览器的控制脚本用 Python 来写。&lt;/p&gt;
&lt;h3 id=&#34;diagram-makerhttpsgithubcomawslabsdiagram-maker&#34;&gt;&lt;a href=&#34;https://github.com/awslabs/diagram-maker&#34;&gt;Diagram Maker&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;亚马逊推出的开源流程图制作工具。&lt;/p&gt;
&lt;h3 id=&#34;framehttpsframevrio&#34;&gt;&lt;a href=&#34;https://framevr.io/&#34;&gt;Frame&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这个网站很新奇，用户在 VR 空间“面对面”开虚拟会议。如果没有 VR 头盔，裸眼也可以使用。&lt;/p&gt;
&lt;h3 id=&#34;optimizthttpsgithubcomfunboxoptimizt&#34;&gt;&lt;a href=&#34;https://github.com/funbox/optimizt&#34;&gt;optimizt&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个命令行图片压缩工具，支持压缩 PNG、JPEG、GIF 和 SVG 格式，并可以选择输出 WebP 格式。&lt;/p&gt;
&lt;h3 id=&#34;calligrapheraihttpswwwcalligrapherai&#34;&gt;&lt;a href=&#34;https://www.calligrapher.ai/&#34;&gt;Calligrapher.ai&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个在线工具，可以将英文输入变成手写体，并具有动画效果，提供 SVG 格式下载。&lt;/p&gt;
&lt;h3 id=&#34;css-3d-示例httpspolypaneappcss-3d-transform-examples&#34;&gt;&lt;a href=&#34;https://polypane.app/css-3d-transform-examples/&#34;&gt;CSS 3D 示例&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;该网页收集一些常用 CSS 3D 示例。&lt;/p&gt;
&lt;h3 id=&#34;漫游者的压缩知识指南httpsgo-compressiongithubio&#34;&gt;&lt;a href=&#34;https://go-compression.github.io/&#34;&gt;漫游者的压缩知识指南&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个面向初学者的英文的简单教程，介绍数据压缩知识，了解压缩算法。&lt;/p&gt;
&lt;h3 id=&#34;宇宙模型httpstarschromeexperimentscom&#34;&gt;&lt;a href=&#34;http://stars.chromeexperiments.com/&#34;&gt;宇宙模型&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个浏览器的 3D 显示实验项目，在网页上展示10万颗恒星，讲解宇宙知识。&lt;/p&gt;
&lt;h3 id=&#34;namesiohttpsgithubcomdebdutnamesio&#34;&gt;&lt;a href=&#34;https://github.com/Debdut/names.io&#34;&gt;names.io&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这个仓库通过各种数据库，收集所有出现过的英语人名（包括外国人的英文译名），分成姓和名两个文件。&lt;/p&gt;
&lt;h3 id=&#34;现代陶瓷窑厂httpswwwarchdailycncn918363jing-de-zhen-bing-ding-chai-yao-zhang-lei-lian-he-jian-zhu-shi-wu-suo&#34;&gt;&lt;a href=&#34;https://www.archdaily.cn/cn/918363/jing-de-zhen-bing-ding-chai-yao-zhang-lei-lian-he-jian-zhu-shi-wu-suo&#34;&gt;现代陶瓷窑厂&lt;/a&gt;&lt;/h3&gt;
&lt;h3 id=&#34;海拔7000米的天空颜色httpswwwdcfevercomnewsreadnewsphpid28338&#34;&gt;&lt;a href=&#34;https://www.dcfever.com/news/readnews.php?id=28338&#34;&gt;海拔7000米的天空颜色&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;蓝-》黑&lt;/p&gt;
&lt;h3 id=&#34;工作风险和职业风险httpseriktorenbergsubstackcompstarting-a-company-is-less-risky&#34;&gt;&lt;a href=&#34;https://eriktorenberg.substack.com/p/starting-a-company-is-less-risky&#34;&gt;工作风险和职业风险&lt;/a&gt;&lt;/h3&gt;
&lt;h3 id=&#34;普济路桥改建httpwwwlandscapecnlandscape11218html&#34;&gt;&lt;a href=&#34;http://www.landscape.cn/landscape/11218.html&#34;&gt;普济路桥改建&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;最近，上海的一家建筑事务所（&lt;a href=&#34;https://100architects.com/about-us/&#34;&gt;100architects佰筑&lt;/a&gt; ）提出一个改建方案，将这座桥改建成多功能高架公园，灰色的沥青被大胆活泼的颜色替代，通过颜色勾勒出不同的动线。（凌波桥 High Loop）&lt;/p&gt;
&lt;h3 id=&#34;去抖和节流的示例解释httpscss-trickscomdebouncing-throttling-explained-examples&#34;&gt;&lt;a href=&#34;https://css-tricks.com/debouncing-throttling-explained-examples/&#34;&gt;去抖和节流的示例解释&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;去抖（debounce）和节流（throttle）是网页脚本经常用到的方法，本文通过示例解释它们的差异，不涉及实现。举例来说，用户下拉到网页底部，触发无限加载，就不应该使用&lt;code&gt;debounce()&lt;/code&gt;，而要使用&lt;code&gt;throttle()&lt;/code&gt;。&lt;/p&gt;
&lt;h3 id=&#34;dockerfile-安全最佳实践httpscloudberryengineeringarticledockerfile-security-best-practices&#34;&gt;&lt;a href=&#34;https://cloudberry.engineering/article/dockerfile-security-best-practices/&#34;&gt;Dockerfile 安全最佳实践&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文介绍编写 Dockerfile 文件时，有哪些安全注意点。&lt;/p&gt;
&lt;h3 id=&#34;哪些编程语言最省电httpsthenewstackiowhich-programming-languages-use-the-least-electricity&#34;&gt;&lt;a href=&#34;https://thenewstack.io/which-programming-languages-use-the-least-electricity/&#34;&gt;哪些编程语言最省电？&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个葡萄牙团队比较了27种编程语言的耗电情况。&lt;/p&gt;
&lt;h3 id=&#34;svelte-和-react-的比较httpswwwswyxiosvelte-sites-react-apps&#34;&gt;&lt;a href=&#34;https://www.swyx.io/svelte-sites-react-apps/&#34;&gt;Svelte 和 React 的比较&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者对 Svelte 和 React 这两个前端框架都非常喜欢，谈了它们不同的特点和适用场景。&lt;/p&gt;
&lt;h3 id=&#34;freepnhttpswwwfreepnorg&#34;&gt;&lt;a href=&#34;https://www.freepn.org/&#34;&gt;FreePN&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个点对点的 VPN 网络，通过用户共享带宽实现加密访问。&lt;/p&gt;
&lt;h3 id=&#34;sciterjshttpsgithubcomc-smilesciter-js-sdk&#34;&gt;&lt;a href=&#34;https://github.com/c-smile/sciter-js-sdk&#34;&gt;SciterJS&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;使用 HTML/CSS/JS 技术构建跨平台的桌面应用，类似于 Electron 的作用，但是它自己实现内核，比 Eletron 更简单，打包出来的程序也更小。详细介绍看&lt;a href=&#34;https://www.kickstarter.com/projects/c-smile/open-source-sciter-engine&#34;&gt;这里&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&#34;kakacsshttpsrenzhezhilugiteeiokakacss&#34;&gt;&lt;a href=&#34;https://renzhezhilu.gitee.io/kakacss/&#34;&gt;KakaCSS&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;在任意网站复制内容，粘贴到这个网站，会给出所复制内容的 CSS 样式代码。&lt;/p&gt;
&lt;h3 id=&#34;telegram-订阅httpsarticliuscomhomesubscribetotelegramchannelnewsletter&#34;&gt;&lt;a href=&#34;https://articlius.com/home/SubscribeToTelegramChannelNewsletter&#34;&gt;Telegram 订阅&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;邮件订阅 Telegram 频道。&lt;/p&gt;
&lt;h3 id=&#34;anytxt-searcherhttpsanytxtnet&#34;&gt;&lt;a href=&#34;https://anytxt.net/&#34;&gt;AnyTXT Searcher&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Windows 桌面软件，提供文本文件的全文搜索。&lt;/p&gt;
&lt;h3 id=&#34;a-list-of-post-mortemshttpsgithubcomdanluupost-mortems&#34;&gt;&lt;a href=&#34;https://github.com/danluu/post-mortems&#34;&gt;A List of Post-mortems&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这个仓库收集各大互联网公司网络事故的事后分析报告。&lt;/p&gt;
&lt;h3 id=&#34;coded-mailshttpscodedmailscom&#34;&gt;&lt;a href=&#34;https://codedmails.com/&#34;&gt;Coded Mails&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/302d6b43999ca55d1b82ad732d3b4f5d5b0a5297bf3f000caa7073722f3f9804/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031302f6267323032303130313330322e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/302d6b43999ca55d1b82ad732d3b4f5d5b0a5297bf3f000caa7073722f3f9804/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031302f6267323032303130313330322e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;电子邮件的 HTML 模版很难写，因为客户端有着各种限制。该网站提供各种主题的响应式电子邮件模版下载。&lt;/p&gt;
&lt;h3 id=&#34;musicnethttpshomescswashingtoneduthickstnmusicnethtml&#34;&gt;&lt;a href=&#34;https://homes.cs.washington.edu/~thickstn/musicnet.html&#34;&gt;Musicnet&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/8e87a0667c41c86fd05f596234465020ddcb04fd8fab54605ec44ccfdfce928e/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031302f6267323032303130313630312e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/8e87a0667c41c86fd05f596234465020ddcb04fd8fab54605ec44ccfdfce928e/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031302f6267323032303130313630312e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;一个古典音乐的数据集，包括超过一百万个标签，指明每首曲子的每个音符出现的准确时间和位置，以及演奏该音符的乐器，主要用于 AI 的数据训练。&lt;/p&gt;
&lt;h3 id=&#34;数据工程师学习资料httpsawesomedataengineeringcom&#34;&gt;&lt;a href=&#34;https://awesomedataengineering.com/&#34;&gt;数据工程师学习资料&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个英文网站，按照学习次序，列出各种主题最推荐的学习资料。&lt;/p&gt;
&lt;h3 id=&#34;unix-分时操作系统httpschsasankgithubioclassic_papersunix-time-sharing-systemhtml&#34;&gt;&lt;a href=&#34;https://chsasank.github.io/classic_papers/unix-time-sharing-system.html&#34;&gt;Unix 分时操作系统&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这是丹尼斯·里奇和汤普森1974年向世界介绍 Unix 操作系统的经典论文，至今仍然是了解 Unix 的最佳入门材料。&lt;/p&gt;
&lt;h3 id=&#34;python-的-eval-函数很危险httpsnedbatcheldercomblog201206eval_really_is_dangeroushtml&#34;&gt;&lt;a href=&#34;https://nedbatchelder.com/blog/201206/eval_really_is_dangerous.html&#34;&gt;Python 的 &lt;code&gt;eval()&lt;/code&gt; 函数很危险&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文解释为什么 Python 语言的 &lt;code&gt;eval()&lt;/code&gt;函数是一个危险的操作，不能用于不信任的数据。&lt;/p&gt;
&lt;h3 id=&#34;react-ref-详解httpswwwrobinwieruchdereact-ref&#34;&gt;&lt;a href=&#34;https://www.robinwieruch.de/react-ref&#34;&gt;React Ref 详解&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一篇写得很好的 React 教程，解释了&lt;code&gt;useRef()&lt;/code&gt;钩子和&lt;code&gt;ref&lt;/code&gt;属性的用法。&lt;/p&gt;
&lt;h3 id=&#34;为什么-lisp-语法非常合理httpsstopaiopost265&#34;&gt;&lt;a href=&#34;https://stopa.io/post/265&#34;&gt;为什么 Lisp 语法非常合理？&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者为了解释 Lisp 语法的有效性，举了一个例子，使用 JavaScript 语言进行远程函数调用，结果最合理高效的方式就是让数据采用 Lisp 的语法。&lt;/p&gt;
&lt;h3 id=&#34;consolechatiohttpswwwconsolechatio&#34;&gt;&lt;a href=&#34;https://www.consolechat.io/&#34;&gt;ConsoleChat.io&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个在浏览器控制台进行聊天的工具库。&lt;/p&gt;
&lt;h3 id=&#34;svg-favicon-makerhttpsformitocomtoolsfavicon&#34;&gt;&lt;a href=&#34;https://formito.com/tools/favicon&#34;&gt;SVG Favicon Maker&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个在线工具，制作 SVG 格式的 Favicon。&lt;/p&gt;
&lt;h3 id=&#34;react-chronohttpsgithubcomprabhuignotoreact-chrono&#34;&gt;&lt;a href=&#34;https://github.com/prabhuignoto/react-chrono&#34;&gt;react-chrono&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;React 的时间轴组件。&lt;/p&gt;
&lt;h3 id=&#34;masonryhttpsmasonrydesandrocom&#34;&gt;&lt;a href=&#34;https://masonry.desandro.com/&#34;&gt;Masonry&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;网页瀑布流的布局库。&lt;/p&gt;
&lt;h3 id=&#34;glowhttpsgithubcomcharmbraceletglow&#34;&gt;&lt;a href=&#34;https://github.com/charmbracelet/glow&#34;&gt;Glow&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个命令行的 Markdown 阅读工具。&lt;/p&gt;
&lt;h3 id=&#34;vdxhttpsgithubcomyuanqingvdx&#34;&gt;&lt;a href=&#34;https://github.com/yuanqing/vdx&#34;&gt;vdx&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个命令行的视频处理工具，属于 FFmpeg 的包装库，提供简单易用的语法格式。&lt;/p&gt;
&lt;h3 id=&#34;diodehttpssupportdiodeioarticless32engxlq&#34;&gt;&lt;a href=&#34;https://support.diode.io/article/ss32engxlq&#34;&gt;Diode&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Diode 可以将本机（localhost）的网站公开到互联网上，提供一个二级域名，使得外部用户可以访问。&lt;/p&gt;
&lt;h3 id=&#34;running-pagehttpsgithubcomyihong0618running_page&#34;&gt;&lt;a href=&#34;https://github.com/yihong0618/running_page&#34;&gt;Running page&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/48c5cb6cb9627b7bc79923233aa13c6a67d617e71b1c653005e25d77b1dc3dc0/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031302f6267323032303130323730382e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/48c5cb6cb9627b7bc79923233aa13c6a67d617e71b1c653005e25d77b1dc3dc0/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031302f6267323032303130323730382e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;国产的跑步数据管理软件，可以备份 Nike、Runtastic（Adidas Run）、佳明的 gpx 跑步数据，生成个人的跑步主页。&lt;/p&gt;
&lt;h3 id=&#34;the-old-nethttptheoldnetcom&#34;&gt;&lt;a href=&#34;http://theoldnet.com/&#34;&gt;The Old Net&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/d2e1b6d4f235a961e41ce500d829e5b4e08fd1d25875734a3a0f0ab3d186adf3/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031302f6267323032303130313830312e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/d2e1b6d4f235a961e41ce500d829e5b4e08fd1d25875734a3a0f0ab3d186adf3/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031302f6267323032303130313830312e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这个网站复原了2000年以前的网站访问体验。&lt;/p&gt;
&lt;h3 id=&#34;人工智能编程的-lisp-范例httpsgithubcomnorvigpaip-lispparadigms-of-artificial-intelligence-programming&#34;&gt;&lt;a href=&#34;https://github.com/norvig/paip-lisp&#34;&gt;《人工智能编程的 LISP 范例》&lt;/a&gt;（Paradigms of Artificial Intelligence Programming）&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/ca784945e90a2c709d0abb493b929252cd2d0503a7318ee0739cea5c6fcb7672/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031302f6267323032303130313830352e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/ca784945e90a2c709d0abb493b929252cd2d0503a7318ee0739cea5c6fcb7672/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031302f6267323032303130313830352e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;一本很好的英文教科书，解释人工智能编程原理。作者是谷歌公司著名的科学家 Peter Norvig。&lt;/p&gt;
&lt;h3 id=&#34;sharklehttpssharklecom&#34;&gt;&lt;a href=&#34;https://sharkle.com/&#34;&gt;Sharkle&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/3e8b2c57d3a2a981315d463c43ff8ec3c9b4b2799aea5a32f5190fa0d3345ce4/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031302f6267323032303130313830362e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/3e8b2c57d3a2a981315d463c43ff8ec3c9b4b2799aea5a32f5190fa0d3345ce4/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031302f6267323032303130313830362e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;点击网页上的按钮，它会随机打开一个有趣的网站。&lt;/p&gt;
&lt;h3 id=&#34;deepworkfmhttpsdeepworkfm&#34;&gt;&lt;a href=&#34;https://deepwork.fm/&#34;&gt;Deepwork.fm&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/5f0d660b7d01f18084e9dc2554e07ea9ce6855507ae24fca22c3709b568a4a78/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031302f6267323032303130313830372e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/5f0d660b7d01f18084e9dc2554e07ea9ce6855507ae24fca22c3709b568a4a78/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031302f6267323032303130313830372e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;一个在线电台，播放适合工作时收听的音乐，提供几个不同风格的频道，比如平静的音乐或有节奏感的音乐。&lt;/p&gt;
&lt;h3 id=&#34;数据保护指南httpsssdefforgen&#34;&gt;&lt;a href=&#34;https://ssd.eff.org/en&#34;&gt;数据保护指南&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/7d6360845e269f2913b6171890798b8d12faa595e4817000951204106deb47e5/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031302f6267323032303130323530312e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/7d6360845e269f2913b6171890798b8d12faa595e4817000951204106deb47e5/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031302f6267323032303130323530312e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这个英文网站提供了一个计算机数据保护的指南，有各种工具的详细用法介绍，比如&lt;a href=&#34;https://ssd.eff.org/en/module/how-delete-your-data-securely-windows&#34;&gt;如何在 Windows 删除数据&lt;/a&gt;，&lt;a href=&#34;https://ssd.eff.org/en/module/how-use-keepassxc&#34;&gt;如何使用密码管理器&lt;/a&gt;等等。&lt;/p&gt;
&lt;h3 id=&#34;俄罗斯的充气部队httpswwwodditycentralcomnewsrussias-inflatable-army-a-tool-of-deceptionhtml&#34;&gt;&lt;a href=&#34;https://www.odditycentral.com/news/russias-inflatable-army-a-tool-of-deception.html&#34;&gt;俄罗斯的充气部队&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;西方媒体揭露，俄罗斯经常使用充气道具冒充部队。这不仅可以欺骗敌人的侦查兵，而且对付卫星照片极为有效。&lt;/p&gt;
&lt;h3 id=&#34;最早的错觉图片httpsenwikipediaorgwikirabbitduck_illusion&#34;&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Rabbit%E2%80%93duck_illusion&#34;&gt;最早的错觉图片&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;已知历史上最早的视觉错觉图片，发表在1892年10月23日的一本德国幽默杂志上，要求读者分辨下面的图片更像鸭子，还是更像兔子。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/5529d559ff3a23a53db6b909974e1795b6d6b6410b1c17da85aa498d119e57ff/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031302f6267323032303130323530322e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/5529d559ff3a23a53db6b909974e1795b6d6b6410b1c17da85aa498d119e57ff/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031302f6267323032303130323530322e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;doggerlandhttpsenwikipediaorgwikidoggerland&#34;&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Doggerland&#34;&gt;Doggerland&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;英国现在是一个海岛，但以前与欧洲大陆是相连的，相连的部分被称为 Doggerland。&lt;/p&gt;
&lt;p&gt;公元前6000年海平面上升，这个地区开始沉入海底，使得英国脱离了欧洲大陆。下图的红色圆圈部分就是 Doggerland 的位置，在英格兰东海岸与荷兰之间。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/0dc193f2f49bc3d0e0031c36f86df8676ea80fcdee8b07bdeace62ef027cc65b/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031302f6267323032303130323730332e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/0dc193f2f49bc3d0e0031c36f86df8676ea80fcdee8b07bdeace62ef027cc65b/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031302f6267323032303130323730332e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;给印度年轻人的一封公开信httpstimesofindiaindiatimescomblogsthe-underage-optimistthe-4gotten-generation-an-open-letter-to-indias-youth-get-off-that-smartphone-it-can-destroy-you&#34;&gt;&lt;a href=&#34;https://timesofindia.indiatimes.com/blogs/The-underage-optimist/the-4gotten-generation-an-open-letter-to-indias-youth-get-off-that-smartphone-it-can-destroy-you/&#34;&gt;给印度年轻人的一封公开信&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;印度年轻人的失业率极高，约30％。与此同时，这些年轻人在 Facebook 和 Instagram 上花费了大量时间，印度人在 Facebook 和 Instagram 花费的时间在所有国家/地区排名第一。印度互联网广告业的收入却极低，广告主根本找不到对这些人有价值的广告，他们没有购买力。&lt;/p&gt;
&lt;p&gt;最近，印度最著名的作家之一的&lt;a href=&#34;https://en.wikipedia.org/wiki/Chetan_Bhagat&#34;&gt;切坦·巴加特&lt;/a&gt;（Chetan Bhagat）在《印度时报》上发表了这封公开信，呼吁印度年轻人不要沉溺于手机。&lt;/p&gt;
&lt;h3 id=&#34;郑州新区污水处理厂&#34;&gt;郑州新区污水处理厂&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/f17743d0c41eb982347268c6b533c5fc90bac9efd0b6a2f35bea4ac8641bff24/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031312f6267323032303131303431352e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/f17743d0c41eb982347268c6b533c5fc90bac9efd0b6a2f35bea4ac8641bff24/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031312f6267323032303131303431352e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;郑州新区污水处理厂曾获2019年国家优质工程奖，一个个污水处理池被绿化围绕。（via &lt;a href=&#34;https://www.instagram.com/p/CHKdcpTLzNk/&#34;&gt;instagram&lt;/a&gt;）&lt;/p&gt;
&lt;h3 id=&#34;足球直播的故障httpswwwiflsciencecomtechnologyai-camera-ruins-soccar-game-for-fans-after-mistaking-referees-bald-head-for-ball&#34;&gt;&lt;a href=&#34;https://www.iflscience.com/technology/ai-camera-ruins-soccar-game-for-fans-after-mistaking-referees-bald-head-for-ball/&#34;&gt;足球直播的故障&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/882e21615505580fd39c7b84b2aa4458c9317c9fd6ff3908364a0c91934213b1/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031302f6267323032303130333130322e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/882e21615505580fd39c7b84b2aa4458c9317c9fd6ff3908364a0c91934213b1/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031302f6267323032303130333130322e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;10月25日，苏格兰足球联赛出现了一个令人啼笑皆非的直播事故。赛前，俱乐部宣布，本场比赛将采用 AI 摄像头替代人工摄像师，摄像头会自动识别足球，始终追踪球的运动。&lt;/p&gt;
&lt;p&gt;意想不到的是，本场比赛的边裁是一个光头裁判，AI 摄像头分不清光头与足球，很多时候将光头误认为是足球，镜头跟着边裁。观众们纷纷抱怨错过了进球，只看见边判跑来跑去，要求俱乐部赶快为边裁提供一个假发或帽子。&lt;/p&gt;
&lt;h3 id=&#34;谷歌-app-的新图标httpstwittercomdanidonovanstatus1322356167063031814&#34;&gt;&lt;a href=&#34;https://twitter.com/danidonovan/status/1322356167063031814&#34;&gt;谷歌 App 的新图标&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;2020&lt;/p&gt;
&lt;h3 id=&#34;树莓派-pchttpswwwraspberrypiorgproductsraspberry-pi-400&#34;&gt;&lt;a href=&#34;https://www.raspberrypi.org/products/raspberry-pi-400/&#34;&gt;树莓派 PC&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;树莓派官方发布桌面 PC，代号为 Raspberry Pi 400。最大特色就是，整台电脑集成在键盘里面，按键下面就是一块树莓派4代的专用板，出门只要带这个键盘就够了。电源可以用手机充电器，硬盘是 SD 卡，内存是 4GB，有无线网卡，支持 HDMI 输出和 4K 视频播放。&lt;/p&gt;
&lt;p&gt;这个主机售价是70美元，套件售价是100美元。我感觉这个设备会改变 PC 市场的生态，上网、办公、视频会议，它完全够用，尤其适合教育用途。对于大众市场来说，唯一的麻烦是它的 CPU 是 ARM 架构，只能使用 Linux 系统，装不了 Windows。不过，也许以后 MacOS 可以装在上面。&lt;/p&gt;
&lt;h3 id=&#34;ubuntu-touch-九周年httpsitsfosscomubuntu-touch&#34;&gt;&lt;a href=&#34;https://itsfoss.com/ubuntu-touch/&#34;&gt;Ubuntu Touch 九周年&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;九年前的2011年10月31日，Ubuntu 宣布专用于手机的 Linux 系统 ，叫做 Ubuntu Touch。这个系统的实际发布是在2013年，然后2017年官方宣布放弃该项目。只有两家厂商发售过两款该系统的手机，其中一款就是魅族的 Meizu Pro 5（Ubuntu Touch 版，上图），但是这个版本只针对海外市场，国内没有销售。&lt;/p&gt;
&lt;p&gt;由于手机硬件基本上专用的，不是兼容的，而且硬件厂商不开源驱动，这导致 Linux 手机很难成功，性能和功能都无法跟专有系统竞争。目前还活着的 Linux 手机项目，主要有两个：PinePhone 和 Purism Librem 5。&lt;/p&gt;
&lt;h3 id=&#34;使用-scriptable-app-开发-iphone-小组件httpsgithubcomdreamapplehappyblogtreemaster20201024&#34;&gt;&lt;a href=&#34;https://github.com/dreamapplehappy/blog/tree/master/2020/10/24&#34;&gt;使用 Scriptable App 开发 iPhone 小组件&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;iOS 14 升级了小组件功能，有一个 Scriptable App 可以使用 JavaScript语言为 iPhone 创建各种小组件。&lt;/p&gt;
&lt;h3 id=&#34;grpc-api-是什么httpswwwprogrammablewebcomnewswhat-grpc-api-and-how-does-it-workanalysis20201008&#34;&gt;&lt;a href=&#34;https://www.programmableweb.com/news/what-grpc-api-and-how-does-it-work/analysis/2020/10/08&#34;&gt;gRPC API 是什么？&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/05e412a0332305473e38f7b90c25d9128d5c5d7958ad761beee6002063ed5b61/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031302f6267323032303130313630322e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/05e412a0332305473e38f7b90c25d9128d5c5d7958ad761beee6002063ed5b61/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031302f6267323032303130313630322e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;gRPC 是远程调用计算机服务的一种方式，所有数据以二进制传送，所以效率极高。&lt;/p&gt;
&lt;h3 id=&#34;奇妙的-189httpwww2mathouedudmcculloughteachingmiscellaneaminerhtml&#34;&gt;&lt;a href=&#34;http://www2.math.ou.edu/~dmccullough/teaching/miscellanea/miner.html&#34;&gt;奇妙的 1/89&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/9749928d5612f664bf35739a9c030e17ab914c4b9dcf223b295c55df1a11e762/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031302f6267323032303130333130332e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/9749928d5612f664bf35739a9c030e17ab914c4b9dcf223b295c55df1a11e762/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031302f6267323032303130333130332e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这篇文章介绍 1/89 这个分数（.01123595505&amp;hellip;）与斐波那契数列的奇妙关系。&lt;/p&gt;
&lt;h3 id=&#34;c-代码里面的网址httpssusaminblogurls-in-c&#34;&gt;&lt;a href=&#34;https://susam.in/blog/urls-in-c/&#34;&gt;C 代码里面的网址&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;C 代码里面加一行，直接写一个网址，并不会报错，代码还是能够运行。这篇文章解释了为什么。&lt;/p&gt;
&lt;h3 id=&#34;三个可以替代-npm-的软件httpsblogbitsrcionpm-clients-that-are-better-than-the-original-cd54ed0f5fe7&#34;&gt;&lt;a href=&#34;https://blog.bitsrc.io/npm-clients-that-are-better-than-the-original-cd54ed0f5fe7&#34;&gt;三个可以替代 npm 的软件&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;npm 是 Node.js 的包管理工具，存在一些令人诟病的地方，主要是 node_modules 目录太庞大。本文介绍三个可以替代 npm 的工具软件。&lt;/p&gt;
&lt;h3 id=&#34;youtubehttpsgithubcomkkdaiyoutube&#34;&gt;&lt;a href=&#34;https://github.com/kkdai/youtube&#34;&gt;youtube&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个 Go 语言写的 Youtube 视频下载工具，youtube-dl 的替代品。&lt;/p&gt;
&lt;h3 id=&#34;hoppscotchhttpsgithubcomhoppscotchhoppscotch&#34;&gt;&lt;a href=&#34;https://github.com/hoppscotch/hoppscotch&#34;&gt;hoppscotch&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/bc7e0ac74ff0429c20f50a33b0354c9e22785bb2ed1692f4aa583c21b938c762/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031302f6267323032303130323830312e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/bc7e0ac74ff0429c20f50a33b0354c9e22785bb2ed1692f4aa583c21b938c762/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031302f6267323032303130323830312e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;一个开源的 Postman 替代品，调试 HTTP 请求的在线工具。&lt;/p&gt;
&lt;h3 id=&#34;draw-on-pdfhttpswwwgoodannotationscomtoolsdraw-on-pdf&#34;&gt;&lt;a href=&#34;https://www.goodannotations.com/tools/draw-on-pdf&#34;&gt;Draw On PDF&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个在 PDF 文件上作图的在线工具。&lt;/p&gt;
&lt;h3 id=&#34;vega-litehttpsgithubcomvegavega-lite&#34;&gt;&lt;a href=&#34;https://github.com/vega/vega-lite&#34;&gt;Vega-Lite&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/9d1fc1998c6a592e32b664e1fe2da6b51dc01341cf2ca2a9cc8c7ded861e50dc/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031302f6267323032303130333030322e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/9d1fc1998c6a592e32b664e1fe2da6b51dc01341cf2ca2a9cc8c7ded861e50dc/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031302f6267323032303130333030322e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;一个制作互动式图表的 JS 库。&lt;/p&gt;
&lt;h3 id=&#34;中文技术文档写作风格指南httpszh-style-guidereadthedocsiozh_cnlatestindexhtml&#34;&gt;&lt;a href=&#34;https://zh-style-guide.readthedocs.io/zh_CN/latest/index.html&#34;&gt;中文技术文档写作风格指南&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者综合了在互联网上能找到的各家中文文案风格指南、国外大厂成熟的文档规范、以及国标建议的出版要求，编写了这份超过 30 页的开源文档。&lt;/p&gt;
&lt;h3 id=&#34;计算机科学的数学基础httpscoursescsailmitedu6042spring17mcspdfmathematics-for-computer-science&#34;&gt;&lt;a href=&#34;https://courses.csail.mit.edu/6.042/spring17/mcs.pdf&#34;&gt;计算机科学的数学基础&lt;/a&gt;（Mathematics for Computer Science）&lt;/h3&gt;
&lt;p&gt;麻省理工学院的初等数学教材。&lt;/p&gt;
&lt;h3 id=&#34;coding-for-crosswordshttpswwwyoutubecomplaylistlistplg4aoophfzwz7llifowo-1wgmvicq-mfw&#34;&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PLg4AoophFZWZ7Llifowo-1WGMVICq-mfw&#34;&gt;Coding for Crosswords&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Youtube 上面的一个 C++ 语言的英文视频教程，教初学者使用 C++ 写一个填词游戏。&lt;/p&gt;
&lt;h3 id=&#34;编写解释器httpcraftinginterpreterscomcontentshtmlcrafting-interpreters&#34;&gt;&lt;a href=&#34;http://craftinginterpreters.com/contents.html&#34;&gt;编写解释器&lt;/a&gt;（Crafting interpreters）&lt;/h3&gt;
&lt;p&gt;何开发编程语言的解释器的英文开源教材，相当于教你怎么发明一种自己的编程语言。&lt;/p&gt;
&lt;h3 id=&#34;拉斐尔蒙蒂的雕塑httpswwwpinterestcomauannieodynechiffon&#34;&gt;&lt;a href=&#34;https://www.pinterest.com.au/annieOdyne/chiffon/&#34;&gt;拉斐尔·蒙蒂的雕塑&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;拉斐尔·蒙蒂（Rafaelle Monti）是19世纪的意大利雕塑家。他有一个很惊人的本领，就是能把大理石雕塑出透明的面纱效果。&lt;/p&gt;
&lt;p&gt;下面的面纱全部都是大理石雕塑。&lt;/p&gt;
&lt;h3 id=&#34;华氏度与摄氏度的简单估算httpsdyno-mightgithubio20201030temperature-conversion-for-the-lazy-and-simple-minded&#34;&gt;&lt;a href=&#34;https://dyno-might.github.io/2020/10/30/temperature-conversion-for-the-lazy-and-simple-minded/&#34;&gt;华氏度与摄氏度的简单估算&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;华氏度与摄氏度的转换，有一个简单的估算方法。有三个华氏度，颠倒个位数和十位数，约等于对应的摄氏度。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;40 华氏度 ≈ 04 摄氏度&lt;/li&gt;
&lt;li&gt;61 华氏度 ≈ 16 摄氏度&lt;/li&gt;
&lt;li&gt;82 华氏度 ≈ 28 摄氏度&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/5f905abdf93d69d5a985a7627f12e0afebddc09b7e06ffd40e4db2c8418fec35/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031302f6267323032303130333131322e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/5f905abdf93d69d5a985a7627f12e0afebddc09b7e06ffd40e4db2c8418fec35/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031302f6267323032303130333131322e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;因此，记住这三个数字（40、61、82），就可以简单估算。比如，71 华氏度介于 61°F 和 82°F 之间，所以对应的摄氏度大约介于16°C和28°C之间。&lt;/p&gt;
&lt;h3 id=&#34;地球工程是什么httpswwwtechnologyreviewcom20190809615what-is-geoengineering-and-why-should-you-care-climate-change-harvard&#34;&gt;&lt;a href=&#34;https://www.technologyreview.com/2019/08/09/615/what-is-geoengineering-and-why-should-you-care-climate-change-harvard/&#34;&gt;地球工程是什么？&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;原刊于《MIT 技术评论》杂志&lt;/p&gt;
&lt;h3 id=&#34;从头写一个-deno-的-bittorrent-下载器httpscjtingme20201031tinytorrent-a-deno-bt-downloader&#34;&gt;&lt;a href=&#34;https://cjting.me/2020/10/31/tinytorrent-a-deno-bt-downloader/&#34;&gt;从头写一个 Deno 的 BitTorrent 下载器&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;介绍 BT 下载的实现细节，有 JavaScript 代码的下载客户端示例。&lt;/p&gt;
&lt;h3 id=&#34;浏览器的人脸检测能力httpsckeditorcombloghow-to-detect-human-faces-and-other-shapes-in-javascript&#34;&gt;&lt;a href=&#34;https://ckeditor.com/blog/How-to-detect-human-faces-and-other-shapes-in-JavaScript/&#34;&gt;浏览器的人脸检测能力&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Chrome 浏览器已经支持 Shape Detection API，直接调用这个 API，不用加载任何外部库，就可以通过浏览器识别人脸和二维码。&lt;/p&gt;
&lt;h3 id=&#34;git-的作者auhtor与提交者commmitter的差异httpsblogdarkthreadnetbloggit-author-n-committer&#34;&gt;&lt;a href=&#34;https://blog.darkthread.net/blog/git-author-n-committer/&#34;&gt;Git 的作者（Auhtor）与提交者（Commmitter）的差异&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个 Git 的小细节。Git 提交的元信息里面，有“作者”（author）字段和“提交者”（committer）两个字段，它们有什么区别？&lt;/p&gt;
&lt;h3 id=&#34;presentahttpsgithubcompresenta-softwarepresenta-lib&#34;&gt;&lt;a href=&#34;https://github.com/presenta-software/presenta-lib&#34;&gt;presenta&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个 JS 的网页幻灯片库，特色是可定制的选项多。&lt;/p&gt;
&lt;h3 id=&#34;对象的方法可以理解为发消息httpssoftwareengineeringstackexchangecomquestions417896what-benefit-do-we-get-by-thinking-of-objects-as-sending-messages-to-each-other&#34;&gt;&lt;a href=&#34;https://softwareengineering.stackexchange.com/questions/417896/what-benefit-do-we-get-by-thinking-of-objects-as-sending-messages-to-each-other&#34;&gt;对象的方法可以理解为发消息&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;StackOverflow 的问答。面向对象编程（OOP）的一种理解，将对象的方法视为向对象发消息，我觉得很有启发。比如，&lt;code&gt;car1.stop()&lt;/code&gt;可以理解成向对象&lt;code&gt;car1&lt;/code&gt;发送消息&lt;code&gt;stop&lt;/code&gt;。&lt;/p&gt;
&lt;h3 id=&#34;snake-classichttpscodeguppycomcodehtmladsnk_adrian&#34;&gt;&lt;a href=&#34;https://codeguppy.com/code.html?ad/snk_adrian&#34;&gt;Snake Classic&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个 JS 代码演示，网页版小游戏《贪吃蛇》。&lt;/p&gt;
&lt;h3 id=&#34;oxhttpsgithubcomcurlpipeox&#34;&gt;&lt;a href=&#34;https://github.com/curlpipe/ox&#34;&gt;ox&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个命令行的代码编辑器，具有部分 IDE 功能，使用 Rust 语言编写。&lt;/p&gt;
&lt;h3 id=&#34;bucket-brigade-singinghttpswwwjefftkcompbucket-brigade-singing&#34;&gt;&lt;a href=&#34;https://www.jefftk.com/p/bucket-brigade-singing&#34;&gt;Bucket Brigade Singing&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个实验性的在线工具，让大家远程一起唱歌，解决疫情期间无法唱卡拉 OK 的问题。&lt;/p&gt;
&lt;h3 id=&#34;vue-hooks-formhttpsgithubcombeizhedenglongvue-hooks-form&#34;&gt;&lt;a href=&#34;https://github.com/beizhedenglong/vue-hooks-form&#34;&gt;Vue Hooks Form&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Vue 3 的一个 Hook，用来制作表单。&lt;/p&gt;
&lt;h3 id=&#34;svgpatheditorhttpsgithubcomyqnnsvg-path-editor&#34;&gt;&lt;a href=&#34;https://github.com/Yqnn/svg-path-editor&#34;&gt;SvgPathEditor&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个开源的 SVG 图形路径编辑的在线工具。&lt;/p&gt;
&lt;h3 id=&#34;线性代数httpshefferonnetlinearalgebra&#34;&gt;&lt;a href=&#34;https://hefferon.net/linearalgebra/&#34;&gt;线性代数&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;《线性代数》的英文免费教材，针对初学者。&lt;/p&gt;
&lt;h3 id=&#34;protoschoolhttpsprotoschooltutorials&#34;&gt;&lt;a href=&#34;https://proto.school/tutorials&#34;&gt;ProtoSchool&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;该网站有各种原创的分布式互联网协议教程。&lt;/p&gt;
&lt;h3 id=&#34;2020美国总统选举可视化httpswwwanychartcomblog20201106election-maps-us-vote-live-results&#34;&gt;&lt;a href=&#34;https://www.anychart.com/blog/2020/11/06/election-maps-us-vote-live-results/&#34;&gt;2020美国总统选举可视化&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这个网页收集了美国各大媒体的2020总统选举的可视化设计。&lt;/p&gt;
&lt;h3 id=&#34;世界海底光缆httpswwwsubmarinecablemapcom&#34;&gt;&lt;a href=&#34;https://www.submarinecablemap.com/&#34;&gt;世界海底光缆&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;该网站是世界海底光缆的互动式地图。&lt;/p&gt;
&lt;h3 id=&#34;机器学习书单httpmatpalmcomblogcool_machine_learning_books&#34;&gt;&lt;a href=&#34;http://matpalm.com/blog/cool_machine_learning_books/&#34;&gt;机器学习书单&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者列出的机器学习入门的书单，一共20本左右。&lt;/p&gt;
&lt;h3 id=&#34;世界最大的潜艇httpsru-submarinelivejournalcom17486html&#34;&gt;&lt;a href=&#34;https://ru-submarine.livejournal.com/17486.html&#34;&gt;世界最大的潜艇&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;前苏联的941型核潜艇（北约称为台风级核潜艇）是世界最大的潜艇，长175米。&lt;/p&gt;
&lt;p&gt;它比排名第二的潜艇大出一倍，可以容纳160人在海底潜伏几个月。潜艇里面甚至还有游泳池。由于建造和维护费用太高，俄罗斯早在2012年就已经宣布，不再建造也不再更新这种核潜艇了。&lt;/p&gt;
&lt;p&gt;标题网址提供了这种潜艇的大量照片。&lt;/p&gt;
&lt;h3 id=&#34;c-语言的字符串连接解释httpsblogholbertonschoolcomcode-review-string-concatenation-in-c&#34;&gt;&lt;a href=&#34;https://blog.holbertonschool.com/code-review-string-concatenation-in-c/&#34;&gt;C 语言的字符串连接解释&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这篇文章解释了 C 语言的一个基础知识：两个字符串连接在一起，背后是怎么实现的？&lt;/p&gt;
&lt;h3 id=&#34;为什么手机热点的范围比路由器短httpssuperusercomquestions1595771why-is-the-range-of-a-mobile-wi-fi-hotspot-shorter-than-that-of-a-router&#34;&gt;&lt;a href=&#34;https://superuser.com/questions/1595771/why-is-the-range-of-a-mobile-wi-fi-hotspot-shorter-than-that-of-a-router&#34;&gt;为什么手机热点的范围比路由器短？&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;StackOverflow 的问答，算是一个小知识吧。手机热点的范围（10米）要比路由器（30米以上）小得多。这主要因为 Wifi 是双向通信，而手机天线太小，能收到的信号范围有限。&lt;/p&gt;
&lt;h3 id=&#34;rust-与-go-的比较httpsbitfieldconsultingcomgolangrust-vs-go&#34;&gt;&lt;a href=&#34;https://bitfieldconsulting.com/golang/rust-vs-go&#34;&gt;Rust 与 Go 的比较&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一篇比较 Rust 和 Go 各自特点的长文，站在学习者的角度，介绍它们如何用不同的方式处理计算机问题，不涉及具体的语法。&lt;/p&gt;
&lt;h3 id=&#34;傅立叶变换的交互式介绍httpwwwjezzamoncomfourierindexhtml&#34;&gt;&lt;a href=&#34;http://www.jezzamon.com/fourier/index.html&#34;&gt;傅立叶变换的交互式介绍&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;通过一系列动画，解释什么是傅立叶变换。&lt;/p&gt;
&lt;h3 id=&#34;如何使用工具写出可维护的-nodejs-代码httpsmediumcomteamzerolabs2020-node-js-quick-upgrade-guide-cf671a83f4e7&#34;&gt;&lt;a href=&#34;https://medium.com/teamzerolabs/2020-node-js-quick-upgrade-guide-cf671a83f4e7&#34;&gt;如何使用工具写出可维护的 Node.js 代码？&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文介绍使用各种工具（TypeScript、Prettier、Sentry、Prometheus等），提高 Node.js 代码的可维护性。&lt;/p&gt;
&lt;h3 id=&#34;广电砸下百亿的cmmb手持电视httpsfinancesinacomcntech2020-10-12doc-iivhuipp9118153shtml&#34;&gt;&lt;a href=&#34;https://finance.sina.com.cn/tech/2020-10-12/doc-iivhuipp9118153.shtml&#34;&gt;广电砸下百亿的CMMB手持电视&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;2006年10月，广电总局决定推广移动多媒体广播格式 CMMB，可以在手机上看电视。这是一个中国独有的标准，词首的 C 代表 China。前后一共投入超过100多亿，现在已经被淘汰了。作者在十多年后重新体验了一下 CMMB 设备看电视的感受。&lt;/p&gt;
&lt;h3 id=&#34;plasma-bigscreenhttpsplasma-bigscreenorg&#34;&gt;&lt;a href=&#34;https://plasma-bigscreen.org/&#34;&gt;Plasma Bigscreen&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;专供大屏幕电视的 Linux 系统，用户界面基于 KDE 桌面。这里有一篇&lt;a href=&#34;https://dot.kde.org/2020/03/26/plasma-tv-presenting-plasma-bigscreen&#34;&gt;介绍文章&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&#34;markdown-wasmhttpswwwinfoqcomnews202010markdown-wasm-fast-parser&#34;&gt;&lt;a href=&#34;https://www.infoq.com/news/2020/10/markdown-wasm-fast-parser/&#34;&gt;markdown-wasm&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;WebAssembly 版本的 markdown 解析器，比 JavaScript 写的解析器快两倍以上，而且体积很小（31KB）。&lt;/p&gt;
&lt;h3 id=&#34;winappshttpsgithubcomfmstratwinapps&#34;&gt;&lt;a href=&#34;https://github.com/Fmstrat/winapps&#34;&gt;winapps&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个在 Ubuntu 里面运行 Windows 应用的虚拟机，特点是 Windows 应用就像 Linux 的原生应用一样，直接运行，而不会出现 Windows 的系统环境。&lt;/p&gt;
&lt;h3 id=&#34;nvidia-patchhttpsgithubcomkeylasenvidia-patch&#34;&gt;&lt;a href=&#34;https://github.com/keylase/nvidia-patch&#34;&gt;nvidia-patch&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Nvidia 显示卡配合 FFmpeg 进行视频编码时，有并发数量限制（3路并发），这个补丁可以突破这一限制。&lt;/p&gt;
&lt;h3 id=&#34;lazykubehttpsgithubcomtnk-studiolazykube&#34;&gt;&lt;a href=&#34;https://github.com/TNK-Studio/lazykube&#34;&gt;lazykube&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;k8s 终端可视化管理器 。&lt;/p&gt;
&lt;h3 id=&#34;mdhttpsgithubcomdoocsmd&#34;&gt;&lt;a href=&#34;https://github.com/doocs/md&#34;&gt;md&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一款开源的微信公众号 Markdown 编辑器，基于 &lt;a href=&#34;https://github.com/lyricat/wechat-format&#34;&gt;wechat-format&lt;/a&gt; 进行了二次开发&lt;/p&gt;
&lt;h3 id=&#34;apijsonhttpsgithubcomtencentapijson&#34;&gt;&lt;a href=&#34;https://github.com/Tencent/APIJSON&#34;&gt;APIJSON&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;腾讯的官方开源项目，自动化 RESTful 接口生成。前端描述自己需要的 JSON 数据，后端自动生成接口和文档。&lt;/p&gt;
&lt;h3 id=&#34;fakerjshttpsgithubcommarakfakerjs&#34;&gt;&lt;a href=&#34;https://github.com/Marak/faker.js&#34;&gt;faker.js&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;根据你的需要，生成各种假数据，比如姓名、地址等，支持生成中文数据。&lt;/p&gt;
&lt;h3 id=&#34;postgresqlconf-详解httpspostgresqlconfendocparam&#34;&gt;&lt;a href=&#34;https://postgresqlco.nf/en/doc/param/&#34;&gt;postgresql.conf 详解&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;PostgreSQL 数据库的配置文件&lt;code&gt;postgresql.conf&lt;/code&gt;有270个参数，很难搞清楚该怎么设置。这个网站提供所有参数的详细解释。&lt;/p&gt;
&lt;h3 id=&#34;安卓学习路线图httpsroadmapshandroid&#34;&gt;&lt;a href=&#34;https://roadmap.sh/android&#34;&gt;安卓学习路线图&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这篇英语文章给出了安卓开发的学习路线图。&lt;/p&gt;
&lt;h3 id=&#34;ruby-学习指南httpspoignantguidebook&#34;&gt;&lt;a href=&#34;https://poignant.guide/book/&#34;&gt;Ruby 学习指南&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一本英文的 Ruby 语言学习小册子。作者这样解释他的写作目的：&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;“我来到书店，那里的 Java 书籍放满了一面墙，倒下来足以压垮我。我想写一本小小的 Ruby 书籍。它不会压跨你，而是像羽毛一样轻盈。这本书所以保持轻盈是有原因的：因为 Ruby 很容易学习。”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;机器学习的线性代数简介httpspabloinsentegithubiointro-linear-algebra&#34;&gt;&lt;a href=&#34;https://pabloinsente.github.io/intro-linear-algebra&#34;&gt;机器学习的线性代数简介&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一篇英语的长篇文章，通过 Python 语言学习线性代数。&lt;/p&gt;
&lt;h3 id=&#34;1961年-b-52-轰炸机空难httpsenwikipediaorgwiki1961_goldsboro_b-52_crash&#34;&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/1961_Goldsboro_B-52_crash&#34;&gt;1961年 B-52 轰炸机空难&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;RT.&lt;/p&gt;
&lt;h3 id=&#34;南非的钻石矿httpdillonmarshcomdiamondshtml&#34;&gt;&lt;a href=&#34;http://dillonmarsh.com/diamonds.html&#34;&gt;南非的钻石矿&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;南非的狄龙沼泽（Dillon Marsh）钻石矿，一共开采了760万克拉的钻石，相当于1.5吨。&lt;/p&gt;
&lt;h3 id=&#34;幸运公式httpsmsjabercomluck&#34;&gt;&lt;a href=&#34;https://msjaber.com/luck/&#34;&gt;幸运公式&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;It’s a multiplication of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;x&lt;/code&gt; is how much you are prepared, &lt;code&gt;y&lt;/code&gt; is how lucky you are.&lt;/p&gt;
&lt;p&gt;You are responsible for the &lt;code&gt;x&lt;/code&gt; part of the equation, the &lt;code&gt;y&lt;/code&gt; takes care of itself. If your preparation effort is zero, all the potential opportunities will be multiplied by zero and you will lose every one of them, no matter how big they were.&lt;/p&gt;
&lt;p&gt;The more prepared you are, the more lucky you become. It’s not because you are lucky, rather because you can multiply small opportunities by big factors.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This idea is inspired by Richard W. Hamming’s thoughts on luck, mentioned in his book, &lt;a href=&#34;https://msjaber.com/books/the-art-of-doing-science-and-engineering-learning-to-learn/&#34;&gt;The Art of Doing Science and Engineering&lt;/a&gt;. He walks through all the coincidences that led him to his discoveries. Those coincidences have occured for many people – none of them were prepared, only Hamming was.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Could you have discovered what Hamming did if you were in his position? Yes, only if you were prepared.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;密码泄漏到-github会发生什么httpsthreadreaderappcomthread1324360905237372929html&#34;&gt;&lt;a href=&#34;https://threadreaderapp.com/thread/1324360905237372929.html&#34;&gt;密码泄漏到 GitHub，会发生什么？&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;几天前，我做了一个小实验，故意生成了一个假的 AWS 密钥，将其提交到公共存储库，看看会发生什么。&lt;/p&gt;
&lt;p&gt;我先向 GitHub 推送。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;15:27，我推送了带有密钥的提交。&lt;/li&gt;
&lt;li&gt;15:34（7分钟后），我收到了 @GitGuardian 的电子邮件，通知我可能有密钥泄漏。&lt;/li&gt;
&lt;li&gt;15:38（11分钟后），有人开始拿这个密钥入侵我的账户。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;接下来的2小时内，我又收到了5条警报，分别来自德国、荷兰、英国和乌克兰。根据 User-Agent，入侵的脚本机器人使用 Python 和 Node.js SDK。&lt;/p&gt;
&lt;p&gt;接着，我又向 GitLab 推送。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;16:24，我推送了带有密钥的提交。&lt;/li&gt;
&lt;li&gt;17:26（62分钟后），第一次入侵来自法国。根据 User-Agent，入侵脚本使用了 Python SDK。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我没有从 GitLab 收到任何提醒或警告。我知道 GitLab 确实提供了此功能，可悲的是，它们仅适用于付费用户。&lt;/p&gt;
&lt;p&gt;结论：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;入侵者对 GitHub 的扫描多于 GitLab 。&lt;/li&gt;
&lt;li&gt;如果使用 GitHub，则应使用 @GitGuardian。&lt;/li&gt;
&lt;li&gt;如果使用 GitLab，最好升级到付费用户。&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;我开发-saas-的工具和服务httpsjakenycwordstools-and-services-i-use-to-run-my-saas&#34;&gt;&lt;a href=&#34;https://jake.nyc/words/tools-and-services-i-use-to-run-my-saas/&#34;&gt;我开发 SaaS 的工具和服务&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者列出了自己开发 SaaS 服务用到的各种工具和服务，包括前端工具和后端工具。&lt;/p&gt;
&lt;h3 id=&#34;开源项目维护者的九个阶段httpsnibblestewblogspotcom202011the-nine-phases-of-open-source-projecthtml&#34;&gt;&lt;a href=&#34;https://nibblestew.blogspot.com/2020/11/the-nine-phases-of-open-source-project.html&#34;&gt;开源项目维护者的九个阶段&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个成功的开源项目，它的维护者可能需要经历九个阶段，第一个阶段是发明家，最后一个阶段是光荣退休。&lt;/p&gt;
&lt;h3 id=&#34;如何在安卓手机检查屏幕截图httpsproandroiddevcomdetect-screenshots-in-android-7bc4343ddce1&#34;&gt;&lt;a href=&#34;https://proandroiddev.com/detect-screenshots-in-android-7bc4343ddce1&#34;&gt;如何在安卓手机检查屏幕截图？&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;有些安卓 App 不允许用户截图，实现方法很简单，就是检查 Screenshots 文件夹是否添加了新图像。&lt;/p&gt;
&lt;h3 id=&#34;如何用-podman-替代-dockerhttpsdevelopersredhatcomblog20201119transitioning-from-docker-to-podman&#34;&gt;&lt;a href=&#34;https://developers.redhat.com/blog/2020/11/19/transitioning-from-docker-to-podman/&#34;&gt;如何用 Podman 替代 Docker&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Podman 是 RedHat 公司开发的容器引擎，用来替代 Docker。本文是一篇简单的上手指南。&lt;/p&gt;
&lt;h3 id=&#34;用-js-写一个-js-解释器httpsjuejincnpost6898093501376905230&#34;&gt;&lt;a href=&#34;https://juejin.cn/post/6898093501376905230&#34;&gt;用 JS 写一个 JS 解释器&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文解释了 JS 解释器如何将源代码转换成 AST（抽象语法树），并给出了一个简单的、便于理解的解释器实现。&lt;/p&gt;
&lt;h3 id=&#34;your-first-github-commithttpswwwamitmerchantcomyour-first-commit-ever&#34;&gt;&lt;a href=&#34;https://www.amitmerchant.com/your-first-commit-ever/&#34;&gt;Your First GitHub Commit&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这个网站可以找出你的第一个 GitHub 提交。&lt;/p&gt;
&lt;h3 id=&#34;perfect-dark-modehttpsperfect-dark-modenetlifyapp&#34;&gt;&lt;a href=&#34;https://perfect-dark-mode.netlify.app/&#34;&gt;Perfect Dark Mode&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个 JS 库，一键切换网页的亮模式和暗模式。&lt;/p&gt;
&lt;h3 id=&#34;rectorhttpsgithubcomrectorphprector&#34;&gt;&lt;a href=&#34;https://github.com/rectorphp/rector/&#34;&gt;rector&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个 PHP 代码的编译器，可以将 8.x 版本代码编译成 7.x 版本，类似于 JavaScript 语言的 Babel 工具，这里还有一篇&lt;a href=&#34;https://blog.logrocket.com/transpiling-php-code-from-8-0-to-7-x-via-rector/&#34;&gt;介绍文章&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&#34;gpinghttpsgithubcomorfgping&#34;&gt;&lt;a href=&#34;https://github.com/orf/gping&#34;&gt;gping&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;ping 命令的替代品，带有图形界面。&lt;/p&gt;
&lt;h3 id=&#34;docker-指南httpswwwrobertcoopermedocker-guide&#34;&gt;&lt;a href=&#34;https://www.robertcooper.me/docker-guide&#34;&gt;Docker 指南&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一篇英文的 Docker 教程，解释最重要的一些概念，帮助读者学会使用 Docker 进行应用程序开发。&lt;/p&gt;
&lt;h3 id=&#34;废弃媒体博物馆httpsobsoletemediaorgidentify&#34;&gt;&lt;a href=&#34;https://obsoletemedia.org/identify/&#34;&gt;废弃媒体博物馆&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这个网站介绍各种已经淘汰的数据储存媒介，比如纸带、录像带、VCD、磁盘等等。&lt;/p&gt;
&lt;h3 id=&#34;play-with-gohttpsplay-with-godevguideshtml&#34;&gt;&lt;a href=&#34;https://play-with-go.dev/guides.html&#34;&gt;Play with Go&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Go 语言教程网站，提供一系列互动式入门教程。&lt;/p&gt;
&lt;h3 id=&#34;互联网围棋数据库httpiwdbcn&#34;&gt;&lt;a href=&#34;http://iwdb.cn/&#34;&gt;互联网围棋数据库&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;可以搜索棋手姓名，查找棋谱，进行下载或在线打谱&lt;/p&gt;
&lt;h3 id=&#34;linux-命令大全httpswwwyuquecombooksshare742ca8f6-34f3-41ef-b239-be00aaf0df31&#34;&gt;&lt;a href=&#34;https://www.yuque.com/books/share/742ca8f6-34f3-41ef-b239-be00aaf0df31&#34;&gt;Linux 命令大全&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个中文文档库，收集了 Linux 的各种命令，收集了命令的解释和配置项示例。&lt;/p&gt;
&lt;h3 id=&#34;编程之道中英双语版httpsgithubcomyikeketao-of-programming&#34;&gt;&lt;a href=&#34;https://github.com/yikeke/tao-of-programming&#34;&gt;《编程之道》中英双语版&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;美国资深程序员 Geoffrey James 在1987年写了《编程之道》（The Tao of Programming），曾一度成为美国程序员圈的文化热点，书中的佳句和故事被大家津津乐道。&lt;/p&gt;
&lt;h3 id=&#34;一家美国创业公司httpswwwcabletreadcom&#34;&gt;&lt;a href=&#34;https://www.cabletread.com/&#34;&gt;一家美国创业公司&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;设计了一个自带电线收纳的电脑桌，带有各种电线收纳槽，获得了红点设计奖。&lt;/p&gt;
&lt;h3 id=&#34;赔率是怎么回事httpscomputersciencealgorithmswordpresscom20201122exploiting-arbitrage-opportunities-in-betting-markets&#34;&gt;&lt;a href=&#34;https://computersciencealgorithms.wordpress.com/2020/11/22/exploiting-arbitrage-opportunities-in-betting-markets/&#34;&gt;赔率是怎么回事？&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;新闻媒体经常报道各种赔率，这到底有什么含义？本文用美国这次总统选举来解释赔率，并用例子讲解如何在不同网站之间套利。&lt;/p&gt;
&lt;h3 id=&#34;windows-linux-子系统-1-和-2-的区别httpsjmmvdev202011wsl-lost-potentialhtml&#34;&gt;&lt;a href=&#34;https://jmmv.dev/2020/11/wsl-lost-potential.html&#34;&gt;Windows Linux 子系统 1 和 2 的区别&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Windows Linux 子系统（简称 WSL）使得 Windows 可以运行 Linux 程序，但是它有两个版本，并且同时都在开发，它们有什么区别？&lt;/p&gt;
&lt;p&gt;简单说，WSL 1 是内核子系统，WSL 2 是 Linux 虚拟机。&lt;/p&gt;
&lt;h3 id=&#34;apache-jmeterhttpsjmeterapacheorg&#34;&gt;&lt;a href=&#34;https://jmeter.apache.org/&#34;&gt;Apache JMeter&lt;/a&gt;&lt;/h3&gt;
&lt;h3 id=&#34;windows-linux-子系统-1-和-2-的区别httpsjmmvdev202011wsl-lost-potentialhtml-1&#34;&gt;&lt;a href=&#34;https://jmmv.dev/2020/11/wsl-lost-potential.html&#34;&gt;Windows Linux 子系统 1 和 2 的区别&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Windows Linux 子系统（简称 WSL）使得 Windows 可以运行 Linux 程序，但是它有两个版本，并且同时都在开发，它们有什么区别？&lt;/p&gt;
&lt;p&gt;简单说，WSL 1 是内核子系统，WSL 2 是 Linux 虚拟机。&lt;/p&gt;
&lt;h3 id=&#34;chrome-浏览器的-css-概览面板httpsumaarcomdev-tips240-css-overview-improved&#34;&gt;&lt;a href=&#34;https://umaar.com/dev-tips/240-css-overview-improved/&#34;&gt;Chrome 浏览器的 CSS 概览面板&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Chrome 浏览器引入了一项试验性功能，在开发者工具里面提供 CSS 样式表的概况统计。&lt;/p&gt;
&lt;h3 id=&#34;我放弃-serverless改用-ruby-on-railshttpsfranticimback-to-rails&#34;&gt;&lt;a href=&#34;https://frantic.im/back-to-rails&#34;&gt;我放弃 Serverless，改用 Ruby on Rails&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者原先使用 Serverless，感到有许多不满意的地方，就写了这篇文章解释为什么他要转到传统的 Ruby on Rails。&lt;/p&gt;
&lt;h3 id=&#34;git-的空树httpsfloatingoctothorpeuk2017empty-trees-in-githtml&#34;&gt;&lt;a href=&#34;https://floatingoctothorpe.uk/2017/empty-trees-in-git.html&#34;&gt;Git 的空树&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;任何一个 Git 仓库，都包含一个相同的对象（哈希为&lt;code&gt;4b82...4904&lt;/code&gt;），指向一个空树（empty tree），这是为什么？&lt;/p&gt;
&lt;h3 id=&#34;popperhttpspopperjsorg&#34;&gt;&lt;a href=&#34;https://popper.js.org/&#34;&gt;Popper&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个工具提示和弹出框的 JS 库。&lt;/p&gt;
&lt;h3 id=&#34;hutoolhttpsgithubcomloolyhutool&#34;&gt;&lt;a href=&#34;https://github.com/looly/hutool/&#34;&gt;hutool&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个小而全的 Java 工具类库，通过静态方法封装，并提供详细完整的中文文档和注释，使Java拥有函数式语言般的优雅。&lt;/p&gt;
&lt;h3 id=&#34;furionhttpsmonksoulgiteeiofurion&#34;&gt;&lt;a href=&#34;https://monksoul.gitee.io/furion/&#34;&gt;Furion&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个基于 .Net 5 的 Web 框架。&lt;/p&gt;
&lt;h3 id=&#34;notion-clonehttpsgithubcomkonstantinmuensternotion-clone&#34;&gt;&lt;a href=&#34;https://github.com/konstantinmuenster/notion-clone&#34;&gt;Notion Clone&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个 Notion 的开源克隆，提供在线的笔记管理功能。&lt;/p&gt;
&lt;h3 id=&#34;raindrophttpsraindropio&#34;&gt;&lt;a href=&#34;https://raindrop.io/&#34;&gt;Raindrop&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个跨平台的网络书签管理器。&lt;/p&gt;
&lt;h3 id=&#34;bundlephobiahttpsbundlephobiacom&#34;&gt;&lt;a href=&#34;https://bundlephobia.com/&#34;&gt;BundlePhobia&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个在线工具，分析 npm 软件包的体积和加载性能，比如 &lt;a href=&#34;https://bundlephobia.com/result?p=lodash@4.17.20&#34;&gt;lodash@4.17.20&lt;/a&gt; 的体积是69.9kB，2G 网络下载需要0.81秒。&lt;/p&gt;
&lt;h3 id=&#34;bladeshttpswwwgetbladesorg&#34;&gt;&lt;a href=&#34;https://www.getblades.org/&#34;&gt;Blades&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个 Rust 语言写的静态网站生成器，速度极快，号称比 Hugo 快10倍。&lt;/p&gt;
&lt;h3 id=&#34;profileiohttpsgithubcomacrlakshmanprofileio&#34;&gt;&lt;a href=&#34;https://github.com/acrlakshman/profileio&#34;&gt;profileio&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个 Github actions 模板工具，用来生成个人简历页面和 PDF 文件。&lt;/p&gt;
&lt;h3 id=&#34;psql-教程和备忘录httpstomcamgithubiopostgres&#34;&gt;&lt;a href=&#34;https://tomcam.github.io/postgres/&#34;&gt;psql 教程和备忘录&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;psql 是 PostgreSQL 数据库的官方命令行客户端，本文是它的一篇简明教程。&lt;/p&gt;
&lt;h3 id=&#34;150分钟学会-perl-语言httpsqntmorgperl_en&#34;&gt;&lt;a href=&#34;https://qntm.org/perl_en&#34;&gt;150分钟学会 Perl 语言&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这篇 Perl 教程写过那些不想读官方文档的人，目标是写得尽量短，但又不会太短，包括了足够的学习内容。&lt;/p&gt;
&lt;h3 id=&#34;2020年度-js13k-games-竞赛httpsgithubblog2020-10-11-top-ten-games-from-the-js13k-2020-competition&#34;&gt;&lt;a href=&#34;https://github.blog/2020-10-11-top-ten-games-from-the-js13k-2020-competition/&#34;&gt;2020年度 JS13K Games 竞赛&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;JS13K Games 竞赛要求使用 JavaScript 语言，写一个不超过 13KB 的 HTML5 游戏。一共有220多个作品参赛，这里是前10名。大家可以去玩一下，效果非常惊艳。&lt;/p&gt;
&lt;h3 id=&#34;机器学习工程httpwwwmlebookcom&#34;&gt;&lt;a href=&#34;http://www.mlebook.com/&#34;&gt;机器学习工程&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;机器学习工程（Machine Learning Engineering）这个词，是指使用软件工程原理和数据科学知识，构建机器学习模型。这本英文电子书是入门教程。&lt;/p&gt;
&lt;h3 id=&#34;2020年的100项最佳发明httpstimecomcollectionbest-inventions-2020&#34;&gt;&lt;a href=&#34;https://time.com/collection/best-inventions-2020/&#34;&gt;2020年的100项最佳发明&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;《时代》杂志评选的今年100项最佳发明。&lt;/p&gt;
&lt;h3 id=&#34;最齐全的笔记本httpsexpanscapecomthe-aurora-7-prototypethe-story-of-the-aurora-7&#34;&gt;&lt;a href=&#34;https://expanscape.com/the-aurora-7-prototype/the-story-of-the-aurora-7/&#34;&gt;最齐全的笔记本&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一家英国公司做出了史上功能最齐全的笔记本，桌面电脑能够包含的组件，它都包含：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;7个屏幕，其中4个是17寸 4K 屏幕&lt;/li&gt;
&lt;li&gt;4个网卡，其中2个是无线网卡&lt;/li&gt;
&lt;li&gt;104键的背光键盘&lt;/li&gt;
&lt;li&gt;128GB 内存&lt;/li&gt;
&lt;li&gt;16TB SSD 硬盘&lt;/li&gt;
&lt;li&gt;独立的系统状态监视器&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;dweb-协议栈httpsblogspacestoragepoststhe-dweb-protocols-behind-space&#34;&gt;&lt;a href=&#34;https://blog.space.storage/posts/the-dweb-protocols-behind-space&#34;&gt;Dweb 协议栈&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Dweb 指的是分布式互联网，不再存在中央服务器，本文介绍它涉及的各种协议。&lt;/p&gt;
&lt;h3 id=&#34;react-防止-xss-攻击的注意点httpsreactchristmas20203&#34;&gt;&lt;a href=&#34;https://react.christmas/2020/3&#34;&gt;React 防止 XSS 攻击的注意点&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;XSS 指的是代码注入，这是一种常见的攻击。React 框架本身带有防 XSS 的机制，但是开发时还是有一些地方需要注意。&lt;/p&gt;
&lt;h3 id=&#34;我面试谷歌伦敦-sre-的经验和教训httpsjustyycomarchives45126&#34;&gt;&lt;a href=&#34;https://justyy.com/archives/45126&#34;&gt;我面试谷歌伦敦 SRE 的经验和教训&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者5年前接到过谷歌的面试邀请，当时问了一道队列+哈希表的题，可惜当时水平太差连第一面45分钟的 coding 都没过。再后来这几年一直投, 甚至去年找朋友内推都没法过简历关。&lt;/p&gt;
&lt;h3 id=&#34;css-的竖行横书组合httpwwwdeathghostcnarticlecss86&#34;&gt;&lt;a href=&#34;http://www.deathghost.cn/article/css/86&#34;&gt;CSS 的竖行横书组合&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/b962853d206c469dd255e0e7f0dd6f712a9ca663c2f8ec07abffa3214aa222b0/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031322f6267323032303132303930312e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/b962853d206c469dd255e0e7f0dd6f712a9ca663c2f8ec07abffa3214aa222b0/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031322f6267323032303132303930312e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;CSS 可以做到中文竖排，并且内部数字是横排的效果（上图）。&lt;/p&gt;
&lt;h3 id=&#34;20个有争议的编程观点httpsprogrammersblogoverflowcom20120820-controversial-programming-opinions&#34;&gt;&lt;a href=&#34;https://programmers.blogoverflow.com/2012/08/20-controversial-programming-opinions/&#34;&gt;20个有争议的编程观点&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文总结了 StackOverflow 上面20个最有争议的编程观点，比如“对于优秀的软件设计，使用设计模式弊大于利”。&lt;/p&gt;
&lt;h3 id=&#34;nonstophttpsgithubcomyuxiaoy1nonstop&#34;&gt;&lt;a href=&#34;https://github.com/yuxiaoy1/nonstop&#34;&gt;nonstop&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个浏览器插件，可以规避知乎、微博、简书上面的外部链接跳转的确认页面，自动跳转到外部网址。&lt;/p&gt;
&lt;h3 id=&#34;screenityhttpsgithubcomalyssaxuuscreenity&#34;&gt;&lt;a href=&#34;https://github.com/alyssaxuu/screenity&#34;&gt;screenity&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;功能强大的 Chrome 浏览器录屏插件。&lt;/p&gt;
&lt;h3 id=&#34;texmehttpsgithubcomsusamtexme&#34;&gt;&lt;a href=&#34;https://github.com/susam/texme&#34;&gt;texme&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个 JS 库，可以将 Markdown 自动渲染成网页内容。&lt;/p&gt;
&lt;h3 id=&#34;dumpster-firehttpsheysciencedumpster-fire&#34;&gt;&lt;a href=&#34;https://hey.science/dumpster-fire/&#34;&gt;dumpster-fire&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这个网站挺好玩，你给它发 Email，它会打印出来，自动点火烧掉，全程直播。&lt;/p&gt;
&lt;h3 id=&#34;busterhttpsgithubcomdessantbuster&#34;&gt;&lt;a href=&#34;https://github.com/dessant/buster&#34;&gt;buster&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;浏览器插件，使用语音识别完成 reCAPTCHA 验证码。&lt;/p&gt;
&lt;h3 id=&#34;rufflehttpsrufflers&#34;&gt;&lt;a href=&#34;https://ruffle.rs/&#34;&gt;ruffle&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个 Flash 模拟器的 WebAssembly 库。只要把这个库插入网页，就可以播放 Flash。&lt;/p&gt;
&lt;h3 id=&#34;replit-multiplayerhttpsreplitsitemultiplayer&#34;&gt;&lt;a href=&#34;https://repl.it/site/multiplayer&#34;&gt;repl.it Multiplayer&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;多人在线实时协同编程平台。&lt;/p&gt;
&lt;h3 id=&#34;regexperhttpsregexpercom&#34;&gt;&lt;a href=&#34;https://regexper.com/&#34;&gt;RegExper&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/3ab30798470c06adb3f641966443ef553c45e9a4602ec3aca5e769b0fc60b34b/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031322f6267323032303132303130382e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/3ab30798470c06adb3f641966443ef553c45e9a4602ec3aca5e769b0fc60b34b/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031322f6267323032303132303130382e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;该网站可以将正则表达式转成解释图片。&lt;/p&gt;
&lt;h3 id=&#34;this-x-does-not-existhttpsthisxdoesnotexistcom&#34;&gt;&lt;a href=&#34;https://thisxdoesnotexist.com/&#34;&gt;This X Does Not Exist&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这个网站收集各种 AI 生成的仿真项目，比如不存在的人、不存在的猫、不存在的房间等等。&lt;/p&gt;
&lt;h3 id=&#34;无限放大的插画&#34;&gt;无限放大的插画&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://zoomquilt.org/&#34;&gt;Zoomquilt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://zoomquilt2.com/&#34;&gt;Zoomquilt2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://arkadia.xyz/&#34;&gt;Arkadia Zoomquilt&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;unix-操作系统简介httpschsasankgithubioclassic_papersunix-time-sharing-systemhtml&#34;&gt;&lt;a href=&#34;https://chsasank.github.io/classic_papers/unix-time-sharing-system.html&#34;&gt;Unix 操作系统简介&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/96e60c2c6f6956cd6c27a91f625b24077230d988693491b8e011434bdf22e6a4/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031312f6267323032303131313530322e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/96e60c2c6f6956cd6c27a91f625b24077230d988693491b8e011434bdf22e6a4/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031312f6267323032303131313530322e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;丹尼斯·里奇和肯·汤普森1974年的原始论文，向世界介绍他们发明的新操作系统 Unix，在不长的篇幅里面，使用简单的语言，介绍 Unix 的一些核心设计，至今仍然有参考价值。&lt;/p&gt;
&lt;h3 id=&#34;文件格式维基httpfileformatsarchiveteamorgwikimain_page&#34;&gt;&lt;a href=&#34;http://fileformats.archiveteam.org/wiki/Main_Page&#34;&gt;文件格式维基&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这个维基网站收集了各种文件后缀名，详细解释每种文件的格式。&lt;/p&gt;
&lt;h3 id=&#34;hello-dnshttpspowerdnsorghello-dns&#34;&gt;&lt;a href=&#34;https://powerdns.org/hello-dns/&#34;&gt;Hello DNS&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个英文的 DNS 协议教程，介绍 DNS 协议的概念和细节。&lt;/p&gt;
&lt;h3 id=&#34;maven-手册httpswwwyuquecominuterbc7ikcngeqot&#34;&gt;&lt;a href=&#34;https://www.yuque.com/inuter/bc7ikc/ngeqot&#34;&gt;Maven 手册&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Maven 是 Java 项目的管理和构建工具，这是国人原创的针对新手的中文入门教程。&lt;/p&gt;
&lt;h3 id=&#34;database-glossaryhttpsbytebasecomdatabase-glossary&#34;&gt;&lt;a href=&#34;https://bytebase.com/database-glossary&#34;&gt;Database Glossary&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;A handy database term dictionary on the internet. We cover general database, MySQL, PostgreSQL as well as Bytebase specific topics.&lt;/p&gt;
&lt;h3 id=&#34;why-github-cant-host-the-linux-kernel-communityhttpsblogffwllch201708github-why-cant-host-the-kernelhtmlspma2c6h12873639007b233505pk2npr&#34;&gt;&lt;a href=&#34;https://blog.ffwll.ch/2017/08/github-why-cant-host-the-kernel.html?spm=a2c6h.12873639.0.0.7b233505Pk2NpR&#34;&gt;Why Github can&amp;rsquo;t host the Linux Kernel Community&lt;/a&gt;&lt;/h3&gt;
&lt;h3 id=&#34;空图书馆httpsenwikipediaorgwikithe_empty_library&#34;&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/The_Empty_Library&#34;&gt;空图书馆&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;德国柏林的倍倍尔广场上，有一个装置艺术品，叫做“空图书馆”，是一组空的地下白色书柜。这是为了提醒人们不要忘记，1933年纳粹在这个广场上烧毁犹太人和马克思的书籍。地下空间的大小相当于2万本书籍，跟当时烧毁的数量相仿。这个装置跟地面齐平，白天很难发现，晚上亮灯才能看到。装置内部装有空调，保持跟外部同样温度，防止玻璃窗上出现水汽。&lt;/p&gt;
&lt;h3 id=&#34;如果一个冬夜你在俄罗斯的郊区httpswwwcalvertjournalcomarticlesshow11066this-new-video-game-lets-you-do-nothing-in-a-suburban-russian-tower-block&#34;&gt;&lt;a href=&#34;https://www.calvertjournal.com/articles/show/11066/this-new-video-game-lets-you-do-nothing-in-a-suburban-russian-tower-block&#34;&gt;如果一个冬夜，你在俄罗斯的郊区&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;去年，两个俄罗斯程序员开发了一款非常独特的游戏。&lt;/p&gt;
&lt;p&gt;这个游戏没有任何情节、任何目标，甚至也没有任何人物，只有玩家自己。游戏只做了一件事，就是逼真地还原了一个下着鹅毛大雪的冬夜，位于俄罗斯郊区的一片住宅区平淡无奇的生活环境。&lt;/p&gt;
&lt;p&gt;游戏开始时就是一个黑夜，你会发现自己在俄罗斯一个普通郊区的一间小公寓里面，灯光黯淡，屋里空无一人。&lt;/p&gt;
&lt;p&gt;你从窗户望出去，看到白雪覆盖的庭院，在黑暗里被路灯和商店冷清的霓虹灯照亮。你打开厨房的电灯开关，尝试烤面包、煮鸡蛋。然后，你打开收音机，听了一会，开始洗澡。接着，你取出垃圾，离开公寓，到空无一人的庭院里散步。&lt;/p&gt;
&lt;p&gt;街道拐角处的商店和美发店都关门了，路上空无一人。实际上，无论你走到哪里，都看不到任何人。&lt;/p&gt;
&lt;p&gt;这个游戏其实只是一个“沙盒”，让玩家在一个虚拟环境里面自由漫游。开发者说游戏目的就是传达“后苏联时代俄罗斯普通人的悲伤生活。……没有什么在等你，没有机会离开，没有冒险的可能，生活中没有任何令人惊奇的事件。”&lt;/p&gt;
&lt;p&gt;该游戏可以在 Steam 平台&lt;a href=&#34;https://store.steampowered.com/app/1003360/___ITS_WINTER/&#34;&gt;购买&lt;/a&gt;，价格是人民币37元。&lt;/p&gt;
&lt;h3 id=&#34;自然杂志2020年十佳科学照片httpswwwnaturecomimmersived41586-020-03436-5indexhtml&#34;&gt;&lt;a href=&#34;https://www.nature.com/immersive/d41586-020-03436-5/index.html&#34;&gt;《自然》杂志：2020年十佳科学照片&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://camo.githubusercontent.com/23571d0fda4266cff7bcb1934e142b0f1114f015a7f57bd72f0e37247e153c10/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031322f6267323032303132313530322e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;《自然》杂志评选出的2020年十佳科学照片。上图是沙特阿拉伯的科学家发明的太阳能电池，又轻又薄，可以放在肥皂泡上。&lt;/p&gt;
&lt;h3 id=&#34;2020美国程序员薪资报告httpswwwlevelsfyi2020&#34;&gt;&lt;a href=&#34;https://www.levels.fyi/2020/&#34;&gt;2020美国程序员薪资报告&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;levels.fyi 又公布了一年一度的美国程序员薪资报告，有很多数据，感兴趣的朋友可以看看。上图是初级工程师/程序员薪资最高的公司，真是很高的报酬。&lt;/p&gt;
&lt;h3 id=&#34;剖析最简单的-c-语言-hello-worldhttpscjtingme20201210tiny-x64-helloworld&#34;&gt;&lt;a href=&#34;https://cjting.me/2020/12/10/tiny-x64-helloworld/&#34;&gt;剖析最简单的 C 语言 Hello World&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者讲解一个最简单 C 语言 Hello World 程序，底层到底发生了什么。这个程序 gcc 编译后是 16KB，作者设法把它简化到170字节。&lt;/p&gt;
&lt;h3 id=&#34;保护你的-env-文件httpstatooine-sunsetbotondonline2020-12-06-protect-your-dotenv&#34;&gt;&lt;a href=&#34;https://tatooine-sunset.botond.online/2020-12-06-protect-your-dotenv/&#34;&gt;保护你的 .env 文件&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;互联网黑客行为非常猖獗。作者上线了一个小网站，10个小时内就收到了许多可疑请求，其中就有人在尝试读取环境变量 .env 文件。&lt;/p&gt;
&lt;h3 id=&#34;使用-github-issues-的数据生成静态网站httpsshazownetpostsgithub-issues-as-a-hugo-frontend&#34;&gt;&lt;a href=&#34;https://shazow.net/posts/github-issues-as-a-hugo-frontend/&#34;&gt;使用 GitHub Issues 的数据生成静态网站&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者介绍如何将 GitHub Issues 用做编辑器和数据储存，通过 GitHub Actions 和 Netlify 生成一个静态网站。&lt;/p&gt;
&lt;h3 id=&#34;如何自动生成社交媒体的网页题图httpswwwryanfillercomblogautomatic-social-share-images&#34;&gt;&lt;a href=&#34;https://www.ryanfiller.com/blog/automatic-social-share-images/&#34;&gt;如何自动生成社交媒体的网页题图&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/0b39db82467b337eddcdc928cb55747a2b9aa91ca47a7126f53fb8984c00761e/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031322f6267323032303132303530342e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/0b39db82467b337eddcdc928cb55747a2b9aa91ca47a7126f53fb8984c00761e/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031322f6267323032303132303530342e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;很多社交媒体会对网址生成预览卡，作者讲述如何定制这种预览效果，并且为每个网址自动生成一张题图。&lt;/p&gt;
&lt;h3 id=&#34;我与-pythonhttpsneopythonicblogspotcom201604kings-day-speechhtml&#34;&gt;&lt;a href=&#34;https://neopythonic.blogspot.com/2016/04/kings-day-speech.html&#34;&gt;我与 Python&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/fb2113734161caf336d2d2866738a2c20b18559fc1031e333555a64afebfbc2d/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031322f6267323032303132303530352e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/fb2113734161caf336d2d2866738a2c20b18559fc1031e333555a64afebfbc2d/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031322f6267323032303132303530352e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这是 Python 语言创始人 Guido van Rossum 2016年的一次演讲，讲述自己的经历，以及如何创造出 Python 这种语言。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“我是一个书呆子，一个怪人，很可能患有自闭症。我成熟得很晚，26岁大学毕业，45岁结婚，60岁时有一个14岁的儿子。35岁时，我创建了一种程序设计语言，因此受到了一些关注。”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;tinycheckhttpsgithubcomkasperskylabtinycheck&#34;&gt;&lt;a href=&#34;https://github.com/KasperskyLab/TinyCheck&#34;&gt;TinyCheck&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;卡巴斯基实验室的产品，一个移动通信网关，用来中介智能手机与外界的网络通信，看看手机到底发出什么请求。&lt;/p&gt;
&lt;h3 id=&#34;antipodes-maphttpswwwantipodesmapcom&#34;&gt;&lt;a href=&#34;https://www.antipodesmap.com/&#34;&gt;Antipodes Map&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这个地图工具可以显示任意地点在地球另一边的对应地点，比如在上海打一个洞穿越地心，就会来到阿根廷的恩特雷里奥斯省。&lt;/p&gt;
&lt;h3 id=&#34;espialhttpsgithubcomjonschoningespial&#34;&gt;&lt;a href=&#34;https://github.com/jonschoning/espial&#34;&gt;Espial&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个自己架设的 Web 书签服务，支持多账户使用，底层使用 Sqlite3 数据库。&lt;/p&gt;
&lt;h3 id=&#34;electron-playgroundhttpsgithubcomtal-techelectron-playground&#34;&gt;&lt;a href=&#34;https://github.com/tal-tech/electron-playground&#34;&gt;electron-playground&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个 Electron 的学习工具，内置了各种可演示的示例，并且提供了演练场，几乎所有的代码都可以即时运行查看效果。&lt;/p&gt;
&lt;h3 id=&#34;depixhttpsgithubcombeurtschipperdepix&#34;&gt;&lt;a href=&#34;https://github.com/beurtschipper/Depix&#34;&gt;Depix&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;发布图片时，很多人喜欢使用马赛克隐去敏感信息，这个工具可以将打马赛克的文字还原。所以，隐藏信息尽量不要使用马赛克，最好是覆盖掉。&lt;/p&gt;
&lt;h3 id=&#34;watermark-videohttpsshotstackiodemowatermarker&#34;&gt;&lt;a href=&#34;https://shotstack.io/demo/watermarker/&#34;&gt;Watermark Video&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个开源的在线工具，可以为小视频加上水印图片。&lt;/p&gt;
&lt;h3 id=&#34;pronouncehttpsgithubcomfilipeishopronounce&#34;&gt;&lt;a href=&#34;https://github.com/filipeisho/pronounce&#34;&gt;pronounce&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个开源的浏览器插件，只要双击网页上的单词，就能听到这个词的发音，支持各种语言。&lt;/p&gt;
&lt;h3 id=&#34;mugleiohttpsmugleio&#34;&gt;&lt;a href=&#34;https://mugle.io/&#34;&gt;mugle.io&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;该网站提供 Youtube 上面没有版权保护的背景音乐下载，可以用于你自己的视频。&lt;/p&gt;
&lt;h3 id=&#34;regexlibhttpsregexlibcom&#34;&gt;&lt;a href=&#34;https://regexlib.com/&#34;&gt;RegExLib&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;该网站收集各种常用的正则表达式，比如搜索“email”，会返回961个正则表达式。&lt;/p&gt;
&lt;h3 id=&#34;ai-事故数据库httpsincidentdatabaseaisummariesincidents&#34;&gt;&lt;a href=&#34;https://incidentdatabase.ai/summaries/incidents&#34;&gt;AI 事故数据库&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;该网站收集各种人工智能 AI 产生的各种事故。&lt;/p&gt;
&lt;h3 id=&#34;covid-19-插图httpswwwpixeltruecomfrontliner-heroes&#34;&gt;&lt;a href=&#34;https://www.pixeltrue.com/frontliner-heroes&#34;&gt;Covid-19 插图&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;该网站提供24幅原创的 Covid-19 相关的插图，允许自由使用。&lt;/p&gt;
&lt;h3 id=&#34;命令行界面设计指南httpscligdev&#34;&gt;&lt;a href=&#34;https://clig.dev/&#34;&gt;命令行界面设计指南&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这份文档总结了一些设计规范，帮助你写出体验良好的命令行程序。&lt;/p&gt;
&lt;h3 id=&#34;梅森素数搜索项目httpswwwmersenneorgvarioushistoryphp&#34;&gt;&lt;a href=&#34;https://www.mersenne.org/various/history.php&#34;&gt;梅森素数搜索项目&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;梅森素数是可以表示成 2n - 1 的素数，目前已知有51个。从1997年开始，所有新的梅森素数都是由“互联网梅森素数大搜索”（GIMPS）项目进行分布式计算发现的。任何人都可以参与这个项目，将自己计算机的多余计算能力贡献出来。&lt;/p&gt;
&lt;h3 id=&#34;法罗群岛的海底隧道httpswwwestunlarfoenabout-the-tunnelsthe-eysturoy-tunnel&#34;&gt;&lt;a href=&#34;https://www.estunlar.fo/en/about-the-tunnels/the-eysturoy-tunnel/&#34;&gt;法罗群岛的海底隧道&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://camo.githubusercontent.com/e44491dad9a0d68f25a8ea71d9ea47ec314306f8a76ce1c72302bde1f16c658a/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031322f6267323032303132303431322e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;世界最大的腰果树httpsenwikipediaorgwikicashew_of_pirangi&#34;&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Cashew_of_Pirangi&#34;&gt;世界最大的腰果树&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://camo.githubusercontent.com/7b95285c643ffebfe024475d3c4c76e60f1aed0e9c6a1be9c4dd278035300d4b/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031322f6267323032303132303531302e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;伊尔-76的驾驶舱httpswwwthedrivecomthe-war-zone38140this-navigator-aboard-a-russian-il-76-looks-like-a-tie-fighter-pilot-from-star-wars&#34;&gt;&lt;a href=&#34;https://www.thedrive.com/the-war-zone/38140/this-navigator-aboard-a-russian-il-76-looks-like-a-tie-fighter-pilot-from-star-wars&#34;&gt;伊尔-76的驾驶舱&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;俄罗斯国防部最近发布了一张照片，是在运输机伊尔-76的驾驶舱拍摄的，看上去跟《星球大战》的剧照很像。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/9a019f5b3d01532d6c45f68ff7676ca0ee3683ce78b20eb5c2956b443bb909df/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031322f6267323032303132313530352e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/9a019f5b3d01532d6c45f68ff7676ca0ee3683ce78b20eb5c2956b443bb909df/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031322f6267323032303132313530352e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/4de9acc4e9c132976616de1b941e2b5d5dddf43cfe3f50313fceb7b5a03fbe78/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031322f6267323032303132313530342e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/4de9acc4e9c132976616de1b941e2b5d5dddf43cfe3f50313fceb7b5a03fbe78/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031322f6267323032303132313530342e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;下图是《星球大战》的剧照。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/03c7dfdf450966b9eab2d715b976870f4bbbfdd0d2316f0632c79ef8126a2e21/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031322f6267323032303132313530362e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/03c7dfdf450966b9eab2d715b976870f4bbbfdd0d2316f0632c79ef8126a2e21/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031322f6267323032303132313530362e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;泰瑟枪https99percentinvisibleorgepisodetom-swift-electric-rifle&#34;&gt;&lt;a href=&#34;https://99percentinvisible.org/episode/tom-swift-electric-rifle/&#34;&gt;泰瑟枪&lt;/a&gt;&lt;/h3&gt;
&lt;h3 id=&#34;vparkhttpswwwvparkiohome&#34;&gt;&lt;a href=&#34;https://www.vpark.io/home&#34;&gt;Vpark&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;旧金山一家创业公司推出360度 VR 旅行服务，用户选择一个旧金山的风景点，在指定时间导游会带你去参观。整个过程都是网络进行。&lt;/p&gt;
&lt;p&gt;导游使用360摄像机拍摄实时画面，通过 Youtube360 进行直播，用户在家里戴上 VR 眼镜收看直播。整个过程中，导游会提供实时解说，你还可以跟导游对话。这个服务的价格是，每小时39美元到59美元。&lt;/p&gt;
&lt;h3 id=&#34;空心光纤httpswwwwsjcomarticleshigh-frequency-traders-push-closer-to-light-speed-with-cutting-edge-cables-11608028200&#34;&gt;&lt;a href=&#34;https://www.wsj.com/articles/high-frequency-traders-push-closer-to-light-speed-with-cutting-edge-cables-11608028200&#34;&gt;空心光纤&lt;/a&gt;&lt;/h3&gt;
&lt;h3 id=&#34;保存时间最长的人类胚胎httpswwwbbccomnewsworld-us-canada-55164607&#34;&gt;&lt;a href=&#34;https://www.bbc.com/news/world-us-canada-55164607&#34;&gt;保存时间最长的人类胚胎&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;2020年10月，一个名叫莫莉·吉布森（Molly Gibson）的女婴在美国华盛顿州出生，但是科学意义上，这时她已经27岁了。因为她来自一枚27年前冷冻的胚胎。她现在的父母有不孕症，选择接受这枚没有遗传关系的、1992年10月冷冻的胚胎植入母亲的子宫，进行生育。这创下了胚胎冷冻时间最长、然后生育的世界记录。&lt;/p&gt;
&lt;h3 id=&#34;电动车无法普及httpwwwnbdcomcnarticles2020-12-231579335html&#34;&gt;&lt;a href=&#34;http://www.nbd.com.cn/articles/2020-12-23/1579335.html&#34;&gt;电动车无法普及&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;日前，丰田汽车的社长丰田章男公开表示，电动车是过度炒作，各国政府提出放弃汽油车，全面转向电动车是不现实的，只是一种作秀。原因是电动车会导致巨大的电力需求，全面转型成本巨大，并会将污染转移到发电环节。&lt;/p&gt;
&lt;p&gt;他以日本为例，日本的大部分电力都来自于煤炭和天然气，如果全面转向电动车，那么到了夏季尖峰用电时段，日本将面临“无电可用”的窘境，而建立全国的充电网络更是天价的花费。&lt;/p&gt;
&lt;p&gt;他的警告并非没有根据。特斯拉的超级充电桩，最大功率是 250kW，即每小时耗电250度。目前，中国国内功率最小的充电桩，也要达到 3.5kW，高于空调的耗电。如果居民晚上下班回家，同时在小区里为自己的电动车充电，电网确实可能无法负荷。&lt;/p&gt;
&lt;h3 id=&#34;哈萨克斯坦政府httpswwwengadgetcomtech-giants-browsers-block-kazakhstan-web-surveillance-080031499html要求国民在计算机上安装政府提供的根证书&#34;&gt;&lt;a href=&#34;https://www.engadget.com/tech-giants-browsers-block-kazakhstan-web-surveillance-080031499.html&#34;&gt;哈萨克斯坦政府&lt;/a&gt;要求国民，在计算机上安装政府提供的根证书&lt;/h3&gt;
&lt;p&gt;然后才能访问互联网。苹果、谷歌、微软、Mozilla 进行合作，只要发现该证书，就会提示访问不安全。&lt;/p&gt;
&lt;h3 id=&#34;法国httpsfrreuterscomarticleiduskbn28k0na对谷歌和亚马逊分别罚款1亿欧元和3500万欧元&#34;&gt;&lt;a href=&#34;https://fr.reuters.com/article/idUSKBN28K0NA&#34;&gt;法国&lt;/a&gt;对谷歌和亚马逊分别罚款1亿欧元和3500万欧元&lt;/h3&gt;
&lt;p&gt;理由是它们的网站事先未征求访问者的同意，就设置 Cookie。&lt;/p&gt;
&lt;h3 id=&#34;颗粒积木的妙用httpswwwcoolapkcomfeed23451115sharekeyzdy5oddkngvmotg2nwzkntu2mzi&#34;&gt;&lt;a href=&#34;https://www.coolapk.com/feed/23451115?shareKey=ZDY5ODdkNGVmOTg2NWZkNTU2MzI~&#34;&gt;颗粒积木的妙用&lt;/a&gt;&lt;/h3&gt;
&lt;h3 id=&#34;自然评选-2020-年度十大科学发现httpsmpweixinqqcomscvzjjoq87ftyjwrsno04yq&#34;&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/CVzJjOq87FTYjwRSno04yQ&#34;&gt;《自然》评选 2020 年度十大科学发现&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Nature 杂志评出的2020年度10大科学发现，包括压力使得头发变白的机制、首次观察到宇宙中的快速无线电爆发、大气层的臭氧空洞有修复迹象等等。&lt;/p&gt;
&lt;h3 id=&#34;2020年设计师工具调查报告httpsuxtoolscosurvey-2020&#34;&gt;&lt;a href=&#34;https://uxtools.co/survey-2020/&#34;&gt;2020年设计师工具调查报告&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;UXtools 对设计师的年度调查，各种工具的使用情况，上图是使用最多的 UI 设计软件，前五名依次是 Figma、Sketch、Adobe XD、Illustrator、Photoshop。&lt;/p&gt;
&lt;h3 id=&#34;如何找出-cdn-背后的主机真实-ip-地址httpssoatokblog20200509how-to-de-anonymize-scam-knock-off-sites-hiding-behind-cloudflare&#34;&gt;&lt;a href=&#34;https://soatok.blog/2020/05/09/how-to-de-anonymize-scam-knock-off-sites-hiding-behind-cloudflare/&#34;&gt;如何找出 CDN 背后的主机真实 IP 地址&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;网站启用了 CDN 以后，外部用户就看不到源站的真实 IP 地址了。本文介绍了一个小技巧，某些情况下可能有用。&lt;/p&gt;
&lt;h3 id=&#34;链接的-noopenernoreferrer-和-nofollow-设置httpsblogbhanutejadevnoopener-noreferrer-and-nofollow-when-to-use-them-how-can-these-prevent-phishing-attacks&#34;&gt;&lt;a href=&#34;https://blog.bhanuteja.dev/noopener-noreferrer-and-nofollow-when-to-use-them-how-can-these-prevent-phishing-attacks&#34;&gt;链接的 noopener，noreferrer 和 nofollow 设置&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;为了安全性，网页链接最好设置&lt;code&gt;rel=&amp;quot;noopener noreferrer nofollow&amp;quot;&lt;/code&gt;，本文介绍这三个值的作用。&lt;/p&gt;
&lt;h3 id=&#34;开源软件商业模式的死亡httpsjoemorrisonmediumcomdeath-of-an-open-source-business-model-62bc227a7e9b&#34;&gt;&lt;a href=&#34;https://joemorrison.medium.com/death-of-an-open-source-business-model-62bc227a7e9b&#34;&gt;开源软件商业模式的死亡&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;开源软件常见的商业模式是“软件开源 + 服务收费”，但是云服务商正在杀死这种模式。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果你免费提供软件，并且这种软件足够受欢迎，云服务商将不可避免地使用你的代码提供竞争性服务。他们会毫不留情地用自己的方法痛击你，在你的前院倾倒垃圾。而你的律师则站在你耳边低语，“什么也做不了。”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;标签details的一个作用httpsshksprmobiblog202012a-terrible-way-to-do-footnotes-in-html&#34;&gt;&lt;a href=&#34;https://shkspr.mobi/blog/2020/12/a-terrible-way-to-do-footnotes-in-html/&#34;&gt;标签&lt;!-- raw HTML omitted --&gt;的一个作用&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://camo.githubusercontent.com/7b7f34aeda3e683ee5228edce9055dbe2be5ac08f2ddc1d7731ae08632ff0bc5/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031322f6267323032303132313130322e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;作者提出，可以使用&lt;!-- raw HTML omitted --&gt;标签在网页里面添加脚注（上图）。&lt;/p&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h3 id=&#34;完善的-bash-脚本的最简单形式httpsbetterdevblogminimal-safe-bash-script-template&#34;&gt;&lt;a href=&#34;https://betterdev.blog/minimal-safe-bash-script-template/&#34;&gt;完善的 Bash 脚本的最简单形式&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文通过一个模板，介绍 Bash 脚本的基本知识，如何写出安全的、基本功能完善的脚本。&lt;/p&gt;
&lt;h3 id=&#34;如何使用-github-actions-发布到-github-pageshttpsitsopensourcecompublish-github-pages-with-github-actions&#34;&gt;&lt;a href=&#34;https://itsopensource.com/publish-github-pages-with-github-actions/&#34;&gt;如何使用 GitHub Actions 发布到 GitHub Pages&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个简单的教程，教你通过 GitHub Actions 构建一个静态博客，自动发布到 GitHub Pages。&lt;/p&gt;
&lt;h3 id=&#34;navigator-对象的实验性属性httpsumaarcomdev-tips242-considerate-javascript&#34;&gt;&lt;a href=&#34;https://umaar.com/dev-tips/242-considerate-javascript/&#34;&gt;Navigator 对象的实验性属性&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文介绍浏览器的 Navigator 对象的几个实验性属性，比如获取本机的内存、CPU 核心和网络连接类型。&lt;/p&gt;
&lt;h3 id=&#34;imgdiffhttpsgithubcomn7olkachevimgdiff&#34;&gt;&lt;a href=&#34;https://github.com/n7olkachev/imgdiff&#34;&gt;imgdiff&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;比较两张图片差异的命令行工具。&lt;/p&gt;
&lt;h3 id=&#34;browsertimehttpsgithubcomseanmiller802browsertime&#34;&gt;&lt;a href=&#34;https://github.com/seanmiller802/BrowserTime&#34;&gt;BrowserTime&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Chrome 浏览器的插件，显示一个仪表盘，分析你的浏览历史，显示你在哪些网站花费最多时间。&lt;/p&gt;
&lt;h3 id=&#34;ai-picture-restorerhttpshotpotairestore-picture&#34;&gt;&lt;a href=&#34;https://hotpot.ai/restore-picture&#34;&gt;AI Picture Restorer&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个在线工具，去除老照片的破损和折痕。&lt;/p&gt;
&lt;h3 id=&#34;cloudflare-pageshttpsblogcloudflarecomcloudflare-pages&#34;&gt;&lt;a href=&#34;https://blog.cloudflare.com/cloudflare-pages/&#34;&gt;Cloudflare Pages&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Cloudflare 推出的静态网站构建和托管服务&lt;/p&gt;
&lt;h3 id=&#34;geometrizehttpswwwgeometrizecouk&#34;&gt;&lt;a href=&#34;https://www.geometrize.co.uk/&#34;&gt;Geometrize&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个在线工具，将照片转成基于几何形状的水彩画。&lt;/p&gt;
&lt;h3 id=&#34;owncasthttpsgithubcomowncastowncast&#34;&gt;&lt;a href=&#34;https://github.com/owncast/owncast&#34;&gt;OwnCast&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个可以自己搭建的开源流媒体服务，用作视频的在线播放。&lt;/p&gt;
&lt;h3 id=&#34;tetrishttpsgithubcomk-vernooytetris&#34;&gt;&lt;a href=&#34;https://github.com/k-vernooy/tetris&#34;&gt;tetris&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;命令行的俄罗斯方块游戏。&lt;/p&gt;
&lt;h3 id=&#34;holiday-card-makerhttpsphotoroomcomholiday-card-maker&#34;&gt;&lt;a href=&#34;https://photoroom.com/holiday-card-maker/&#34;&gt;Holiday Card Maker&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个在线工具，上传肖像照，软件会自动去除背景，生成各种节日照片。&lt;/p&gt;
&lt;h3 id=&#34;恐龙的声音httpswwwgooglecomsearchqwhat-sound-does-a-dinosaur-make&#34;&gt;[恐龙的声音](&lt;a href=&#34;https://www.google.com/search?q=what&#34;&gt;https://www.google.com/search?q=what&lt;/a&gt; sound does a dinosaur make)&lt;/h3&gt;
&lt;p&gt;谷歌搜索 “what sound does a dinosaur make”（恐龙的声音是什么），网页就会显示一系列可以播放的动物叫声。&lt;/p&gt;
&lt;h3 id=&#34;elixirschool-博客的中文翻译httpsgithubcomcaicaishmilyelixirschool_blogs&#34;&gt;&lt;a href=&#34;https://github.com/caicaishmily/elixirschool_blogs&#34;&gt;ElixirSchool 博客的中文翻译&lt;/a&gt;&lt;/h3&gt;
&lt;h3 id=&#34;sre-学校httpslinkedingithubioschool-of-sre&#34;&gt;&lt;a href=&#34;https://linkedin.github.io/school-of-sre/&#34;&gt;SRE 学校&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Linkedin 工程团队专门写给新人的 SRE （站点可靠性工程）教程，介绍了一个 DevOps 工程师需要掌握的各种基础知识。&lt;/p&gt;
&lt;h3 id=&#34;计算机安全培训材料httpsopensecuritytraininginfotraininghtml&#34;&gt;&lt;a href=&#34;https://opensecuritytraining.info/Training.html&#34;&gt;计算机安全培训材料&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;该网站提供计算机安全方面完整的英文培训材料，共包含29节课&lt;/p&gt;
&lt;h3 id=&#34;免费的-python-英文书籍httpswwwpythonkitchencomlegally-free-python-books-list&#34;&gt;&lt;a href=&#34;https://www.pythonkitchen.com/legally-free-python-books-list/&#34;&gt;免费的 Python 英文书籍&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文整理了一张免费书籍清单，都是网上合法的 Python 学习资源，书目相当多&lt;/p&gt;
&lt;h3 id=&#34;瑞士的军事掩体httpswwwamusingplanetcom201507the-camouflaged-military-bunkers-ofhtml&#34;&gt;&lt;a href=&#34;https://www.amusingplanet.com/2015/07/the-camouflaged-military-bunkers-of.html&#34;&gt;瑞士的军事掩体&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;瑞士是一个中立国，但拥有强大的军事力量。阿尔卑斯山上遍布军事设施，并精心制作了掩体，以便融入周围的景观。&lt;/p&gt;
&lt;h3 id=&#34;世界末日时钟httpsenwikipediaorgwikidoomsday_clock&#34;&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Doomsday_Clock&#34;&gt;世界末日时钟&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;1945年，美国在日本投放了两颗原子弹，这引发了核战争引发世界末日的担忧。&lt;/p&gt;
&lt;p&gt;1947年，一些参与曼哈顿计划的核物理学家，在芝加哥大学出版了一本杂志《原子科学家公报》。封面上画了一个时钟，表示人类离世界末日正在倒计时。&lt;/p&gt;
&lt;p&gt;午夜零点表示世界末日，时钟的时间离零点还有7分钟。这个时钟因此称为“世界末日时钟”（Doomsday Clock）。&lt;/p&gt;
&lt;p&gt;后来，杂志的每一期都是这个封面，但是距离世界末日的时间一直在调整，迄今为止一共调整了22次。&lt;/p&gt;
&lt;p&gt;1949年，苏联试验原子弹，末日时钟调为3分钟。&lt;/p&gt;
&lt;p&gt;1953年，美国和苏联开始测试氢弹，调为2分钟。&lt;/p&gt;
&lt;p&gt;1963年，美苏签订《部分禁止核试验条约》，调为12分钟。&lt;/p&gt;
&lt;p&gt;1981年，苏联入侵阿富汗，美苏军备竞赛升级，里根政府提出“星球大战”计划，调为4分钟。&lt;/p&gt;
&lt;p&gt;1991年，柏林墙倒塌，东欧巨变，美苏签署《第一阶段削减战略武器条约》，调为17分钟。&lt;/p&gt;
&lt;p&gt;2007年，气候变暖，核电站不断增加，调为5分钟。&lt;/p&gt;
&lt;p&gt;2017年，特朗普当选美国总统，否认气候变化，调为150秒。&lt;/p&gt;
&lt;p&gt;2018年，朝鲜试验核武器，调为120秒。&lt;/p&gt;
&lt;p&gt;2020年1月23日，由于全球气候变暖无法避免，调为100秒。也就是说，科学家认为，现在是距离世界末日最近的时刻。&lt;/p&gt;
&lt;h3 id=&#34;世界科学技术工程学院httpsenwikipediaorgwikiworld_academy_of_science_engineering_and_technology&#34;&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/World_Academy_of_Science,_Engineering_and_Technology&#34;&gt;世界科学技术工程学院&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;上个世纪，土耳其人塞马尔·阿尔迪（Cemal Ardil）注册成立了一家“世界科学技术工程学院”（World Academy of Science, Engineering and Technology，简称 WASET）。这是一家营利性机构，专门安排各种各样虚假的学术会议，人为提高演讲者和论文提交者的学术履历。&lt;/p&gt;
&lt;p&gt;它每年组织成千上万次科学会议，会议的名称与真正的科学团体组织的真实会议很相似。2018年，世界科学技术工程学院共发布了49,844个会议广告，其中许多会议名称雷同，而且安排在同一天的同一地点。比如2016年2月，里约热内卢的一家酒店同一时间安排了116场科学会议。&lt;/p&gt;
&lt;p&gt;这些会议的质量很差，任何人只要支付注册费就可以提交论文。很多科学家在不知情的情况下，被列入组委会名单。&lt;/p&gt;
&lt;p&gt;2013年发生了一件丑闻，一个英国科学家在世界科学技术工程学院主办的期刊《国际医学，药学，生物和生命科学杂志》上，发表了一篇假论文，数据都是伪造的。然后，他自己引用这篇论文，将成果提交给了《科学》杂志。&lt;/p&gt;
&lt;p&gt;外界计算，世界科学技术工程学院2017年的收入大约为4,495,219美元。&lt;/p&gt;
&lt;h3 id=&#34;下铁雨的星星httpsphysorgnews2020-03-large-telescope-exoplanet-ironhtml&#34;&gt;&lt;a href=&#34;https://phys.org/news/2020-03-large-telescope-exoplanet-iron.html&#34;&gt;下铁雨的星星&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;科学家通过架设在智利的超大望远镜 VLT，发现在双鱼座有一颗距离地球约640光年的行星，天上下的不是雨，而是金属铁。&lt;/p&gt;
&lt;p&gt;这颗行星在白天温度会攀升至2400摄氏度以上，足以使地表的铁金属汽化。强风将铁蒸气吹到半空，到了凉爽的夜晚，气温下降，铁蒸汽冷凝成铁滴，以雨点的形式重新落到地面。&lt;/p&gt;
&lt;h3 id=&#34;大阪美术馆httpswwwopenculturecom202012hokusais-iconic-print-the-great-wave-off-kanagawa-recreated-with-50000-lego-brickshtml&#34;&gt;&lt;a href=&#34;https://www.openculture.com/2020/12/hokusais-iconic-print-the-great-wave-off-kanagawa-recreated-with-50000-lego-bricks.html&#34;&gt;大阪美术馆&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;50000块乐高积木搭建的葛饰北斋著名版画《神奈川冲浪里》。&lt;/p&gt;
&lt;h3 id=&#34;中国巨型摩天高楼时代似乎已经过去了httpswwwinkstonenewscomsocietydays-chinese-mega-skyscraper-appear-be-overarticle3114834&#34;&gt;&lt;a href=&#34;https://www.inkstonenews.com/society/days-chinese-mega-skyscraper-appear-be-over/article/3114834&#34;&gt;中国巨型摩天高楼时代似乎已经过去了&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;世界最高的100座建筑物，44座在中国。但是，国外媒体报道，中国住房和城乡建设部最近禁止建造超过500米的高层建筑，同时要求严控建造250米以上的建筑物。大家终于意识到了，摩天大楼并不宜居，不仅成本高，而且带来很大的环境压力。&lt;/p&gt;
&lt;h3 id=&#34;浏览器的虚拟机检测httpsbanneditgithubiovirtual-machine-detection-in-the-browserhtml&#34;&gt;&lt;a href=&#34;https://bannedit.github.io/Virtual-Machine-Detection-In-The-Browser.html&#34;&gt;浏览器的虚拟机检测&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这篇文章介绍了四个方法，可以使用网页脚本判断，当前浏览器是否运行在虚拟机里面。&lt;/p&gt;
&lt;h3 id=&#34;如何只使用-emcascript-模块开发httpsjounikantolaseblog2020-12-20no-fuzz-development-with-ecmascript-modules&#34;&gt;&lt;a href=&#34;https://jouni.kantola.se/blog/2020-12-20/no-fuzz-development-with-ecmascript-modules/&#34;&gt;如何只使用 EMCAScript 模块开发&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文演示如何在 Node.js 环境里面，写 EMCAScript 模块代码，并运行单元测试，然后不用构建，直接在浏览器运行代码。&lt;/p&gt;
&lt;h3 id=&#34;5g-无线电波会损害健康吗httpbackreactionblogspotcom202012all-you-need-to-know-about-5ghtml&#34;&gt;&lt;a href=&#34;http://backreaction.blogspot.com/2020/12/all-you-need-to-know-about-5g.html&#34;&gt;5G 无线电波会损害健康吗？&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;5G 引入了毫米波，比 4G 频率高10倍多，理论上会携带更多的能量。本文讨论它对人体会不会有影响。&lt;/p&gt;
&lt;h3 id=&#34;arm-芯片是如何诞生的httpsarstechnicacomfeatures202012how-an-obscure-british-pc-maker-invented-arm-and-changed-the-world&#34;&gt;&lt;a href=&#34;https://arstechnica.com/features/2020/12/how-an-obscure-british-pc-maker-invented-arm-and-changed-the-world/&#34;&gt;ARM 芯片是如何诞生的&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文介绍了英国 ARM 公司的由来，以及他们设计的芯片。对于了解 x86 和 ARM 两种 CPU 架构的早期历史和区别，很有帮助。&lt;/p&gt;
&lt;h3 id=&#34;我的软件工程公理httpsmartinruecommy-engineering-axioms&#34;&gt;&lt;a href=&#34;https://martinrue.com/my-engineering-axioms/&#34;&gt;我的软件工程公理&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者总结了他心目中软件工程的25条公理。我觉得总结得挺好，比如“产品是资产，代码是负债”、“好的代码是易于删除的代码”、“坚持小团队，小心地对待团队成长”等等。&lt;/p&gt;
&lt;h3 id=&#34;javascript-的-tojson-函数是什么httpthecodebarbariancomwhat-is-the-tojson-function-in-javascripthtml&#34;&gt;&lt;a href=&#34;http://thecodebarbarian.com/what-is-the-tojson-function-in-javascript.html&#34;&gt;JavaScript 的 toJSON() 函数是什么？&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;JavaScript 语言中，一个对象只要部署了&lt;code&gt;toJSON()&lt;/code&gt;方法，就可以被转成 JSON 字符串。很多库都使用了这个方法，比如 Express 框架的&lt;code&gt;res.json()&lt;/code&gt;就是这样实现的。&lt;/p&gt;
&lt;h3 id=&#34;浏览器的异步-cookie-store-apihttpsmediumcomnmc-techblogintroducing-the-async-cookie-store-api-89cbecf401f&#34;&gt;&lt;a href=&#34;https://medium.com/nmc-techblog/introducing-the-async-cookie-store-api-89cbecf401f&#34;&gt;浏览器的异步 Cookie Store API&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;以前，我们只能用&lt;code&gt;document.cookie&lt;/code&gt;来操作 Cookie，Chrome 87 引入了一个新的 Cookie Store API。&lt;/p&gt;
&lt;h3 id=&#34;email-verifierhttpsgithubcomaftershipemail-verifier&#34;&gt;&lt;a href=&#34;https://github.com/aftership/email-verifier&#34;&gt;email-verifier&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Go 语言写的 Email 地址检验库，判断是不是假地址。判断原理参见&lt;a href=&#34;https://segmentfault.com/a/1190000038571446&#34;&gt;这篇文章&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&#34;go-zerohttpsgithubcomtal-techgo-zero-1&#34;&gt;&lt;a href=&#34;https://github.com/tal-tech/go-zero&#34;&gt;go-zero&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;国内开发者写的 Go 语言 Web 和 rpc 框架，有中文文档。&lt;/p&gt;
&lt;h3 id=&#34;plannerhttpsplanner-todowebapp&#34;&gt;&lt;a href=&#34;https://planner-todo.web.app/&#34;&gt;Planner&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Linux 平台处理待办事项（Todos）的桌面软件，功能很强。&lt;/p&gt;
&lt;h3 id=&#34;mdpdfhttpsgithubcombluehatbritmdpdf&#34;&gt;&lt;a href=&#34;https://github.com/BlueHatbRit/mdpdf&#34;&gt;Mdpdf&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个将 Markdown 转为 PDF 文件的 JS 库，底层是谷歌的无头浏览器 Puppeteer。&lt;/p&gt;
&lt;h3 id=&#34;personal-management-systemhttpsgithubcomvolmargpersonal-management-system&#34;&gt;&lt;a href=&#34;https://github.com/Volmarg/personal-management-system&#34;&gt;Personal Management System&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个 Web 开源应用，可以自己搭建服务，将个人信息（笔记、代码事项、密码、日程安排、联系人等等）放在一个地方管理。&lt;/p&gt;
&lt;h3 id=&#34;upptimehttpsupptimejsorg&#34;&gt;&lt;a href=&#34;https://upptime.js.org/&#34;&gt;Upptime&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个 GitHub Actions 模板，每5分钟运行一次，检查指定的网站是否在线。&lt;/p&gt;
&lt;h3 id=&#34;linkacehttpsgithubcomkovahlinkace&#34;&gt;&lt;a href=&#34;https://github.com/Kovah/LinkAce/&#34;&gt;LinkAce&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个自托管的网络书签应用。&lt;/p&gt;
&lt;h3 id=&#34;游戏-ui-数据库httpswwwgameuidatabasecom&#34;&gt;&lt;a href=&#34;https://www.gameuidatabase.com/&#34;&gt;游戏 UI 数据库&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;该网站收集各种游戏的 UI 设计，提供多种分类，比如上图是第一人称视角的游戏。&lt;/p&gt;
&lt;h3 id=&#34;计算机教育缺失的一课httpsmissing-semester-cngithubio&#34;&gt;&lt;a href=&#34;https://missing-semester-cn.github.io/&#34;&gt;计算机教育缺失的一课&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;麻省理工学院计算机课程的中文版，向学生介绍基本的软件开发工具，帮助学生提高使用工具的能力。&lt;/p&gt;
&lt;h3 id=&#34;releaseeyehttpsreleaseeyeinfo&#34;&gt;&lt;a href=&#34;https://releaseeye.info/&#34;&gt;ReleaseEye&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;该网站列出最近发行新版本的软件。&lt;/p&gt;
&lt;h3 id=&#34;如何创业系列视频httpsstartupclasssamaltmancom&#34;&gt;&lt;a href=&#34;https://startupclass.samaltman.com/&#34;&gt;《如何创业》系列视频&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;创业孵化公司 Y Combinator 的前总裁 Sam Altman，整理的系列视频讲座。&lt;/p&gt;
&lt;h3 id=&#34;世界保存最好的恐龙化石httpswwwearthlymissioncomdinosaur-mummy-science-discovery-nodosaur-intact-canada&#34;&gt;&lt;a href=&#34;https://www.earthlymission.com/dinosaur-mummy-science-discovery-nodosaur-intact-canada/&#34;&gt;世界保存最好的恐龙化石&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;2017年，加拿大发现了一具恐龙化石，距今1.1亿年，保存之完好令人震惊。皮肤、鳞甲、内脏都是完整的，实际上是恐龙木乃伊，而不是化石。它是怎么形成的，仍然是一个谜。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/59922203cee790feb98031ef04901cf089f84e3bee882e1fa111be8b736c1f7f/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323030352f6267323032303035323330342e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/59922203cee790feb98031ef04901cf089f84e3bee882e1fa111be8b736c1f7f/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323030352f6267323032303035323330342e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/c69990a852acb64f1bee17b621b62310932143b80a4622c9f2ac4c17bdf0692c/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323030352f6267323032303035323330352e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/c69990a852acb64f1bee17b621b62310932143b80a4622c9f2ac4c17bdf0692c/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323030352f6267323032303035323330352e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/fee905000de9e53a6c391eb3bda3494ba6ce039da96a83608d4719d09f3e4fa9/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323030352f6267323032303035323330362e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/fee905000de9e53a6c391eb3bda3494ba6ce039da96a83608d4719d09f3e4fa9/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323030352f6267323032303035323330362e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/b283b83d2e25c2bbbf0391ffea14b4751f0402fe51200bbea0b0180df4691c9c/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323030352f6267323032303035323330372e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/b283b83d2e25c2bbbf0391ffea14b4751f0402fe51200bbea0b0180df4691c9c/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323030352f6267323032303035323330372e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这头恐龙长5.5米，下面是它的复原图。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/b9d2d0cbc9aae7d3c3303747bbe3dda76887c0d40042e1b98bfad2fadc0c7aa1/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323030352f6267323032303035323330332e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/b9d2d0cbc9aae7d3c3303747bbe3dda76887c0d40042e1b98bfad2fadc0c7aa1/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323030352f6267323032303035323330332e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;纽约住宅的前门楼梯httpsephemeralnewyorkwordpresscom20201207how-new-york-became-a-metropolis-of-stoops&#34;&gt;&lt;a href=&#34;https://ephemeralnewyork.wordpress.com/2020/12/07/how-new-york-became-a-metropolis-of-stoops/&#34;&gt;纽约住宅的前门楼梯&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;纽约市很多住宅楼，尤其是老住宅楼，都装有前门楼梯。这成了纽约市的一种特色。&lt;/p&gt;
&lt;p&gt;这是因为纽约最早是荷兰人的殖民地，早期的住宅楼都是荷兰式的。荷兰地势低洼，经常被水淹，所以住宅都修得较高，必须走楼梯进入，免得洪水淹没客厅的地板。&lt;/p&gt;
&lt;p&gt;后来的建筑师沿袭了这种风格，即使没有淹水的风险，也加高了客厅，修建了前门楼梯。&lt;/p&gt;
&lt;h3 id=&#34;科幻小说机器人排除协议httpswwwftraincomrobot_exclusion_protocol&#34;&gt;&lt;a href=&#34;https://www.ftrain.com/robot_exclusion_protocol&#34;&gt;科幻小说《机器人排除协议》&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;下面是 Paul Ford 创作的一篇极短篇科幻小说。&lt;/p&gt;
&lt;p&gt;我脱掉衣服，走进淋浴间，发现一个机器人在排水管旁边。它大概60厘米高，由金属制成，摄像头就是它的眼睛，还带有几十个机械抓手。&lt;/p&gt;
&lt;p&gt;它说：“Hi！我来自 Google，我是谷歌机器人，我不会伤害你。”&lt;/p&gt;
&lt;p&gt;我说：“我知道你是什么。”&lt;/p&gt;
&lt;p&gt;它说：“我正在对你的公寓编制索引。”&lt;/p&gt;
&lt;p&gt;我说：“我不允许你待在这里。谁让你进来的？”&lt;/p&gt;
&lt;p&gt;“我是 Google 的产品！我会发现很多好东西。我会找到你的内衣，还会观看你的录像带，那些属于你的独一无二的东西。我会找出关键词，并且编制链接。我的主人会说：‘干得好，小机器人！’ 很多用户会通过我们的链接，发现你，哈哈哈。”&lt;/p&gt;
&lt;p&gt;“我在大门上贴了《机器人排除协议》。你没看到吗？”&lt;/p&gt;
&lt;p&gt;“您了解Google吗？我索引了很多东西，如果我干得好，我可以去机器人公园，安装更多的处理器，还能上油。谢谢 Google！我必须进公寓来编制索引。必须的！” 他的摄像头向我眨了眨眼睛。&lt;/p&gt;
&lt;p&gt;“我知道我的权力。我给你10秒钟离开。”&lt;/p&gt;
&lt;p&gt;“好吧，我离开。但让我编完索引，每一样东西！我是 Google 的产品！”它伸出一支机械手臂，阅读洗发精瓶子上面的标签。我操起一把折叠椅，把它打烂。你去对垃圾桶编制索引吧。&lt;/p&gt;
&lt;h3 id=&#34;jetbrains-公司和-kotlin-语言httpswwwbloombergcomnewsarticles2020-12-18czech-startup-founders-turn-billionaires-without-vc-help&#34;&gt;&lt;a href=&#34;https://www.bloomberg.com/news/articles/2020-12-18/czech-startup-founders-turn-billionaires-without-vc-help&#34;&gt;JetBrains 公司和 Kotlin 语言&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;JetBrains 是一家位于捷克布拉格的软件公司。它由三个俄罗斯程序员2000年创立，现在依然是俄罗斯最大的程序员雇主之一，但是公司注册地搬到了捷克。&lt;/p&gt;
&lt;p&gt;它从来没有接受过外部的风险投资，今年的公司收益可望达到2亿美元，现在的估值已经达到了70亿美元。创始人之一和 CEO 马克西姆·沙菲罗夫（Maxim Shafirov）说：“公司有足够的资源来实现我们的抱负，不用接受风险投资。”&lt;/p&gt;
&lt;p&gt;它以开发各种语言的 IDE 而闻名，最著名的就是 IntelliJ IDEA，全世界最流行最强大的 Java IDE 之一。&lt;/p&gt;
&lt;p&gt;2011年，JetBrains 发布了一种新语言 Kotlin。它是基于 Java 虚拟机 JVM 的一种新语言，既有友好简单的语法，又像 Java 一样可以快速编译。&lt;/p&gt;
&lt;p&gt;考虑到 Java 是印尼的一个岛屿，开发团队希望也以一个岛屿命名这种新语言，就选择了圣彼得堡附近的 Kotlin 岛。&lt;/p&gt;
&lt;p&gt;谷歌大力支持 Kotlin。2019年，谷歌宣布 Kotlin 是 Android 开发的首选语言，目前有超过60％的专业安卓开发者都在使用 Kotlin，包括谷歌本身。&lt;/p&gt;
&lt;p&gt;据 JetBrains 透露，全世界有950万程序员在使用他们公司的软件，其中20％是付费用户。&lt;/p&gt;
&lt;h3 id=&#34;降噪头枕httpsspectrumieeeorgtech-talkconsumer-electronicsaudiovideoactive-noise-cancellation-using-ldvs&#34;&gt;&lt;a href=&#34;https://spectrum.ieee.org/tech-talk/consumer-electronics/audiovideo/active-noise-cancellation-using-ldvs&#34;&gt;降噪头枕&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;降噪耳机的原理是发出频率相同、波形相反的声波，与外部噪音互相抵消。悉尼科技大学的一个团队根据这个原理，开发出了降噪头枕，装在椅子上，不用戴耳机，只要把头靠在上面，就会听不到噪音。&lt;/p&gt;
&lt;p&gt;这个头枕内部，装了多个扬声器，会对着乘客的耳道发出抵消噪音的声波。根据测试，可以降低噪音10分贝～20分贝。但是，它有一个问题，乘客的头必须靠在指定位置，一旦转头，声波就无法对准耳道了。研究团队正在考虑开发一个头部跟踪系统，解决这个问题。&lt;/p&gt;
&lt;h3 id=&#34;定期商品评价httpswwwbuyforlifecomblog4kpaltbng6mksemj44nivvrecurring-reviews-to-track-the-whole-lifecycle-of-a-product&#34;&gt;&lt;a href=&#34;https://www.buyforlife.com/blog/4kpaLtbnG6MkseMj44niVV/recurring-reviews-to-track-the-whole-lifecycle-of-a-product&#34;&gt;定期商品评价&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/ed7feb386ec10f38ec377803a6c76286a9ac3e753f916aead20c8266953114dd/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031322f6267323032303132323930352e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/ed7feb386ec10f38ec377803a6c76286a9ac3e753f916aead20c8266953114dd/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031322f6267323032303132323930352e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;网上商品的用户评价，往往缺乏真实性。除了商家做假，很多评价是用户刚拿到商品时写的，来不及深入使用。一家美国的网上商店，为了保证用户评价的真实性，发明了“定期评价”机制。&lt;/p&gt;
&lt;p&gt;用户购买商品以后，每年会定期收到一份邮件，请用户上传照片和评价过去一年里面的使用感受。上图就是购买两月、两年、五年后，用户分别上传的照片。这样的话，就能看到整个生命周期的用户评价。&lt;/p&gt;
&lt;h3 id=&#34;木制卫星httpswwwbbccomnewsbusiness-55463366&#34;&gt;&lt;a href=&#34;https://www.bbc.com/news/business-55463366&#34;&gt;木制卫星&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;世界各国发射的卫星越来越多，其中绝大部分完成使命后，都会重返地球。卫星穿过大气层会发生燃烧，释放出有害物质，落到地面也会造成污染。&lt;/p&gt;
&lt;p&gt;为了解决这个环境问题，日本京都大学与一家林业公司合作，开发木制卫星，目标是到2023年发射世界上第一颗用木头制成的人造卫星，仪器放在木制外壳中。这种卫星重返地球时，会在大气层中彻底燃烧光，对环境没有影响。&lt;/p&gt;
&lt;h3 id=&#34;意念假肢httpsneurosciencenewscombci-prosthetic-limb-movement-17423&#34;&gt;&lt;a href=&#34;https://neurosciencenews.com/bci-prosthetic-limb-movement-17423/&#34;&gt;意念假肢&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;2019年1月，约翰霍普金斯大学在一个四肢瘫痪病人的大脑中，植入了六个电极。这个病人已经瘫痪了30年，只有前臂和手指能够微微移动。现在，经过两年的训练，他已经可以通过脑机接口，让大脑电极感受到手指的运动，从而操作假肢，完成一些简单的任务，比如给自己喂饭。&lt;/p&gt;
&lt;p&gt;这件事情最大的挑战在于，同时控制两个假肢，让左手和右手配合行动。研究团队的下一个目标是，尝试不通过视觉完成某些任务，比如不必看着就能系鞋带。&lt;/p&gt;
&lt;h3 id=&#34;贻贝水质检测httpswwwpolishnewscoukpoznan-the-clams-filter-the-water-they-check-whether-the-water-is-polluted-or-clean&#34;&gt;&lt;a href=&#34;https://www.polishnews.co.uk/poznan-the-clams-filter-the-water-they-check-whether-the-water-is-polluted-or-clean/&#34;&gt;贻贝水质检测&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;多年来，波兰城市波兹南（Poznań）一直使用贻贝，进行自来水的水质检测。这比化学检测更简单便宜，准确性也不差。贻贝对水质非常敏感，一旦发现自来水不干净，或者被污染，它就会闭合外壳。&lt;/p&gt;
&lt;p&gt;自来水公司一共有三个测量设备，每个设备使用8个贻贝。贻贝的外壳都贴了磁铁，用来监控它是闭合还是张开。如果有两三个贻贝闭合，那可能是偶然情况；如果八个同时闭合，那就一定是水质出了问题。一年总共消耗200多个贻贝。&lt;/p&gt;
&lt;h3 id=&#34;富士公司httpspetapixelcom20201226fujifilm-created-a-magnetic-tape-that-can-store-580-terabytes开发出容量达到-580tb-的磁带&#34;&gt;&lt;a href=&#34;https://petapixel.com/2020/12/26/fujifilm-created-a-magnetic-tape-that-can-store-580-terabytes/&#34;&gt;富士公司&lt;/a&gt;开发出容量达到 580TB 的磁带&lt;/h3&gt;
&lt;p&gt;是世界储存容量最大的磁带，比目前市场出售的产品大50倍。&lt;/p&gt;
&lt;h3 id=&#34;根据阳光和阴影推测拍摄信息httpstechnewstw20201215the-angle-of-sunlight-and-shadow-can-reveal-where-the-photo-was-taken&#34;&gt;&lt;a href=&#34;https://technews.tw/2020/12/15/the-angle-of-sunlight-and-shadow-can-reveal-where-the-photo-was-taken/&#34;&gt;根据阳光和阴影推测拍摄信息&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者介绍 SunCalc 这个软件，可以根据某个地点的阴影，推测拍摄时间，或者在已知拍摄时间的情况下，推测阳光在拍摄者的哪一个方向，进而缩小地点范围。&lt;/p&gt;
&lt;h3 id=&#34;中国-5g-网络的频率分配httpswwwtmtpostcom4912205html&#34;&gt;&lt;a href=&#34;https://www.tmtpost.com/4912205.html&#34;&gt;中国 5G 网络的频率分配&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这篇文章介绍国内无线电频谱调整的现状，一部分 4G 频率重新分配给5G，同时腾退了一些 2G 和 3G 的频率。&lt;/p&gt;
&lt;h3 id=&#34;有限状态机与正则表达式httpsqntmorgplants&#34;&gt;&lt;a href=&#34;https://qntm.org/plants&#34;&gt;有限状态机与正则表达式&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;有限状态机和正则表达式是等效的，作者举了一个两者转换的形象的例子。&lt;/p&gt;
&lt;h3 id=&#34;谷歌表格制作数字时钟httpswwwtherobinlordcommaking-a-digital-clock-in-google-sheets&#34;&gt;&lt;a href=&#34;https://www.therobinlord.com/making-a-digital-clock-in-google-sheets/&#34;&gt;谷歌表格制作数字时钟&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者介绍如何使用函数，在谷歌表格里面制作一个自动计时的数字时钟。&lt;/p&gt;
&lt;h3 id=&#34;编程需要多少数学httpslispmachinewordpresscom20141205how-much-math-you-need-for-programming&#34;&gt;&lt;a href=&#34;https://lispmachine.wordpress.com/2014/12/05/how-much-math-you-need-for-programming/&#34;&gt;编程需要多少数学？&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这是一个程序员学习数学的体会。结论很简单：你不需要懂数学就可以成为一流的程序员，但是通过学习数学，可以了解更多解决问题的方法。&lt;/p&gt;
&lt;h3 id=&#34;移动优先为什么是一个坏主意httpswebarchiveorgweb20201228005247if_httpsplanflowdevblogwhy-mobile-first-is-a-bad-idea&#34;&gt;&lt;a href=&#34;https://web.archive.org/web/20201228005247if_/https://planflow.dev/blog/why-mobile-first-is-a-bad-idea&#34;&gt;移动优先为什么是一个坏主意？&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;很多人提倡，网站的样式应该“移动优先”（mobile first）。作者认为，这种想法不正确，应该优先设计桌面端的样式，然后再考虑移动端。&lt;/p&gt;
&lt;h3 id=&#34;三个编程部落httpsjosephgcomblog3-tribes&#34;&gt;&lt;a href=&#34;https://josephg.com/blog/3-tribes/&#34;&gt;三个编程部落&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一篇探讨编程哲学的文章。作者认为，有三种不同的对待编程的观点，一种认为代码是艺术，一种认为代码是为硬件服务的，一种认为代码是为了创造新东西。&lt;/p&gt;
&lt;h3 id=&#34;如何通过-cloudflare-worker-搭建负载均衡服务器httpsjustyycomarchives44793&#34;&gt;&lt;a href=&#34;https://justyy.com/archives/44793&#34;&gt;如何通过 CloudFlare Worker 搭建负载均衡服务器&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Cloudflare Worker 是一种 Serverless 服务，本文给出示例，用它实现负载均衡器，每月可以免费10万次请求。&lt;/p&gt;
&lt;h3 id=&#34;librephotoshttpsgithubcomlibrephotoslibrephotos&#34;&gt;&lt;a href=&#34;https://github.com/LibrePhotos/librephotos&#34;&gt;librephotos&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个自托管的相册应用，后端是 Django，前端是 React。&lt;/p&gt;
&lt;h3 id=&#34;best-resume-everhttpsgithubcomsalomonellibest-resume-ever&#34;&gt;&lt;a href=&#34;https://github.com/salomonelli/best-resume-ever&#34;&gt;best-resume-ever&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个基于 Web 的简历模板，可以生成网页简历，然后用浏览器打印成 PDF 文件。&lt;/p&gt;
&lt;h3 id=&#34;artlinehttpsgithubcomvijishmadhavanartline&#34;&gt;&lt;a href=&#34;https://github.com/vijishmadhavan/ArtLine&#34;&gt;ArtLine&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个深度学习项目，将照片转为线条素描画，这里有可以运行的 &lt;a href=&#34;https://github.com/jwenjian/artline-demo&#34;&gt;Demo&lt;/a&gt;（Flask 应用）。&lt;/p&gt;
&lt;h3 id=&#34;ssdthttpsgithubcom62726164a-survey-of-security-dot-txt&#34;&gt;&lt;a href=&#34;https://github.com/62726164/a-survey-of-security-dot-txt&#34;&gt;ssdt&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;网站的 security.txt 文件提供安全漏洞的联系信息。这个项目抓取了世界前100万个网站的 security.txt 文件。&lt;/p&gt;
&lt;h3 id=&#34;pure-css-digital-clockhttpswwwquaxiocompure_css_digital_clockhtml&#34;&gt;&lt;a href=&#34;https://www.quaxio.com/pure_css_digital_clock.html&#34;&gt;pure CSS digital clock&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个纯 CSS 的数字时钟。但是，CSS 无法获取当前时间，所以只能显示为从12点开始。&lt;/p&gt;
&lt;h3 id=&#34;pipedreamhttpspipedreamcom&#34;&gt;&lt;a href=&#34;https://pipedream.com/&#34;&gt;Pipedream&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个计算平台，可以监听网络应用的各种事件，从而触发各种事先设定的操作。&lt;/p&gt;
&lt;h3 id=&#34;scrollamajshttpsgithubcomrussellgoldenbergscrollama&#34;&gt;&lt;a href=&#34;https://github.com/russellgoldenberg/scrollama&#34;&gt;Scrollama.js&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个网页滚动效果的封装库，基于 IntersectionObserver API。&lt;/p&gt;
&lt;h3 id=&#34;dall-ehttpsopenaicomblogdall-e&#34;&gt;&lt;a href=&#34;https://openai.com/blog/dall-e/&#34;&gt;DALL-E&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;OpenAI 公司又推出了一个神奇的软件 DALL-E，可以根据文字描述自动生成图片&lt;/p&gt;
&lt;h3 id=&#34;my-iconhttpsmyiconio&#34;&gt;&lt;a href=&#34;https://myicon.io/&#34;&gt;My Icon&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一套免费图标，用来更换 iOS 14 的图标。一共有几千个图标可供选择，还允许自定义和编辑。&lt;/p&gt;
&lt;h3 id=&#34;树莓派的-pci-express-兼容设备httpspipcijeffgeerlingcom&#34;&gt;&lt;a href=&#34;https://pipci.jeffgeerling.com/&#34;&gt;树莓派的 PCI Express 兼容设备&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;树莓派 Raspberry Pi 4 配有一个 PCI Express 1x 接口。该网站列出各种可以兼容这个接口的设备。&lt;/p&gt;
&lt;h3 id=&#34;苹果历史上的20个产品httpssixcolorscompost20201220-macs-for-2020-1-imac-g3&#34;&gt;&lt;a href=&#34;https://sixcolors.com/post/2020/12/20-macs-for-2020-1-imac-g3/&#34;&gt;苹果历史上的20个产品&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一组英语的系列文章，一共20篇，详细回顾苹果公司历史上具有重要意义的20个产品，每个产品都会深入介绍历史背景和设计制造过程。第一篇就是乔布斯回归苹果后的第一个产品 iMac G3。&lt;/p&gt;
&lt;h3 id=&#34;linux-加固指南httpsmadaidans-insecuritiesgithubioguideslinux-hardeninghtmllinux-hardening-guide&#34;&gt;&lt;a href=&#34;https://madaidans-insecurities.github.io/guides/linux-hardening.html&#34;&gt;Linux 加固指南&lt;/a&gt;（Linux Hardening Guide）&lt;/h3&gt;
&lt;p&gt;这篇英语长文整理了各种 Linux 的调整步骤，使得它变得更安全。&lt;/p&gt;
&lt;h3 id=&#34;bigdata_analysehttpsgithubcomturbowaybigdata_analyse&#34;&gt;&lt;a href=&#34;https://github.com/TurboWay/bigdata_analyse&#34;&gt;bigdata_analyse&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这个仓库收集一些真实的大数据分析案例，用来了解如何处理不同行业的分析指标。目前有4个案例，包括1亿条淘宝用户行为数据分析、7000条租房数据分析等等。&lt;/p&gt;
&lt;h3 id=&#34;hello-github第-57-期httpsgithubcom521xueweihanhellogithubblobmastercontent57hellogithub57md&#34;&gt;&lt;a href=&#34;https://github.com/521xueweihan/HelloGitHub/blob/master/content/57/HelloGitHub57.md&#34;&gt;Hello GitHub（第 57 期）&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;分享GitHub上有趣，入门级的开源项目的月刊，帮你找到编程的乐趣。&lt;/p&gt;
&lt;h3 id=&#34;go-语言高性能编程httpsgithubcomgeektutuhigh-performance-go&#34;&gt;&lt;a href=&#34;https://github.com/geektutu/high-performance-go&#34;&gt;Go 语言高性能编程&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;免费的中文电子书，作者介绍了 Go 程序提高性能的一些技巧。&lt;/p&gt;
&lt;h3 id=&#34;url-短链接服务设置-cookiehttpsylukemcomblogurl-shorteners-set-ad-tracking-cookies&#34;&gt;&lt;a href=&#34;https://ylukem.com/blog/url-shorteners-set-ad-tracking-cookies&#34;&gt;URL 短链接服务设置 Cookie&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者发现很多流行的 URL 短链接服务，比如 TinyURL、t.co、bit.ly 都在用户的计算机上设置 Cookie，用来广告追踪。&lt;/p&gt;
&lt;h3 id=&#34;excalidraw-的一年httpsblogexcalidrawcomone-year-of-excalidraw&#34;&gt;&lt;a href=&#34;https://blog.excalidraw.com/one-year-of-excalidraw/&#34;&gt;Excalidraw 的一年&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Excalidraw 是手绘风格的一个在线作图工具，2020年1月发布。本文讲述这个项目一年来的惊人发展。&lt;/p&gt;
&lt;h3 id=&#34;url-短链接服务设置-cookiehttpsylukemcomblogurl-shorteners-set-ad-tracking-cookies-1&#34;&gt;&lt;a href=&#34;https://ylukem.com/blog/url-shorteners-set-ad-tracking-cookies&#34;&gt;URL 短链接服务设置 Cookie&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者发现很多流行的 URL 短链接服务，比如 TinyURL、t.co、bit.ly 都在用户的计算机上设置 Cookie，用来广告追踪。&lt;/p&gt;
&lt;h3 id=&#34;使用-cloudflare-worker-提供短链接服务httpslucjanmediumcomfree-url-shortener-with-cloudflare-workers-125eaf87b1ec&#34;&gt;&lt;a href=&#34;https://lucjan.medium.com/free-url-shortener-with-cloudflare-workers-125eaf87b1ec&#34;&gt;使用 Cloudflare Worker 提供短链接服务&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Cloudflare Worker 是一个 Serverless 服务，可以使用很简单的代码，通过它自制一个简单的短链接服务。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.gkogan.co/blog/looks-vs-results/&#34;&gt;简陋的广告，不一定效果不好&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/883db455a8863bb550086e606f58e19b88b369358203a2d1e3a309d17b458a66/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323130312f6267323032313031303430332e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/883db455a8863bb550086e606f58e19b88b369358203a2d1e3a309d17b458a66/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323130312f6267323032313031303430332e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;广告不一定要设计得非常精美，简单粗糙的广告也可能有不错的效果。作者同时在 LinkedIn 投放了上面两个广告，结果发现右边广告的转化率更高。&lt;/p&gt;
&lt;h3 id=&#34;locusthttpslocustio&#34;&gt;&lt;a href=&#34;https://locust.io/&#34;&gt;locust&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个开源的负载压测工具。&lt;/p&gt;
&lt;h3 id=&#34;thonnyhttpsthonnyorg&#34;&gt;&lt;a href=&#34;https://thonny.org/&#34;&gt;Thonny&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个面向初学者的 Python IDE。&lt;/p&gt;
&lt;h3 id=&#34;html-editorhttpsno-gravitygithubiohtml_editor&#34;&gt;&lt;a href=&#34;https://no-gravity.github.io/html_editor/&#34;&gt;HTML Editor&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个最简易的 HTML 在线编辑器，可以实时自动预览效果。&lt;a href=&#34;https://github.com/no-gravity/html_editor/blob/main/index.html&#34;&gt;源码&lt;/a&gt;非常简单，有学习价值。&lt;/p&gt;
&lt;h3 id=&#34;piccolohttpspiccolo-ormcom&#34;&gt;&lt;a href=&#34;https://piccolo-orm.com/&#34;&gt;Piccolo&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个简单快速的异步 Python ORM 库。&lt;/p&gt;
&lt;h3 id=&#34;i2phttpsgeti2pneten&#34;&gt;&lt;a href=&#34;https://geti2p.net/en/&#34;&gt;I2P&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/I2P&#34;&gt;一个隐形互联网项目&lt;/a&gt;，构建在互联网的上方，主要用于网内用户的互相通信，不鼓励用户通过它来访问互联网。主要特点是用户看不到服务器，服务器也看不到用户。&lt;/p&gt;
&lt;h3 id=&#34;quicsshhttpsgithubcommoulquicssh&#34;&gt;&lt;a href=&#34;https://github.com/moul/quicssh&#34;&gt;quicssh&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这个工具将 SSH 的通信协议改成了 QUIC，重新包装了 SSH 的服务器和客户端。&lt;/p&gt;
&lt;h3 id=&#34;staticallyhttpsstaticallyio&#34;&gt;&lt;a href=&#34;https://statically.io/&#34;&gt;Statically&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;该服务可以免费将GitHub 和 GitLab 的源码文件放上 CDN，供外部调用。&lt;/p&gt;
&lt;h3 id=&#34;thumbnailaihttpsthumbnailai&#34;&gt;&lt;a href=&#34;https://thumbnail.ai/&#34;&gt;Thumbnail.AI&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这个在线服务可以为任意 URL，自动生成标题图片，便于在社交媒体引用文章时，提供缩略图。&lt;/p&gt;
&lt;h3 id=&#34;cdeclhttpscdeclorg&#34;&gt;&lt;a href=&#34;https://cdecl.org/&#34;&gt;cdecl&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这个在线工具可以将 C 语言难懂的类型声明（比如&lt;code&gt;int (*(*foo)(void ))[3]&lt;/code&gt;），转成浅显的英语。&lt;/p&gt;
&lt;h3 id=&#34;后端开发学习路线图httpsroadmapshbackend&#34;&gt;&lt;a href=&#34;https://roadmap.sh/backend&#34;&gt;后端开发学习路线图&lt;/a&gt;&lt;/h3&gt;
&lt;h3 id=&#34;半小时学习-rust-语言httpsfasterthanlimearticlesa-half-hour-to-learn-rust&#34;&gt;&lt;a href=&#34;https://fasterthanli.me/articles/a-half-hour-to-learn-rust&#34;&gt;半小时学习 Rust 语言&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一篇英语长文，详细介绍 Rust 语言的基本知识点。&lt;/p&gt;
&lt;h3 id=&#34;python-软件工程httpsmerely-usefulgithubiopy-rse&#34;&gt;&lt;a href=&#34;https://merely-useful.github.io/py-rse/&#34;&gt;Python 软件工程&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一本英文的免费书籍，介绍使用 Python 来做实际的软件项目时，需要了解的各种 Linux 知识，比如命令行、Git、Make 等等。&lt;/p&gt;
&lt;h3 id=&#34;techrewindhttpstechrewindco&#34;&gt;&lt;a href=&#34;https://techrewind.co/&#34;&gt;TechRewind&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;该网站收集了过去40年流行的技术产品，每10年为一个周期，用户可以查看每个周期的流行产品。比如，上图是上个世纪90年的流行。&lt;/p&gt;
&lt;h3 id=&#34;学校还是监狱httpswwwschoolprisoncom&#34;&gt;&lt;a href=&#34;https://www.schoolprison.com/&#34;&gt;学校还是监狱？&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;该网站每次刷新都会出现一张图片，让用户猜这是学校还是监狱？比如，上图是监狱。&lt;/p&gt;
&lt;h3 id=&#34;团队主管应该写代码吗httpsnngorokcommanagers-should-code-but-not-at-work&#34;&gt;&lt;a href=&#34;https://nngorok.com/managers-should-code-but-not-at-work&#34;&gt;团队主管应该写代码吗？&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;技术团队的主管应该写代码吗？&lt;/p&gt;
&lt;p&gt;这个问题似乎没有明确的答案，支持者和反对者都有各自的立场。&lt;/p&gt;
&lt;p&gt;我主管工程团队已经两年了，在这期间我停止写代码。主要原因是，团队主管写代码会妨碍团队管理，你会没有足够的时间来召开所有团队会议，以及一对一的谈话。另一方面，退出编码也表明我信任团队。&lt;/p&gt;
&lt;p&gt;但是，随着时间的流逝，我逐渐感到与团队脱节。开始忘记构建系统和产品的实际感觉。我发现很难跟上的某些技术决策。从长远来看，最坏的情况下，由于缺乏代码信誉，这可能导致你在团队失去尊重。&lt;/p&gt;
&lt;p&gt;这种矛盾，从本质上讲，是管理者与开发者的角色冲突。管理者的日程安排是一个接一个的会议，而开发者要求要大量连续时间，保证投入到关键任务上。管理者和开发者的时间表是不一样的。&lt;/p&gt;
&lt;p&gt;我真的很想念编码，想念从构建事物、定位和修复 Bug 中获得的成就感。我还意识到，我参与编码，就会与团队产生更多的联系。&lt;/p&gt;
&lt;p&gt;但我也明白，一旦参与编码，我就很难切换注意力，我的关注点无法在编码和会议之间及时切换。我的结论是，管理者与程序员的角色无法合一，解决方法可能是你在业余时间坚持编码，工作时间专心管理。&lt;/p&gt;
&lt;h3 id=&#34;故事的形状httpsavoidboringpeoplesubstackcompa-story-is-a-lie-and-a-story-is-true&#34;&gt;&lt;a href=&#34;https://avoidboringpeople.substack.com/p/a-story-is-a-lie-and-a-story-is-true&#34;&gt;故事的形状&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;美国小说家库尔特·冯内古特 （Kurt Vonnegut）在一次演讲中提到，小说的故事是有形状的。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/654d78b46857f88b51f97432a949183c4eb80870c3ce975a2fcb3c37e1a45d35/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323130312f6267323032313031313230362e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/654d78b46857f88b51f97432a949183c4eb80870c3ce975a2fcb3c37e1a45d35/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323130312f6267323032313031313230362e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;他画了一个坐标系，竖轴是主人公的境遇，横轴是时间轴，表示故事的进展。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/ce238af89b2656edf58f4e5fdfecca8b174b075a0e6ecfd0ffac007aaac506c2/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031322f6267323032303132323830392e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/ce238af89b2656edf58f4e5fdfecca8b174b075a0e6ecfd0ffac007aaac506c2/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031322f6267323032303132323830392e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在 《教父》中，主人公开始时过得很好，但后来陷入困境，被迫离开家族。他最终夺回了权力，并杀死了大部分反对派，成为新的教父。这个故事的形状就是一个大坑，先下跌，然后上升，并且过得比以前更好。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/0bfb7469c9142f897ea4cbd20dd78c21d387d0a900b6869140d230523bdd8f58/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031322f6267323032303132323831302e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/0bfb7469c9142f897ea4cbd20dd78c21d387d0a900b6869140d230523bdd8f58/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031322f6267323032303132323831302e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;很多爱情小说，主人公先坠入爱河，感到非常幸福，后来由于各种原因，发生了挫折，最后再次找到对方。它的形状则是先上升，再下降，然后再次上升。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/8a25c9a8b461f01c591c7fd54d4c8e0aad78282697f2d6d3d85d1f6c9e508127/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031322f6267323032303132323831312e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/8a25c9a8b461f01c591c7fd54d4c8e0aad78282697f2d6d3d85d1f6c9e508127/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031322f6267323032303132323831312e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;有些个人奋斗的故事，是从逆境不断上升，取得一定成就以后，遇到了重大打击，最后克服了困难。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/ce9842c935073a206b3a18a49ef849c8adde45d4b6117230a71dc93dc0624cf6/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031322f6267323032303132323831322e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/ce9842c935073a206b3a18a49ef849c8adde45d4b6117230a71dc93dc0624cf6/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031322f6267323032303132323831322e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;卡夫卡的小说《变形记》，则是主人公本来就过得很遭，一天早上醒来，发现自己变成了蟑螂，从此越过越糟糕。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/86e99719fe9c6097dfb7cc91700dab0c70a460b11f72ee833ad4fc17b427c8e2/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031322f6267323032303132323831332e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/86e99719fe9c6097dfb7cc91700dab0c70a460b11f72ee833ad4fc17b427c8e2/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031322f6267323032303132323831332e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;2020年排名前10-的-python库httpstryolabscomblog20201221top-10-python-libraries-of-2020&#34;&gt;&lt;a href=&#34;https://tryolabs.com/blog/2020/12/21/top-10-python-libraries-of-2020/&#34;&gt;2020年排名前10 的 Python库&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文介绍目前最流行的10个 Python 库。&lt;/p&gt;
&lt;h3 id=&#34;如何释放-macbook-的磁盘空间httpspawelurbanekcommacos-free-disk-space&#34;&gt;&lt;a href=&#34;https://pawelurbanek.com/macos-free-disk-space&#34;&gt;如何释放 MacBook 的磁盘空间&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;MacBook 用作开发笔记本时，长期下来，大量空间会被占用。本文介绍几个清理空间的方法。&lt;/p&gt;
&lt;h3 id=&#34;amd-ryzen-9-5950x-cpu-测评httpswwwtomshardwarecomreviewsamd-ryzen-9-5950x-5900x-zen-3-review&#34;&gt;&lt;a href=&#34;https://www.tomshardware.com/reviews/amd-ryzen-9-5950x-5900x-zen-3-review&#34;&gt;AMD Ryzen 9 5950X CPU 测评&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;国外媒体评测了 AMD 公司最新的 Zen 3 架构的高端 CPU，结论就是英特尔公司有大麻烦了，现在不仅性价比不如 AMD，连高端 CPU 的性能都输了。&lt;/p&gt;
&lt;h3 id=&#34;浏览器插件推荐httpsguillaumehrmediumcom21-best-free-browser-extensions-for-chrome-and-firefox-to-improve-privacy-productivity-and-web-a8c158d9216b&#34;&gt;&lt;a href=&#34;https://guillaumehr.medium.com/21-best-free-browser-extensions-for-chrome-and-firefox-to-improve-privacy-productivity-and-web-a8c158d9216b&#34;&gt;浏览器插件推荐&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文推荐了21个浏览器插件，可以提高使用效率，而且同时支持 Chrome 和 Firefox。&lt;/p&gt;
&lt;h3 id=&#34;反向面试httpsgithubcomyifeikongreverse-interview-zh&#34;&gt;&lt;a href=&#34;https://github.com/yifeikong/reverse-interview-zh&#34;&gt;反向面试&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;下面列表里的问题对于参加技术面试的人来说可能有些用。 列表里的问题并不一定适用于某个特定的职位或者工作类型，也没有排序 最开始的时候这只是我自己的问题列表，但是慢慢地添加了一些我觉得可能让我对这家公司亮红牌的问题。 我也注意到被我面试的人提问我的问题太少了，感觉他们挺浪费机会的。&lt;/p&gt;
&lt;h3 id=&#34;andalahttpswwwaliciaunderhillxyzandala&#34;&gt;&lt;a href=&#34;https://www.aliciaunderhill.xyz/Andala/&#34;&gt;andala&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/ab1ac921b8e03de9d8e3df011bb179a46b6ea707b884c71e8335c32f1552c512/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323130312f6267323032313031313231322e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/ab1ac921b8e03de9d8e3df011bb179a46b6ea707b884c71e8335c32f1552c512/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323130312f6267323032313031313231322e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;一个在线画板，画出来的线条都是对称的。&lt;/p&gt;
&lt;h3 id=&#34;在线视频片段合并httpsslowapicommerge-videos-files&#34;&gt;&lt;a href=&#34;https://slowapi.com/merge-videos-files/&#34;&gt;在线视频片段合并&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;很多在线视频都是许多 .ts 文件组成的，这个在线工具可以输入 .ts 文件的网址，然后将它们合并。&lt;/p&gt;
&lt;h3 id=&#34;ssh-mitmhttpsgithubcomssh-mitmssh-mitm&#34;&gt;&lt;a href=&#34;https://github.com/ssh-mitm/ssh-mitm&#34;&gt;ssh-mitm&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个 SSH 中间人服务器，拦截所有 SSH 操作。可以用作“蜜罐”，攻击者自以为登陆了真实服务器，从而让系统记录下他的操作。&lt;/p&gt;
&lt;h3 id=&#34;transformhttpstransformtools&#34;&gt;&lt;a href=&#34;https://transform.tools/&#34;&gt;Transform&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个在线工具，可以将各种代码互相转换，比如把 HTML 转为 JSX，或者把 JSON 转为 XML。&lt;/p&gt;
&lt;h3 id=&#34;electronic-referenceshttpscsgordongithubiobookshtml&#34;&gt;&lt;a href=&#34;https://csgordon.github.io/books.html&#34;&gt;Electronic References&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;该网页收集网上免费的计算机科学教科书。&lt;/p&gt;
&lt;h3 id=&#34;proton-游戏数据库httpswwwprotondbcom&#34;&gt;&lt;a href=&#34;https://www.protondb.com/&#34;&gt;Proton 游戏数据库&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;该网站提供所有可以通过 Proton 在 Linux 上运行的游戏资料。&lt;/p&gt;
&lt;h3 id=&#34;just-get-my-datahttpsjustgetmydatacom&#34;&gt;&lt;a href=&#34;https://justgetmydata.com/&#34;&gt;Just Get My Data&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这个网站收集了从各种在线服务取回个人数据的方法，并有“容易”、“中等”、“困难”、“不可能”四个难度评级。&lt;/p&gt;
&lt;h3 id=&#34;最繁忙的航线httpswwwoagcombusiest-routes-right-now&#34;&gt;&lt;a href=&#34;https://www.oag.com/busiest-routes-right-now&#34;&gt;最繁忙的航线&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;该网站可以查看世界各地的航线数据，比如本月最繁忙的10条国际和地区航线，以及各国国内最繁忙的航线。&lt;/p&gt;
&lt;h3 id=&#34;德国螺旋森林waldspiralehttpsenwikipediaorgwikiwaldspirale&#34;&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Waldspirale&#34;&gt;德国螺旋森林（Waldspirale）&lt;/a&gt;&lt;/h3&gt;
&lt;h3 id=&#34;白宫官网改版httpswptaverncombiden-white-house-sticks-with-wordpress-for-website-relaunch&#34;&gt;&lt;a href=&#34;https://wptavern.com/biden-white-house-sticks-with-wordpress-for-website-relaunch&#34;&gt;白宫官网改版&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;1月20日，美国新总统拜登上任，白宫官网 &lt;a href=&#34;https://www.whitehouse.gov/&#34;&gt;whitehouse.gov&lt;/a&gt; 当天就改版了。&lt;/p&gt;
&lt;p&gt;2017年，特朗普政府将白宫官网的 CMS（内容管理系统）从 Drupal 改成了 WordPress，原因是后者的维护和开发比较省钱，据说每年可以为美国纳税人节省300万美元。&lt;/p&gt;
&lt;p&gt;这一次，拜登政府的改版沿用了 WordPress，并没有改回奥巴马时代的 Drupal，看来不打算推翻特朗普政府的这个决定。值得一提的是，改版后的官网性能表现很好，Lighthouse 得分接近满分。&lt;/p&gt;
&lt;h3 id=&#34;elasticsearch-许可证httpsawsamazoncomcnblogsopensourcestepping-up-for-a-truly-open-source-elasticsearch&#34;&gt;&lt;a href=&#34;https://aws.amazon.com/cn/blogs/opensource/stepping-up-for-a-truly-open-source-elasticsearch/&#34;&gt;Elasticsearch 许可证&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;业界应用最广的开源搜索工具 Elasticsearch 上周修改了许可证，新版本将不允许云服务商使用它提供服务。这主要是针对亚马逊公司，后者出售 Elasticsearch 搜索服务，开源项目的维护者拿不到任何好处，等于是为亚马逊免费打工。&lt;/p&gt;
&lt;p&gt;亚马逊立刻回击了，宣布将提供自己的开源版本。Elasticsearch 等于是为自己找了一个竞争对手，而且对手有无限资源。这件事的启示就是，开源时要想好，如果大公司拿你的代码挣钱，也不会分给你，你怎么办。&lt;/p&gt;
&lt;h4 id=&#34;中国的大坝httpsmpweixinqqcomscliev282p1pxq93u_nw39w&#34;&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/cLiEv282p1PXQ93u_NW39w&#34;&gt;中国的大坝&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;中国有10万座水坝，是世界水坝最多的国家。本文以大量的图片，介绍不同类型水坝的知识。&lt;/p&gt;
&lt;h3 id=&#34;我开发付费-chrome-插件的经历httpsblogt9tiostar-history-2021-01-21&#34;&gt;&lt;a href=&#34;https://blog.t9t.io/star-history-2021-01-21/&#34;&gt;我开发付费 Chrome 插件的经历&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者介绍了在 Chrome 商店发布付费插件的过程，总收入有几百美元。&lt;/p&gt;
&lt;h3 id=&#34;如何用-github-actions-更新-wordpress-网站httpsgithubcomzhaooleewordpressxmlrpctools&#34;&gt;&lt;a href=&#34;https://github.com/zhaoolee/WordPressXMLRPCTools&#34;&gt;如何用 GitHub Actions 更新 WordPress 网站&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文介绍使用 GitHub Actions 将仓库里面的 Markdown 文章，远程发布到 WordPress 网站。&lt;/p&gt;
&lt;h4 id=&#34;二因素登陆-2fa-不能防止网络钓鱼httpsshksprmobiblog202101thats-not-how-2fa-works&#34;&gt;&lt;a href=&#34;https://shkspr.mobi/blog/2021/01/thats-not-how-2fa-works/&#34;&gt;二因素登陆 2FA 不能防止网络钓鱼&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;很多人有一种误解，只要开启了二因素登陆 2FA，就可以保证个人账户的安全。作者指出，2FA 只是保证其他人不能登录你的账户，但是防止不了网络钓鱼。&lt;/p&gt;
&lt;h4 id=&#34;tab-还是空格httpsanadoxinorgblogyoure-using-tabs-in-a-wrong-wayhtml&#34;&gt;&lt;a href=&#34;https://anadoxin.org/blog/youre-using-tabs-in-a-wrong-way.html/&#34;&gt;Tab 还是空格？&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;本文讨论了代码缩进使用 Tab 或空格的利弊，说得很有道理，并提供了推荐的缩进方式。&lt;/p&gt;
&lt;h3 id=&#34;使用-gnu-stow-管理配置文件httpsalexpearceme201602managing-dotfiles-with-stow&#34;&gt;&lt;a href=&#34;https://alexpearce.me/2016/02/managing-dotfiles-with-stow/&#34;&gt;使用 GNU Stow 管理配置文件&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Linux 系统有很多配置文件，比如&lt;code&gt;.bashrc&lt;/code&gt;、&lt;code&gt;.vimrc&lt;/code&gt;等等，一个很方便的管理方法，就是把它们放到一个 Git 仓库，然后使用 Stow 这个工具产生软链接。&lt;/p&gt;
&lt;h4 id=&#34;2021年-favicon-的设置httpsevilmartianscomchronicleshow-to-favicon-in-2021-six-files-that-fit-most-needs&#34;&gt;&lt;a href=&#34;https://evilmartians.com/chronicles/how-to-favicon-in-2021-six-files-that-fit-most-needs&#34;&gt;2021年 favicon 的设置&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;网站的 favicon 应该怎么设置？这篇文章给出了最新的建议&lt;/p&gt;
&lt;h3 id=&#34;我怎样建立没有一家全职员工的公司httpssahillavingiacomwork&#34;&gt;&lt;a href=&#34;https://sahillavingia.com/work&#34;&gt;我怎样建立没有一家全职员工的公司&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者讲述自己创立 Gumroad 这家公司，年收入达到1100万美元，但是没有一个全职员工，连作者自己都不是全职投入。这可以算是创业的理想境界。&lt;/p&gt;
&lt;h4 id=&#34;gmail-搜索语法httpsturriatecomarticlesadvanced-gmail-search-help-organize-your-inbox&#34;&gt;&lt;a href=&#34;https://turriate.com/articles/advanced-gmail-search-help-organize-your-inbox&#34;&gt;Gmail 搜索语法&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;本文通过一个例子，讲解 Gmail 的搜索语法。&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;unsubscribe
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;contains the word “unsubscribe”&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;-shipping -payment -&amp;quot;tracking number&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Does not contain the word “shipping,” “payment,” or “tracking number”&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;quot;YOUR ADDRESS&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Type in your mailing address. I want to keep any mail that contains my mailing address because it’s likely about something I purchased.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;-from:Robinhood -from:YOURBANK -from:&amp;quot;Whole Foods Market&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Do not find email coming from Robinhood, my bank, or Whole Foods&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;in:inbox
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;only find mail in my inbox.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;is:unread
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Email I haven’t opened&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;older_than:7d
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Email received over 7 days ago.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;-is:important
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Not labeled as important.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;-is:starred
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Email that has not been starred.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;-is:snoozed
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Email that has not been snoozed.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;has:nouserlabels
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Email that has not already been sorted or filtered&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;-has:attachment
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Email without an attachment. I give an “unsubscribe” email with an attachment high priority than other emails.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;视频编码器的专利费httpsblogmozillaorgblog20180711royalty-free-web-video-codecs&#34;&gt;&lt;a href=&#34;https://blog.mozilla.org/blog/2018/07/11/royalty-free-web-video-codecs/&#34;&gt;视频编码器的专利费&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;H.264 视频编码器需要交纳专利费，这篇文章介绍了这方面的情况。为了保证可以自由地对视频进行编码，Mozilla 一直在推动 AV1 这样的开源编码器。&lt;/p&gt;
&lt;h3 id=&#34;sosumihttpsgithubcompopeysosumi-snap&#34;&gt;&lt;a href=&#34;https://github.com/popey/sosumi-snap&#34;&gt;Sosumi&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个 Linux 系统的 Snap 包文件，可以在 Linux 系统运行 MacOS。&lt;/p&gt;
&lt;h3 id=&#34;archiveboxhttpsgithubcomarchiveboxarchivebox&#34;&gt;&lt;a href=&#34;https://github.com/ArchiveBox/ArchiveBox&#34;&gt;ArchiveBox&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个将网页存档的工具，可以将 HTML、CSS、JS、图片、媒体文件都保存下来，供日后查看。这里是&lt;a href=&#34;https://nixintel.info/osint-tools/make-your-own-internet-archive-with-archive-box/&#34;&gt;教程&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&#34;pyg2plothttpsgithubcomhustccpyg2plot&#34;&gt;&lt;a href=&#34;https://github.com/hustcc/PyG2Plot&#34;&gt;PyG2Plot&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Python 的数据可视化图表生成工具，基于蚂蚁集团开源的 G2Plot 封装。&lt;/p&gt;
&lt;h3 id=&#34;openpilothttpsgithubcomcommaaiopenpilot&#34;&gt;&lt;a href=&#34;https://github.com/commaai/openpilot&#34;&gt;openpilot&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个开源的辅助驾驶系统，可以自动车道居中和自适应巡航控制，已经支持85种车型。&lt;/p&gt;
&lt;h3 id=&#34;swagger-文档导出httpswwwdocs4devcomtoolszhswagger2markup&#34;&gt;&lt;a href=&#34;https://www.docs4dev.com/tools/zh/swagger2markup/&#34;&gt;Swagger 文档导出&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个在线工具，可以将 Swagger 文档（yaml 或者 json 格式）导出为PDF、Markdown、EPUB、HTML 等格式。&lt;/p&gt;
&lt;h3 id=&#34;localcdnhttpswwwlocalcdnorg&#34;&gt;&lt;a href=&#34;https://www.localcdn.org/&#34;&gt;LocalCDN&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个浏览器插件，将常用的前端 CDN 库集成在插件里面，避免发出网络请求，加快加载速度，以及降低隐私泄漏的可能。&lt;/p&gt;
&lt;h3 id=&#34;x6httpsx6antvvisionzh&#34;&gt;&lt;a href=&#34;https://x6.antv.vision/zh&#34;&gt;X6&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;蚂蚁集团数据可视化工具 AntV 旗下的图编辑引擎，用来在网页上生成 SVG 图形。&lt;/p&gt;
&lt;h3 id=&#34;vue3-源码解读httpsgithubcomcuixiaoruimini-vue&#34;&gt;&lt;a href=&#34;https://github.com/cuixiaorui/mini-vue&#34;&gt;Vue3 源码解读&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这个库把 Vue3 源码中最核心的逻辑剥离出来，只留下核心逻辑，以供大家学习。带有详细的中文注释，以及完善的输出，帮助用户理解运行时流程。&lt;/p&gt;
&lt;h3 id=&#34;games-on-githubhttpsgithubcomleereillygames&#34;&gt;&lt;a href=&#34;https://github.com/leereilly/games&#34;&gt;Games on GitHub&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这个仓库收集 GitHub 上面的各种开源游戏。&lt;/p&gt;
&lt;h3 id=&#34;机器学习面试题httpswwwinterviewquerycomblog-machine-learning-interview-questions&#34;&gt;&lt;a href=&#34;https://www.interviewquery.com/blog-machine-learning-interview-questions/&#34;&gt;机器学习面试题&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这个英文网站收集了一些机器学习面试的基本问题 。&lt;/p&gt;
&lt;h3 id=&#34;radiancehttpswwwradiancevrco&#34;&gt;&lt;a href=&#34;https://www.radiancevr.co/&#34;&gt;Radiance&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;该网站收集了全世界几十个国家的艺术家创作的 VR 视频，可以戴 VR 眼镜欣赏。&lt;/p&gt;
&lt;h3 id=&#34;2020数学艺术展httpwwwamsorgpublicoutreachmath-imagery2020-exhibition&#34;&gt;&lt;a href=&#34;http://www.ams.org/publicoutreach/math-imagery/2020-Exhibition&#34;&gt;2020数学艺术展&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;该网站展出各种根据数学概念创造的艺术品，比如上图这样的编织品和雕塑品。&lt;/p&gt;
&lt;h3 id=&#34;paludariumhttpsazumamakotocom3705&#34;&gt;&lt;a href=&#34;https://azumamakoto.com/3705/&#34;&gt;Paludarium&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;日本花卉艺术家 Azuma Makoto 建造的 Paludarium，是一种密封的玻璃容器，为植物创造一个自给自足的环境系统。&lt;/p&gt;
&lt;p&gt;Paludarium 不仅可以控制内部温度和湿度，还具有喷雾和滴灌系统，给植物供水。&lt;/p&gt;
&lt;h3 id=&#34;软件业的停滞httpsalarmingdevelopmentorgp1475&#34;&gt;&lt;a href=&#34;https://alarmingdevelopment.org/?p=1475&#34;&gt;软件业的停滞&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;软件技术的进步，在1996年左右基本停滞了。&lt;/p&gt;
&lt;p&gt;1996年之前，我们取得的软件成果：LISP，Algol，Basic，APL，Unix，C，SQL，Oracle，Smalltalk，Windows，C ++，LabView，HyperCard，Mathematica，Haskell，WWW，Python，Mosaic，Java，JavaScript，Ruby，Flash，Postgress。&lt;/p&gt;
&lt;p&gt;1996年以后的软件成果：IntelliJ，Eclipse，ASP，Spring，Rails，Scala，AWS，Clojure，Heroku，V8，Go，Rust，React，Docker，Kubernetes，Wasm。&lt;/p&gt;
&lt;p&gt;后面那些软件成果，都是对此前技术成果的增量改进。比如，Rails 通过良好的结构化方式将一堆现有技术粘合在一起，从而极大地提高了 Web 应用程序的生产率，但是它本身没有发明任何新东西。同样地，V8 通过扩展 Smalltalk 和 Java 中发明的技术，加速 JavaScript 执行速度。&lt;/p&gt;
&lt;p&gt;自从1996年以来，几乎所有东西都是巧妙地重新包装和重新设计了先前的发明。&lt;/p&gt;
&lt;p&gt;为什么1996年以后，软件技术突然停止了进展？1996年到底发生了什么？&lt;/p&gt;
&lt;p&gt;我认为原因就是互联网开始繁荣。突然之间，程序员有史以来第一次可以迅速致富，大量聪明的有抱负的人涌入了硅谷。但是，你不能在创业公司做研究，基础技术需要很长时间酝酿，并且风险很大。合理的商业计划是利用 VC 的资金，将其投入到最优秀的程序员，让他们改进当前糟糕的技术，然后兑现获利。创业公司没有发明基础技术的时间。&lt;/p&gt;
&lt;p&gt;如今，只有像 Google / Facebook / Amazon / Microsoft 这样的大型公司才有金钱和时间来创造新技术，但是他们似乎只对以最小的破坏性方式解决自己的问题感兴趣。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;罗尔德达尔的童话声音机器httpswwwnewyorkercommagazine19490917the-sound-machine&#34;&gt;&lt;a href=&#34;https://www.newyorker.com/magazine/1949/09/17/the-sound-machine&#34;&gt;罗尔德·达尔的童话《声音机器》&lt;/a&gt;&lt;/h3&gt;
&lt;h3 id=&#34;彩色小说httpslatimesblogslatimescomjacketcopy201207the-sound-and-the-fury-as-william-faulkner-imagined-in-colorhtml&#34;&gt;&lt;a href=&#34;https://latimesblogs.latimes.com/jacketcopy/2012/07/the-sound-and-the-fury-as-william-faulkner-imagined-in-color.html&#34;&gt;彩色小说&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/03950845da5d926d866c546eca432731e73eba4b5b70338f4cc421d33ce23271/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323130312f6267323032313031323231302e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/03950845da5d926d866c546eca432731e73eba4b5b70338f4cc421d33ce23271/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323130312f6267323032313031323231302e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;美国著名作家福克纳的成名作、被誉为20世纪最伟大的美国小说《喧哗与骚动》，出版于1929年，整页整页都是长篇的心理独白，经常是各种视角和回忆跳跃穿插在一起，而且没有标点符号，以此展示主人公混乱的内心。读者想要读懂此书，很不容易。&lt;/p&gt;
&lt;p&gt;福克纳曾经跟出版商讨论过，能不能用不同颜色的墨水，表示不同的叙述视角，囿于当时的技术条件，这个想法没能实现。&lt;/p&gt;
&lt;p&gt;现在，真的有一家出版社使用14种颜色，重新出版了这本小说的精装版，每种颜色表示在讲述一个不同的时期。该书预定今年7月6日（福克纳逝世59周年）发货，限量发行1,480本，售价345美元，目前1000本已经被预购了。&lt;/p&gt;
&lt;h3 id=&#34;ios-证书幕后原理httpchuquanme20200322ios-certificate-principle&#34;&gt;&lt;a href=&#34;http://chuquan.me/2020/03/22/ios-certificate-principle/&#34;&gt;iOS 证书幕后原理&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Apple 为了严格管理 app 的发布，制定了一套复杂的基于证书的校验机制，这对于开发者非常不友好。本文从技术面，图文并茂地介绍了 iOS 开发各种证书之间的关系及其背后的原理。&lt;/p&gt;
&lt;h3 id=&#34;新的-css-长宽比属性aspect-ratiohttpswebdevaspect-ratio&#34;&gt;&lt;a href=&#34;https://web.dev/aspect-ratio/&#34;&gt;新的 CSS 长宽比属性&lt;code&gt;aspect-ratio&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/741091fc0ced2746820aea8a3c3016268ecde02f099656c513538cc8372dfe2d/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323130312f6267323032313031333130332e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/741091fc0ced2746820aea8a3c3016268ecde02f099656c513538cc8372dfe2d/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323130312f6267323032313031333130332e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Chrome 88 浏览器支持新的 CSS 属性&lt;code&gt;aspect-ratio&lt;/code&gt;，可以设置容器的长宽比。&lt;/p&gt;
&lt;h3 id=&#34;我对软件开发的一些看法httpschriskiehlcomarticlethoughts-after-6-years&#34;&gt;&lt;a href=&#34;https://chriskiehl.com/article/thoughts-after-6-years&#34;&gt;我对软件开发的一些看法&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者总结在软件行业工作多年以后，哪些看法改变了，哪些看法没有改变。一共罗列出近30条观点，值得一看。&lt;/p&gt;
&lt;h3 id=&#34;如何将树莓派-4-代当作台式机httpsdebuggermediumcommy-impressions-on-using-a-raspberry-pi-4-as-a-desktop-replacement-ff677c885149&#34;&gt;&lt;a href=&#34;https://debugger.medium.com/my-impressions-on-using-a-raspberry-pi-4-as-a-desktop-replacement-ff677c885149&#34;&gt;如何将树莓派 4 代当作台式机？&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;树莓派 4 代的配置相当强，已经可以当作台式机。作者介绍了他的安装步骤，以及 Raspbian 和 Ubuntu 两个操作系统的比较。&lt;/p&gt;
&lt;h3 id=&#34;10个需要改掉的-typescript-编码习惯httpsstartup-ctonet10-bad-typescript-habits-to-break-this-year&#34;&gt;&lt;a href=&#34;https://startup-cto.net/10-bad-typescript-habits-to-break-this-year/&#34;&gt;10个需要改掉的 Typescript 编码习惯&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者分享了10个编写Typescript的坏习惯，并简述了原因，以及改正的建议。&lt;/p&gt;
&lt;h3 id=&#34;为什么-go-是我最喜欢的编程语言httpsmichaelstapelbergchposts2017-08-19-golang_favorite&#34;&gt;&lt;a href=&#34;https://michael.stapelberg.ch/posts/2017-08-19-golang_favorite/&#34;&gt;为什么 Go 是我最喜欢的编程语言？&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个程序员总结的 Go 语言的优点，文章没有展开，只是罗列了优点。&lt;/p&gt;
&lt;h3 id=&#34;ebook-readerhttpswwwloudreadercom&#34;&gt;&lt;a href=&#34;https://www.loudreader.com/&#34;&gt;Ebook Reader&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;浏览器里面的电子书阅读器，只要把 azw3、epub、mobi、pdf 格式的电子书拖到网页上，就能打开阅读。如果临时需要一个阅读器，这个就很方便。&lt;/p&gt;
&lt;h3 id=&#34;darkwireiohttpsgithubcomdarkwiredarkwireio&#34;&gt;&lt;a href=&#34;https://github.com/darkwire/darkwire.io&#34;&gt;Darkwire.io&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Web 端的多人在线聊天室，特色是支持端到端加密。&lt;/p&gt;
&lt;h3 id=&#34;xonshhttpsgithubcomxonshxonsh&#34;&gt;&lt;a href=&#34;https://github.com/xonsh/xonsh&#34;&gt;Xonsh&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个使用 Python 写的 Linux Shell，可以在 Bash 代码里面使用 Python 语法。&lt;/p&gt;
&lt;h3 id=&#34;filmulatorhttpsfilmulatororg&#34;&gt;&lt;a href=&#34;https://filmulator.org/&#34;&gt;Filmulator&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个开源的 Raw 格式相片编辑器。&lt;/p&gt;
&lt;h3 id=&#34;valetudohttpsgithubcomhypfervaletudo&#34;&gt;&lt;a href=&#34;https://github.com/Hypfer/Valetudo&#34;&gt;Valetudo&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;米家和石头扫地机器人的开源固件，提供一个 Web 界面进行操作。&lt;/p&gt;
&lt;h3 id=&#34;semgrephttpsgithubcomreturntocorpsemgrep&#34;&gt;&lt;a href=&#34;https://github.com/returntocorp/semgrep&#34;&gt;Semgrep&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个支持多种语言（Java、JS、Py、Ruby、TS&amp;hellip;）的代码静态分析工具，可以自定义扫描规则。&lt;/p&gt;
&lt;h3 id=&#34;text-to-handwritinghttpssaurabhdawaregithubiotext-to-handwriting&#34;&gt;&lt;a href=&#34;https://saurabhdaware.github.io/text-to-handwriting/&#34;&gt;Text to Handwriting&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/cd68a5fe273a1c107fe36dc35949a0839a24cb2e39b3248142574caa211f9531/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323130322f6267323032313032303130332e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/cd68a5fe273a1c107fe36dc35949a0839a24cb2e39b3248142574caa211f9531/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323130322f6267323032313032303130332e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这个在线的开源工具，可以将文字转为手写体，并提供图片下载。默认只支持英文，但可以自己添加中文字体，并指定背景图片。&lt;/p&gt;
&lt;h3 id=&#34;subalignerhttpsgithubcombaxtreesubaligner&#34;&gt;&lt;a href=&#34;https://github.com/baxtree/subaligner&#34;&gt;subaligner&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个开源工具，通过机器学习，自动为字幕文件生成时间轴。&lt;/p&gt;
&lt;h3 id=&#34;css-stripes-generatorhttpsstripesgeneratorcomstripe-samples&#34;&gt;&lt;a href=&#34;https://stripesgenerator.com/stripe-samples&#34;&gt;CSS Stripes Generator&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个纯 CSS 的条纹生成器，可以在线调节各种参数，网站就会生成相应的代码。&lt;/p&gt;
&lt;h3 id=&#34;archivyhttpsgithubcomarchivyarchivy&#34;&gt;&lt;a href=&#34;https://github.com/archivy/archivy/&#34;&gt;Archivy&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个开源的知识库软件，可以自己本地架设，管理个人笔记。&lt;/p&gt;
&lt;h3 id=&#34;肌肉维基httpsmusclewikicom&#34;&gt;&lt;a href=&#34;https://musclewiki.com/&#34;&gt;肌肉维基&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;英文的维基网站，提供人体每一块肌肉的详细资料。&lt;/p&gt;
&lt;h3 id=&#34;荷兰国家博物馆httpswwwrijksmuseumnlenrijksstudio&#34;&gt;&lt;a href=&#34;https://www.rijksmuseum.nl/en/rijksstudio&#34;&gt;荷兰国家博物馆&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;荷兰国家博物馆馆将收藏的71万件艺术品，都放上了网，有大量珍贵的名画，可以免费下载高清图片。&lt;/p&gt;
&lt;h3 id=&#34;python-的初学者练习题httpwwwpracticepythonorg&#34;&gt;&lt;a href=&#34;http://www.practicepython.org/&#34;&gt;Python 的初学者练习题&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/1263092af8d18e086c78b00b6d3574f8b96a58d5875b358378dc5722c4a9f8d1/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323130312f6267323032313031323230392e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/1263092af8d18e086c78b00b6d3574f8b96a58d5875b358378dc5722c4a9f8d1/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323130312f6267323032313031323230392e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;该网站提供大量英文的 Python 初学者练习题，并有详细的解答。&lt;/p&gt;
&lt;h3 id=&#34;classperthttpsclasspertcom&#34;&gt;&lt;a href=&#34;https://classpert.com/&#34;&gt;Classpert&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个在线课程搜索引擎，一共收入了各种语言的24万多门课程，包含免费课程和收费课程。&lt;/p&gt;
&lt;h3 id=&#34;akiyoshis-illusion-pageshttpwwwritsumeiacjpakitaokaindex-ehtml&#34;&gt;&lt;a href=&#34;http://www.ritsumei.ac.jp/~akitaoka/index-e.html&#34;&gt;Akiyoshi&amp;rsquo;s illusion pages&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/e3c8547e86009652e1cda31bb242302ff3f2fce5b7e0598e0ef8adfaf0529d1b/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323130312f6267323032313031313531362e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/e3c8547e86009652e1cda31bb242302ff3f2fce5b7e0598e0ef8adfaf0529d1b/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323130312f6267323032313031313531362e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;该网站是日本立命馆大学 Akiyoshi 教授的个人主页，收集了大量的视觉错觉图片。比如，随着页面滚动，你会觉得上图里面有一个图层在抖动。&lt;/p&gt;
&lt;h3 id=&#34;寄居蟹桥httpswwwtheguardiancomenvironment2021jan23how-wildlife-crossings-are-helping-reindeer-bears-and-even-crabs-aoe&#34;&gt;&lt;a href=&#34;https://www.theguardian.com/environment/2021/jan/23/how-wildlife-crossings-are-helping-reindeer-bears-and-even-crabs-aoe&#34;&gt;寄居蟹桥&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;在印度洋上的圣诞节岛（Christmas Island），每年十月或十一月，数以百万计的红蟹同时从森林中涌出，前往海洋进行交配和产卵。&lt;/p&gt;
&lt;p&gt;为了帮助它们安全通过公路，当地人在公路上建造了一座桥，专门供它们使用。&lt;/p&gt;
&lt;h3 id=&#34;地球的水和空气httpsourplntcomwater-air-earth&#34;&gt;&lt;a href=&#34;https://ourplnt.com/water-air-earth/&#34;&gt;地球的水和空气&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;如果地球上所有的水和空气集中在一起，就是下图的两个球，其中空气都以海平面的密度计算。&lt;/p&gt;
&lt;p&gt;上图中，水球的直径是1400公里，相比之下，地球的直径是12742公里。所有的生命就是靠这些水和空气而存在。&lt;/p&gt;
&lt;h3 id=&#34;软件的投入比例httpsblogfeenkcomdevelopers-spend-most-of-their-time-figuri-7aj1ocjhe765vvlln8qqbuhto&#34;&gt;&lt;a href=&#34;https://blog.feenk.com/developers-spend-most-of-their-time-figuri-7aj1ocjhe765vvlln8qqbuhto/&#34;&gt;软件的投入比例&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;1979年，美国出版了一本《软件工程与设计原理》（Principles of software engineering and design）。书里有一张图，给出了大型软件整个生命周期里面，程序员投入的时间比例。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/b79d0c7261d5dc1277e8bfe90e3eefe3074f3ccaf5d6d6a7cfe10a44747a958d/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323130312f6267323032313031323830382e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/b79d0c7261d5dc1277e8bfe90e3eefe3074f3ccaf5d6d6a7cfe10a44747a958d/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323130312f6267323032313031323830382e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;需求分析：3%&lt;/li&gt;
&lt;li&gt;系统分析：3%&lt;/li&gt;
&lt;li&gt;系统设计：5%&lt;/li&gt;
&lt;li&gt;编码：7%&lt;/li&gt;
&lt;li&gt;模块测试：8%&lt;/li&gt;
&lt;li&gt;集成测试：7%&lt;/li&gt;
&lt;li&gt;维护：67%&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;aws-的诞生httpsthreadreaderappcomthread1347677573900242944html&#34;&gt;&lt;a href=&#34;https://threadreaderapp.com/thread/1347677573900242944.html&#34;&gt;AWS 的诞生&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;2000年互联网泡沫破灭时，我在亚马逊工作。&lt;/p&gt;
&lt;p&gt;当时，资本市场已经枯竭了，无法融资，而我们每年的开销是10亿美元。最大的支出是数据中心那些昂贵的 Sun 服务器，那时 Sun 公司真是如日中天，它们的服务器是最可靠的，所有的互联网公司都在使用，但是非常昂贵。&lt;/p&gt;
&lt;p&gt;公司高层最终决定，使用 Linux 服务器替换 Sun 服务器。Linux 那时还是一种相当新颖的方案，使用它有一定的冒险性。我们把公司的未来押宝在它上面。&lt;/p&gt;
&lt;p&gt;服务器替换期间，产品开发因此停顿。我们冻结了所有新功能的交付超过一年。大量代码积压，直到完成向 Linux 的转换才能上线。收入增长随之减速，我们不得不提高了服务价格，减缓烧钱的速度。这是一个恶性循环，时间越来越少，钱也越来越少，亚马逊非常接近于破产。&lt;/p&gt;
&lt;p&gt;一旦我们开始向 Linux 过渡，就再也没有回头路了。所有人动手重构我们的代码库，为过渡做准备。按照预计，一旦服务器转换成功，我们的基础设施成本将下降80％以上。如果失败，网站将崩溃，公司将死亡。&lt;/p&gt;
&lt;p&gt;我们终于及时顺利地完成了服务器转换。对于整个工程团队来说，这是巨大的成就。网站没有任何中断，一夜之间，资本支出大幅减少。我们突然有了一个可以无限扩展的基础架构。&lt;/p&gt;
&lt;p&gt;接下来，发生了更有趣的事情。作为商品零售商，我们的销售额有巨大的季节性，每年的11月和12月的流量和收入都会激增。CEO 贝佐斯开始思考：每年当中，我们有46周的服务器容量是多余的，为什么不将其出租给其他公司呢？&lt;/p&gt;
&lt;p&gt;与此同时，他还对解耦内部的依赖关系感兴趣，一个团队可以在不受其他团队约束的情况下进行工作。整个公司开始启用松散的低耦合模型，随之而来的架构更改成为后来 AWS 的基础。&lt;/p&gt;
&lt;p&gt;这就是 AWS 的诞生背景。我记得，贝佐斯受到了电网的启发。1900年的时候，企业必须自己搞定发电机，才能开设一家商店。2000年的企业难道必须建立自己的数据中心？ 一定需要有人为企业提供网站的基础设置。&lt;/p&gt;
&lt;p&gt;虽然如果没有 AWS，云基础设施最终也将出现，但是没人知道需要花多少时间，付出多少成本？AWS 诞生以后，大大降低了创业公司的启动成本之后，创新爆炸了，现代风险投资生态系统也随之诞生了。&lt;/p&gt;
&lt;p&gt;亚马逊在2000-2003年几乎死亡。但是如果没有这场危机，公司不太可能会做出艰难的决定，转向一个全新的架构。如果没有这种转变，AWS 可能永远不会发生。所以，永远不要浪费危机带来的机会！&lt;/p&gt;
&lt;h3 id=&#34;智能坐垫httpswww19loucomforum-269-thread-88071608531317062-1-1html&#34;&gt;&lt;a href=&#34;https://www.19lou.com/forum-269-thread-88071608531317062-1-1.html&#34;&gt;智能坐垫&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;杭州本地论坛19楼有网友发帖，讲述公司给每个员工配了一个智能坐垫，“说是高科技的智能办公设备。坐在垫子上面会感应人体的很多数据，心跳、呼吸、坐姿正不正确之类的，连到自己手机上就可以看。但是，她没有想到，所有数据都上传到后台。有一天，公司的 HR 跟她说：“你为什么每天上午10点到10点半都不在工位上啊？带薪拉屎去了吗，小心老板扣你奖金哦！” 她顿时有一种上班被监控，像坐牢一样的感觉。&lt;/p&gt;
&lt;h3 id=&#34;华为的-harmonyos-是什么httpsarstechnicacomgadgets202102harmonyos-hands-on-huaweis-android-killer-is-just-android&#34;&gt;&lt;a href=&#34;https://arstechnica.com/gadgets/2021/02/harmonyos-hands-on-huaweis-android-killer-is-just-android/&#34;&gt;华为的 HarmonyOS 是什么？&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个老外安装了 HarmonyOS 进行体验，为了得到源码，华为甚至要他提供护照照片。他研究以后，认为 HarmonyOS （上图）其实只是 Android 10 的一个分支。&lt;/p&gt;
&lt;h3 id=&#34;为什么-haskell-是我们的首选httpswwwfoxhoundsystemsblogwhy-haskell-for-production&#34;&gt;&lt;a href=&#34;https://www.foxhound.systems/blog/why-haskell-for-production/&#34;&gt;为什么 Haskell 是我们的首选&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者使用 Haskell 作为主要的开发语言，本文解释了原因，读了才知道 Haskell 原来这么强。文章里面有一些代码的小例子，但是总体上以文字说明为主。&lt;/p&gt;
&lt;h3 id=&#34;如何成为数据工程师httpskhashtamovcomenhow-to-become-a-data-engineer&#34;&gt;&lt;a href=&#34;https://khashtamov.com/en/how-to-become-a-data-engineer/&#34;&gt;如何成为数据工程师&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这篇文章总结了数据工程师的需要掌握的技能和工具。&lt;/p&gt;
&lt;h3 id=&#34;关闭旧-api-的正确方法httpshttptoolkittechbloghow-to-turn-off-your-old-apis&#34;&gt;&lt;a href=&#34;https://httptoolkit.tech/blog/how-to-turn-off-your-old-apis/&#34;&gt;关闭旧 API 的正确方法&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;如果 API 需要变更或关闭，并不是给用户发一个通知那么简单，本文教你应该怎么做。&lt;/p&gt;
&lt;h3 id=&#34;coding-fontshttpscoding-fontscss-trickscom&#34;&gt;&lt;a href=&#34;https://coding-fonts.css-tricks.com/&#34;&gt;Coding Fonts&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;代码编辑器使用什么字体？ CSS Tricks 推出的这个在线工具，可以浏览各种不同字体的渲染效果。帮助大家选择代码字体。&lt;/p&gt;
&lt;h3 id=&#34;notifyhttpsgithubcomnikoksrnotify&#34;&gt;&lt;a href=&#34;https://github.com/nikoksr/notify&#34;&gt;Notify&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个 Go 语言的库，用来通过各种渠道向用户发通知，支持 Discord、Email、Microsoft Teams、Slack、Telegram 等。&lt;/p&gt;
&lt;h3 id=&#34;supercookiehttpsgithubcomjonasstrehlesupercookie&#34;&gt;&lt;a href=&#34;https://github.com/jonasstrehle/supercookie&#34;&gt;Supercookie&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;越来越多的浏览器限制使用 Cookie，这个库演示了如何使用网页图标 Favicon 来追踪用户，效果惊人。&lt;/p&gt;
&lt;h3 id=&#34;epubtohttpsepubto&#34;&gt;&lt;a href=&#34;https://epub.to/&#34;&gt;EPUB.to&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这个网站可以将 EPUB 格式的电子书转为其他格式，也可以将其他格式转为 EPUB。&lt;/p&gt;
&lt;h3 id=&#34;remark42httpsgithubcomumputunremark42-1&#34;&gt;&lt;a href=&#34;https://github.com/umputun/remark42&#34;&gt;Remark42&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个开源的、可以自己搭建的网站留言服务。&lt;/p&gt;
&lt;h3 id=&#34;violentmonkeyhttpsviolentmonkeygithubio&#34;&gt;&lt;a href=&#34;https://violentmonkey.github.io/&#34;&gt;Violentmonkey&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个浏览器 userscript 的管理器，可以看作是使用最新 WebExtension API 的 Greasemonkey 升级版。&lt;/p&gt;
&lt;h3 id=&#34;react-darkreaderhttpsgithubcomturkydenreact-darkreader&#34;&gt;&lt;a href=&#34;https://github.com/Turkyden/react-darkreader&#34;&gt;react-darkreader&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个 React 组件，允许网站在暗模式和亮模式之间切换。&lt;/p&gt;
&lt;h3 id=&#34;build-your-own-xhttpsgithubcomdanistefanovicbuild-your-own-x&#34;&gt;&lt;a href=&#34;https://github.com/danistefanovic/build-your-own-x&#34;&gt;Build your own x&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这个仓库专门收集各种教程，教你如何自己实现各种软件，比如 Web 服务器、BT 下载客户端、Git、数据库等等。&lt;/p&gt;
&lt;h3 id=&#34;how-music-taste-evolvedhttpspuddingcool201703music-historyindexhtml&#34;&gt;&lt;a href=&#34;https://pudding.cool/2017/03/music-history/index.html&#34;&gt;How Music Taste Evolved&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这个网站提供 1958 - 2016 每年美国最流行的五首歌曲，可以在线试听片段，了解美国大众音乐口味的变化。&lt;/p&gt;
&lt;h3 id=&#34;应用程序启动画面库httpsplashscreenssourceforgenetwordphp&#34;&gt;&lt;a href=&#34;http://splashscreens.sourceforge.net/word.php&#34;&gt;应用程序启动画面库&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/f12f81a9b84267ec9d5f24cda7f274a51c3fb4dcd97030d5ee1a7b62d7624168/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323130322f6267323032313032303130342e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/f12f81a9b84267ec9d5f24cda7f274a51c3fb4dcd97030d5ee1a7b62d7624168/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323130322f6267323032313032303130342e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这个仓库收集各种程序各个版本的开机画面。上图是 Word95 的启动画面。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://gabrielgambetta.com/computer-graphics-from-scratch/&#34;&gt;《计算机图形学从零讲起》&lt;/a&gt;（Computer Graphics from Scratch）&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/3421e7c7060a1628eefba0a9e3b6fdd5e7232e5dc50c23021357f2e2f4db4388/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323130322f6267323032313032303430332e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/3421e7c7060a1628eefba0a9e3b6fdd5e7232e5dc50c23021357f2e2f4db4388/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323130322f6267323032313032303430332e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;aiartistsorghttpsaiartistsorgai-generated-art-tools&#34;&gt;&lt;a href=&#34;https://aiartists.org/ai-generated-art-tools&#34;&gt;AIArtists.org&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这个网站收集所有可以生成艺术品的 AI 工具，比如 AI 画像、AI 音乐等等。&lt;/p&gt;
&lt;h3 id=&#34;habitat-67httpswwwtheguardiancomcities2015may13habitat-67-montreal-expo-moshe-safdie-history-cities-50-buildings-day-35&#34;&gt;&lt;a href=&#34;https://www.theguardian.com/cities/2015/may/13/habitat-67-montreal-expo-moshe-safdie-history-cities-50-buildings-day-35&#34;&gt;Habitat 67&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;1967年，加拿大为了庆祝建国100周年，在蒙特利尔举办了一次“世界博览会”。当时还是麦吉尔大学建筑系硕士研究生的萨夫迪（Moshe Safdie），为这届博览会提交了一个建筑公寓的设计，命名为 Habitat 67。&lt;/p&gt;
&lt;p&gt;这个公寓由各种预制的混凝土单元连接而成，这样可以降低建造成本。同时，这些单元以不规则的方式组合成一间间公寓，每间公寓都带有阳台和花园，可以与自然接触。萨夫迪希望这为未来的城市住宅，提供一个解决方案。&lt;/p&gt;
&lt;p&gt;这栋公寓楼建成后，保留至今，但是并没有达成设计师的目标。首先，它一点都不便宜，政府一开始设置了昂贵的租金，后来变为私人所有的公寓楼，目前的市价也很贵，并不是面向大众的住宅。&lt;/p&gt;
&lt;p&gt;其次，由于建造过程非常匆忙，造成建筑质量不好，混凝土有渗水现象，霉菌也渗入了通风系统。但是，这种种问题不影响它成为蒙特利尔市一个壮观的风景。&lt;/p&gt;
&lt;h3 id=&#34;一对巴西夫妻httpsmymodernmetcomsebastiao-salgado-forest&#34;&gt;&lt;a href=&#34;https://mymodernmet.com/sebastiao-salgado-forest/&#34;&gt;一对巴西夫妻&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;20年坚持种树，将一个荒瘠的山谷改造成绿色森林，对比效果惊人。&lt;/p&gt;
&lt;h3 id=&#34;人工心脏的由来和现状httpswwwifanrcom1399733&#34;&gt;&lt;a href=&#34;https://www.ifanr.com/1399733&#34;&gt;人工心脏的由来和现状&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;很多严重的心脏病患者需要换心，但是心脏移植的来源非常稀少，人工心脏正是在这种背景下发展起来的。本文介绍了人工心脏的发展状况，有大量插图。&lt;/p&gt;
&lt;h3 id=&#34;比汽车还小的飞机httpswwwmyzakercomarticle601fd17a8e9f097b1b45c7db&#34;&gt;&lt;a href=&#34;https://www.myzaker.com/article/601fd17a8e9f097b1b45c7db&#34;&gt;比汽车还小的飞机&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Honda Jet 是日本本田公司生产的小飞机，也是二战后日本唯一的国产飞机，客舱长度5.43米，只能搭载四位乘客，比某些七座的公务车还要小巧。本文介绍这架飞机的历史。&lt;/p&gt;
&lt;h3 id=&#34;npm-的设计缺陷httpswwwbleepingcomputercomnewssecurityresearcher-hacks-over-35-tech-firms-in-novel-supply-chain-attack&#34;&gt;&lt;a href=&#34;https://www.bleepingcomputer.com/news/security/researcher-hacks-over-35-tech-firms-in-novel-supply-chain-attack/&#34;&gt;npm 的设计缺陷&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个程序员利用 npm 的设计缺陷，成功进入了35个主要公司的内网系统，包括Microsoft、Apple、PayPal、Tesla、Uber 等。&lt;/p&gt;
&lt;h3 id=&#34;华为的-exagear-与俄罗斯同名软件是什么关系httpszhuanlanzhihucomp263519125&#34;&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/263519125&#34;&gt;华为的 ExaGear 与俄罗斯同名软件是什么关系？&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;华为的 ExaGear 是一个 ARM 计算机的应用程序，可以运行 x86 程序。俄罗斯有一个同名软件，华为从未说明两者有何关系。&lt;/p&gt;
&lt;h3 id=&#34;反对-orm-仇恨httpswwwjaksomeblogobjection-to-orm-hatred&#34;&gt;&lt;a href=&#34;https://www.jakso.me/blog/objection-to-orm-hatred&#34;&gt;反对 ORM 仇恨&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;ORM 的作用是将数据库关系（relation）映射成面向对象模型（object），很多人反对增加这种用法，认为不如直接使用 SQL 语句。作者提出，很多情况下使用 SQL 查询库，生成复杂的 SQL 语句，是有必要的。&lt;/p&gt;
&lt;h3 id=&#34;我不想再做前端了httpswwwaskonommcomblogi-dont-want-to-do-frontend-anymore&#34;&gt;&lt;a href=&#34;https://www.askonomm.com/blog/i-dont-want-to-do-frontend-anymore&#34;&gt;我不想再做前端了&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者讲述了为什么对前端开发感到厌倦。&lt;/p&gt;
&lt;h3 id=&#34;为什么不应该使用-cloudflare-的免费层httpspawelurbanekcomcloudflare-free-plan&#34;&gt;&lt;a href=&#34;https://pawelurbanek.com/cloudflare-free-plan&#34;&gt;为什么不应该使用 Cloudflare 的免费层？&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Cloudflare 是一个 CDN 服务提供商，很多人使用它的免费层。作者发现，免费层有时会限制访问，而且不向站长提供任何反馈，让你在不知不觉之间就丢失了很多用户。&lt;/p&gt;
&lt;h3 id=&#34;调查来自印度的9000万个请求httpsphabricatorwikimediaorgt2737416815828&#34;&gt;&lt;a href=&#34;https://phabricator.wikimedia.org/T273741#6815828&#34;&gt;调查来自印度的9000万个请求&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;维基百科发现，每天有来自印度不同 ISP 的9000万个请求，都在读取一张花朵的照片，占到网站总流量的20%。这些请求都是真实的，不像是 DDoS 攻击，但是 HTTP 请求的头信息没有提供任何线索。&lt;/p&gt;
&lt;p&gt;这是官方的调查过程，讲述如何从有限的信息里面，推测出到底这是怎么一回事。&lt;/p&gt;
&lt;h3 id=&#34;可视化频谱httpsborismusgithubiospectrogram&#34;&gt;&lt;a href=&#34;https://borismus.github.io/spectrogram/&#34;&gt;可视化频谱&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个网页工具，通过电脑麦克风捕捉各种声音，然后将它们的频率图显示在网页上。&lt;/p&gt;
&lt;h3 id=&#34;pcphttpsgithubcomdennis-trapcp&#34;&gt;&lt;a href=&#34;https://github.com/dennis-tra/pcp&#34;&gt;pcp&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个命令行的点对点文件传输软件，用法非常简单。一个命令上传文件，然后返回一个接收码，另一台电脑使用接收码接收文件。&lt;/p&gt;
&lt;h3 id=&#34;视频的自然语言搜索httpsgithubcomhaltakovnatural-language-youtube-search&#34;&gt;&lt;a href=&#34;https://github.com/haltakov/natural-language-youtube-search&#34;&gt;视频的自然语言搜索&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这一个概念性的开源软件，它会下载 Youtube 视频，提取每一帧进行物体识别，然后支持用户使用英语搜索，比如搜索“fire truck”（消防车）就会跳出上面的画面。&lt;/p&gt;
&lt;h3 id=&#34;写给文科生的数学httpscourseslumenlearningcomwaymakermath4libarts&#34;&gt;&lt;a href=&#34;https://courses.lumenlearning.com/waymakermath4libarts/&#34;&gt;写给文科生的数学&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一本在线阅读的英文教科书，向文科生介绍数学知识，涉及逻辑学、图论、概率论等，但是不涉及微积分。&lt;/p&gt;
&lt;h3 id=&#34;learn-x-by-doing-yhttpsaquadzngithubiolearn-x-by-doing-y&#34;&gt;&lt;a href=&#34;https://aquadzn.github.io/learn-x-by-doing-y&#34;&gt;Learn X by doing Y&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这个网站收集以学习为目的各种实战教程（比如自己动手写数据库、编译器等等），按照计算机语言进行分类，帮助读者快速查找可以自己动手做的简单项目。&lt;/p&gt;
&lt;h3 id=&#34;2020年崛起的-javascript-新工具httpsrisingstarsjsorg2020en&#34;&gt;&lt;a href=&#34;https://risingstars.js.org/2020/en&#34;&gt;2020年崛起的 JavaScript 新工具&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这是每年一度的调查，根据过去一年中 GitHub 新增的 Star 数量，对各个领域的 JavaScript 工具进行排名，可以快速掌握新出现的主流工具。&lt;/p&gt;
&lt;h3 id=&#34;斯坦福大学-ios-开发课程httpscs193psitesstanfordedu&#34;&gt;&lt;a href=&#34;https://cs193p.sites.stanford.edu/&#34;&gt;斯坦福大学 iOS 开发课程&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;斯坦福大学最新的2020年春季 iOS 开发教程，有讲课视频、PPT、讲义和作业。&lt;/p&gt;
&lt;h3 id=&#34;前苏联那些奇怪造型的建筑物httpsbbshupucom40618732html&#34;&gt;&lt;a href=&#34;https://bbs.hupu.com/40618732.html&#34;&gt;前苏联那些奇怪造型的建筑物&lt;/a&gt;&lt;/h3&gt;
&lt;h3 id=&#34;youtube-计算机科学课程资源httpswebarchiveorgweb20210210143025httpslaconicmlcomcomputer-science-curriculum-youtube-videos&#34;&gt;&lt;a href=&#34;https://web.archive.org/web/20210210143025/https://laconicml.com/computer-science-curriculum-youtube-videos/&#34;&gt;Youtube 计算机科学课程资源&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Youtube 上面有很多优秀的计算机科学的免费教学视频，本文整理了一张清单，列出了其中最好的一些课程，覆盖计算机本科的所有领域。&lt;/p&gt;
&lt;h3 id=&#34;如何增加运气的表面积httpswwwcodusoperandicompostsincreasing-your-luck-surface-area&#34;&gt;&lt;a href=&#34;https://www.codusoperandi.com/posts/increasing-your-luck-surface-area&#34;&gt;如何增加运气的表面积&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;我们一生中，都会遇到一些偶然性。有时，好运会降临到我们身上。这时，你需要的就是，让好运产生最大的效果。&lt;/p&gt;
&lt;p&gt;如果你把好运想象成一根曲线，那么好运的效果最大化，就是把曲线下面的表面积最大化。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/ffe17db037408fef8b7bf3ba037671bf514866c20c8b44bfb85e70c07adff059/68747470733a2f2f63646e2e6265656b6b612e636f6d2f626c6f67696d672f61737365742f3230323130322f6267323032313032303130362e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/ffe17db037408fef8b7bf3ba037671bf514866c20c8b44bfb85e70c07adff059/68747470733a2f2f63646e2e6265656b6b612e636f6d2f626c6f67696d672f61737365742f3230323130322f6267323032313032303130362e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这可以用一个方程式表达。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;L = D * T
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;其中，L 代表好运，D 代表你在相关方面的准备，T 代表有多少人知道。&lt;/p&gt;
&lt;p&gt;这个方程式的意思就是，你做的准备越多，知道的人越多，那么好运的表面积将越大。画成图就是上面这样，竖轴是你的准备，横轴是你的宣传，这两者越大，矩形面积就越大。&lt;/p&gt;
&lt;h3 id=&#34;微增长时代&#34;&gt;微增长时代&lt;/h3&gt;
&lt;p&gt;中国经济高速增长了40年，我们每个人都受益。但是接下来，可能不会增长这么快了。&lt;/p&gt;
&lt;p&gt;我最近读到一篇&lt;a href=&#34;https://mp.weixin.qq.com/s/NdNv3LiO_3IxrgyeG5Xubw&#34;&gt;微信公号的文章&lt;/a&gt;，很赞同它的观点，忍不住想分享给大家。文章的大意是，中国经济的微增长时代已经到来。下面就是他的推理逻辑，大家看看是不是这么一回事。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;经济最终是靠消费带动，而最终消费的动力主要来自三点：&lt;/p&gt;
&lt;p&gt;1、孩子；
2、年轻的女人；
3、技术的更新迭代。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;作者认为，最强的消费动力就是上面三个来源，但是它们都在消失。首先，中国的人口已经不增长了，新生儿越来越少，2020年&lt;a href=&#34;https://www.sohu.com/a/449654010_161795&#34;&gt;新生儿数量&lt;/a&gt;是几十年来最低的。&lt;/p&gt;
&lt;p&gt;其次，以互联网 + 无线通信为代表的新技术，对消费的推动也到头了。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“现在互联网技术风口耗尽了，互联网大厂连菜贩子的生意都抢，大部分行业跟餐饮业一样，一片红海。十家创业九家赔，跟炒股似的，创业机会明显变少，大家对贷款的需求也就不那么大了，慢慢也就不敢去创业了。”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;一旦消费无法带动经济增长，就是欧洲和日本现在的样子。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“欧洲和日本的状态差不多，大家消费欲望很低，生孩子欲望也不行，创业冲动也就那样，毕竟大家都不花钱，你创业产品卖给谁？”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;政府为了刺激经济，发了很多货币，这些钱都集中到富人手里。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;……富人拿去买房、买资产、买股票什么的，并没有通过做买卖发到基层老百姓手里，所以大家能看到股市、房地产持续走高，超市里的东西价格变化却没那么大。&lt;/p&gt;
&lt;p&gt;去年不知道从哪出来一句话，“富人通胀，穷人通缩”，说的就是这事。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;富豪阶层有大量的钱投资不出去，只好去追那些少数优质资产，最后把那些资产追成了天价。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;股市看着形势一片大好，可是在很多人看来，几乎遭受了一波股灾，因为只有少数头部公司一直在上涨，剩下的公司不但没涨，还在一直跌，因为这些股票的筹码也被抽出来投入到头部公司去了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这就是微增长时代的后果：贫富分化越来越大，股价分化越来越大，行业的分化也越来越大。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;明显，只有几个行业保持迅速增长，其他行业会陷入长期的缓慢增长，甚至干脆停了。现在其实很多行业的从业者，已经感受到了行业停止增长后的效果，比如很多行业的工资也是十年不涨，但是互联网的巨头工资却屡创新高。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;这就是现实，一方面，整体经济的增长速度放慢；另一方面，出现了前所未有的两极分化。&lt;/strong&gt; 作者提出了两个应对方法：第一，尽量减缓人口减少；第二，寻找新的技术突破，创造新的经济增长点，保证就业和刺激消费。&lt;/p&gt;
&lt;p&gt;人口趋势恐怕很难改变，但是，技术突破是可以追踪的， &lt;strong&gt;尽可能追踪和理解新技术，丰富自己的技能，寻找新的机会，避免被微增长时代埋葬，做一个&lt;a href=&#34;http://www.ruanyifeng.com/survivor/&#34;&gt;未来世界的幸存者&lt;/a&gt;。&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;火星降落伞httpsgithubcomtanyafishparachute&#34;&gt;&lt;a href=&#34;https://github.com/tanyafish/parachute&#34;&gt;火星降落伞&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;毅力号火星探测车的降落伞是特别设计的，内嵌了信息编码，可以用于摄像机校准。&lt;/p&gt;
&lt;p&gt;橙色条纹为1，白色条纹为0，七个条纹为一组，对应的英语字母为“DARE MIGHTY THINGS”（挑战不可思议的事情）。这是研发单位“美国宇航局喷气推进实验室”（JPL） 刻在墙上的格言。另外，降落伞的最外圈为 JPL 的坐标。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://projects.noahliebman.net/encodemightythings/&#34;&gt;Encode Mighty Things&lt;/a&gt;，一个在线工具，让你把单词编码成毅力号火星探测车的降落伞条纹。&lt;/p&gt;
&lt;h3 id=&#34;斑马条纹的作用httpswwwzmesciencecomecologyanimals-ecologyhow-zebra-stripes-insects-04232&#34;&gt;&lt;a href=&#34;https://www.zmescience.com/ecology/animals-ecology/how-zebra-stripes-insects-04232/&#34;&gt;斑马条纹的作用&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;大部分科学家认为，斑马进化出条纹，是为了避免蚊虫叮咬。条纹使得蚊虫感到眩晕，无法停在皮肤上。美国加州大学戴维斯分校为了证实这个假说，做了一个实验，同时找了马和斑马，让马穿上条纹外套，看看蚊虫能不能区分。&lt;/p&gt;
&lt;p&gt;结果发现，马和斑马都吸引了相同数量的蚊虫，但是一旦靠近，蚊虫就倾向于飞过穿了条纹外套的马，马被叮咬的次数减少了十倍。这证实了斑马的外观确实有助于减少叮咬。&lt;/p&gt;
&lt;h3 id=&#34;在北极挖比特币httpsmpweixinqqcoms-g8ybnkbivvodq4i5zbisg&#34;&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/-G8YBnKbiVVODQ4I5zBIsg&#34;&gt;在北极挖比特币&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一家名为 BitCluster 的俄国公司，建立了世界上第一个位于北极圈内的比特币矿场。那里电费便宜，而且气温有助于散热。本文使用大量图片，介绍这个矿场的情况。&lt;/p&gt;
&lt;h3 id=&#34;实体的元素周期表httpswwwmobile01comtopicdetailphpf181t6304317&#34;&gt;&lt;a href=&#34;https://www.mobile01.com/topicdetail.php?f=181&amp;amp;t=6304317&#34;&gt;实体的元素周期表&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;淘宝有出售高纯度的金属元素立方体，一个台湾网友就买来做了实体的元素周期表。&lt;/p&gt;
&lt;h3 id=&#34;esbuild-为什么这么快httpsesbuildgithubiofaqwhy-is-esbuild-fast&#34;&gt;&lt;a href=&#34;https://esbuild.github.io/faq/#why-is-esbuild-fast&#34;&gt;esbuild 为什么这么快？&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;esbuild 是新一代的 JavaScript 打包工具，以速度快著称，耗时只有 Webpack 的2%～3%。本文是该软件的作者谈它为什么这么快。&lt;/p&gt;
&lt;h3 id=&#34;常见的-nginx-不安全配置httpsblogdetectifycom20201110common-nginx-misconfigurations&#34;&gt;&lt;a href=&#34;https://blog.detectify.com/2020/11/10/common-nginx-misconfigurations/&#34;&gt;常见的 Nginx 不安全配置&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Nginx 是最常见的 Web 服务器，本文介绍四个常见的配置错误，会降低网站的安全性。&lt;/p&gt;
&lt;h3 id=&#34;我作为独立开发者的第三年httpsmtlynchiosolo-developer-year-3&#34;&gt;&lt;a href=&#34;https://mtlynch.io/solo-developer-year-3/&#34;&gt;我作为独立开发者的第三年&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者辞职作为独立开发者，头两年的总收入不到1万美元，第三年的目标是2万美元。但是一天他偶然在网上发了一个帖子，讲述自己用树莓派做了一个服务器管理设备（上图），居然为他带来了6.3万美元的收入，而且还可以成立公司。&lt;/p&gt;
&lt;h3 id=&#34;openjdk-是如何移植到64位-arm-架构的httpsdevelopersredhatcomblog20210201how-red-hat-ported-openjdk-to-64-bit-arm-a-community-history&#34;&gt;&lt;a href=&#34;https://developers.redhat.com/blog/2021/02/01/how-red-hat-ported-openjdk-to-64-bit-arm-a-community-history/&#34;&gt;OpenJDK 是如何移植到64位 ARM 架构的？&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这篇是回忆文章。2011年，ARM 公司准备推出64位的 CPU，用于服务器，应用软件需要跟上，但是当时 OpenJDK 只能在 x86 架构运行。作者在 RedHat 和 Oracle 公司的支持下，开始从事将 OpenJDK 移植到 AArch64 架构的工作，一开始非常困难，因为硬件还没生产出来，只能在虚拟机上模拟开发。&lt;/p&gt;
&lt;h3 id=&#34;origin-与-site-的区别httpsjub0bscomposts2021-01-29-great-samesite-confusion&#34;&gt;&lt;a href=&#34;https://jub0bs.com/posts/2021-01-29-great-samesite-confusion/&#34;&gt;origin 与 site 的区别&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;浏览器有一个“同源政策”（same origin policy），Cookie 设置有一个“同站属性”（SameSite）。这篇文章介绍了 origin 和 site 的区别是什么。&lt;/p&gt;
&lt;h3 id=&#34;使用服务器事件向前端发送日志httpsamittallapragadagithubiodockerfastapipython20201223server-side-eventshtml&#34;&gt;&lt;a href=&#34;https://amittallapragada.github.io/docker/fastapi/python/2020/12/23/server-side-events.html&#34;&gt;使用服务器事件向前端发送日志&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;服务器事件（SSE）是服务器向前端发送消息的一种方法，本文介绍了它的概念，然后给出了一个实例，通过服务器事件向浏览器发送服务器日志。&lt;/p&gt;
&lt;h3 id=&#34;什么是霍夫曼编码httpswwwbaseclassiohuffman-coding&#34;&gt;&lt;a href=&#34;https://www.baseclass.io/huffman-coding/&#34;&gt;什么是霍夫曼编码？&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/f275ad398f1f162689dae38fd2f78a7d10bca02f1477bc667475a60a517f7766/68747470733a2f2f63646e2e6265656b6b612e636f6d2f626c6f67696d672f61737365742f3230323130322f6267323032313032323230322e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/f275ad398f1f162689dae38fd2f78a7d10bca02f1477bc667475a60a517f7766/68747470733a2f2f63646e2e6265656b6b612e636f6d2f626c6f67696d672f61737365742f3230323130322f6267323032313032323230322e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;霍夫曼编码是经典的压缩算法，&lt;a href=&#34;https://jvns.ca/blog/2015/02/22/how-gzip-uses-huffman-coding/&#34;&gt;GZIP&lt;/a&gt; 就使用它。本文是我见过最简单的解释，可以在五分钟内理解这个算法的实现原理。&lt;/p&gt;
&lt;h3 id=&#34;github-skylinehttpsskylinegithubcom&#34;&gt;&lt;a href=&#34;https://skyline.github.com/&#34;&gt;GitHub Skyline&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;GitHub 官方出品，将你过去一年的提交统计转成一个三维的直方图，并且提供 stl 文件下载，进行 3D 打印。&lt;/p&gt;
&lt;h3 id=&#34;stockfish-12httpsstockfishchessorg&#34;&gt;&lt;a href=&#34;https://stockfishchess.org/&#34;&gt;Stockfish 12&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;开源的国际象棋引擎，号称比人类的世界冠军还要强大。官方提供 Mac App 下载，并且有许多其他操作系统的第三方 App。&lt;/p&gt;
&lt;h3 id=&#34;raysohttpsrayso&#34;&gt;&lt;a href=&#34;https://ray.so/&#34;&gt;Ray.so&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这个网站可以生成漂亮的代码截图，颜色、阴影、背景都可以调整。&lt;/p&gt;
&lt;h3 id=&#34;cockpithttpscockpit-projectorg&#34;&gt;&lt;a href=&#34;https://cockpit-project.org/&#34;&gt;Cockpit&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Linux 服务器的 Web 控制台。&lt;/p&gt;
&lt;h3 id=&#34;finger-poolhttpsgithubcomvictorqribeirofingerpool&#34;&gt;&lt;a href=&#34;https://github.com/victorqribeiro/fingerPool&#34;&gt;Finger Pool&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;开源的 2D 网页桌球游戏，撞击效果做得很好。&lt;/p&gt;
&lt;h3 id=&#34;utmhttpsmacgetutmapp&#34;&gt;&lt;a href=&#34;https://mac.getutm.app/&#34;&gt;UTM&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;MacOS 的虚拟机应用，可以很轻松地在苹果电脑上运行 Windows 和 Linux，属于 qemu 的 UI 封装，另有 &lt;a href=&#34;https://github.com/utmapp/UTM&#34;&gt;iOS 的虚拟机&lt;/a&gt;，在 iPhone 和 iPad 上运行 Windows。&lt;/p&gt;
&lt;h3 id=&#34;嘎-rsshttpsgithubcomzhaooleegarss&#34;&gt;&lt;a href=&#34;https://github.com/zhaoolee/garss&#34;&gt;嘎 RSS!&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;使用免费的 GitHub Actions，定时抓取一系列 RSS 源，生成一个页面，还支持邮件通知。&lt;/p&gt;
&lt;h3 id=&#34;bing-wallpaperhttpsgithubcomniumoobing-wallpaper&#34;&gt;&lt;a href=&#34;https://github.com/niumoo/bing-wallpaper&#34;&gt;Bing Wallpaper&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这个项目使用 GitHub Actions，收集 Bing 搜索引擎每天的壁纸，提供下载，详见&lt;a href=&#34;https://www.wdbyte.com/2021/03/bing-wallpaper-github-action/&#34;&gt;这篇说明文章&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&#34;python-初学者教程httpslearnbyexamplegithubio100_page_python_introintroductionhtml100-page-python-intro&#34;&gt;&lt;a href=&#34;https://learnbyexample.github.io/100_page_python_intro/introduction.html&#34;&gt;Python 初学者教程&lt;/a&gt;（100 Page Python Intro）&lt;/h3&gt;
&lt;p&gt;一个面向初学者的 Python 英文教程，免费在线阅读，打印出来长度100页左右。&lt;/p&gt;
&lt;h3 id=&#34;10万亿像素的夜空httpsviewerlegacysurveyorgic-2800&#34;&gt;[10万亿像素的夜空](&lt;a href=&#34;https://viewer.legacysurvey.org/#IC&#34;&gt;https://viewer.legacysurvey.org/#IC&lt;/a&gt; 2800)&lt;/h3&gt;
&lt;p&gt;全球多个天文台合作，经过6年的1405个夜晚的观测，将天文望远镜拍摄到的照片，合并成一张10万亿像素的图片，包含超过十亿个星系，覆盖整个天空的三分之一。另有&lt;a href=&#34;https://kottke.org/21/02/10-terapixel-image-of-the-night-sky&#34;&gt;介绍文章&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&#34;frinkiachttpsfrinkiaccom&#34;&gt;&lt;a href=&#34;https://frinkiac.com/&#34;&gt;Frinkiac&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这个网站收集了300万张动画片《辛普森一家》的截图，可以按照主题搜索。类似的网站还有 &lt;a href=&#34;https://morbotron.com/&#34;&gt;Futurama 的图片搜索&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&#34;计算机网络系统方法httpsbooksystemsapproachorg&#34;&gt;&lt;a href=&#34;https://book.systemsapproach.org/&#34;&gt;计算机网络：系统方法&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;《计算机网络：系统方法》（Computer Networks: A Systems Approach）一书的在线阅读。&lt;/p&gt;
&lt;h3 id=&#34;故宫博物院藏品总目httpszm-digicoldpmorgcn&#34;&gt;&lt;a href=&#34;https://zm-digicol.dpm.org.cn/&#34;&gt;故宫博物院藏品总目&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;故宫博物院官方的藏品目录，共收入180多万件，可以在线搜索，部分藏品带有彩色照片和文字介绍。&lt;/p&gt;
&lt;h3 id=&#34;react-资源库搜索httpsbestofreactjscomsearch&#34;&gt;&lt;a href=&#34;https://bestofreactjs.com/search&#34;&gt;React 资源库搜索&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这个网站收集各种 React 相关的开源库，按照用途进行分类，相关的还有 &lt;a href=&#34;https://bestofvue.com/search&#34;&gt;Vue.js 资源库搜索&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&#34;茗山寺httpsweibocom1239344585jb8nbmczs&#34;&gt;&lt;a href=&#34;https://weibo.com/1239344585/JB8NBmczS&#34;&gt;茗山寺&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;茗山寺位于四川省安岳县的虎头山巅，60多座北宋时期的佛像，雕刻于绝壁之上。&lt;/p&gt;
&lt;p&gt;一千年的风沙，都留在了佛像上。&lt;/p&gt;
&lt;h3 id=&#34;lackrackhttpswebarchiveorgweb20210205010435httpswikieth0nlindexphplackrack&#34;&gt;&lt;a href=&#34;https://web.archive.org/web/20210205010435/https://wiki.eth0.nl/index.php/LackRack&#34;&gt;LackRack&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;宜家商场出售的 LackRack 小桌子，长 x 宽 x 高为 55cm x 55cm x 45cm。由于它跟19寸服务器的大小很适配，常常被程序员用作简易机柜。它还可以多个组合在一起。不用的时候，它可以多个叠在一起节省空间。它在中国的售价是每个39元人民币。&lt;/p&gt;
&lt;h3 id=&#34;ovh-主机公司httpswwwovhienewspresscpl1786fire-our-strasbourg-site的一个法国机房3月10日发生严重火灾&#34;&gt;&lt;a href=&#34;https://www.ovh.ie/news/press/cpl1786.fire-our-strasbourg-site&#34;&gt;OVH 主机公司&lt;/a&gt;的一个法国机房3月10日发生严重火灾&lt;/h3&gt;
&lt;p&gt;所有服务器都被烧毁。这件事情的启示是，如果你的数据和数据备份在同一个机房，那么一旦机房没了，你的数据将彻底丢失。&lt;/p&gt;
&lt;h3 id=&#34;中国的-risc-v-计划和夜莺httpsinterconnectedblogriscv-china-nightingaleschinese-version&#34;&gt;&lt;a href=&#34;https://interconnected.blog/riscv-china-nightingales/#chinese-version&#34;&gt;中国的 RISC-V 计划和夜莺&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一篇评论文章，介绍中国国产芯片的动态，同时有英文版和中文版。&lt;/p&gt;
&lt;h3 id=&#34;len-sassaman-的故事httpsleung-btcmediumcomlen-sassaman-and-satoshi-e483c85c2b10&#34;&gt;&lt;a href=&#34;https://leung-btc.medium.com/len-sassaman-and-satoshi-e483c85c2b10&#34;&gt;Len Sassaman 的故事&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;伦纳德·萨萨曼（Leonard Sassaman）是一个传奇程序员，在区块链的发明过程中发挥了重大作用，但是由于忧郁症在2011年自杀身亡。本文介绍了伦纳德的一生，以及他的贡献。&lt;/p&gt;
&lt;p&gt;比特币发明人中本聪的最后一次留言，就发生在伦纳德自杀前的两个月，“我已经转移到其他事情上，将来可能不会出现。” 伦纳德是否有可能就是中本聪？&lt;/p&gt;
&lt;h3 id=&#34;免费增值是产品启动的有效方式httpswwwchrisfrantzcomhow-to-kill-a-unicorn&#34;&gt;&lt;a href=&#34;https://www.chrisfrantz.com/how-to-kill-a-unicorn/&#34;&gt;免费增值是产品启动的有效方式&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文以设计工具市场为例，研究了免费增值策略如何帮助小公司击败大公司，占领市场。早期，设计师都用付费的 Adobe 工具，后来免费软件 Canva、Sketch、Figma 相继出现，迅速成为市场的主流。&lt;/p&gt;
&lt;h3 id=&#34;devnull介绍httpswwwputoriusnetintroduction-to-dev-nullhtml&#34;&gt;&lt;a href=&#34;https://www.putorius.net/introduction-to-dev-null.html&#34;&gt;&lt;code&gt;/dev/null&lt;/code&gt;介绍&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;/dev/null&lt;/code&gt;在 Linux 系统代表了一个空设备，它会丢弃写入的任何内容，返回一个 EOF 字符。本文介绍它的一些重要应用。&lt;/p&gt;
&lt;h3 id=&#34;css-transition-详解httpswwwjoshwcomeaucomanimationcss-transitions&#34;&gt;&lt;a href=&#34;https://www.joshwcomeau.com/animation/css-transitions/&#34;&gt;CSS Transition 详解&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;transition&lt;/code&gt;是 CSS 动画的重要组成，本文详细解释了这个属性的详细用法，并给出大量的演示实例。&lt;/p&gt;
&lt;h3 id=&#34;如何使用-nginx-改写图片请求httpsappfleetcomblogoptimize-ghost-blog-performance-including-rewriting-image-domains-to-a-cdn&#34;&gt;&lt;a href=&#34;https://appfleet.com/blog/optimize-ghost-blog-performance-including-rewriting-image-domains-to-a-cdn/&#34;&gt;如何使用 Nginx 改写图片请求&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文介绍一个小技巧，通过 Nginx 改写网页代码，将图片请求导向 CDN。&lt;/p&gt;
&lt;h3 id=&#34;tabfloaterhttpswwwtabfloaterio&#34;&gt;&lt;a href=&#34;https://www.tabfloater.io/&#34;&gt;TabFloater&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;浏览器插件，将一个 Tab 以悬浮窗口的形式，显示在另一个 Tab 之上，类似视频网站的“画中画”效果。&lt;/p&gt;
&lt;h3 id=&#34;uideatoolshttpuideatools&#34;&gt;&lt;a href=&#34;http://uidea.tools/&#34;&gt;uidea.tools&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个在线 UI 设计工具，可以用来制作 H5 网页原型。&lt;/p&gt;
&lt;h3 id=&#34;fun-commenthttpsgithubcom5a59fun-comment&#34;&gt;&lt;a href=&#34;https://github.com/5A59/fun-comment&#34;&gt;fun-comment&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;VS Code 插件，可以在源码文件里插入 ASCII 图像。&lt;/p&gt;
&lt;h3 id=&#34;prismahttpsgithubcomprismaprisma&#34;&gt;&lt;a href=&#34;https://github.com/prisma/prisma&#34;&gt;Prisma&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Node.js 和 TypeScript 的 ORM 库，还提供了单独的查看数据库的 GUI 程序（上图）。&lt;/p&gt;
&lt;h3 id=&#34;cloudflare-pageshttpspagescloudflarecom&#34;&gt;&lt;a href=&#34;https://pages.cloudflare.com/&#34;&gt;Cloudflare Pages&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Cloudflare Pages 开始了 beta 测试，可以自动构建 GitHub 仓库，发布为静态网站，跟部署到 Netlify 流程基本相同。&lt;/p&gt;
&lt;h3 id=&#34;flamediskhttpsengineerdraftcomflamedisk&#34;&gt;&lt;a href=&#34;https://engineerdraft.com/flamedisk/&#34;&gt;FlameDisk&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;MacOS 应用，通过火焰图，进行磁盘可视化分析和清理。&lt;/p&gt;
&lt;h3 id=&#34;what-the-fck-pythonhttpsgithubcomleisurelichtwtfpython-cn&#34;&gt;&lt;a href=&#34;https://github.com/leisurelicht/wtfpython-cn&#34;&gt;What the f*ck Python!&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这个仓库是原始英文版的中文翻译，收集 Python 语言的各种怪异的语法点，以及鲜为人知的功能特性，并尝试讨论这些语法现象背后真正的原理。&lt;/p&gt;
&lt;h3 id=&#34;buzzinghttpswwwbuzzingcc&#34;&gt;&lt;a href=&#34;https://www.buzzing.cc/&#34;&gt;Buzzing&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;该网站汇集了国外社交媒体里的热门讨论，并且标题都自动翻译成了中文。&lt;/p&gt;
&lt;h3 id=&#34;how-they-srehttpsgithubcomupgundechahowtheysre&#34;&gt;&lt;a href=&#34;https://github.com/upgundecha/howtheysre&#34;&gt;How they SRE&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;各个仓库收集各大互联网公司的站点可靠性工程（SRE）最佳实践。&lt;/p&gt;
&lt;h3 id=&#34;面向工程师和科学家的-python-教程httpspythonnumericalmethodsberkeleyedunotebooksindexhtml&#34;&gt;&lt;a href=&#34;https://pythonnumericalmethods.berkeley.edu/notebooks/Index.html&#34;&gt;面向工程师和科学家的 Python 教程&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;免费的英文书籍，向初学者介绍 Python 如何用于科学计算。&lt;/p&gt;
&lt;h3 id=&#34;i-miss-my-barhttpimissmybarcom&#34;&gt;&lt;a href=&#34;http://imissmybar.com/&#34;&gt;I Miss My Bar&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这个网站提供酒吧的环境音，可以选择加入什么声音：倒酒声、谈话声、街道声、雨声、背景音乐等。&lt;/p&gt;
&lt;h3 id=&#34;奇特的人行天桥httpswwwstrongtownsorgjournal202099the-myth-of-pedestrian-infrastructure-in-a-world-of-cars&#34;&gt;&lt;a href=&#34;https://www.strongtowns.org/journal/2020/9/9/the-myth-of-pedestrian-infrastructure-in-a-world-of-cars&#34;&gt;奇特的人行天桥&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;美国佐治亚州有一座人行天桥，要通过四车道的高速公路。由于公路两侧的空地很小，导致它具有非常奇特的引桥。&lt;/p&gt;
&lt;h3 id=&#34;软件质量问题的根源httpsthreadreaderappcomthread1344616521537085441html&#34;&gt;&lt;a href=&#34;https://threadreaderapp.com/thread/1344616521537085441.html&#34;&gt;软件质量问题的根源&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;我有一个在 Ubisoft 工作七年的程序员朋友。他说过一句话：&lt;/p&gt;
&lt;p&gt;“所有软件的质量问题和延迟问题，基本上都有同一个来源：产品经理不断变更需求。”&lt;/p&gt;
&lt;p&gt;“当你不断要求修改软件的方方面面，却又不更改里程碑的日期时，代码就会变得不正常，因为你不得不快速地更改和修复，这会导致许多软件 Bug，并且很难修复。”&lt;/p&gt;
&lt;p&gt;“需求管理是软件开发的最薄弱环节。他们不断变化需求，会浪费大量时间，是软件质量问题的最大来源。”&lt;/p&gt;
&lt;p&gt;解决这个问题的一种方法是，增加原型开发阶段的时间，在原型阶段尝试解决所有可能出现的问题，此后就尽量不再变更。&lt;/p&gt;
&lt;h3 id=&#34;氢化镁燃料httpswwwinceptivemindcompowerpaste-high-density-safe-easily-transportable-hydrogen-energy-fuel17468&#34;&gt;&lt;a href=&#34;https://www.inceptivemind.com/powerpaste-high-density-safe-easily-transportable-hydrogen-energy-fuel/17468/&#34;&gt;氢化镁燃料&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;氢气是一种环保新能源，但是很难储存，因为它太轻了容易逃逸，而且难以压缩体积，储存和运输的成本都很大。德国科学家研发了固态的氢化镁糊剂，尝试解决这个问题。&lt;/p&gt;
&lt;p&gt;氢化镁在常温下是一种糊剂，温度上升到250°C才会分解，所以即使车辆在烈日下暴晒，也仍然安全。使用时加入自来水，水会与氢化镁发生了剧烈的放热反应，从而释放氢气。&lt;/p&gt;
&lt;p&gt;它的优点是能量密度是锂电池的十倍，也就是说，同样能量的锂电池体积是它的十倍。而且添加燃料非常简单，只要用新的燃料盒替换原来的即可。&lt;/p&gt;
&lt;h3 id=&#34;华尔街日报httpswwwwsjcomarticlestelegram-app-is-booming-but-needs-advertisersand-700-million-soon-11615806001说telegram-的资金快用完了&#34;&gt;&lt;a href=&#34;https://www.wsj.com/articles/telegram-app-is-booming-but-needs-advertisersand-700-million-soon-11615806001&#34;&gt;《华尔街日报》&lt;/a&gt;说，Telegram 的资金快用完了&lt;/h3&gt;
&lt;p&gt;下个月即将到期的债务就有7亿美元。一直很好奇，Telegram 的商业模式是什么？现在这个样子，放开让大家使用，没有会员和广告收入，明显不可持续啊。&lt;/p&gt;
&lt;h3 id=&#34;在线会议软件-webexhttpsbusiness-revieweutechcisco-webex-breaks-through-language-barriers-and-launches-real-time-translation-217869-发布了实时会议翻译功能&#34;&gt;&lt;a href=&#34;https://business-review.eu/tech/cisco-webex-breaks-through-language-barriers-and-launches-real-time-translation-217869&#34;&gt;在线会议软件 Webex&lt;/a&gt; 发布了实时会议翻译功能&lt;/h3&gt;
&lt;p&gt;支持100多种语言，可以让不同国家的人使用不一样的语言开会。&lt;/p&gt;
&lt;h3 id=&#34;沙发过弯问题httpswwwmathucdaviseduromikmovingsofa&#34;&gt;&lt;a href=&#34;https://www.math.ucdavis.edu/~romik/movingsofa/&#34;&gt;沙发过弯问题&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;1966年，一个数学家提出一个问题，在一个直角走廊里面，能够通过的沙发最大可以有多大？&lt;/p&gt;
&lt;h3 id=&#34;城市路线牌的设计httpwwwdisanshengcomindexdetails2073&#34;&gt;&lt;a href=&#34;http://www.disansheng.com/index/details/2073&#34;&gt;城市路线牌的设计&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文讨论了路线牌的设计问题。&lt;/p&gt;
&lt;h3 id=&#34;浏览器是如何校验证书的httpscjtingme20210302how-to-validate-tls-certificate&#34;&gt;&lt;a href=&#34;https://cjting.me/2021/03/02/how-to-validate-tls-certificate/&#34;&gt;浏览器是如何校验证书的？&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文介绍了浏览器怎么处理 HTTPS 的证书，它的校验机制是什么，内容较为通俗全面。&lt;/p&gt;
&lt;h3 id=&#34;使用-ffmpeg-将短视频转为-gif-和-webp-动画图片httpsmattjioposts2021-02-27-create-animated-gif-and-webp-from-videos-using-ffmpeg&#34;&gt;&lt;a href=&#34;https://mattj.io/posts/2021-02-27-create-animated-gif-and-webp-from-videos-using-ffmpeg/&#34;&gt;使用 FFmpeg 将短视频转为 GIF 和 WebP 动画图片&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;在某些场合，动画图片的兼容性要好于视频。本文是一个教程，介绍如何使用 FFmpeg 将视频转成动画图片。&lt;/p&gt;
&lt;h3 id=&#34;为什么-java-后端程序员不愿意改用-kotlinhttpsmediumcomgoogle-developer-expertswhy-are-java-server-side-developers-not-adopting-kotlin-8eb53e06ee99&#34;&gt;&lt;a href=&#34;https://medium.com/google-developer-experts/why-are-java-server-side-developers-not-adopting-kotlin-8eb53e06ee99&#34;&gt;为什么 Java 后端程序员不愿意改用 Kotlin？&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者所在的团队从 Java 跳船到了 Kotlin。但是，大部分 Java 后端团队不愿意这样做，作者讨论了原因。&lt;/p&gt;
&lt;h3 id=&#34;ecmascript-2021-的新语法https2alitycom202009ecmascript-2021html&#34;&gt;&lt;a href=&#34;https://2ality.com/2020/09/ecmascript-2021.html&#34;&gt;ECMAScript 2021 的新语法&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;今年6月份即将发布的 ECMAScript 2021 标准，本文介绍里面新增的语法点。&lt;/p&gt;
&lt;h3 id=&#34;es2021-新语法点httpsh3manthcomes2021&#34;&gt;&lt;a href=&#34;https://h3manth.com/ES2021/&#34;&gt;ES2021 新语法点&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;ES2021 标准已经正式通过了，本文简要介绍了 JavaScript 今年新加了哪些语法，还好不是很多。&lt;/p&gt;
&lt;h3 id=&#34;为什么应该使用-iso-8601-日期格式httpskirbykevinsonorgblogiso-8601-the-better-date-format&#34;&gt;&lt;a href=&#34;https://kirby.kevinson.org/blog/iso-8601-the-better-date-format/&#34;&gt;为什么应该使用 ISO 8601 日期格式&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;世界上有各种各样的日期格式，作者认为大家应该统一使用 ISO 8601 格式，即&lt;code&gt;yyyy-mm-dd hh:mm:ss&lt;/code&gt;。&lt;/p&gt;
&lt;h3 id=&#34;linkdomhttpsgithubcomwebreflectionlinkedom&#34;&gt;&lt;a href=&#34;https://github.com/WebReflection/linkedom&#34;&gt;LinkDOM&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;JSDOM 的一个替代品，使用 JavaScript 解析 HTML 字符串，返回一个 DOM 对象，在上面实现了 DOM 接口。它比 JSDOM 体积更小、速度更快、内存占用更少。&lt;/p&gt;
&lt;h3 id=&#34;nodeguihttpsgithubcomnodeguinodegui&#34;&gt;&lt;a href=&#34;https://github.com/nodegui/nodegui&#34;&gt;NodeGui&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个类似 Electron 的跨平台桌面应用开发框架，底层技术是 Node.js + Qt5。&lt;/p&gt;
&lt;h3 id=&#34;github-star-counthttpschromegooglecomwebstoredetailgithub-star-countjahogeehepfohgakggfeeimokcgnmdid&#34;&gt;&lt;a href=&#34;https://chrome.google.com/webstore/detail/github-star-count/jahogeehepfohgakggfeeimokcgnmdid&#34;&gt;Github Star Count&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个 Chrome 浏览器插件，在网页的 GitHub 仓库链接后面，插入该仓库的 Star 数目。&lt;/p&gt;
&lt;h3 id=&#34;issues-translate-actionhttpsgithubcomtomsun28issues-translate-action&#34;&gt;&lt;a href=&#34;https://github.com/tomsun28/issues-translate-action&#34;&gt;Issues Translate Action&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个 GitHub Actions 脚本，定时运行脚本机器人，将非英语的 Issue 自动翻译成英语。&lt;/p&gt;
&lt;h3 id=&#34;低地轨道可视化httpsplatformleolabsspacevisualization&#34;&gt;&lt;a href=&#34;https://platform.leolabs.space/visualization&#34;&gt;低地轨道可视化&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这个可视化作品，可以让大家感受一下地球低轨道太空的实际状态，看看有多少太空垃圾。&lt;/p&gt;
&lt;h3 id=&#34;奇怪的词源httpswwwthestrangerootscomposts&#34;&gt;&lt;a href=&#34;https://www.thestrangeroots.com/posts/&#34;&gt;奇怪的词源&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这个网站收集各种 IT 单词的来源。&lt;/p&gt;
&lt;h3 id=&#34;web-browser-engineeringhttpsbrowserengineeringindexhtml&#34;&gt;&lt;a href=&#34;https://browser.engineering/index.html&#34;&gt;Web Browser Engineering&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一本正在写作中的开源书籍，介绍如何使用1000行 Python 代码，实现一个简单的网页浏览器。&lt;/p&gt;
&lt;h3 id=&#34;通过-vs-code-学习-vimhttpswwwbarbarianmeetscodingcomboost-your-coding-fu-with-vscode-and-vimtable-of-contents&#34;&gt;&lt;a href=&#34;https://www.barbarianmeetscoding.com/boost-your-coding-fu-with-vscode-and-vim/table-of-contents/&#34;&gt;通过 VS Code 学习 Vim&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;免费的英文电子书，通过 VS Code 的 Vim 插件，教你如何使用 Vim。&lt;/p&gt;
&lt;h3 id=&#34;windows-xp-的壁纸山坡httpswwwsfgatecomtravelarticlewindows-xp-bliss-hill-sonoma-charles-o-rear-15976588php&#34;&gt;&lt;a href=&#34;https://www.sfgate.com/travel/article/Windows-XP-Bliss-Hill-Sonoma-Charles-O-Rear-15976588.php&#34;&gt;Windows XP 的壁纸山坡&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Windows XP 的默认壁纸，大概是世界上观看次数最多的照片之一。那是一座真实的小山坡，位于加利福尼亚州索诺玛市12号高速公路旁，当年是一片草地，现在被一排排葡萄架覆盖着。&lt;/p&gt;
&lt;p&gt;现年79岁的摄影师查尔斯·奥雷尔（Charles O&amp;rsquo;Rear）那时经常在高速公路上路过这座小山坡。他是《洛杉矶时报》的特约摄影师，并有25年为《国家地理》杂志拍摄的经历。&lt;/p&gt;
&lt;p&gt;1996年一个星期五的下午，他将车停在路边，为田园诗般的风光拍了一张照片。然后，他将这张照片卖给一家图片社，微软发现了这张照片，永久买断后（具体金额未公开，据说超过6位数美元），然后将其用作 Windows XP 的默认桌面壁纸。&lt;/p&gt;
&lt;p&gt;全世界的用户非常喜欢这张壁纸，它出现在各种场合。人们从未意识到这是一个真实的就在湾区的山坡，而是猜测它是计算机生成的图形，或者是在欧洲拍摄的。&lt;/p&gt;
&lt;p&gt;可惜的是，仅仅在照片拍摄数年后，这座绿色小山丘变成了葡萄园，已经无法复现当初的样子了。&lt;/p&gt;
&lt;p&gt;如果你想知道这座小山的确切位置，可以在 Google Map 输入坐标“38.249069, -122.410126”。&lt;/p&gt;
&lt;h3 id=&#34;百度如何错过深度学习之父httpspostscareerengineusp605412f82e61cf72e86dc02c&#34;&gt;&lt;a href=&#34;https://posts.careerengine.us/p/605412f82e61cf72e86dc02c&#34;&gt;百度如何错过深度学习之父&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;美国最近出版了一本新书《天才制造者》，透露了各大 IT 巨头开发人工智能的许多秘辛。&lt;/p&gt;
&lt;p&gt;2012年，李彦宏曾经拍板出资1200万美元，聘请当时还没有出名的“深度学习之父”多伦多大学的辛顿教授担任首席科学家，辛顿教授也动心了，但是最后还是被谷歌挖走了。&lt;/p&gt;
&lt;h3 id=&#34;我如何收购一家-saas-公司httpseverytosuperorganizershow-i-bought-a-business-for-0&#34;&gt;&lt;a href=&#34;https://every.to/superorganizers/how-i-bought-a-business-for-0&#34;&gt;我如何收购一家 SaaS 公司&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者是一个风险投资家，本文介绍他如何收购一个网络软件，可以从中了解风险投资的一些操作方法。&lt;/p&gt;
&lt;h3 id=&#34;我如何用表情域名赚钱httpstinyprojectsdevprojectsmailoji&#34;&gt;&lt;a href=&#34;https://tinyprojects.dev/projects/mailoji&#34;&gt;我如何用表情域名赚钱&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者偶然发现，某些国别域名允许注册表情符号 Emoji 的顶级域名，比如上图的笑脸域名。他就一口气注册了300个，开始利用它们赚钱。&lt;/p&gt;
&lt;h3 id=&#34;关于线程的简要介绍httpswwwinternalpointerscompostgentle-introduction-multithreading&#34;&gt;&lt;a href=&#34;https://www.internalpointers.com/post/gentle-introduction-multithreading&#34;&gt;关于线程的简要介绍&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;线程（thread）是编程的重要概念，本文用简单的语言介绍了什么是线程、它与进程的区别、线程的优缺点等等，写得很好。&lt;/p&gt;
&lt;h3 id=&#34;一道有趣的物理题httpsusersphysicsuncedudeardorfphys25rwpexam1rwpsolutionhtml&#34;&gt;&lt;a href=&#34;https://users.physics.unc.edu/~deardorf/phys25/rwp/exam1rwpsolution.html&#34;&gt;一道有趣的物理题&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这是美国一个大学的物理学考试题目：有没有可能在高压输电线路的下方，放置一大圈电线，利用线圈感应进行偷电？&lt;/p&gt;
&lt;h3 id=&#34;放弃悬停菜单httpscss-trickscomin-praise-of-the-unambiguous-click-menu&#34;&gt;&lt;a href=&#34;https://css-tricks.com/in-praise-of-the-unambiguous-click-menu/&#34;&gt;放弃悬停菜单&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;悬停菜单是一种常见做法，鼠标悬停时显示子菜单。作者认为，如果有些菜单项没有子菜单，悬停会造成行为不统一，建议统一改为单击菜单。&lt;/p&gt;
&lt;h3 id=&#34;fairemailhttpsemailfaircodeeu&#34;&gt;&lt;a href=&#34;https://email.faircode.eu/&#34;&gt;FairEmail&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;开源的安卓电子邮件客户端，强调安全和隐私保护。&lt;/p&gt;
&lt;h3 id=&#34;rss_everydayhttpsgithubcomguangzhejiangrss_everyday&#34;&gt;&lt;a href=&#34;https://github.com/GuangzheJiang/rss_everyday&#34;&gt;rss_everyday&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个 GitHub Actions 模板，每天定时运行，将 RSS 内容推送到 Telegram 频道。&lt;/p&gt;
&lt;h3 id=&#34;mdbookhttpsgithubcomrust-langmdbook&#34;&gt;&lt;a href=&#34;https://github.com/rust-lang/mdBook&#34;&gt;mdBook&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;GitBook 的 Rust 语言移植，可以将 markdown 源文件转成一个在线阅读网站。&lt;/p&gt;
&lt;h3 id=&#34;flowchart-funhttpsgithubcomtone-rowflowchart-fun&#34;&gt;&lt;a href=&#34;https://github.com/tone-row/flowchart-fun&#34;&gt;flowchart-fun&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;可能是最简单的流程图制作工具。左边的文本框输入，一行就代表一个新节点，缩进代表隶属关系，右边自动生成图形。&lt;/p&gt;
&lt;h3 id=&#34;darkmodebuddyhttpsgithubcominsideguidarkmodebuddy&#34;&gt;&lt;a href=&#34;https://github.com/insidegui/DarkModeBuddy&#34;&gt;DarkModeBuddy&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个 MacOS 应用，自动根据外部光线的强弱，调整桌面为亮模式或暗模式。&lt;/p&gt;
&lt;h3 id=&#34;arrowhttpsgithubcomarrow-pyarrow&#34;&gt;&lt;a href=&#34;https://github.com/arrow-py/arrow&#34;&gt;Arrow&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个 Python 的日期时间库，借鉴了 moment.js 的 API 设计。&lt;/p&gt;
&lt;h3 id=&#34;clone-warshttpsgithubcomgorvgoylclone-wars&#34;&gt;&lt;a href=&#34;https://github.com/GorvGoyl/Clone-Wars&#34;&gt;Clone Wars&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;该仓库收集热门网站的开源实现，比如 Airbnb、Amazon、Instagram、Netflix、Tiktok、Spotify 等，已经有70多个项目了。&lt;/p&gt;
&lt;h3 id=&#34;真实世界的密码学httpswwwmanningcombooksreal-world-cryptographyreal-world-cryptography&#34;&gt;&lt;a href=&#34;https://www.manning.com/books/real-world-cryptography&#34;&gt;真实世界的密码学&lt;/a&gt;（Real-world Cryptography）&lt;/h3&gt;
&lt;p&gt;本书使用简单的语言和示例，解释了普通用户在日常生活中遇到的密码学问题，可以免费在线阅读。&lt;/p&gt;
&lt;h3 id=&#34;博朗的配色httpblogpresentandcorrectcomrams-palettes&#34;&gt;&lt;a href=&#34;http://blog.presentandcorrect.com/rams-palettes&#34;&gt;博朗的配色&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;德国博朗公司（Braun）以设计优雅著称，曾经对乔布斯产生过重大影响。下面是它的一些产品配色方案，非常漂亮。&lt;/p&gt;
&lt;h3 id=&#34;facebook-小红书httpstwittercomantoniogmstatus1365795467376824320&#34;&gt;&lt;a href=&#34;https://twitter.com/antoniogm/status/1365795467376824320&#34;&gt;Facebook 小红书&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;2012年，Facebook 发行股票上市，每个员工收到了一本小红书。&lt;/p&gt;
&lt;p&gt;最后一页写着这样一段话：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“如果我们自己不创造能够杀死 Facebook 的东西，其他人将会这样做。……互联网不是一个友善的地方。那些不重要的东西甚至都没有机会留下遗迹。它们消失得无影无踪。”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;庞巴德的故事httpszhwikipediaorgwiki阿兰邦巴尔&#34;&gt;&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E9%98%BF%E5%85%B0%C2%B7%E9%82%A6%E5%B7%B4%E5%B0%94&#34;&gt;庞巴德的故事&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;1952年，法国人庞巴德（Alain Bombard）独自一人，乘坐一艘4.3米的充气式救生筏穿越大西洋。他没有携带食物和淡水，航行了4,400公里，于当年12月23日到达加勒比海岛国巴巴多斯。他的体重减轻了25公斤，这一切只为了证明他的观点：人类实际上可以在海水上生存更长的时间！&lt;/p&gt;
&lt;p&gt;作为一名医生，庞巴德有一个理论，在身体不缺水的情况下，人类饮用少量海水，并没有危险。只有当身体脱水并突然喝大量盐水时，才是危险的。&lt;/p&gt;
&lt;p&gt;据他自己说，他在海上依靠鱼叉和鱼钩捕鱼，以及用小网捞海面上的浮游生物为食，每天也饮用有限的海水。&lt;/p&gt;
&lt;p&gt;很多人不相信庞巴德的讲法，认为他实际上在航行时偷偷携带了淡水，并且一路上都在收集雨水，可能中途还有秘密的补给。&lt;/p&gt;
&lt;p&gt;2005年，庞巴德（Bombard）在法国土伦去世，享年80岁。&lt;/p&gt;
&lt;h3 id=&#34;3d-打印书屋httpshsinacomcnnewsm2021-03-20detail-ikkntiam5747824shtml&#34;&gt;&lt;a href=&#34;http://sh.sina.com.cn/news/m/2021-03-20/detail-ikkntiam5747824.shtml&#34;&gt;3D 打印书屋&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;全国首个混凝土 3D 打印书屋在上海宝山区落成，面积不到30平米，可容纳15人。该建筑从上往下看是一个“逗号”的样式，里面会放一个书桌。&lt;/p&gt;
&lt;p&gt;该书屋是将预先设计好的模型文件，现场导入机械臂，然后一层层用混凝土打印出来。&lt;/p&gt;
&lt;h3 id=&#34;英国httpswwwbbccomnewsbusiness-56503741新版的50英镑钞票&#34;&gt;&lt;a href=&#34;https://www.bbc.com/news/business-56503741&#34;&gt;英国&lt;/a&gt;新版的50英镑钞票&lt;/h3&gt;
&lt;p&gt;背面人物是计算机科学家艾伦·图灵（Alan Turing）。该钞票将于6月23日进入流通，那天是图灵的生日。&lt;/p&gt;
&lt;h3 id=&#34;2020年竣工的中国十大摩天楼httpsmpweixinqqcomsknxrrpbiglo0medcejqcvw&#34;&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/KNxrRPbIGLO0MeDcEJQCvw&#34;&gt;2020年竣工的中国十大摩天楼&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;2020年全球有106座高度200米以上的建筑竣工，中国有56座，本文介绍其中最高的10座。上图是去年国内竣工的最高建筑，403米的广西南宁华润大厦。&lt;/p&gt;
&lt;h3 id=&#34;okr-考核替代-kpi-考核的问题httpswwwallnowcompost605713147dd7084b3527781e&#34;&gt;&lt;a href=&#34;https://www.allnow.com/post/605713147dd7084b3527781e&#34;&gt;OKR 考核替代 KPI 考核的问题&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;很多互联网公司开始采用 OKR 考核替代 KPI 考核。前者是注重目标和阶段性结果，后者是单纯的结果考核。这篇新闻分析讨论了这种替代产生的一些问题。&lt;/p&gt;
&lt;h3 id=&#34;暗网取证研究httpsmpweixinqqcoms_kobp0peuyajqndacjdlqg&#34;&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/_kObp0peUyajqnDACJDlqg&#34;&gt;暗网取证研究&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;暗网（Dark Web）具有匿名性及不可追溯性，只能通过特定软件才能登录访问。本文讨论执法部门如何对暗网的取证。&lt;/p&gt;
&lt;h3 id=&#34;adobe-公司的-super-resolution-功能httpsblogadobecomenpublish20210310from-the-acr-team-super-resolutionhtml&#34;&gt;&lt;a href=&#34;https://blog.adobe.com/en/publish/2021/03/10/from-the-acr-team-super-resolution.html&#34;&gt;Adobe 公司的 Super Resolution 功能&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Adobe 公司新发布了一项革命性的图像功能：Super Resolution。它可以将图像的解析度放大4倍，同时不丢失细节。这篇文章是软件作者介绍该功能。&lt;/p&gt;
&lt;h3 id=&#34;ts-命令的用法httpswwwputoriusnetts-command-add-convert-timestamps-linuxhtml&#34;&gt;&lt;a href=&#34;https://www.putorius.net/ts-command-add-convert-timestamps-linux.html&#34;&gt;ts 命令的用法&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Linux 命令行有一个 ts 命令，可以为输出加上时间戳。本文介绍它的各种用法。&lt;/p&gt;
&lt;h3 id=&#34;浏览器的-http-referrer-标头政策变化httpsblogmozillaorgsecurity20210322firefox-87-trims-http-referrers-by-default-to-protect-user-privacy&#34;&gt;&lt;a href=&#34;https://blog.mozilla.org/security/2021/03/22/firefox-87-trims-http-referrers-by-default-to-protect-user-privacy/&#34;&gt;浏览器的 HTTP Referrer 标头政策变化&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Firefox 浏览器宣布跟随 &lt;a href=&#34;https://developers.google.com/web/updates/2020/07/referrer-policy-new-chrome-default&#34;&gt;Chrome 的做法&lt;/a&gt;，修改 HTTP Referrer 标头政策。修改后的做法是，从 HTTPS 跳转到 HTTP，不发送&lt;code&gt;referer&lt;/code&gt;标头；从 HTTPS 跳到 HTTPS，只要有跨域，&lt;code&gt;referer&lt;/code&gt;标头就只包含域名，不包含路径。&lt;/p&gt;
&lt;h3 id=&#34;makefile-可以取代-packagejson-脚本httpsspinatomicobjectcom20210322makefiles-vs-package-json-scripts&#34;&gt;&lt;a href=&#34;https://spin.atomicobject.com/2021/03/22/makefiles-vs-package-json-scripts/&#34;&gt;Makefile 可以取代 package.json 脚本&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;package.json 文件可以自定义 npm 脚本命令，比如&lt;code&gt;npm test&lt;/code&gt;。这篇文章提出 Makefile 可以替代这些脚本命令，具有更好的可维护性和更强大的功能。&lt;/p&gt;
&lt;h3 id=&#34;ssh-如何搭建简易-vpnhttpsbloggwlabpagevpn-over-ssh-the-socks-proxy-8a8d7bdc7028&#34;&gt;&lt;a href=&#34;https://blog.gwlab.page/vpn-over-ssh-the-socks-proxy-8a8d7bdc7028&#34;&gt;SSH 如何搭建简易 VPN？&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文介绍 SSH 如何搭建一个简单的 VPN 网络。&lt;/p&gt;
&lt;h3 id=&#34;wormhole-guihttpsgithubcomjacalzwormhole-gui&#34;&gt;&lt;a href=&#34;https://github.com/Jacalz/wormhole-gui&#34;&gt;wormhole-gui&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个桌面应用程序，可以在同一个局域网的各个机器之间，互相发送文件。&lt;/p&gt;
&lt;h3 id=&#34;baserowhttpsgitlabcombramwbaserow&#34;&gt;&lt;a href=&#34;https://gitlab.com/bramw/baserow&#34;&gt;Baserow&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个开源的网页表格，目标是成为低代码的数据库，作为 Excel 和 Airtable 的替代品。可以使用托管的版本，也可以自己架设服务。&lt;/p&gt;
&lt;h3 id=&#34;mooviejshttpsgithubcombmsvieiramooviejs&#34;&gt;&lt;a href=&#34;https://github.com/BMSVieira/moovie.js&#34;&gt;moovie.js&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个 JavaScript 写的 HTML5 视频播放器，可以在网页上播放视频。特点是功能较全，支持外挂字幕文件。&lt;/p&gt;
&lt;h3 id=&#34;papercupshttpsgithubcompapercups-iopapercups&#34;&gt;&lt;a href=&#34;https://github.com/papercups-io/papercups&#34;&gt;Papercups&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个可以自己架设的开源服务，在网页上插入聊天窗口，并可以集成 Slack，即在 Slack 上与网站访问者对话。&lt;/p&gt;
&lt;h3 id=&#34;apple-privacyhttpswwwapplecomprivacylabels&#34;&gt;&lt;a href=&#34;https://www.apple.com/privacy/labels/&#34;&gt;Apple Privacy&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;苹果官网的这个页面，列出了所有自家软件获取哪些用户信息。&lt;/p&gt;
&lt;h3 id=&#34;duolingo-外语学习材料httpsduomeeutipsen&#34;&gt;&lt;a href=&#34;https://duome.eu/tips/en&#34;&gt;Duolingo 外语学习材料&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;多邻国（Duolingo）的外语教程笔记，一共有30多个语种，用英语讲解如何快速入门某一种外语。&lt;/p&gt;
&lt;h3 id=&#34;深度学习动手学httpsdataflowrgithubiowebsite&#34;&gt;&lt;a href=&#34;https://dataflowr.github.io/website/&#34;&gt;深度学习动手学&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;深度学习的英语教程，可以免费在线阅读，针对初学者，注重动手练习。&lt;/p&gt;
&lt;h3 id=&#34;latex-教程httpswwwlearnlatexorgen&#34;&gt;&lt;a href=&#34;https://www.learnlatex.org/en/&#34;&gt;LaTex 教程&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;LaTex 是学术文档的排版系统，这是一个免费的英语教程。&lt;/p&gt;
&lt;h3 id=&#34;海因莱因的五条写作规则httpswwwsfwritercomow05htm&#34;&gt;&lt;a href=&#34;https://www.sfwriter.com/ow05.htm&#34;&gt;海因莱因的五条写作规则&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;著名的美国科幻小说作家罗伯特·海因莱因（Robert A. Heinlein），给有志于写作的年轻人，传授过五条写作规则，帮助他们入门。&lt;/p&gt;
&lt;p&gt;我觉得这些规则，不仅适用于作家，也同样适用于程序员。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;规则一：你必须动手写&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;听起来很明显，是吗？但是，很多人只是想想而已，并没有真的动手写任何东西。成为作家的唯一途径是将自己放在键盘前，开始工作。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;规则二：完成草稿&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;你开始写的前几页，可能很糟糕，你可能会想将它们扔掉。不要这样做，继续下去把草稿写完。一旦有了初稿，包括开头、中间和结尾，你会惊讶地发现，哪些是有用的部分，哪些是没用的部分。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;规则三：不要无休止地修改&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;你应该不断修改你的草稿，但是一旦发现，修改后的效果没有比原来有太大的提升，就应该结束修改了。有句老话说，故事永远不会结束，只会被放弃。你要学习到了某个点，不再对这个作品投入时间。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;规则四：你必须将作品推向市场&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;写完之后，放在书桌上是没有用的。即使你对自己没有信心，也应该把作品发布出去，看看外界的反应。不要胆怯，没有发表过的作品，等于没有写。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;规则五：你必须努力推广作品，直到售出为止&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;一个事实是，你的作品几乎肯定会被拒绝，最大的可能是根本没有反响。不要为这种事情烦恼，很多伟大的作家都收过很多拒稿信。如果那些拒绝当中包含你认为不错的建议，请修改你的作品，然后再次发布。如果得不到什么建议，那就转向其他市场发布。你要坚持让更多的人看到你的作品。&lt;/p&gt;
&lt;p&gt;最后，不管上一部作品得到什么样的成绩，你开始准备下一部作品。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;大数据可视化工具httpsitnextiovisualization-tools-for-big-data-c3361241a67e&#34;&gt;&lt;a href=&#34;https://itnext.io/visualization-tools-for-big-data-c3361241a67e&#34;&gt;大数据可视化工具&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;现在前端的图表库很多，作者推荐了几个他觉得最好的库，逐一进行了介绍。&lt;/p&gt;
&lt;h3 id=&#34;git-邮件工作流httpsblogbrixitnlgit-email-flow-versus-github-flow&#34;&gt;&lt;a href=&#34;https://blog.brixit.nl/git-email-flow-versus-github-flow/&#34;&gt;Git 邮件工作流&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;多人项目现在一般使用 Pull Request 进行合作，但是 Linux 内核项目使用的是电子邮件工作流，本文介绍具体怎么做。电子邮件发送 Patch 其实也很方便。&lt;/p&gt;
&lt;h3 id=&#34;react--d3js-如何开发-svg-图形httpswattenbergercomblogreact-and-d3&#34;&gt;&lt;a href=&#34;https://wattenberger.com/blog/react-and-d3&#34;&gt;React + D3.js 如何开发 SVG 图形&lt;/a&gt;&lt;/h3&gt;
&lt;h3 id=&#34;八进制数字造成的安全漏洞httpssickcodesuniversal-netmask-npm-package-used-by-270000-projects-vulnerable-to-octal-input-data-server-side-request-forgery-remote-file-inclusion-local-file-inclusion-and-more-cve-2021-28918&#34;&gt;&lt;a href=&#34;https://sick.codes/universal-netmask-npm-package-used-by-270000-projects-vulnerable-to-octal-input-data-server-side-request-forgery-remote-file-inclusion-local-file-inclusion-and-more-cve-2021-28918/&#34;&gt;八进制数字造成的安全漏洞&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文分析 node.js 库 netmask 的一个安全漏洞的由来。如果黑客输入&lt;code&gt;0177.0.0.1&lt;/code&gt;，netmask 会认为这是一个公网地址，但实际上是内网地址。&lt;/p&gt;
&lt;h3 id=&#34;什么是二分法搜索httpsjorgechavezdev20200822everything-you-need-to-know-about-binary-search-algorithm&#34;&gt;&lt;a href=&#34;https://jorgechavez.dev/2020/08/22/everything-you-need-to-know-about-binary-search-algorithm/&#34;&gt;什么是二分法搜索？&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;通过示例，详细讲解二分法搜索的入门教程。&lt;/p&gt;
&lt;h3 id=&#34;xeuledochttpsgithubcommalfratsxeuledoc&#34;&gt;&lt;a href=&#34;https://github.com/Malfrats/xeuledoc&#34;&gt;xeuledoc&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个命令行工具，用于获取谷歌文档的各种元信息。&lt;/p&gt;
&lt;h3 id=&#34;sorted-css-colorshttpsgithubcomscriptypesorted-colors&#34;&gt;&lt;a href=&#34;https://github.com/scriptype/sorted-colors&#34;&gt;Sorted CSS Colors&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;CSS 标准一共列出了148种有名称的颜色，这个在线工具用来在它们当中找到合适的颜色。你在色轴上面确定一个基色，相近的颜色就会按照从浅到深的顺序列出。&lt;/p&gt;
&lt;h3 id=&#34;chartscsshttpschartscssorg&#34;&gt;&lt;a href=&#34;https://chartscss.org/&#34;&gt;Charts.css&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个只使用 CSS 的图形库（不需要 JS），可以把&lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt;标签变成折线图、直方图或其他图形。&lt;/p&gt;
&lt;h3 id=&#34;manimhttpsgithubcommanimcommunitymanim&#34;&gt;&lt;a href=&#34;https://github.com/ManimCommunity/manim/&#34;&gt;Manim&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个用来生成数学动画视频（比如绘制函数）的 Python 库。&lt;/p&gt;
&lt;h3 id=&#34;react-pin-fieldhttpsgithubcomsoywodreact-pin-field&#34;&gt;&lt;a href=&#34;https://github.com/soywod/react-pin-field&#34;&gt;React PIN Field&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个 React 组件，生成漂亮的密码（验证码）输入框。&lt;/p&gt;
&lt;h3 id=&#34;workflowhttpsgithubcomsogouworkflow&#34;&gt;&lt;a href=&#34;https://github.com/sogou/workflow&#34;&gt;Workflow&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;搜狗的 C++ 服务器引擎，支持各种后端协议，可以在它的基础上进行 C++ 开发，定制自己的高性能服务器。&lt;/p&gt;
&lt;h3 id=&#34;visu-algohttpsvisualgonet&#34;&gt;&lt;a href=&#34;https://visualgo.net/&#34;&gt;Visu Algo&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;该网站有各种常用算法的可视化演示。&lt;/p&gt;
&lt;h3 id=&#34;new域名httpswhatsnewshortcuts&#34;&gt;&lt;a href=&#34;https://whats.new/shortcuts&#34;&gt;&lt;code&gt;.new&lt;/code&gt;域名&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;.new&lt;/code&gt;域名是谷歌托管的，提供了一个打开网络服务的快捷方式，下面是一些例子。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;doc.new&lt;/code&gt;：新建一篇谷歌文档&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sheet.new&lt;/code&gt;：新建一个谷歌表格&lt;/li&gt;
&lt;li&gt;&lt;code&gt;js.new&lt;/code&gt;：新建一个 CodeSandbox 的代码片段&lt;/li&gt;
&lt;li&gt;&lt;code&gt;github.new&lt;/code&gt;：新建一个 GitHub 仓库&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;标题网址是谷歌官方的&lt;code&gt;.new&lt;/code&gt;域名汇总。&lt;/p&gt;
&lt;h3 id=&#34;复杂的-chttpswwwcppstoriescom201702how-to-stay-sane-with-modern-c&#34;&gt;&lt;a href=&#34;https://www.cppstories.com/2017/02/how-to-stay-sane-with-modern-c/&#34;&gt;复杂的 C++&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;C++ 是一门复杂的语言，但是语言设计者还在往里面添加更多的东西。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;C++98版：879页&lt;/li&gt;
&lt;li&gt;C++11版：1324页&lt;/li&gt;
&lt;li&gt;C++14版：1368页&lt;/li&gt;
&lt;li&gt;C++17版：1586页&lt;/li&gt;
&lt;li&gt;C++20版：1834页&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://camo.githubusercontent.com/5e255c33345e60b1d4c0f2a5b6dac4c4fd996474c30405c12382e97de33217a6/68747470733a2f2f63646e2e6265656b6b612e636f6d2f626c6f67696d672f61737365742f3230323130332f6267323032313033323030312e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;C++17 比 C++98 多了近80%的内容，而最新版 C++20 比 C++98 多了近1000页。开发者可能会抱怨复杂性的增加，很难掌握所有的内容，但是除了接受，并没有其他办法。&lt;/p&gt;
&lt;h3 id=&#34;加尔松潟湖大桥httpszhwikipediaorgwiki加爾松潟湖大橋&#34;&gt;&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E5%8A%A0%E7%88%BE%E6%9D%BE%E6%BD%9F%E6%B9%96%E5%A4%A7%E6%A9%8B&#34;&gt;加尔松潟湖大桥&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;加尔松潟湖大桥是乌拉圭的一座环状桥梁，于2015年通车。&lt;/p&gt;
&lt;p&gt;它的环状设计主要出于美观考量，但也有一些实际的好处，比如强迫司机只能减速行驶，同时可以为行人设置单行道，不同方向的行人走不同的半圆，提高了安全性。&lt;/p&gt;
&lt;h3 id=&#34;时间是如何浪费掉的httppaulgrahamcomselfindulgencehtml&#34;&gt;&lt;a href=&#34;http://paulgraham.com/selfindulgence.html&#34;&gt;时间是如何浪费掉的？&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者：Paul Graham&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;几天前，我意识到了一件令人惊讶的事情：浪费时间的最危险方法不是花时间在玩，而是花时间在做假工作。&lt;/p&gt;
&lt;p&gt;当你花时间玩乐时，你会知道自己在放纵。内心的警报很快就会发出。如果某天早晨我醒来后，整天坐在沙发上看电视，我很快会觉得自己一定是做错了什么。这样一想，就让人不舒服。你只需要在沙发上看电视2个小时，就会有这种不舒服的反应，更不用说整天看电视了。&lt;/p&gt;
&lt;p&gt;但是，还有一些天，你整天都在忙，等到晚上你问自己今天干了什么，回答是：虽然很忙，做的却没什么意义。&lt;/p&gt;
&lt;p&gt;你的感觉也会因此不好，但是不像整天看电视那样糟糕。如果我整天看电视，我会觉得自己正在走向灭亡，但如果是忙忙碌碌做无意义的事情，这样的警报就不会响起。因为我所做的事情表面上看起来像是真正的工作，比如处理电子邮件。&lt;/p&gt;
&lt;p&gt;表面上看，你一天都在办公桌前工作，但其实你也是在浪费时间，因为这不会让你的生活发生真正的变化。而且由于你的内心不会发出警报，比起看电视，假工作才是浪费时间最危险的方法。&lt;/p&gt;
&lt;p&gt;时间要用来做对你真正重要的事情，不要落入假工作的陷阱。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;线性城市httpswwwarchdailycncn955185sha-te-a-la-bo-gong-bu-100ying-li-xian-xing-cheng-shi-gui-hua&#34;&gt;&lt;a href=&#34;https://www.archdaily.cn/cn/955185/sha-te-a-la-bo-gong-bu-100ying-li-xian-xing-cheng-shi-gui-hua&#34;&gt;线性城市&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;沙特政府宣布，将建设一个“未来城市” Neom。该市是长达170公里的线性布局，只有一条主干道，分为三层。地面是步行层，有各种建筑物和绿化带；地下一层是服务层，提供各种基础设置；地下二层是交通层，提供轨道交通。&lt;/p&gt;
&lt;p&gt;初看之下，这个设计十分奇特，但是仔细想想，其实非常合理。由于只有一条主干道，所以可以充分利用公共交通，而且只有一条路线，运输效率非常高。另外，各种公用事业管道也只需要建设一根主管道，向两旁拉出分支即可。&lt;/p&gt;
&lt;h3 id=&#34;opensearch&#34;&gt;OpenSearch&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://aws.amazon.com/cn/blogs/opensource/introducing-opensearch/&#34;&gt;亚马逊&lt;/a&gt;正式发布了 OpenSearch，这是对 Elasticsearch 官方版本的反击，后者最近修改许可证，禁止作为云服务进行销售。两者的关系有点像 MariaDB 和 MySQL，双方势均力敌，大概过一两年，才能看出来谁会赢。&lt;/p&gt;
&lt;h3 id=&#34;我如何做出一个病毒式传播的网站httpsnotfunatpartiessubstackcompinside-a-viral-website&#34;&gt;&lt;a href=&#34;https://notfunatparties.substack.com/p/inside-a-viral-website&#34;&gt;我如何做出一个病毒式传播的网站&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;苏伊士运河的堵塞事件，启发作者做了一个 &lt;a href=&#34;https://istheshipstillstuck.com/&#34;&gt;istheshipstillstuck.com&lt;/a&gt; 网站，可以查看事件的最新进展。该网站变得极其流行，5天内有5000万的访问量。作者介绍了背后一些有趣的事情。&lt;/p&gt;
&lt;h3 id=&#34;什么是字符串哈希httpsjorgechavezdev20201112string-hashing&#34;&gt;&lt;a href=&#34;https://jorgechavez.dev/2020/11/12/string-hashing/&#34;&gt;什么是字符串哈希？&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文通过一个简单的例子，讲解字符串的哈希值的原理，它是怎么算出来的。&lt;/p&gt;
&lt;h3 id=&#34;sqlite-命令行数据处理示例httpsantonzorgsqlite-is-not-a-toy-database&#34;&gt;&lt;a href=&#34;https://antonz.org/sqlite-is-not-a-toy-database/&#34;&gt;SQLite 命令行数据处理示例&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;SQLite 是一个很强大的工具，很多人只把它当作数据库使用，却不知道它可以用在命令行，处理各种数据文件。&lt;/p&gt;
&lt;h3 id=&#34;为什么面向对象编程很糟糕httpharmfulcat-vorgsoftwareoo_programmingwhy_oo_sucks&#34;&gt;&lt;a href=&#34;http://harmful.cat-v.org/software/OO_programming/why_oo_sucks&#34;&gt;为什么面向对象编程很糟糕？&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一篇很老的经典文章，作者是 Erlang 语言的创始人乔·阿姆斯特朗（Joe Armstrong），他总结了面向对象编程的四个重大缺点。&lt;/p&gt;
&lt;h3 id=&#34;如何不使用-rails-开发一个-ruby-的-web-应用httpsshopifyengineeringbuilding-web-app-ruby-rails&#34;&gt;&lt;a href=&#34;https://shopify.engineering/building-web-app-ruby-rails&#34;&gt;如何不使用 Rails 开发一个 Ruby 的 Web 应用&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Rails 是 Ruby 语言的标准 Web 框架，但是不用它也能开发 Web 应用。本文是一篇长篇教程，详细讲解不使用框架时，Ruby 语言如何开发 Web 应用。&lt;/p&gt;
&lt;h3 id=&#34;如何清理-dockerhttpsdockerwebdevcomtutorialsclean-up-docker&#34;&gt;&lt;a href=&#34;https://dockerwebdev.com/tutorials/clean-up-docker/&#34;&gt;如何清理 Docker？&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;如果你大量使用 Docker，它会占用很多硬盘空间。本文教你如何彻底清理 Docker，包括清理容器文件、镜像文件、网络数据、虚拟磁盘等等。&lt;/p&gt;
&lt;h3 id=&#34;ultraweatherhttpsgithubcomleftiumultra-weather&#34;&gt;&lt;a href=&#34;https://github.com/Leftium/ultra-weather&#34;&gt;UltraWeather&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个开源的 Web 应用，可以自己架设服务，查看全世界主要城市的天气，并且有 API。&lt;/p&gt;
&lt;h3 id=&#34;wkhtmltopdfhttpswkhtmltopdforg&#34;&gt;&lt;a href=&#34;https://wkhtmltopdf.org/&#34;&gt;wkhtmltopdf&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个命令行工具，将 HTML 源码文件转成渲染好的 PDF 文件。&lt;/p&gt;
&lt;h3 id=&#34;水冷服务器httpsnewsmicrosoftcominnovation-storiesdatacenter-liquid-cooling&#34;&gt;&lt;a href=&#34;https://news.microsoft.com/innovation-stories/datacenter-liquid-cooling/&#34;&gt;水冷服务器&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;计算机芯片的功耗不断提升，发热量也水涨船高，服务器的散热成了机房最大的难题。空气冷却越来越不够用了，微软公司开始尝试水冷，因为液体的传热效率比空气高几个数量级。&lt;/p&gt;
&lt;p&gt;他们将服务器主板都浸泡在液体之中，用的是专门的绝缘导热液，吸热只要达到50摄氏度就会沸腾，看上去就像浸在沸水中一样。导热液的蒸汽，遇到机柜上方的冷凝器，又会自动液化，落回服务器中，从而形成一个循环冷却系统。由于不需要额外的能量让液体流动，这个冷却系统本身是不耗能的，大幅降低了冷却成本。&lt;/p&gt;
&lt;h3 id=&#34;如何制作一个纯-css-的密码生成器httpsdevtoinhuofficiala-pure-css-password-generator-they-said-it-can-t-be-done-4pla&#34;&gt;&lt;a href=&#34;https://dev.to/inhuofficial/a-pure-css-password-generator-they-said-it-can-t-be-done-4pla&#34;&gt;如何制作一个纯 CSS 的密码生成器&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;写法很简单，但是做出来的效果真不错。&lt;/p&gt;
&lt;h3 id=&#34;深入了解-corshttpsieftimovcompostdeep-dive-cors-history-how-it-works-best-practices&#34;&gt;&lt;a href=&#34;https://ieftimov.com/post/deep-dive-cors-history-how-it-works-best-practices/&#34;&gt;深入了解 CORS&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文详细介绍浏览器跨域请求的概念、原理和最佳实践。&lt;/p&gt;
&lt;h3 id=&#34;浏览器-fullscreen-api-使用指南httpscss-trickscomhow-to-leverage-the-fullscreen-api-and-style-it&#34;&gt;&lt;a href=&#34;https://css-tricks.com/how-to-leverage-the-fullscreen-api-and-style-it/&#34;&gt;浏览器 Fullscreen API 使用指南&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;FullScreen API 可以让你完全控制，将整个页面或某个页面元素全屏显示，并且提供 CSS 伪类&lt;code&gt;:fullscreen&lt;/code&gt;控制样式。&lt;/p&gt;
&lt;h3 id=&#34;web-minidisc-应用程序httpsstefanobrillimeblogweb-minidisc&#34;&gt;&lt;a href=&#34;https://stefano.brilli.me/blog/web-minidisc/&#34;&gt;Web MiniDisc 应用程序&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;上个世纪90年代，索尼公司发布过 MiniDisc 播放器（上图一），有些型号带有 USB 接口。作者尝试写一个 Web 应用（上图二），使用 WebUSB 从浏览器连接播放器，然后使用 ffmepg.js 解码音频，从而将电脑上的音乐发送到它上 MiniDisc 播放器。&lt;/p&gt;
&lt;h3 id=&#34;如何创建一个-nodejs-的命令行应用httpsbloglogrocketcomonline-radio-server-pure-node-js&#34;&gt;&lt;a href=&#34;https://blog.logrocket.com/online-radio-server-pure-node-js/&#34;&gt;如何创建一个 Node.js 的命令行应用&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者一步步详细讲解，如何使用 Node.js 写一个命令行窗口应用，播放 MP3 歌曲。&lt;/p&gt;
&lt;h3 id=&#34;xipiohttpxipio&#34;&gt;&lt;a href=&#34;http://xip.io/&#34;&gt;xip.io&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个 DNS 工具，可以为 IP 地址生成任意子域名。比如，IP 地址是&lt;code&gt;127.0.0.1&lt;/code&gt;，那么&lt;code&gt;foo.127.0.0.1.xip.io&lt;/code&gt;就会指向&lt;code&gt;127.0.0.1&lt;/code&gt;。&lt;/p&gt;
&lt;h3 id=&#34;darkhttpdhttpsgithubcomemikulicdarkhttpd&#34;&gt;&lt;a href=&#34;https://github.com/emikulic/darkhttpd&#34;&gt;darkhttpd&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;C 语言编写的单文件 Web 服务器，无需安装，只要编译一下就能使用，可以替代&lt;code&gt;python -m http.server&lt;/code&gt;。&lt;/p&gt;
&lt;h3 id=&#34;dnspeephttpsjvnscablog20210331dnspeep-tool&#34;&gt;&lt;a href=&#34;https://jvns.ca/blog/2021/03/31/dnspeep-tool/&#34;&gt;dnspeep&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个命令行工具，查看本机发出的所有 DNS 请求和获得的回应。&lt;/p&gt;
&lt;h3 id=&#34;cors-anywherehttpsgithubcomrob--wcors-anywhere&#34;&gt;&lt;a href=&#34;https://github.com/Rob--W/cors-anywhere&#34;&gt;CORS Anywhere&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;脚本的跨域请求，需要对方服务器支持 CORS，否则就很麻烦。这个工具是一个 CORS 代理，需要自己架设，然后轻松将任何跨域请求变成同域请求。&lt;/p&gt;
&lt;h3 id=&#34;dahliaoshttpswebdahliaosio&#34;&gt;&lt;a href=&#34;https://web.dahliaos.io/#/&#34;&gt;dahliaOS&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这个网站是用 Flutter Web 框架开发的，使用 Dart 语言编写，然后编译成 JS，相当流畅。以后，开发网站时，除了 React 和 Vue，还可以考虑用 Flutter。&lt;/p&gt;
&lt;h3 id=&#34;通过-go-语言学习测试驱动开发httpsstudygolanggitbookiolearn-go-with-tests&#34;&gt;&lt;a href=&#34;https://studygolang.gitbook.io/learn-go-with-tests/&#34;&gt;通过 Go 语言学习测试驱动开发&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;中文电子书，通过编写测试用例学习 Go 语言，为测试驱动开发打下基础。&lt;/p&gt;
&lt;h3 id=&#34;vr-comparehttpsvr-comparecom&#34;&gt;&lt;a href=&#34;https://vr-compare.com/&#34;&gt;VR compare&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这个网站收集各种 VR 头盔的详细信息，并有对比表格。&lt;/p&gt;
&lt;h3 id=&#34;kunstderfugecomhttpwwwkunstderfugecom&#34;&gt;&lt;a href=&#34;http://www.kunstderfuge.com/&#34;&gt;kunstderfuge.com&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;该网站可以按照古典音乐家的人名查询，免费下载他们作品的 MIDI 文件，各类作品接近20000个。&lt;/p&gt;
&lt;h3 id=&#34;google-earth-timelapsehttpsearthenginegooglecomtimelapse&#34;&gt;&lt;a href=&#34;https://earthengine.google.com/timelapse/&#34;&gt;Google Earth Timelapse&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Google Earth 提供的卫星照片时间线功能，可以查看同一个地点从1984年至2020年的变化，目前官方提供了十几个地点。&lt;/p&gt;
&lt;h3 id=&#34;背景图片的差异httpscapitalandgrowthorganswersarticle2987224how-to-use-pre-suasion-to-sell-more-products&#34;&gt;&lt;a href=&#34;https://capitalandgrowth.org/answers/Article/2987224/How-to-Use-Pre-Suasion-to-Sell-More-Products&#34;&gt;背景图片的差异&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一家销售沙发的电子商务网站，需要为沙发页面配上背景图片。&lt;/p&gt;
&lt;p&gt;他们选择了两张图片，进行了 A / B 测试。&lt;/p&gt;
&lt;p&gt;A 组配上了蓝天白云。&lt;/p&gt;
&lt;p&gt;结果：最柔软、带有靠垫的那一款沙发，销量最好，可能是因为顾客认为那款沙发更舒适。&lt;/p&gt;
&lt;p&gt;B 组配上了一分钱硬币。&lt;/p&gt;
&lt;p&gt;结果：最便宜的那款沙发，销量最好。&lt;/p&gt;
&lt;h3 id=&#34;张忠谋最新演讲httpsudncomnewsstory72405403906&#34;&gt;&lt;a href=&#34;https://udn.com/news/story/7240/5403906&#34;&gt;张忠谋最新演讲&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;4月21日，台积电创始人张忠谋发表公开演讲，谈谈他对半导体产业的看法。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;半导体的历史&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;半导体的导电性介于导体（如金属）及绝缘体之间，因此称为半导体。一直到1948年，大家才关注这个东西，因为当年有一件大事发生，美国 ATT Bell Labs 的 Shockley、Bardeen、Brattain 发明了基于半导体的晶体管，ATT 开始实验生产晶体管。&lt;/p&gt;
&lt;p&gt;1952年，ATT 授权晶体管给其它公司，包括 IBM、TI（德州仪器）。电脑与半导体开始平行发展。&lt;/p&gt;
&lt;p&gt;1958年，Jack Kilby（德州仪器公司）及 Robert Noyce（仙童公司）发明集成电路，也是基于晶体管及半导体。&lt;/p&gt;
&lt;p&gt;我是1955年从 MIT（麻省理工学院）硕士毕业，加入半导体事业。1958年到德州仪器，认识了大我8岁的同事 Jack Kilby，后来也认识了 Robert Noyce。&lt;/p&gt;
&lt;p&gt;我和这些知名半导体人士在华盛顿的半导体会议一起开会，晚上一起去喝啤酒。那时大家觉得自己很幸运，身处在前途无量的半导体行业，喝完酒在雪花飘摇中走回旅馆。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Intel 公司&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1985年，我回台湾创办台积电，需要募资。Intel 那时是霸主，认为台积电做不大。我与 Intel 高层熟识，一开始找他们投资。但是，Intel 不想投，我询问理由是时机不对吗，Intel 回应“是景气不好”。台积电成立以后，他们才帮了一点忙。&lt;/p&gt;
&lt;p&gt;台积电在2020年市值曾达6,000亿美元，成为全球市值最大的半导体公司，反观曾居半导体霸主地位的 Intel，去年同时期的市值仅2,000亿美元，连台积电的一半都不到。Intel 从没想到芯片代工模式会变得这么重要。现在他们宣布也要做芯片代工，真是相当讽刺。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;台湾的优势&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;美国在芯片制造占有土地与水电优势，台湾半导体则有人才优势。最关键的是台湾有大量敬业、优秀的工程师、技工、作业员愿意加入制造业。&lt;/p&gt;
&lt;p&gt;美国人的敬业程度绝对不如台湾，至少工程师如此。我现在要的是又优秀又敬业的工程师、技工、作业员，而且要他们愿意投入制造业。美国制造业不红了，几十年前就不红了，工程师不投入制造业，包括金融、市场行销等都比制造业吃香。&lt;/p&gt;
&lt;p&gt;台湾高铁及高速公路交通方便，适合大规模制造业人员调动。台积电三个制造中心新竹、台中、台南，成千工程师不必搬家调动，就可以到另一个工厂上班。台积电有宿舍，他们平时住宿舍，周末回家、不必搬家，assignment（工作分派）常常是一年，这个如果在亚利桑那（Arizona）你要怎么做。&lt;/p&gt;
&lt;p&gt;美国虽然有胡萝卜又有棒子，但是单位成本显著较台湾高，就算美国联邦与州政府祭出津贴，但是短期的津贴不能弥补长期的竞争劣势。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;大陆和韩国&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;经过20年几百亿美元补贴之后，中国大陆的半导体制造落后台积电5年以上。芯片设计落后美国、台湾一两年，大陆现在还不是对手。&lt;/p&gt;
&lt;p&gt;在芯片制造领域，三星电子是台积电强劲竞争对手。因为韩国的优势与台湾相似，都拥有人员调动的便利性。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;云洞图书馆httpsmpweixinqqcomsgu0xmcm6pnhc7ma56h8ghg&#34;&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/Gu0xMcm6pNhc7ma56h8gHg?&#34;&gt;云洞图书馆&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;北京 MAD 建筑事务所设计的海口市云洞图书馆4月12日正式开馆，每天接受400人预约入馆。这是海口市规划的16座“海边的驿站”之中第一座完工的。这座一体成型的白色混凝土建筑，被英国《泰晤士报》称为“2021年最期待建成的建筑作品”。&lt;/p&gt;
&lt;p&gt;它的南侧是图书阅览室，北侧是公共驿站，提供咖啡厅、卫生间、休息区等服务。设计师的想法是，这是一座位于陆地与海洋之间的建筑，通过它消融海与地之间的边界。&lt;/p&gt;
&lt;p&gt;建筑物充满各种大小不一的洞，游客可以通过这些洞看天望海，同时也借此实现自然采光和自然通风。&lt;/p&gt;
&lt;p&gt;整个建筑是数字建模，先搭建一个中空的骨架，然后混凝土一体浇灌，局部采用 3D 打印。&lt;/p&gt;
&lt;h3 id=&#34;为什么游戏里做一扇门这么难httpswwwyystvcnp7800&#34;&gt;&lt;a href=&#34;https://www.yystv.cn/p/7800&#34;&gt;为什么游戏里做一扇门这么难？&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;很多游戏开发者认为，实现一扇门是最让人痛恨的事情，各种各样的 bug 因此产生。“门不仅要能打开，还要能关上，有时还需要开锁或者被撞开，打开之后还得能来回摇摆。”&lt;/p&gt;
&lt;h3 id=&#34;z-字形斑马线httpsmpweixinqqcomsxzn419wsw3zrcyjyqw2s0g&#34;&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/xZN419WSw3zrCYjyqw2S0g&#34;&gt;Z 字形斑马线&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;国内多地启用 Z 字形斑马线，让行人过马路的路线从直线变为“Z”字型，目的是减缓行人速度，拉长过马路的时间，让他更注意两边的车况，防止交通事故。这种设计到底有没有用，是有争论的。&lt;/p&gt;
&lt;h3 id=&#34;视频分辨率与码率的关系httpssupportshangzhibotvhckbarticle1028655&#34;&gt;&lt;a href=&#34;https://support.shangzhibo.tv/hc/kb/article/1028655/&#34;&gt;视频分辨率与码率的关系&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;视频文件的清晰度主要由码率、分辨率、帧数等指标决定。本文介绍这几个指标的概念，以及它们之间的关系。&lt;/p&gt;
&lt;h3 id=&#34;消失的除法指令httpscjtingmethe-missing-div-instruction-part1&#34;&gt;&lt;a href=&#34;https://cjting.me/the-missing-div-instruction-part1/&#34;&gt;消失的除法指令&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;学习汇编的时候，观察到一个现象，C 语言的除法操作，编译得到的汇编代码是一条乘法指令。这是为什么？&lt;/p&gt;
&lt;h3 id=&#34;serverless-数据库比较httpsnews-app-two-omegavercelapp&#34;&gt;&lt;a href=&#34;https://news-app-two-omega.vercel.app/&#34;&gt;Serverless 数据库比较&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这篇文章比较了三个 Serverless 云服务商的数据库服务（DynamoDB、 FaunaDB 和 Upstash），看看它们的性能如何。&lt;/p&gt;
&lt;h3 id=&#34;如何在命令行操作-github-actionshttpsgithubblog2021-04-15-work-with-github-actions-in-your-terminal-with-github-cli&#34;&gt;&lt;a href=&#34;https://github.blog/2021-04-15-work-with-github-actions-in-your-terminal-with-github-cli/&#34;&gt;如何在命令行操作 GitHub Actions？&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;GitHub 的命令行工具现在支持 GitHub Actions 了，用起来非常方便，这篇是官方的介绍文章。&lt;/p&gt;
&lt;h3 id=&#34;我的复古网站httpsashms2019-10-02retro-website-launch&#34;&gt;&lt;a href=&#34;https://ash.ms/2019-10-02/retro-website-launch/&#34;&gt;我的复古网站&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者将他的个人网站，做成 WIndows 95 的样子，把个人博客放在上面，很有意思。本文介绍他是怎么做的。&lt;/p&gt;
&lt;h3 id=&#34;从头开始编写-rpchttpsalexanderellispostsrpc-from-scratch&#34;&gt;&lt;a href=&#34;https://alexanderell.is/posts/rpc-from-scratch/&#34;&gt;从头开始编写 RPC&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;RPC 指的是远程函数调用，是服务器通信的常见方法。本文介绍 RPC 的概念，然后用 C 语言演示一个简单的例子。&lt;/p&gt;
&lt;h3 id=&#34;metricsgraphicsjshttpsgithubcommetricsgraphicsmetrics-graphics&#34;&gt;&lt;a href=&#34;https://github.com/metricsgraphics/metrics-graphics&#34;&gt;MetricsGraphics.js&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个基于 D3 的图表库，用来处理时间序列数据。特点是 API 简洁易用，生成的图表清晰漂亮。&lt;/p&gt;
&lt;h3 id=&#34;clearurlshttpsgithubcomclearurlsaddon&#34;&gt;&lt;a href=&#34;https://github.com/ClearURLs/Addon&#34;&gt;ClearURLs&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个浏览器插件，自动删除 URL 里面的访问者追踪参数。&lt;/p&gt;
&lt;h3 id=&#34;regexploithttpsgithubcomdoyensecregexploit&#34;&gt;&lt;a href=&#34;https://github.com/doyensec/regexploit&#34;&gt;regexploit&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;某些正则表达式有性能漏洞，可能会引发 DDOS 攻击。这个工具可以找出有漏洞的正则表达式，参见&lt;a href=&#34;https://blog.doyensec.com/2021/03/11/regexploit.html&#34;&gt;教程&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&#34;js-image-carverhttpstrekhlebdevjs-image-carver&#34;&gt;&lt;a href=&#34;https://trekhleb.dev/js-image-carver/&#34;&gt;JS image carver&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个采用接缝裁剪（seam carving）算法的在线工具，可以任意改变图片的高度和宽度，而不会扭曲图像。&lt;/p&gt;
&lt;p&gt;它的原理是找出那些对图片主要内容贡献最少的像素，将它们删除，不断重复这个过程，直到达到指定的高度和宽度，详见&lt;a href=&#34;https://trekhleb.dev/blog/2021/content-aware-image-resizing-in-javascript/&#34;&gt;这篇教程&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&#34;luckdrawhttps100pxnet&#34;&gt;&lt;a href=&#34;https://100px.net/&#34;&gt;LuckDraw&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个大转盘/ 九宫格的页面抽奖组件，多端适配，有 JS / React / Vue / 小程序的等版本。&lt;/p&gt;
&lt;h3 id=&#34;chore-clihttpsgithubcomiwfanchore-cli&#34;&gt;&lt;a href=&#34;https://github.com/iwfan/chore-cli&#34;&gt;chore-cli&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个 TypeScript 项目的脚手架工具。&lt;/p&gt;
&lt;h3 id=&#34;loficafehttpsloficafe&#34;&gt;&lt;a href=&#34;https://lofi.cafe/&#34;&gt;lofi.cafe&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这个网站是一个制作精良的在线电台，播放工作学习时放松精神的背景音乐，可以根据音乐风格切换房间。&lt;/p&gt;
&lt;h3 id=&#34;学习-ios-开发指南2021版httpsmatteomanferdinicombecome-an-ios-developer&#34;&gt;&lt;a href=&#34;https://matteomanferdini.com/become-an-ios-developer/&#34;&gt;学习 iOS 开发指南（2021版）&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这篇英语长文向初学者介绍如何学习 iOS 开发，大家关心的各种问题都能在里面找到解答，比如应该学习 Object-C 语言还是 Swift 语言。&lt;/p&gt;
&lt;h3 id=&#34;山内溥家族基金会httpsy-n10com&#34;&gt;&lt;a href=&#34;https://y-n10.com/&#34;&gt;山内溥家族基金会&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;任天堂第三代传人山内溥有一个家族基金会，基金会官网非常有创意，很有任天堂游戏的感觉，我从没见过这样的网站，值得参观。&lt;/p&gt;
&lt;h3 id=&#34;免费的-python-书籍httpsgithubcompamorosofree-python-books&#34;&gt;&lt;a href=&#34;https://github.com/pamoroso/free-python-books&#34;&gt;免费的 Python 书籍&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这个仓库收集网上的 Python 免费书籍（英文）。&lt;/p&gt;
&lt;h3 id=&#34;hellozookeeperhttpsgithubcomhellogithub-teamhellozookeeper&#34;&gt;&lt;a href=&#34;https://github.com/HelloGitHub-Team/HelloZooKeeper&#34;&gt;HelloZooKeeper&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;ZooKeeper 的中文教程，从最基础的安装使用到背后原理和源码，使用有趣诙谐的文字讲解。ZooKeeper 是大型分布式计算的配置服务工具。&lt;/p&gt;
&lt;h3 id=&#34;石头宠物httpsenwikipediaorgwikipet_rock&#34;&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Pet_Rock&#34;&gt;石头宠物&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;1975年，一个美国人加里·达尔（Gary Ross Dahl）在酒吧里，听到了朋友们抱怨养宠物很麻烦。他想到，为什么石头不能作为“宠物”呢？一块石头，不用喂食，不用遛，不用洗澡，也不会死或生病，是完美的宠物。&lt;/p&gt;
&lt;p&gt;他很认真地对待这个想法，开始动手设计。石头是来自墨西哥海滩的光滑小卵石，每块仅花费一美分。 它们像活宠物一样放在定制的纸板箱中出售，带有稻草和呼吸孔。他还花时间写了一本石头宠物的使用说明书。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/c2cb214b546693f2da1c4613132edd6b7ca6375d03e1bb78f001093980668ad0/68747470733a2f2f63646e2e6265656b6b612e636f6d2f626c6f67696d672f61737365742f3230323130342f6267323032313034313431312e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/c2cb214b546693f2da1c4613132edd6b7ca6375d03e1bb78f001093980668ad0/68747470733a2f2f63646e2e6265656b6b612e636f6d2f626c6f67696d672f61737365742f3230323130342f6267323032313034313431312e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;石头宠物于1975年圣诞节前正式上市，引发了公众的好奇，销售非常好。但是，圣诞节过后，销量就开始下降，1976年2月价格打折。最终，达尔以每只4美元的价格，售出了超过100万只石头宠物，成为百万富翁。&lt;/p&gt;
&lt;h3 id=&#34;三轴陀飞轮httpswwwmyminifactorycomcrowdfundingtourbillon-mechanica-tri-axial-crowdfunding-250&#34;&gt;&lt;a href=&#34;https://www.myminifactory.com/crowdfunding/tourbillon-mechanica-tri-axial-crowdfunding-250&#34;&gt;三轴陀飞轮&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;陀飞轮是豪华手表才有的调速装置，主要用于抵消地心引力对机芯运作造成的误差。三轴陀飞轮则是陀飞轮的最高境界，整个装置沿三个轴同时旋转。&lt;/p&gt;
&lt;p&gt;国外网友使用廉价的 3D 打印，制作出简易的三轴陀飞轮模型，目前正在众筹。&lt;/p&gt;
&lt;h3 id=&#34;代码的马斯洛金字塔httpwwwdeinfr2015-02-18-maslows-pyramid-of-code-reviewhtml&#34;&gt;&lt;a href=&#34;http://www.dein.fr/2015-02-18-maslows-pyramid-of-code-review.html&#34;&gt;代码的马斯洛金字塔&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;马斯洛金字塔是美国心理学家马斯洛提出的一个心理学模型，认为人类的心理需求从下往上分为5个层次，一旦实现了下层的需求，就会追求上一层的需求。&lt;/p&gt;
&lt;p&gt;这五个层次依次是：生理需求、安全需求、社交需求、尊严需求、自我实现。&lt;/p&gt;
&lt;p&gt;代码质量也可以用金字塔模型表示，从下往上有五个层次。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/62873cdfc16ce79d920cab07e3ad81973ee7ca3f9859054ea124c2f057c47d4d/68747470733a2f2f63646e2e6265656b6b612e636f6d2f626c6f67696d672f61737365742f3230323130342f6267323032313034303730352e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/62873cdfc16ce79d920cab07e3ad81973ee7ca3f9859054ea124c2f057c47d4d/68747470733a2f2f63646e2e6265656b6b612e636f6d2f626c6f67696d672f61737365742f3230323130342f6267323032313034303730352e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;（1）第一层：正确&lt;/strong&gt;（Correct）&lt;/p&gt;
&lt;p&gt;代码是否执行预期的工作？是否考虑了边缘情况？是否经过充分测试？是否有可维护性？是否有可接受的性能？&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;（2）第二层：安全&lt;/strong&gt;（Secure）&lt;/p&gt;
&lt;p&gt;代码是否存在漏洞？数据是否安全存储？个人识别信息（PII）是否得到正确处理？是否对用户的输入进行了全面的验证？&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;（3）第三层：可读&lt;/strong&gt;（Readable）&lt;/p&gt;
&lt;p&gt;代码是否易于阅读和理解？测试足够简洁吗？变量、函数、类的名称是否适当？使用领域模型是否可以清晰地映射现实世界，以减少认知负担？是否使用一致的编码风格约定？&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;（4）第四层：优雅&lt;/strong&gt;（Elegant）&lt;/p&gt;
&lt;p&gt;代码是否利用了众所周知的编程模式？能否更简单简洁地实现所需的功能？你会为编写这些代码感到兴奋吗？你为这些代码感到骄傲吗？&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;（5）第五层：利他主义&lt;/strong&gt;（Altruist）&lt;/p&gt;
&lt;p&gt;别人能否从这些代码学到东西？这些代码是否会激励其他工程师进行改进？它是否会让世界变成一个更好的地方？&lt;/p&gt;
&lt;h3 id=&#34;kk-给年轻人的建议&#34;&gt;KK 给年轻人的建议&lt;/h3&gt;
&lt;p&gt;凯文·凯利（Kevin Kelly，网名 KK）是著名的科技评论家，曾经担任《连线》（Wired）杂志的第一任主编，他的著作《失控》在国内外都非常有名。&lt;/p&gt;
&lt;p&gt;去年4月28日，是他68岁的生日。老爷子在个人网站上，发表了一篇&lt;a href=&#34;https://kk.org/thetechnium/68-bits-of-unsolicited-advice/&#34;&gt;《给年轻人的68条建议》&lt;/a&gt;，谈自己的人生体会。文章很受欢迎，浏览量非常大，译成了十几种外语。&lt;/p&gt;
&lt;p&gt;今年4月28日，69岁生日时，他又续写了一篇&lt;a href=&#34;https://kk.org/thetechnium/99-additional-bits-of-unsolicited-advice/&#34;&gt;《给年轻人的99 条建议》&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;这些建议，读起来很有意思。我觉得，他年纪大了以后，对传统的观点越来越不屑一顾了，更强调叛逆和逆向思维。大家看这一条。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;（1）”智者看到一样东西，疑问要比答案多。“&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;言下之意，所谓有智慧的人，不是因为他知道答案，而恰恰因为他不知道，比别人有更多的疑问。那么，按照这种说法，那些言之凿凿、说起话来不容置疑、告诉你答案的人，在 KK 看来并不是那么可信。&lt;/p&gt;
&lt;p&gt;有意思的地方是，KK 本人是一个评论家，平日的工作就是写文章，分析科技趋势。这是不是他在对大家说，我的那些文章也不必当真，其实我内心的疑问比你们更多。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;（2）“小时候，让你与其它同学格格不入的东西，长大后会帮助你成功，如果你不失去它的话。”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这句话是说，一个人能够成功，不是因为你跟别人一样，而是因为你从小就跟别人不一样，并且保持了下来。这就是鼓励大家走不一样的路，别人告诉你做人要怎样怎样，听听就好。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;（3）&amp;ldquo;金钱的作用被高估了。真正的创新很少需要大量资金，否则大公司将垄断创新。相反，几乎所有的突破都是由那些缺乏钱的人实现的，正是因为他们资源有限，才被迫进行创新，依靠自己的热情、毅力和独创性来寻找新的方法。资源不足是创新的优势。”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;创业公司最大的苦恼就是没有资源，但是 KK 认为这恰恰是一种优势。一个公司能够创新，不是因为有钱，更大的原因是没钱，不得不发明新方法。&lt;/p&gt;
&lt;p&gt;从上面三条引语可以看到，KK 年近古稀以后，观点更具有叛逆性了。别人眼里的劣势——没答案、不从众、没资源——在 KK 看来，都是优势。也许这是因为他深信，科技行业的突破都来自于颠覆现状，如果都跟主流一样，就没法颠覆现状了。&lt;/p&gt;
&lt;p&gt;最后，再贴几条他的建议，我觉得说的很好。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;（4）成功的秘诀：少承诺，多交付。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;（5）实现一个目标，拿到什么结果是次要的，更重要的是，它让你改变了多少。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;（6）唯一可以接受的债务，是购买价值极有可能增加的东西。大多数商品一旦购买，价值就会减少或消失，不要借钱进行这类消费。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://telegram.org/blog/payments-2-0-scheduled-voice-chats&#34;&gt;Telegram&lt;/a&gt; 的Web端&lt;/p&gt;
&lt;p&gt;Telegram原来有一个 Web 客户端，最近一口气又发布了另外两个。现在，三个全功能的官方 Web 端同时运行（客户端&lt;a href=&#34;https://web.telegram.org/&#34;&gt;1&lt;/a&gt;、&lt;a href=&#34;https://webk.telegram.org/&#34;&gt;2&lt;/a&gt;、&lt;a href=&#34;https://webz.telegram.org/&#34;&gt;3&lt;/a&gt;），这是内部的前端程序员太多的意思吗。&lt;/p&gt;
&lt;h3 id=&#34;谷歌的新办公室设计httpswwwnytimescom20210430technologygoogle-back-to-office-workershtml&#34;&gt;&lt;a href=&#34;https://www.nytimes.com/2021/04/30/technology/google-back-to-office-workers.html&#34;&gt;谷歌的新办公室设计&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;谷歌公司已经要求雇员，在今年9月份回到办公室，结束远程工作。为了配合这个决定，谷歌专门成立了一支团队，对办公室进行重新设计。&lt;/p&gt;
&lt;p&gt;（1）工位上方增加风管，用来通风和供暖。&lt;/p&gt;
&lt;p&gt;（2）需要私密性时，工位之间会自动升起半透明的玻璃纸气球壁，充气膨胀，以防窥视。&lt;/p&gt;
&lt;p&gt;（3）对于不需要固定工位的人，设立流动办公桌。高度可以升降，既可以坐着办公，也可以站着办公。&lt;/p&gt;
&lt;p&gt;（4）设立“团队仓”（Team Pod）。&lt;/p&gt;
&lt;p&gt;（5）创建新的会议室，方便办公室人员和远程人员一起开会。&lt;/p&gt;
&lt;p&gt;所有与会者围成一圈，远程人员的位置上摆放大型显示屏，显示脸部，创造面对面交谈的体验。&lt;/p&gt;
&lt;p&gt;（6）建立户外工作区，防止室内可能的病毒传播。&lt;/p&gt;
&lt;p&gt;工作区有草皮和木围栏，遍布 Wi-Fi 信号。室外也有搭建在帐篷里面的视频会议室。&lt;/p&gt;
&lt;h3 id=&#34;你家的智能电视可能正在监视你httpsuserguanchacnmaincontentid505352&#34;&gt;&lt;a href=&#34;https://user.guancha.cn/main/content?id=505352&#34;&gt;你家的智能电视可能正在监视你&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;网友在 V2ex 论坛上发帖说，自家的电视机正在监视所有联网设备。他发现一个叫做“勾正数据服务”的应用，每隔 10 分钟会扫一遍所有联网设备，然后打包将你的内网信息上传。&lt;/p&gt;
&lt;h3 id=&#34;切尔诺贝利核电站的内部现状httpspetapixelcom20210424exclusive-photos-inside-the-chernobyl-nuclear-power-plant&#34;&gt;&lt;a href=&#34;https://petapixel.com/2021/04/24/exclusive-photos-inside-the-chernobyl-nuclear-power-plant/&#34;&gt;切尔诺贝利核电站的内部现状&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;切尔诺贝利核电站由于核泄漏而被废弃，但是它里面其实现在有工作人员，监控整个遗址的安全指标。一个波兰摄影师获得同意，进入核电站大楼，拍摄内部状况。本文就是他的记录，以及大量的照片。&lt;/p&gt;
&lt;h3 id=&#34;typescript-项目的基本操作httpswwwmetachriscom202104starting-a-typescript-project-in-2021&#34;&gt;&lt;a href=&#34;https://www.metachris.com/2021/04/starting-a-typescript-project-in-2021/&#34;&gt;TypeScript 项目的基本操作&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文面向初学者，介绍了 TypeScript 项目会用到的各种基本操作，帮助你启动一个 TypeScript 项目。&lt;/p&gt;
&lt;h3 id=&#34;css-技巧httpsmarkodeniccomcss-tips&#34;&gt;&lt;a href=&#34;https://markodenic.com/css-tips/&#34;&gt;CSS 技巧&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文介绍一些较新的 CSS 技巧，可以不使用 JavaScript，就达到复杂的交互效果。&lt;/p&gt;
&lt;h3 id=&#34;tailwind-css-使用入门httpsallroundioarticlesintroduction-to-tailwind-css-and-utility-classes&#34;&gt;&lt;a href=&#34;https://allround.io/articles/introduction-to-tailwind-css-and-utility-classes&#34;&gt;Tailwind CSS 使用入门&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Tailwind CSS 是一个很有特点的 CSS 框架，本文介绍它的基本用法。&lt;/p&gt;
&lt;h3 id=&#34;如何用自然语言处理nlp推送广告httpsnetlabecomreal-time-context-targeting-using-nlp-baceb4324fc4&#34;&gt;&lt;a href=&#34;https://netlabe.com/real-time-context-targeting-using-nlp-baceb4324fc4&#34;&gt;如何用自然语言处理（NLP）推送广告？&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文演示了将网页文章的内容，推送给 NLP 的云服务，自动进行自然语言分析，返回文章主题。然后，页面脚本根据网页的不同主题，在网页上加载最相关的广告。&lt;/p&gt;
&lt;h3 id=&#34;avif-图像格式指南httpsdarekkaycomblogavif-images&#34;&gt;&lt;a href=&#34;https://darekkay.com/blog/avif-images/&#34;&gt;AVIF 图像格式指南&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;AVIF 是一种新的图像格式，跟 JPG 和 PNG 类似，但可以压缩得更小。现在浏览器的支持已经比较好了，本文介绍这种格式的用法。&lt;/p&gt;
&lt;h3 id=&#34;react-flowhttpsgithubcomwbkdreact-flow&#34;&gt;&lt;a href=&#34;https://github.com/wbkd/react-flow&#34;&gt;React Flow&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个基于 React 的库，用来制作功能强大的、可交互、可编辑的节点图工具。&lt;/p&gt;
&lt;h3 id=&#34;cusdishttpsgithubcomdjydecusdis&#34;&gt;&lt;a href=&#34;https://github.com/djyde/cusdis&#34;&gt;Cusdis&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个可以自己搭建的网页评论系统，类似于 Disqus。&lt;/p&gt;
&lt;h3 id=&#34;nushellhttpsgithubcomnushellnushell&#34;&gt;&lt;a href=&#34;https://github.com/nushell/nushell&#34;&gt;nushell&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个命令行 Shell，语法更加合理，通过管道功能可以更加便捷地管理系统。&lt;/p&gt;
&lt;h3 id=&#34;netdatahttpsgithubcomnetdatanetdata&#34;&gt;&lt;a href=&#34;https://github.com/netdata/netdata&#34;&gt;Netdata&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Linux 服务器的一个开源的监控服务，功能非常强大。&lt;/p&gt;
&lt;h3 id=&#34;tarojs-router-nexthttpsgithubcomlblblongtarojs-router-next&#34;&gt;&lt;a href=&#34;https://github.com/lblblong/tarojs-router-next&#34;&gt;tarojs-router-next&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;小程序框架 Taro 的一个好用的路由库。&lt;/p&gt;
&lt;h3 id=&#34;golang-idevicehttpsgithubcomelectricbubblegidevice&#34;&gt;&lt;a href=&#34;https://github.com/electricbubble/gidevice&#34;&gt;Golang-iDevice&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个 Go 语言开发的工具，用来与 iOS 设备通信，可以作为库使用，也可以在命令行独立使用。&lt;/p&gt;
&lt;h3 id=&#34;skyline-webcamshttpswwwskylinewebcamscom&#34;&gt;&lt;a href=&#34;https://www.skylinewebcams.com/&#34;&gt;Skyline Webcams&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;该网站提供世界五大洲的直播摄像头，可以看到世界各个地点的实况。&lt;/p&gt;
&lt;h3 id=&#34;新兴技术列表httpsenwikipediaorgwikilist_of_emerging_technologies&#34;&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/List_of_emerging_technologies&#34;&gt;新兴技术列表&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这是维基百科的一个页面，列出了目前最前沿的技术领域，将近有100个。&lt;/p&gt;
&lt;h3 id=&#34;一天学习一个-npm-轮子httpsgithubcomhaixiang6123one-day-one-npm-lib&#34;&gt;&lt;a href=&#34;https://github.com/Haixiang6123/one-day-one-npm-lib&#34;&gt;一天学习一个 npm 轮子&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个教程库，作者选了十几个常用的前端 JS 库，演示如何自己从头实现这些库。&lt;/p&gt;
&lt;h3 id=&#34;灰绿色分界线httpswwwgeographyrealmcomgray-green-urban-divide-wealth-poverty-visible-space&#34;&gt;&lt;a href=&#34;https://www.geographyrealm.com/gray-green-urban-divide-wealth-poverty-visible-space/&#34;&gt;灰绿色分界线&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;卫星照片上，很多城市都有“灰绿色分界线”，可以用来区分高收入社区和低收入社区。&lt;/p&gt;
&lt;p&gt;灰色是水泥道路和屋顶的主要颜色，而高收入社区往往有更多的树木和植被，呈现出绿色。&lt;/p&gt;
&lt;h3 id=&#34;吊运非洲犀牛httpsmpweixinqqcomsfiwk8supfocuaur9tpukgg&#34;&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/fiWK8SUpFOCUaur9tpUkGg?&#34;&gt;吊运非洲犀牛&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;1960年，非洲有超过10万头黑犀牛。但到了90年代，仅仅剩下了2354头。为了保护它们免遭盗猎者杀害，政府和动物保护组织使用直升机，将它们空运到人迹罕至的安全地区。&lt;/p&gt;
&lt;p&gt;经过研究，空运犀牛的最佳姿势，就是将它们麻醉后，四肢捆住，面罩遮盖眼睛，倒吊于直升机的下方。很多时候，只需半小时，犀牛就能成功抵达新家。得益于眼罩的遮蔽，犀牛下机之后，甚至都不知道自己上过天。&lt;/p&gt;
&lt;h3 id=&#34;最白的白色油漆httpswwwbbccomnewsscience-environment-56749105&#34;&gt;&lt;a href=&#34;https://www.bbc.com/news/science-environment-56749105&#34;&gt;最白的白色油漆&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;美国普渡大学的科学家，研发出了世界最白的白色油漆，可以反射超过98％的阳光。目前，市场上普通的白色涂料可反射80％至90％的阳光。反射率越高，越有利于房间降温，减少空调的耗能。&lt;/p&gt;
&lt;p&gt;这种油漆的主要成分是白色的硫酸钡，使用了许多不同大小的颗粒，混合在一起。不同的颗粒可以散射不同波长的光，所以反射率特别高。&lt;/p&gt;
&lt;h3 id=&#34;我邮寄了一个-airtaghttpswwwintegocommac-security-blogi-mailed-an-airtag-and-tracked-its-progress-heres-what-happened&#34;&gt;&lt;a href=&#34;https://www.intego.com/mac-security-blog/i-mailed-an-airtag-and-tracked-its-progress-heres-what-happened/&#34;&gt;我邮寄了一个 AirTag&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;苹果公司新发布的 AirTag，具有追踪功能。作者就放了一个 AirTag 在邮包里面，发出去以后一路追踪，看看效果如何。&lt;/p&gt;
&lt;h3 id=&#34;我的-html-页面模板httpswwwmatuzoatbloghtml-boilerplate&#34;&gt;&lt;a href=&#34;https://www.matuzo.at/blog/html-boilerplate/&#34;&gt;我的 HTML 页面模板&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者介绍了自己目前使用的 HTML 页面模板，解释了每一行的用途&lt;/p&gt;
&lt;h3 id=&#34;prisma-orm-库介绍httpswwwprismaioblogprisma-the-complete-orm-inw24qjeawmb&#34;&gt;&lt;a href=&#34;https://www.prisma.io/blog/prisma-the-complete-orm-inw24qjeawmb&#34;&gt;Prisma ORM 库介绍&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Prisma 是 Node.js 和 TypeScript 项目新一代的 ORM 库，用来操作数据库。看上去功能非常强大，还带有配套的图形界面管理工具，下一个项目可以用它试试看。&lt;/p&gt;
&lt;h3 id=&#34;最小的-docker-镜像文件httpsdevopsdirectivecomposts202104tiny-container-image&#34;&gt;&lt;a href=&#34;https://devopsdirective.com/posts/2021/04/tiny-container-image/&#34;&gt;最小的 Docker 镜像文件&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者介绍如何做出一个最小的 Docker 镜像文件，包含一个简单的 HTTP 服务器，大小只有 6KB。&lt;/p&gt;
&lt;h3 id=&#34;bash-如何更快地浏览目录httpsmhoffmangithubio20150521how-to-navigate-directories-with-the-shellhtml&#34;&gt;&lt;a href=&#34;https://mhoffman.github.io/2015/05/21/how-to-navigate-directories-with-the-shell.html&#34;&gt;Bash 如何更快地浏览目录&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文介绍一些高级的 Bash 技巧，让你更快地在目录之间切换。&lt;/p&gt;
&lt;h3 id=&#34;cpufetchhttpsgithubcomdr-noobcpufetch&#34;&gt;&lt;a href=&#34;https://github.com/Dr-Noob/cpufetch&#34;&gt;cpufetch&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个开源的命令行程序，可以输出 CPU 的详细信息，支持桌面系统和安卓。&lt;/p&gt;
&lt;h3 id=&#34;整数序列百科全书httpsoeisorg&#34;&gt;&lt;a href=&#34;https://oeis.org/&#34;&gt;整数序列百科全书&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;该网站收集各种整数序列，比如“1,2,3,6,11,23,47,106……”，这个序列的下一个数字是什么？&lt;/p&gt;
&lt;h3 id=&#34;rust-第一步httpsdocsmicrosoftcomen-uslearnpathsrust-first-steps&#34;&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/learn/paths/rust-first-steps/&#34;&gt;Rust 第一步&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;微软官网上面的 Rust 教程，从零讲起，教你如何在 Windows 里面使用 Rust 编程。&lt;/p&gt;
&lt;h3 id=&#34;远程工作软件地图2021版httpsfridayappremote-workmarket-map&#34;&gt;&lt;a href=&#34;https://friday.app/remote-work/market-map&#34;&gt;远程工作软件地图（2021版）&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文列出了远程工作可选择的软件，一共有几十种。&lt;/p&gt;
&lt;h3 id=&#34;cockroach-大学httpsuniversitycockroachlabscomcatalog&#34;&gt;&lt;a href=&#34;https://university.cockroachlabs.com/catalog&#34;&gt;Cockroach 大学&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;分布式关系型数据库 CockroachDB 的官方教程站，提供多门免费课程。&lt;/p&gt;
&lt;h3 id=&#34;virtoceanhttpsvirtoceancom&#34;&gt;&lt;a href=&#34;https://virtocean.com/&#34;&gt;virtocean&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;该网站提供各种海洋相关的声音，作为背景音乐。&lt;/p&gt;
&lt;h3 id=&#34;彩色篮球场httpsmymodernmetcompigalle-basketball-court-paris&#34;&gt;&lt;a href=&#34;https://mymodernmet.com/pigalle-basketball-court-paris/&#34;&gt;彩色篮球场&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;法国一个时尚品牌将巴黎的一个街头篮球场，重新设计成彩色篮球场，让这个本来没人关注的地方，变成了网红景点。&lt;/p&gt;
&lt;h3 id=&#34;半导体行业的复兴httpssemiwikicomgeneral297730-semiconductor-startups-are-they-back&#34;&gt;&lt;a href=&#34;https://semiwiki.com/general/297730-semiconductor-startups-are-they-back/&#34;&gt;半导体行业的复兴&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;60年前，半导体行业诞生在旧金山湾区，芯片创业公司兴盛一时，在旧金山到处都是。那个地方因此被称为“硅谷”（半导体的主要成分是硅）。&lt;/p&gt;
&lt;p&gt;后来，这个行业日趋成熟，加上它要求巨额资本投入，使得创业公司大量减少，硅谷的重点转移到了互联网和软件公司。半导体不再是行业的热点了。&lt;/p&gt;
&lt;p&gt;但是，过去的几年中，半导体创业公司正在缓慢地复苏，芯片公司发生了惊人金额的融资和收购。那么，半导体创业公司为什么会复苏？还是现在的繁荣属于暂时的海市蜃楼？&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;首先，必须明确一点，过去几十年中，半导体行业一直在增长。全球范围内，在计算机、智能手机、消费电子产品、汽车、工业电子产品的增长带动下，半导体的销售额每年都在上升。正是因为半导体技术的进步，才使得计算机更强大、网速更快、电子产品的体积更小。&lt;/p&gt;
&lt;p&gt;那么，在这样一个不断发展的大型市场中，过去很长一段时间内，为什么没有新的半导体创业公司呢？&lt;/p&gt;
&lt;p&gt;主要原因有下面几点。&lt;/p&gt;
&lt;p&gt;（1）半导体行业的清洗部门发生了大量倒闭，投资者损失严重。&lt;/p&gt;
&lt;p&gt;（2）互联网技术蓬勃发展，企业家的兴趣从半导体转移到了互联网。&lt;/p&gt;
&lt;p&gt;（3）中国成为半导体的供应大国，在增加竞争的同时，拉低了市场的价格。&lt;/p&gt;
&lt;p&gt;（4）半导体上市公司发生了巨大的整合兼并，巨头越来越强，留给小企业的空间不断缩小。&lt;/p&gt;
&lt;p&gt;（5）生产一种半导体芯片大约需要融资3000万美元，批量生产则至少需要再增加1亿美元。&lt;/p&gt;
&lt;p&gt;（6）只有大型公司，才会大量采购半导体产品。由于不断的行业整合，芯片采购者的数量变少了，减少的购买者意味着更低的报价。&lt;/p&gt;
&lt;p&gt;这些原因使得半导体不再是一个有吸引力的投资领域，风险投资对半导体创业公司的兴趣和投资因此变少。&lt;/p&gt;
&lt;p&gt;但是，过去的几年中，情况开始发生转变。自2017年以来，对半导体创业公司的投资大幅增加。这是为什么？&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/b160cdc70e21c5af6748084a93aa67b9aa610d532a12bc6b0b8dcae4beaa52c7/68747470733a2f2f63646e2e6265656b6b612e636f6d2f626c6f67696d672f61737365742f3230323130342f6267323032313034303630312e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/b160cdc70e21c5af6748084a93aa67b9aa610d532a12bc6b0b8dcae4beaa52c7/68747470733a2f2f63646e2e6265656b6b612e636f6d2f626c6f67696d672f61737365742f3230323130342f6267323032313034303630312e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;原因之一是人工智能（AI）的爆炸式增长。AI 需要巨大的计算量，急需创新的半导体产品。在人工智能和计算机视觉的帮助下，自动驾驶汽车取得了长足的进步。这进一步推动了对芯片的需求。&lt;/p&gt;
&lt;p&gt;原因之二是建造半导体芯片的成本已大大降低。如果不使用最新工艺（大多数芯片不需要最先进工艺），芯片的制造成本是非常廉价的。现在用1000万美元或更少的钱，就可以制造半导体芯片，远远少于以前的3000万美元。&lt;/p&gt;
&lt;p&gt;原因之三是半导体购买者的范围也在不断扩大。大型互联网公司和软件企业开始进入芯片领域，他们已成为半导体创业公司的新收购者。&lt;/p&gt;
&lt;p&gt;原因之四是美国和中国之间的紧张局势，这使得各国越来越关注芯片的自给自足和国有化，这推动了对半导体的投资。汽车行业面临的芯片短缺也加剧了这种趋势。&lt;/p&gt;
&lt;p&gt;半导体创业浪潮是否会一直持续下去？&lt;/p&gt;
&lt;p&gt;我认为是的。随着量子计算、空间技术、计算生物学等新领域的涌现，对芯片的需求还会不断上升。因此，半导体创业公司的复苏势头值得看好。&lt;/p&gt;
&lt;h3 id=&#34;山东省和河南省httpsnewssinacomcnc2021-05-14doc-ikmxzfmm2458567shtml签订黄河生态保护协议&#34;&gt;&lt;a href=&#34;https://news.sina.com.cn/c/2021-05-14/doc-ikmxzfmm2458567.shtml&#34;&gt;山东省和河南省&lt;/a&gt;签订《黄河生态保护协议》&lt;/h3&gt;
&lt;p&gt;规定从河南流入山东的黄河水，如果水质改善一个等级，山东给予河南6000万元补偿资金；如果恶化一个等级，河南给予山东6000万元补偿资金。&lt;/p&gt;
&lt;h3 id=&#34;32位股价不够用httpswwwwsjcomarticlesberkshire-hathaways-stock-price-is-too-much-for-computers-11620168548&#34;&gt;&lt;a href=&#34;https://www.wsj.com/articles/berkshire-hathaways-stock-price-is-too-much-for-computers-11620168548&#34;&gt;32位股价不够用&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;美国最贵的股票，目前是巴菲特的伯克希尔·哈撒韦公司 ，过去一年股价不断上涨，已经达到了421,000美元一股。&lt;/p&gt;
&lt;p&gt;这给纳斯达克股票市场造成了麻烦，因为交易所使用32位格式储存股价，能够记录的最大值是&lt;code&gt;2^32 - 1&lt;/code&gt;（4,294,967,295）。其中，留出4位作为小数，所以能够记录的最高股价为429,496.7295美元。只要伯克希尔·哈撒韦公司再上涨2%，就会超出这个最高价。&lt;/p&gt;
&lt;p&gt;纳斯达克市场已经暂停了伯克希尔·哈撒韦公司的报价，开始升级系统。巴菲特曾经被问到，为什么不像大多数公司一样拆分股票，让股价变得便宜。他回答，这样会吸引来很多不老练的短期投资者，他们根本不知道自己在做什么，所以不会拆分股票。&lt;/p&gt;
&lt;h3 id=&#34;鸽子在我家窗口孵蛋httpswwwdoubancompeoplexquizendstatus3421629287&#34;&gt;&lt;a href=&#34;https://www.douban.com/people/xquizend/status/3421629287/&#34;&gt;鸽子在我家窗口孵蛋&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一对鸽子在阳台的空花盆筑了个简易巢，然后在里面下了两只蛋，并且孵了起来。作者观察了半个月，终于看到小鸟孵出来了。&lt;/p&gt;
&lt;h3 id=&#34;如何生成不规则边框的背景图httpscss-trickscomcreating-non-rectangular-headers&#34;&gt;&lt;a href=&#34;https://css-tricks.com/creating-non-rectangular-headers/&#34;&gt;如何生成不规则边框的背景图&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文介绍为一个网页元素添加不规则背景图（上图）的几种方法。&lt;/p&gt;
&lt;h3 id=&#34;git-的-squash-合并httpsblogdnsimplecom201901two-years-of-squash-merge&#34;&gt;&lt;a href=&#34;https://blog.dnsimple.com/2019/01/two-years-of-squash-merge/&#34;&gt;Git 的 squash 合并&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Git 分支进行合并时，有多种合并方式：直进合并、非直进合并、递归合并和 squash 合并。最后一种 squash 合并，指的是把待合并的节点汇总成为一个新的提交。本文介绍这种合并方式。&lt;/p&gt;
&lt;h3 id=&#34;javascript-模块的代码重复性httpshabrcomrupost554334&#34;&gt;&lt;a href=&#34;https://habr.com/ru/post/554334/&#34;&gt;JavaScript 模块的代码重复性&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者做了一个实验，他新建了一个 Angular 的标准项目，分析 node_modules 目录里面安装的所有模块，对脚本文件的每一个函数计算哈希值，结果发现61%的函数是重复的，莫非大家都是从 StackOverflow 拷贝代码。&lt;/p&gt;
&lt;h3 id=&#34;rust-的不知名贡献者httpsbrsongithubio20210502rusts-most-unrecognized-contributor&#34;&gt;&lt;a href=&#34;https://brson.github.io/2021/05/02/rusts-most-unrecognized-contributor&#34;&gt;Rust 的不知名贡献者&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;我们都知道，很多语言的创始人、主要贡献者是谁。但是，Rust 语言的主要贡献者是谁，大家却说不出来。本文介绍 Rust 语言背后的贡献者。&lt;/p&gt;
&lt;h3 id=&#34;微小变化带来的大收益httpsjoelcalifacomblogtiny-wins&#34;&gt;&lt;a href=&#34;https://joelcalifa.com/blog/tiny-wins/&#34;&gt;微小变化带来的大收益&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者讲了几个案例，都是网站细节的微小改进，带来用户体验的巨大改进，比如 GitHub 的 favicon 显示构建结果。&lt;/p&gt;
&lt;h3 id=&#34;使用-go-语言学习蒙特卡洛模拟httpsggcarvalhodevpostsmontecarlo&#34;&gt;&lt;a href=&#34;https://ggcarvalho.dev/posts/montecarlo/&#34;&gt;使用 Go 语言学习蒙特卡洛模拟&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文采用 Go 语言，使用各种小例子，讲解什么是蒙特卡洛模拟。&lt;/p&gt;
&lt;h3 id=&#34;javascript-的延迟加载属性模式httpshumanwhocodescomblog202104lazy-loading-property-pattern-javascript&#34;&gt;&lt;a href=&#34;https://humanwhocodes.com/blog/2021/04/lazy-loading-property-pattern-javascript/&#34;&gt;JavaScript 的延迟加载属性模式&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;如果一个对象的属性值需要非常昂贵的计算，我们可能希望，只有用到这个属性时，才对它求值。本文讨论这在 JavaScript 里面应该怎么实现，作者是著名的尼古拉斯·扎卡斯（Nicholas C.Zakas）。&lt;/p&gt;
&lt;h3 id=&#34;scheme-floodhttpsschemefloodcom&#34;&gt;&lt;a href=&#34;https://schemeflood.com/&#34;&gt;Scheme flood&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;大家用桌面浏览器访问这个网站，会列出你的电脑安装了什么应用。这样做的目的，是生成一个用户指纹，从而追踪用户，作者写了一篇详细的&lt;a href=&#34;https://fingerprintjs.com/blog/external-protocol-flooding/&#34;&gt;文章&lt;/a&gt;，解释这是怎么实现的。&lt;/p&gt;
&lt;h3 id=&#34;chanifyhttpsgithubcomchanifychanifyblobmainreadme-zh_cnmd&#34;&gt;&lt;a href=&#34;https://github.com/chanify/chanify/blob/main/README-zh_CN.md&#34;&gt;Chanify&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个开源的 iOS 设备消息推送工具，分为服务器和 iOS App 两个部分。安装以后，可以将文本/图片/文件等各种消息推送到 iOS 设备。&lt;/p&gt;
&lt;h3 id=&#34;apk-在线分析httpsapkinfoonline&#34;&gt;&lt;a href=&#34;https://apkinfo.online/&#34;&gt;APK 在线分析&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个在线工具，用来分析、修改 APK 文件（安卓应用安装包），以及提取 APK 图标。&lt;/p&gt;
&lt;h3 id=&#34;come-browse-with-mehttpscomebrowsewithmecom&#34;&gt;&lt;a href=&#34;https://comebrowsewithme.com/&#34;&gt;Come Browse With Me&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这个在线工具通过 WebRTC，可以将你的浏览器窗口分享给他人，也就是说，别人可以看到你在页面上的一举一动。&lt;/p&gt;
&lt;h3 id=&#34;github-elementshttpsgithubcomgithubgithub-elements&#34;&gt;&lt;a href=&#34;https://github.com/github/github-elements&#34;&gt;github-elements&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这个仓库收集了 GitHub 发布的官方 Web Components 组件，目前有17个，都是 GitHub 官网实际在使用的项目。&lt;/p&gt;
&lt;h3 id=&#34;ffmpeg-操作备忘httpsgistgithubcomsteven2358ba153c642fe2bb1e47485962df07c730&#34;&gt;&lt;a href=&#34;https://gist.github.com/steven2358/ba153c642fe2bb1e47485962df07c730&#34;&gt;FFmpeg 操作备忘&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这个网页收集了 FFmpeg 一些常见操作的命令行写法。&lt;/p&gt;
&lt;h3 id=&#34;业余编译器作者的学习资源httpsc9xmecompilebib&#34;&gt;&lt;a href=&#34;https://c9x.me/compile/bib/&#34;&gt;业余编译器作者的学习资源&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;该网页收集各种编译器相关的自学资源。&lt;/p&gt;
&lt;h3 id=&#34;javascript-数据科学教程httpjs4dsorg&#34;&gt;&lt;a href=&#34;http://js4ds.org/&#34;&gt;JavaScript 数据科学教程&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一本英文的 JavaScript 教程，免费阅读。从零基础的语法开始讲起，为数据研究人员提供必要的 JavaScript 知识。&lt;/p&gt;
&lt;h3 id=&#34;ipv6-测试聚合站httpsipv6stream&#34;&gt;&lt;a href=&#34;https://ipv6.stream/&#34;&gt;IPv6 测试聚合站&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个专门收集各种 IPv6 网络测试服务的网站。&lt;/p&gt;
&lt;h3 id=&#34;谷歌的-fuchsia-操作系统https9to5googlecom20210525google-releases-fuchsia-os-nest-hub&#34;&gt;&lt;a href=&#34;https://9to5google.com/2021/05/25/google-releases-fuchsia-os-nest-hub/&#34;&gt;谷歌的 Fuchsia 操作系统&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;用在自家的智能家居控制器 Nest Hub 上面。这是谷歌的第三个操作系统，前两个是安卓和 ChromeOS。&lt;/p&gt;
&lt;h3 id=&#34;四种显示屏httpshackadaycom20210509artwork-spans-fifty-years-of-display-technology&#34;&gt;&lt;a href=&#34;https://hackaday.com/2021/05/09/artwork-spans-fifty-years-of-display-technology/&#34;&gt;四种显示屏&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;瑞士巴塞尔的一个基金会，委托当地的艺术家，创造了一个装置艺术品，使用四个显示屏展示当前时间，完成后会放到机场和火车站。&lt;/p&gt;
&lt;p&gt;这四个显示屏分别代表了显示技术的四个阶段。&lt;/p&gt;
&lt;p&gt;第一个是1960年代的机械点阵屏（Flip-Dot），通过电磁方式翻转黑白圆点，来显示内容。&lt;/p&gt;
&lt;p&gt;第二个是1970~1980年代的单色液晶 LCD 屏，通过屏幕底下的灯管发光，只能发蓝光。&lt;/p&gt;
&lt;p&gt;第三个是2000年左右的 LED 屏，通过红色、绿色、蓝色的发光二极管的不同组合，显示出彩色。&lt;/p&gt;
&lt;p&gt;第四个是当代的液晶 TFT 屏，使用很小的薄膜晶体管，使得分辨率可以做得很高。&lt;/p&gt;
&lt;h3 id=&#34;如何画出螺旋曲线httpswwwdogatekincombloghypnotic-degenerate-spirals&#34;&gt;&lt;a href=&#34;https://www.dogatekin.com/blog/hypnotic-degenerate-spirals/&#34;&gt;如何画出螺旋曲线？&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者使用通俗语言，介绍螺旋曲线的数学含义，并给出多个 JavaScript 示例。&lt;/p&gt;
&lt;h3 id=&#34;树莓派架设公网网站httpsviggy28devarticlesetting-up-ghost-in-raspberry-pi-for-free&#34;&gt;&lt;a href=&#34;https://viggy28.dev/article/setting-up-ghost-in-raspberry-pi-for-free/&#34;&gt;树莓派架设公网网站&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作家介绍如何在家庭网络之中，使用树莓派架设一个网站，然后通过端口映射，供外网访问。&lt;/p&gt;
&lt;h3 id=&#34;为什么我们从-webpack-切换到-vitehttpsblogreplitcomvite&#34;&gt;&lt;a href=&#34;https://blog.replit.com/vite&#34;&gt;为什么我们从 Webpack 切换到 Vite？&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Replit 解释为什么将前端打包工具，从 Webpack 转为 Vite。&lt;/p&gt;
&lt;h3 id=&#34;javascript-web-cryptography-api-的用法httpsblogsessionstackcomhow-javascript-works-cryptography-how-to-deal-with-man-in-the-middle-mitm-attacks-bf8fc6be546c&#34;&gt;&lt;a href=&#34;https://blog.sessionstack.com/how-javascript-works-cryptography-how-to-deal-with-man-in-the-middle-mitm-attacks-bf8fc6be546c&#34;&gt;JavaScript Web Cryptography API 的用法&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;浏览器原生支持 Web Cryptography API，用于加密和解密，本文通过举例，介绍这个 API 的用法。&lt;/p&gt;
&lt;h3 id=&#34;x86-计算机的栈顶位置httpselithegreenplacenet20110204where-the-top-of-the-stack-is-on-x86&#34;&gt;&lt;a href=&#34;https://eli.thegreenplace.net/2011/02/04/where-the-top-of-the-stack-is-on-x86&#34;&gt;x86 计算机的栈顶位置&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;C 语言变量储存在内存的栈（stack）里面，从栈底开始存放，直到栈顶。这个概念很容易混淆，因为栈底是内存的高位地址，栈顶是内存的低位地址，本文就来分析这个概念。&lt;/p&gt;
&lt;h3 id=&#34;sendhttpsgithubcomtimviseesend&#34;&gt;&lt;a href=&#34;https://github.com/timvisee/send&#34;&gt;Send&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Mozilla 基金会曾经推出了一个文件分享服务，后来停止开发了。社区就接过来，做成完全的开源版，现在可以自己搭建，并且有 Web、命令行和安卓等各种客户端。&lt;/p&gt;
&lt;h3 id=&#34;id128httpsgithubcomaarondcohenid128&#34;&gt;&lt;a href=&#34;https://github.com/aarondcohen/id128&#34;&gt;Id128&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个 JavaScript 库，生成 UUID（通用唯一识别码），支持多种算法。&lt;/p&gt;
&lt;h3 id=&#34;magicianhttpmagician-iocom&#34;&gt;&lt;a href=&#34;http://magician-io.com/&#34;&gt;Magician&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个国内开发者写的 Java 的网络协议解析包，可以用作 HTTP 和 WebSocket 服务器，支持 TCP 和 UDP 通信，使用简单。&lt;/p&gt;
&lt;h3 id=&#34;css-学习教程httpswebdevlearncss&#34;&gt;&lt;a href=&#34;https://web.dev/learn/css/&#34;&gt;CSS 学习教程&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;谷歌出品的 CSS 教程，内容很丰富全面，一共有24课。&lt;/p&gt;
&lt;h3 id=&#34;凤凰架构httpicyfenixcn&#34;&gt;&lt;a href=&#34;http://icyfenix.cn/&#34;&gt;凤凰架构&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一本中文的开源书籍，介绍如何构建一套可靠的分布式大型软件系统，可以免费阅读。&lt;/p&gt;
&lt;h3 id=&#34;世界最长的公寓楼httpsenglishrussiacom2021042035-entrances-3708-apartments-welcome-to-the-main-city-house-of-all-russia&#34;&gt;&lt;a href=&#34;https://englishrussia.com/2021/04/20/35-entrances-3708-apartments-welcome-to-the-main-city-house-of-all-russia/&#34;&gt;世界最长的公寓楼&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;俄罗斯圣彼得堡有一座25层公寓楼，长达990米，弯弯曲曲，像一条长蛇。整座建筑有35个入口，3000多套公寓，如果每家有一辆车，就要解决几千辆车的停车问题。&lt;/p&gt;
&lt;h3 id=&#34;印度山城httpsenwikipediaorgwikiaizawl&#34;&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Aizawl&#34;&gt;印度山城&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;艾索尔（Aizawl）是印度米佐拉姆邦（Mizoram）的首府，整座城市完全建在山上。整个山头密密麻麻都是房子，绵延几公里，还有四通八达的马路和公交系统，非常壮观。&lt;/p&gt;
&lt;h3 id=&#34;shein一家悄悄崛起的中国电商httpswwwnotboringcopshein-the-tiktok-of-ecommerce&#34;&gt;&lt;a href=&#34;https://www.notboring.co/p/shein-the-tiktok-of-ecommerce&#34;&gt;Shein，一家悄悄崛起的中国电商&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;美国的电商应用，排名第一位的是 Amazon，第二位是来自中国的 Shein，可是国内很少有人听说过这家公司。一个美国分析师利用收集到的各种材料，对这家公司进行了长篇分析。&lt;/p&gt;
&lt;h3 id=&#34;提高-bash-使用效率的一些小技巧httpscyborguk20210503bash-productivityhtml&#34;&gt;&lt;a href=&#34;https://cyb.org.uk/2021/05/03/bash-productivity.html&#34;&gt;提高 Bash 使用效率的一些小技巧&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文介绍几个非常有用、但鲜为人知的 Bash 命令用法。&lt;/p&gt;
&lt;h3 id=&#34;http-安全标头快速参考httpswebdevsecurity-headers&#34;&gt;&lt;a href=&#34;https://web.dev/security-headers/&#34;&gt;HTTP 安全标头快速参考&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;HTTP 标头里面有一些跟安全相关，本文对它们一一介绍，比如&lt;code&gt;Content-Security-Policy&lt;/code&gt;、&lt;code&gt;X-Content-Type-Options&lt;/code&gt;等等。&lt;/p&gt;
&lt;h3 id=&#34;cap-定理解读httpscodahalecomyou-cant-sacrifice-partition-tolerance&#34;&gt;&lt;a href=&#34;https://codahale.com/you-cant-sacrifice-partition-tolerance/&#34;&gt;CAP 定理解读&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这篇文章从学术角度，详细解读分布式系统的 CAP 定理，写得很好。CAP 定理的核心含义就是，发生故障时，开发者必须选择，优先满足一致性还是可用性。&lt;/p&gt;
&lt;h3 id=&#34;如何使用-emoji-作为-faviconhttpscss-trickscomemojis-as-favicons&#34;&gt;&lt;a href=&#34;https://css-tricks.com/emojis-as-favicons/&#34;&gt;如何使用 Emoji 作为 Favicon&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文介绍如何将 svg 格式的 Emoji 图案，作为网页的 Favicon。&lt;/p&gt;
&lt;h3 id=&#34;为什么-mysql-数据库的字符串列宽是191httpswwwgrouparoocomblogvarchar-191&#34;&gt;&lt;a href=&#34;https://www.grouparoo.com/blog/varchar-191&#34;&gt;为什么 MySQL 数据库的字符串列宽是191？&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;MySQL 数据库的 varchar 格式的列，长度常常是191个字符，这是为什么？&lt;/p&gt;
&lt;h3 id=&#34;git-split-diffshttpsgithubcombangagit-split-diffs&#34;&gt;&lt;a href=&#34;https://github.com/banga/git-split-diffs&#34;&gt;git-split-diffs&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这个命令行工具可以将代码 diff 显示为类似 GitHub 的样子。&lt;/p&gt;
&lt;h3 id=&#34;touchbar-systemmonitorhttpsgithubcomspagnuolocarminetouchbar-systemmonitorblobmasterreadmemd&#34;&gt;&lt;a href=&#34;https://github.com/spagnuolocarmine/touchbar-systemmonitor/blob/master/README.md&#34;&gt;touchbar-systemmonitor&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个 MacBook pro 笔记本的开源小工具，可以在 Touch Bar 显示系统状态。&lt;/p&gt;
&lt;h3 id=&#34;firefox_explorehttpsgithubcommattardernefirefox_explore&#34;&gt;&lt;a href=&#34;https://github.com/mattarderne/firefox_explore&#34;&gt;firefox_explore&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个本地工具，用来分析 Firefox 的浏览历史，比如最常访问的网址、一天各个时段的浏览统计等等。&lt;/p&gt;
&lt;h3 id=&#34;use-soundhttpsgithubcomjoshwcomeauuse-sound&#34;&gt;&lt;a href=&#34;https://github.com/joshwcomeau/use-sound&#34;&gt;use-sound&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个 React 钩子函数，用来添加声音效果，比如点击按钮发出“滴”的一声。&lt;/p&gt;
&lt;h3 id=&#34;物理学相关电影httpswwwwondersofphysicscom202004best-physics-movieshtml&#34;&gt;&lt;a href=&#34;https://www.wondersofphysics.com/2020/04/best-physics-movies.html&#34;&gt;物理学相关电影&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这个网页列出了一些物理学相关的电影，要么电影内容直接涉及物理学，要么有物理学家参与作为科学指导。上面是2004年科幻片 Primer 的海报。&lt;/p&gt;
&lt;h3 id=&#34;学习-python-的正确方法httpslearnpythontherightwaycom&#34;&gt;&lt;a href=&#34;https://learnpythontherightway.com/&#34;&gt;学习 Python 的正确方法&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;针对初学者的 Python 教程，提供 PDF 文件下载。&lt;/p&gt;
&lt;h3 id=&#34;家庭花园种植指南httpwwwgardeningcornelleduhomegardening&#34;&gt;&lt;a href=&#34;http://www.gardening.cornell.edu/homegardening/&#34;&gt;家庭花园种植指南&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;康奈尔大学是美国农科最好的大学，这是该校办的网站，介绍家庭花园如何种植各种植物，包含200多种植物。&lt;/p&gt;
&lt;h3 id=&#34;你不需要-guihttpsgithubcomyou-dont-needyou-dont-need-gui&#34;&gt;&lt;a href=&#34;https://github.com/you-dont-need/You-Dont-Need-GUI&#34;&gt;你不需要 GUI&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这个仓库收集了一些常用的命令行操作，可以替代图形界面 GUI，主要针对初学者，但也适合作为命令行操作的备忘和速查。&lt;/p&gt;
&lt;h3 id=&#34;线性时钟httpsjmwnameprojectslinear-clock&#34;&gt;&lt;a href=&#34;https://jmw.name/projects/linear-clock/&#34;&gt;线性时钟&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;时钟的常见样子都是圆形，其实也可以做成线性，通过进度条，表示一天度过了多少时间。下面就是一些线性时钟的造型。&lt;/p&gt;
&lt;h3 id=&#34;2021年度世界鸟类摄影大赛httpskottkeorg2104bird-photographer-of-the-year-2021-finalists&#34;&gt;&lt;a href=&#34;https://kottke.org/21/04/bird-photographer-of-the-year-2021-finalists&#34;&gt;2021年度世界鸟类摄影大赛&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;2021年度世界鸟类摄影大赛公布了入围作品，下面这张很打动人。一只小鸭子望着水面上的飞虫发呆。&lt;/p&gt;
&lt;h3 id=&#34;多出来的一美元httpsblogcloudandtreecom202104the-other-dollar&#34;&gt;&lt;a href=&#34;https://blog.cloudandtree.com/2021/04/the-other-dollar/&#34;&gt;多出来的一美元&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;三名游客来到一家旅馆，经理告诉他们，三人间的价格是30美元。游客每人掏出10美元，入住了房间。&lt;/p&gt;
&lt;p&gt;第二天退房时，经理意识到，这间客房的定价应该是25美元，便要求服务员将多收的5美元退还给客人。服务员不诚实，仅向每位游客退还1美元，将剩下的2美元占为己有。&lt;/p&gt;
&lt;p&gt;现在，三名游客每人实际花费了9美元，总计27美元。服务员保留了2美元，加在一起是29美元，请问剩下的1美元去了哪里？&lt;/p&gt;
&lt;h3 id=&#34;谷歌吃豆人httpswwwgooglecomsearchqpac-man&#34;&gt;&lt;a href=&#34;https://www.google.com/search?q=pac-man&#34;&gt;谷歌吃豆人&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;（1）不能留在原地，妖怪会感知你的位置。&lt;/p&gt;
&lt;p&gt;（2）必须时刻在前进。&lt;/p&gt;
&lt;p&gt;（3） 一旦前面的路上出现妖怪，必须立刻改道。&lt;/p&gt;
&lt;p&gt;（4）尽快吃掉离你最近的能量豆，取得阶段性成果。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;哈德逊河人工岛httpsmpweixinqqcomsrf0u7ojeghbvkgpfecmvha&#34;&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/rf0U7OjeGHBvKGpfECMVhA&#34;&gt;哈德逊河人工岛&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个美国基金会花了2.6亿美元，在纽约哈德逊河里面建了一个人工小岛，为市民提供露天剧场、绿地、餐厅和酒吧。&lt;/p&gt;
&lt;p&gt;这里原来是一个废弃码头，现在改建以后，成了一个地势起伏的平台，种植着美丽的树木、鲜花和草地，还有一个687个座位的露天剧场，可以举行表演活动。&lt;/p&gt;
&lt;h3 id=&#34;宇宙暗物质分布图httpswwwvicecomenarticlen7be77scientists-discover-huge-voids-in-the-cosmic-web-connecting-the-universe&#34;&gt;&lt;a href=&#34;https://www.vice.com/en/article/n7be77/scientists-discover-huge-voids-in-the-cosmic-web-connecting-the-universe&#34;&gt;宇宙暗物质分布图&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;科学家认为，我们的宇宙是由不可见的暗物质连接在一起的，它们组成了一张巨大的引力网，构成了宇宙的上层结构，所有天体都附着在这张看不见的网上。&lt;/p&gt;
&lt;h3 id=&#34;starlink-卫星上网体验报告httpswwwthevergecom22435030starlink-satellite-internet-spacex-review&#34;&gt;&lt;a href=&#34;https://www.theverge.com/22435030/starlink-satellite-internet-spacex-review&#34;&gt;StarLink 卫星上网体验报告&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这篇文章详细记录了 StarLink 的安装和使用过程，作者的结论是这个卫星上网服务可用，但是体验不好。&lt;/p&gt;
&lt;p&gt;它要求天线与卫星之间不能有遮挡，这导致非常容易断线，甚至一片云、一阵风都会断线，这使得聊天、游戏、视频等实时通信要求很高的服务，都不可用。&lt;/p&gt;
&lt;h3 id=&#34;webcontainers-简介httpsblogstackblitzcompostsintroducing-webcontainers&#34;&gt;&lt;a href=&#34;https://blog.stackblitz.com/posts/introducing-webcontainers/&#34;&gt;WebContainers 简介&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;WebContainers 是一项很特别的技术，可以在浏览器里面运行 Node.js 环境，从而不用任何的本地安装，就可以在浏览器里面调试 Node.js 项目。&lt;/p&gt;
&lt;h3 id=&#34;程序员为什么喜欢咖啡httpsnerdletteringcomblogsarticleswhy-do-programmers-love-coffee&#34;&gt;&lt;a href=&#34;https://nerdlettering.com/blogs/articles/why-do-programmers-love-coffee&#34;&gt;程序员为什么喜欢咖啡？&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这篇文章总结了程序员喜欢喝咖啡的几个理由，最后一个理由很搞笑。&lt;/p&gt;
&lt;h3 id=&#34;voskhttpsalphacepheicomvoskindexzh&#34;&gt;&lt;a href=&#34;https://alphacephei.com/vosk/index.zh&#34;&gt;Vosk&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个语音识别的工具包，支持18种语言（包括中文），体积较小（50MB），可以绑定各种语言，适合为聊天机器人提供语音识别。&lt;/p&gt;
&lt;h3 id=&#34;grafarhttpsthoughtspilegithubiografar&#34;&gt;&lt;a href=&#34;https://thoughtspile.github.io/grafar&#34;&gt;Grafar&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个专门用于数学的前端可视化库。&lt;/p&gt;
&lt;h3 id=&#34;宇航员地球摄影大赛httpsearthobservatorynasagovtournament-earthresults&#34;&gt;&lt;a href=&#34;https://earthobservatory.nasa.gov/tournament-earth/results&#34;&gt;宇航员地球摄影大赛&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;下图是今年宇航员地球摄影大赛的获奖作品。&lt;/p&gt;
&lt;p&gt;照片中是土耳其的凡湖（Van Lake），地球上最大的碱性湖泊。它也是一个内陆湖泊，所以照片上有清晰的漩涡，表明湖水没有出口。&lt;/p&gt;
&lt;p&gt;湖的周围是一个巨大的辉石矿，导致湖中充满了碳酸钙的碎屑。这些碎屑是湖水呈现乳白色混浊的主要原因，并且使得湖水的 pH 值达到了10。&lt;/p&gt;
&lt;h3 id=&#34;超现实阁楼httpswwwfacebookcomphotofbid311674710320284&#34;&gt;&lt;a href=&#34;https://www.facebook.com/photo/?fbid=311674710320284&#34;&gt;超现实阁楼&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;瑞典摄影师埃里克·约翰森（Erik Johansson），经常拍摄超现实照片。下面就是他的最新作品，利用自家阁楼，将照片合成为不可能的空间形状。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/689fd3583cb82429ff2e03e9ec31a94c2307f0ac5aae582a9cabd8212489ae95/68747470733a2f2f63646e2e6265656b6b612e636f6d2f626c6f67696d672f61737365742f3230323130352f6267323032313035313831302e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/689fd3583cb82429ff2e03e9ec31a94c2307f0ac5aae582a9cabd8212489ae95/68747470733a2f2f63646e2e6265656b6b612e636f6d2f626c6f67696d672f61737365742f3230323130352f6267323032313035313831302e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这张照片很像埃舍尔的作品，明明是不可能的，但是看上去非常自然。&lt;/p&gt;
&lt;h3 id=&#34;爱因斯坦httpswwwdwcomenletter-handwritten-by-einstein-sells-for-12-milliona-57629576的一封亲笔信最近以120万美元的高价拍卖成交&#34;&gt;&lt;a href=&#34;https://www.dw.com/en/letter-handwritten-by-einstein-sells-for-12-million/a-57629576&#34;&gt;爱因斯坦&lt;/a&gt;的一封亲笔信，最近以120万美元的高价拍卖成交&lt;/h3&gt;
&lt;p&gt;原因是这封信有爱因斯坦亲笔写的质能公式 E=mc2（下图），目前已知这样的信仅存世四件。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/ce9fbc49a006d6972401974c02bf2c3e894ab48e84599f83607dceb73fc22ae4/68747470733a2f2f63646e2e6265656b6b612e636f6d2f626c6f67696d672f61737365742f3230323130352f6267323032313035323830322e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/ce9fbc49a006d6972401974c02bf2c3e894ab48e84599f83607dceb73fc22ae4/68747470733a2f2f63646e2e6265656b6b612e636f6d2f626c6f67696d672f61737365742f3230323130352f6267323032313035323830322e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;五大洋httpsfinancesinacomcntech2021-06-11doc-ikqcfnca0369148shtml&#34;&gt;&lt;a href=&#34;https://finance.sina.com.cn/tech/2021-06-11/doc-ikqcfnca0369148.shtml&#34;&gt;五大洋&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;美国国家地理学会宣布，从2021年开始，该学会出版的所有世界地图，都将标注世界上有五大洋，而不是传统的四大洋（太平洋、大西洋、印度洋、北冰洋）。南极洲周围海域将被认定为一个独立的大洋，称为南大洋（southern ocean）。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/c58afdc944a5af8409f818beab04eb360896304044ef23a69d12a59130085c93/68747470733a2f2f63646e2e6265656b6b612e636f6d2f626c6f67696d672f61737365742f3230323130362f6267323032313036313130332e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/c58afdc944a5af8409f818beab04eb360896304044ef23a69d12a59130085c93/68747470733a2f2f63646e2e6265656b6b612e636f6d2f626c6f67696d672f61737365742f3230323130362f6267323032313036313130332e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;linus-谈-mrna-疫苗httpslkmlorglkml2021610957&#34;&gt;&lt;a href=&#34;https://lkml.org/lkml/2021/6/10/957&#34;&gt;Linus 谈 mRNA 疫苗&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;有人在 Linux 内核开发的邮件列表上，造谣说 mRNA 疫苗会改变人类遗传物质。Linus 忍不住写了一个很长的回信，解释 mRNA 疫苗是怎么回事。&lt;/p&gt;
&lt;p&gt;他最后写道：“如果你坚持相信这些疯狂的阴谋论，那么至少在这里，你给我闭嘴。”&lt;/p&gt;
&lt;h3 id=&#34;html-技巧httpsmarkodeniccomhtml-tips&#34;&gt;&lt;a href=&#34;https://markodenic.com/html-tips/&#34;&gt;HTML 技巧&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文总结了一些不为人熟知的 HTML 特性。&lt;/p&gt;
&lt;h3 id=&#34;列数据库的兴起httpswwwholisticsioblogthe-rise-and-fall-of-the-olap-cube&#34;&gt;&lt;a href=&#34;https://www.holistics.io/blog/the-rise-and-fall-of-the-olap-cube/&#34;&gt;列数据库的兴起&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;主流的关系型数据都以行为单位，储存数据。但是，对于大型数据集，以列为单位储存数据有巨大的优势。实际上，数据仓库基本都是列数据库。&lt;/p&gt;
&lt;p&gt;本文解释为什么会这样，写得很通俗，但是读起来需要一点耐心。&lt;/p&gt;
&lt;h3 id=&#34;n8nhttpsn8nio&#34;&gt;&lt;a href=&#34;https://n8n.io/&#34;&gt;n8n&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个开源的工作流自动化工具，可以通过图形界面，选择200多种服务，组成一个工作流。&lt;/p&gt;
&lt;h3 id=&#34;2021-苹果设计奖httpswwwapplecomcnnewsroom202106apple-announces-winners-of-the-2021-apple-design-awards&#34;&gt;&lt;a href=&#34;https://www.apple.com.cn/newsroom/2021/06/apple-announces-winners-of-the-2021-apple-design-awards/&#34;&gt;2021 苹果设计奖&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;苹果一年一度的优秀 App 评选（Apple Design Awards） ，6大类12个获奖者，可以视为官方的 App 推荐。&lt;/p&gt;
&lt;h3 id=&#34;rfcfyihttpsrfcfyi&#34;&gt;&lt;a href=&#34;https://rfc.fyi/&#34;&gt;rfc.fyi&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个 RFC（计算机协议标准）的分类引擎，根据关键字搜索，返回所有相关的 RFC 标准。&lt;/p&gt;
&lt;h3 id=&#34;awesome-privacyhttpsgithubcomplujaawesome-privacy&#34;&gt;&lt;a href=&#34;https://github.com/pluja/awesome-privacy&#34;&gt;Awesome Privacy&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;该仓库收集各种注重用户隐私保护的软件工具和服务。&lt;/p&gt;
&lt;h3 id=&#34;通过示例学习-r-语言httpsgexijingithubiolearnrlearn-r-through-examples&#34;&gt;&lt;a href=&#34;https://gexijin.github.io/learnR&#34;&gt;通过示例学习 R 语言&lt;/a&gt;（Learn R through examples）&lt;/h3&gt;
&lt;p&gt;一本免费阅读的英文教材，通过各种示例，讲解 R 语言。&lt;/p&gt;
&lt;h3 id=&#34;edgesurf&#34;&gt;Edge://surf/&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://www.yystv.cn/p/8006&#34;&gt;微软&lt;/a&gt;更新了 Edge 浏览器的内置小游戏“让我们网上冲浪吧”，加入了更多的障碍物。只要在 Edge的地址栏键入“Edge://surf/”，就可以打开这个游戏。&lt;/p&gt;
&lt;h3 id=&#34;世界最深的地下实验室httpsmpweixinqqcomswz-1qu3mhnf-zrhx3dqwja&#34;&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/WZ-1QU3mhnf-ZrhX3DQWjA&#34;&gt;世界最深的地下实验室&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;四川省凉山地区有一个清华大学的”中国锦屏地下实验室“，位于2400多米的地下，是世界最深的实验室。该实验室主要用来研究暗物质，因为只有在这么深的地下，才能屏蔽掉宇宙射线和地面环境的影响。&lt;/p&gt;
&lt;h3 id=&#34;css-与-css-in-js-的性能比较httpspusteltocomblogcss-vs-css-in-js-perf&#34;&gt;&lt;a href=&#34;https://pustelto.com/blog/css-vs-css-in-js-perf/&#34;&gt;CSS 与 CSS-in-JS 的性能比较&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;单独加载的 CSS 文件与写在 JS 脚本里面的 CSS，性能相差多少？作者实验证明，差距很大。&lt;/p&gt;
&lt;h3 id=&#34;我们如何使用-magsafe-找回-iphone-12-prohttpsriedelwtfiphone-12-pro-in-canal-magsafe-fishing-rod&#34;&gt;&lt;a href=&#34;https://riedel.wtf/iphone-12-pro-in-canal-magsafe-fishing-rod/&#34;&gt;我们如何使用 MagSafe 找回 iPhone 12 Pro&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者的 iPhone 12 手机不慎掉入河中，他想到可以用 MagSafe 功能的磁性吸附特点，用磁铁将 iPhone 从水里吸上来。&lt;/p&gt;
&lt;h3 id=&#34;最简单的-epub-电子书httplenfalkeninkmiscepubtxt&#34;&gt;&lt;a href=&#34;http://len.falken.ink/misc/epub.txt&#34;&gt;最简单的 EPUB 电子书&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者演示如何制作一本最简单的 EPUB 电子书，一共需要4个文件&lt;/p&gt;
&lt;h3 id=&#34;althttpdhttpssqliteorgalthttpddoctrunkalthttpdmd&#34;&gt;&lt;a href=&#34;https://sqlite.org/althttpd/doc/trunk/althttpd.md&#34;&gt;Althttpd&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;SQLite 作者 D.理查德·希普写的 HTTP 服务器，SQLite 网站就是用它架设的，整个软件只有一个 C 文件。&lt;/p&gt;
&lt;p&gt;希普这个人真是有性格，用到的所有工具都是自己写的。先写了数据库SQLite，接着写了 Bug 追踪系统 CVSTrac，然后写了版本管理系统Fossil，现在是 Web 服务器。&lt;/p&gt;
&lt;h3 id=&#34;leptonhttpsgithubcomblack7375firefox-ui-fix&#34;&gt;&lt;a href=&#34;https://github.com/black7375/Firefox-UI-Fix&#34;&gt;Lepton&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;从 Firefox 89 开始，Firefox 采用了新的 UI 设计 Proton。作者认为，这个 UI 总体上是好的，但是有些地方需要调节，从而写了这个工具，对 Proton 进行微调。&lt;/p&gt;
&lt;h3 id=&#34;snowtrackhttpssnowtrackio&#34;&gt;&lt;a href=&#34;https://snowtrack.io/&#34;&gt;Snowtrack&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个桌面软件，提供图形文件的版本管理系统，方便管理设计资源。&lt;/p&gt;
&lt;h3 id=&#34;akwabahttpsgithubcomousmanedevakwaba&#34;&gt;&lt;a href=&#34;https://github.com/ousmanedev/akwaba&#34;&gt;Akwaba&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个很有创意的项目，将 Notion 作为网站评论系统的后端，数据都储存在 Notion 表格里面。&lt;/p&gt;
&lt;h3 id=&#34;初等微积分httpspeoplemathwiscedukeislercalchtml&#34;&gt;&lt;a href=&#34;https://people.math.wisc.edu/~keisler/calc.html&#34;&gt;初等微积分&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一本大学新生的微积分英文教程《Elementary Calculus: An Infinitesimal Approach》，从无穷小入手，详细解释什么是微积分。&lt;/p&gt;
&lt;h3 id=&#34;设计比特币httpsbitcoindesignguide&#34;&gt;&lt;a href=&#34;https://bitcoin.design/guide/&#34;&gt;设计比特币&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个英文的教程网站，介绍比特币的原理和设计方案。&lt;/p&gt;
&lt;h3 id=&#34;deep-javascripthttpsexploringjscomdeep-jstochtml&#34;&gt;&lt;a href=&#34;https://exploringjs.com/deep-js/toc.html&#34;&gt;Deep JavaScript&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一本免费阅读的英文电子书，介绍 JavaScript 语言的底层机制和设计思想。&lt;/p&gt;
&lt;h3 id=&#34;乔布斯对竞争对手挖人的反应httpstwittercomtechemailsstatus1407016788240576512&#34;&gt;&lt;a href=&#34;https://twitter.com/TechEmails/status/1407016788240576512&#34;&gt;乔布斯对竞争对手挖人的反应&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;2005 年 5 月 26 日，乔布斯给 Adobe 公司首席执行官 Bruce Chizen 发了一封电子邮件。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/71d5ba0c479ee25111f05b6fc61c5f06958decbc9a451e68ca30669268248cdb/68747470733a2f2f63646e2e6265656b6b612e636f6d2f626c6f67696d672f61737365742f3230323130362f6267323032313036323230372e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/71d5ba0c479ee25111f05b6fc61c5f06958decbc9a451e68ca30669268248cdb/68747470733a2f2f63646e2e6265656b6b612e636f6d2f626c6f67696d672f61737365742f3230323130362f6267323032313036323230372e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;布鲁斯，&lt;/p&gt;
&lt;p&gt;Adobe 正在从苹果挖人。他们已经挖走了一个，还正在给许多人打电话。我们的招聘政策是，不从 Adobe 挖人。看来你们有不一样的政策。我们之中必须有一方改变政策。请让我知道，你觉得谁应该变。&lt;/p&gt;
&lt;p&gt;斯蒂夫&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/664543f6d07e9d289cc19ee0fc7418712c61c026f6c68e30a7e9b6f831101541/68747470733a2f2f63646e2e6265656b6b612e636f6d2f626c6f67696d672f61737365742f3230323130362f6267323032313036323230382e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/664543f6d07e9d289cc19ee0fc7418712c61c026f6c68e30a7e9b6f831101541/68747470733a2f2f63646e2e6265656b6b612e636f6d2f626c6f67696d672f61737365742f3230323130362f6267323032313036323230382e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Bruce Chizen 的回信。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我想，我们以前的共识是不互挖高层管理者（在 Adobe，这一级是高级总监 / 副总裁，占所有雇员的2%）。我很肯定，你们的招聘人员大量接触了我们的初级和中级雇员。&lt;/p&gt;
&lt;p&gt;我的建议是保持现状。但是愿意讨论，最好能有共识。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/51a1fc70d14f7cd6fce3e0232aeee4132f7bfbfd170b8755fe4a60e8dfd1928e/68747470733a2f2f63646e2e6265656b6b612e636f6d2f626c6f67696d672f61737365742f3230323130362f6267323032313036323230392e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/51a1fc70d14f7cd6fce3e0232aeee4132f7bfbfd170b8755fe4a60e8dfd1928e/68747470733a2f2f63646e2e6265656b6b612e636f6d2f626c6f67696d672f61737365742f3230323130362f6267323032313036323230392e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;乔布斯的回信。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;好的，我会告诉我们的招聘人员，除了高级总监 / 副总裁，Adobe 的人随便挖。我没理解错你的意思吧？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/8ffeea6e0f8e33a41ca70953e4ad24054e1b2620b2251b0ed3ebdaaa9d0eee48/68747470733a2f2f63646e2e6265656b6b612e636f6d2f626c6f67696d672f61737365742f3230323130362f6267323032313036323231302e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/8ffeea6e0f8e33a41ca70953e4ad24054e1b2620b2251b0ed3ebdaaa9d0eee48/68747470733a2f2f63646e2e6265656b6b612e636f6d2f626c6f67696d672f61737365742f3230323130362f6267323032313036323231302e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Bruce Chizen 的回信。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我同意双方不主动接触对方的雇员。但如果雇员主动接触对方，这是可接受的。&lt;/p&gt;
&lt;p&gt;如果你也同意，我会告知手下人。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;telegram-创始人和他的黑暗帝国httpswwwspiegeldeinternationalworldthe-telegram-billionaire-and-his-dark-empire-a-f27cb79f-86ae-48de-bdbd-8df604d07cc8&#34;&gt;&lt;a href=&#34;https://www.spiegel.de/international/world/the-telegram-billionaire-and-his-dark-empire-a-f27cb79f-86ae-48de-bdbd-8df604d07cc8&#34;&gt;Telegram 创始人和他的黑暗帝国&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;德国《明镜》杂志的长篇英语报道，介绍聊天软件 Telegram 现年36岁的创始人帕维尔·杜罗夫 (Pavel Durov) （上图），以及 Telegram 的故事。&lt;/p&gt;
&lt;h3 id=&#34;docker-compose-快速使用指南httpslinuxhandbookcomdocker-compose-quick-start&#34;&gt;&lt;a href=&#34;https://linuxhandbook.com/docker-compose-quick-start/&#34;&gt;Docker Compose 快速使用指南&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一篇简短的 Docker Compose 入门教程，让你通过动手实践，理解 Docker Compose 怎么搭建多容器的应用程序。&lt;/p&gt;
&lt;h3 id=&#34;零宽度短网址生成器httpszwsim&#34;&gt;&lt;a href=&#34;https://zws.im/&#34;&gt;零宽度短网址生成器&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个非常有创意的短网址生成器，看上去生成的短网址都一样，其实里面插入了不同数量的零宽度空格字符。&lt;/p&gt;
&lt;h3 id=&#34;斯坦福大学计算机课程httpsdocsgooglecomspreadsheetsd1zfw8npvjeewxcfubpkukmave8pjnji7h0ckimdqxxr0htmlview&#34;&gt;&lt;a href=&#34;https://docs.google.com/spreadsheets/d/1zfw8nPvJeewxcFUBpKUKmAVE8PjnJI7H0CKimdQXxr0/htmlview&#34;&gt;斯坦福大学计算机课程&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这是一个谷歌文档的电子表格，收集了斯坦福大学计算机系本科阶段的所有课程，每门课都给出了课程主页。&lt;/p&gt;
&lt;h3 id=&#34;计算结构httpscomputationstructuresorgindexhtml&#34;&gt;&lt;a href=&#34;https://computationstructures.org/index.html&#34;&gt;计算结构&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;麻省理工学院课程《计算结构》（Computation Structures）的教学材料，介绍计算机架构的基本知识，包括讲义、视频、笔记等。&lt;/p&gt;
&lt;h3 id=&#34;具有源码的商业视频游戏httpsenwikipediaorgwikilist_of_commercial_video_games_with_available_source_code&#34;&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/List_of_commercial_video_games_with_available_source_code&#34;&gt;具有源码的商业视频游戏&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;维基百科的这个页面，列出了所有可以拿到源码的商业视频游戏，包括开源的游戏和源码泄露的游戏。&lt;/p&gt;
&lt;h3 id=&#34;淹没的意大利村庄httpswwwsmithsonianmagcomsmart-newsmedieval-italian-village-briefly-surfaces-after-70-years-underwater-180977838&#34;&gt;&lt;a href=&#34;https://www.smithsonianmag.com/smart-news/medieval-italian-village-briefly-surfaces-after-70-years-underwater-180977838/&#34;&gt;淹没的意大利村庄&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;1950年，意大利政府为了在山区建设一个人工湖，淹没了一个叫做库伦（Curon）的小村庄。这个村庄有一个14世纪的钟楼，因为太高，没有被全部淹没，形成了“水中高塔”的奇景。&lt;/p&gt;
&lt;h3 id=&#34;摩天大楼顶上的午餐httpshistorydailyorgcharles-ebbets-lunchtime-atop-a-skyscraper&#34;&gt;&lt;a href=&#34;https://historydaily.org/charles-ebbets-lunchtime-atop-a-skyscraper&#34;&gt;摩天大楼顶上的午餐&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;《摩天大楼顶上的午餐》是一张著名的黑白照片，拍摄于1932年纽约的一个摩天大楼工地。11个工人坐在摩天大楼顶上的大梁上吃午饭，大梁距下方街道256米，而他们没有任何安全带等保护设施。&lt;/p&gt;
&lt;p&gt;拍摄者看上去也很惊险。不过实际上，大梁底下有一个平台，并不是看上去那么危险。而且，照片也是摆拍的。照片发表以后，很多人也来这个地方模仿拍摄。由于这张照片太有名，纽约市后来甚至将它做成了雕像。&lt;/p&gt;
&lt;h3 id=&#34;我为什么公开发表博客文章httpsjvnscablog20210524blog-about-what-you-ve-struggled-with&#34;&gt;&lt;a href=&#34;https://jvns.ca/blog/2021/05/24/blog-about-what-you-ve-struggled-with/&#34;&gt;我为什么公开发表博客文章？&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;八年来，我在个人网站上发布了100多篇文章。有人问我，为什么一直坚持在写？&lt;/p&gt;
&lt;p&gt;我想了想，写作博客其实对我有很多好处，所以我才会有动力。&lt;/p&gt;
&lt;p&gt;（1）它使得我把学到的东西记录下来了，便于回过头查找，重新温习！&lt;/p&gt;
&lt;p&gt;（2）当我写作时，为了理清思路，我经常会有新的疑问，从而去做一些额外的研究，这意味着写作博客让我在某个主题上学到了更多！&lt;/p&gt;
&lt;p&gt;（3）认真花时间把自己的写法写出来，并放到互联网上，这迫使你思考自己写的东西是否有意义，从而发现哪些题目是真的有价值。&lt;/p&gt;
&lt;p&gt;（4）文章发布以后，会有很多读者反馈，通常可以帮助我改进写作，学习新知识。&lt;/p&gt;
&lt;p&gt;（5）我的文章可以帮助其他人！我写文章通常是因为遇到一个很困难的问题，经过探索终于找到了答案，我就把这个答案写出来，其他人遇到类似情况就可以参考，这让我感觉很好。&lt;/p&gt;
&lt;h3 id=&#34;互联网内容都是暂时的httpscheapskatesguideorgarticlestransitory-internethtml&#34;&gt;&lt;a href=&#34;https://cheapskatesguide.org/articles/transitory-internet.html&#34;&gt;互联网内容都是暂时的&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;最近，我的一位朋友删除了自己的博客。她在博客里面，记录了自己青少年时期和二十多岁时对很多事情的看法。她现在可能觉得，这些看法很幼稚，不想再保存下去，就删除了自己的博客。&lt;/p&gt;
&lt;p&gt;我觉得很可惜。多年以后，她如果再想看看自己年轻时的想法，就再也没机会了。&lt;/p&gt;
&lt;p&gt;你把内容发布到互联网，跟写在纸上是不一样的。纸上的内容可以一直保存下去，但是互联网不行。虽然某些网上的内容可以持续存在数十年，那只是因为某些人或组织愿意为托管成本付费，服务器、电力和带宽都要花钱。互联网上的内容可以存在多久，完全取决于托管它的当事人的价值观。&lt;/p&gt;
&lt;p&gt;与纸上的内容相比，互联网内容的存在期限都非常短。对于我们大多数人而言，你张贴到互联网的内容，不久以后就会永远消失。&lt;/p&gt;
&lt;p&gt;虽然很多网上的内容毫无价值，但是有一些写得很好，发人深省，消失了十分可惜。这令人沮丧，那些消失的内容就像一个搬走的老朋友，等到你再想起他时，再也找不到他留下的任何踪迹了。&lt;/p&gt;
&lt;h3 id=&#34;离线互联网资源库httpinternet-in-a-boxorg&#34;&gt;&lt;a href=&#34;http://internet-in-a-box.org/&#34;&gt;离线互联网资源库&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;美国加州大学的“离线互联网”（Internet in a box）迎来了8周年的纪念。&lt;/p&gt;
&lt;p&gt;这个项目收集了互联网主要的免费资源，维基百科、可汗学院课程、OpenStreetMap 地图、电子书……，把它们放进一个移动硬盘，容量可达 1tb。&lt;/p&gt;
&lt;h3 id=&#34;苹果公司httpswwwmacrumorscom20210629icloud-data-stored-on-google-cloud-increasing据报道将大量icloud-数据存储在谷歌云&#34;&gt;&lt;a href=&#34;https://www.macrumors.com/2021/06/29/icloud-data-stored-on-google-cloud-increasing/&#34;&gt;苹果公司&lt;/a&gt;据报道将大量iCloud 数据，存储在谷歌云&lt;/h3&gt;
&lt;p&gt;总量达到 800万 TB，单单今年的费用就是3亿美元，是谷歌云最大客户。&lt;/p&gt;
&lt;p&gt;这表明，苹果自己的数据中心可能规模很小，根本存储不了它的所有数据。&lt;/p&gt;
&lt;h3 id=&#34;一场欧洲杯转播总共有多少个机位httpsnewqqcomomn2021062520210625a02wj800html&#34;&gt;&lt;a href=&#34;https://new.qq.com/omn/20210625/20210625A02WJ800.html&#34;&gt;一场欧洲杯转播总共有多少个机位？&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一场顶级的足球比赛，电视转播需要多少台摄像机？答案是至少36台。&lt;/p&gt;
&lt;h3 id=&#34;sql-查询顺序httpsjvnscablog20191003sql-queries-don-t-start-with-select&#34;&gt;&lt;a href=&#34;https://jvns.ca/blog/2019/10/03/sql-queries-don-t-start-with-select/&#34;&gt;SQL 查询顺序&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/f82552077207ae192ebadcaa57862deba53dcbd6be1891e3c537f0db84bf49d5/68747470733a2f2f63646e2e6265656b6b612e636f6d2f626c6f67696d672f61737365742f3230323130352f6267323032313035323830362e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/f82552077207ae192ebadcaa57862deba53dcbd6be1891e3c537f0db84bf49d5/68747470733a2f2f63646e2e6265656b6b612e636f6d2f626c6f67696d672f61737365742f3230323130352f6267323032313035323830362e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;SQL 的 select 查询语句有很多组成部分，本文介绍内部执行时数据库引擎的处理顺序（上图）。&lt;/p&gt;
&lt;h3 id=&#34;安卓应用的-aab-格式httpsarstechnicacomgadgets202107google-play-dumps-apks-for-the-more-google-controlled-android-app-bundle&#34;&gt;&lt;a href=&#34;https://arstechnica.com/gadgets/2021/07/google-play-dumps-apks-for-the-more-google-controlled-android-app-bundle/&#34;&gt;安卓应用的 .aab 格式&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;谷歌最近宣布，从8月开始，提交到 Play 商店的安卓应用，一律必须是 .aab 的打包格式，而不是传统的 .apk 格式。&lt;/p&gt;
&lt;p&gt;以后，谷歌会根据用户的机型，生成专用的 apk 下载包。这样的话，很可能造成 apk 安装包不再通用。&lt;/p&gt;
&lt;h3 id=&#34;denodbhttpsgithubcomeveningkiddenodb&#34;&gt;&lt;a href=&#34;https://github.com/eveningkid/denodb&#34;&gt;DenoDB&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个 Deno 专用的数据库 ORM 库，支持 MySQL、SQLite、MariaDB、PostgreSQL 和 MongoDB。&lt;/p&gt;
&lt;h3 id=&#34;zsh-的最佳主题httpswwwslantcotopics7553theme-for-oh-my-zsh&#34;&gt;&lt;a href=&#34;https://www.slant.co/topics/7553/~theme-for-oh-my-zsh&#34;&gt;Zsh 的最佳主题&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/156963d2225d53ca9033a8bcaf92dae6b235947bc43784cff65b58f02a5ac418/68747470733a2f2f63646e2e6265656b6b612e636f6d2f626c6f67696d672f61737365742f3230323130372f6267323032313037303830392e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/156963d2225d53ca9033a8bcaf92dae6b235947bc43784cff65b58f02a5ac418/68747470733a2f2f63646e2e6265656b6b612e636f6d2f626c6f67696d672f61737365742f3230323130372f6267323032313037303830392e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;当前的热门 Zsh 主题的排名，更新及时&lt;/p&gt;
&lt;h3 id=&#34;古怪的-javascripthttpsjsisweirdcom&#34;&gt;&lt;a href=&#34;https://jsisweird.com/&#34;&gt;古怪的 JavaScript&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这个网站给出了25道选择题，测试你对 JavaScript 的古怪语法点了解多少。&lt;/p&gt;
&lt;h3 id=&#34;伪装大师毛毛虫httpswwwodditycentralcomanimalsthis-caterpillars-camouflage-is-on-a-another-levelhtml&#34;&gt;&lt;a href=&#34;https://www.odditycentral.com/animals/this-caterpillars-camouflage-is-on-a-another-level.html&#34;&gt;伪装大师毛毛虫&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;东南亚有一种叫做 Common Baron Caterpillar 的毛毛虫，堪称伪装大师。&lt;/p&gt;
&lt;p&gt;它趴在芒果叶子上，根本看不出来。&lt;/p&gt;
&lt;h3 id=&#34;linus-谈美国httpswwwtag1consultingcombloginterview-linus-torvalds-open-source-and-beyond-part-2&#34;&gt;&lt;a href=&#34;https://www.tag1consulting.com/blog/interview-linus-torvalds-open-source-and-beyond-part-2&#34;&gt;Linus 谈美国&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Linux 操作系统的创始人 Linus Torvalds，最近在一次访谈里面，谈到了他为什么会移居美国，以及对美国的印象。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;（1）为什么来美国？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我1997年离开芬兰，搬家到了美国。&lt;/p&gt;
&lt;p&gt;那时我还很年轻，有一家创业公司邀请我来美国。该公司从事的就是在 80386 体系上面开发 Linux 系统，这正是我非常熟悉的领域。他们做的事情也非常有趣，所以我就来了。&lt;/p&gt;
&lt;p&gt;当时的芬兰非常注重高科技，但以手机技术为主。诺基亚就是芬兰的公司，那时是世界最大的手机公司，也是芬兰最大的公司。&lt;/p&gt;
&lt;p&gt;我对手机不感兴趣，那时的手机还没有变成小型计算机，人们只能用它打电话。美国看起来似乎很有趣，我和妻子以及我们当时10 周大的女儿搬到了这里。&lt;/p&gt;
&lt;p&gt;当你刚有第一个孩子，就搬家到另一个国家，并且周围没有家人朋友，这可能不太明智。但是，我们那时还年轻，抱着不妨一试的态度，一切就都很顺利。&lt;/p&gt;
&lt;p&gt;我还记得那年二月份搬家时的情景，离开时赫尔辛基很冷，大约零下 20°C，当我们达到旧金山机场，天气晴朗温暖宜人，气温是零上20°C。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;（2）美国是怎样的国家？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;美国的生活很有趣，这些年我已经把美国当成自己的家。当然，我还是很想念芬兰的一些地方。美国的问题是，它的教育系统是一场灾难。你必须搬到正确的地区，才能进入好的小学或中学，如果你要上一所好大学，就要支付多到疯狂的钱。这是美国的一种耻辱。美国的医疗系统也有问题。另外，美国的政治已经从“有点奇怪”，变成了彻头彻尾的可怕。芬兰都没有这些问题。&lt;/p&gt;
&lt;p&gt;美国也有很多优势，不仅仅是天气。我们后来从加州搬到了俄勒冈州波特兰，这里的天气不像湾区那么好，但还是比芬兰好很多。我们在美国待了这么长时间，我们的孩子不会说芬兰语，我和我妻子都来自芬兰的讲瑞典语的少数民族，所以我们在家里说瑞典语。我们在这里已经有很多朋友和各种社会关系。在美国，只要你有一份好工作，你就可以在很大程度上忽略美国社会的失败。&lt;/p&gt;
&lt;p&gt;我们考虑过搬回芬兰吗？有那么几次确实想搬。首先是孩子们小学开学的时候。然后是孩子们开始上中学时，接着是上大学时。你看到里面的规律了吗？、&lt;/p&gt;
&lt;p&gt;要是特朗普再次当选美国总统，我大概也会考虑搬走。总的来说，美国的政治让我感到担忧，美国至上论和民族主义的兴起，令人感到悲伤和可怕。尤其是那些拥护者从来没有国外生活经历，根本不知道自己在谈论什么。&lt;/p&gt;
&lt;p&gt;美国在很多方面都是一个可爱的国家，也是一个非常多样化的国家，拥有许多不同的文化和人群，以及自然风光。我喜欢这一点。事实上，如果我要搬回芬兰，对我来说最困难的部分可能就是这个。芬兰是一个非常友善、理智和安全的国家，但它也是一个非常小的国家，而且非常单一化。&lt;/p&gt;
&lt;p&gt;特朗普当总统时，你经常可以看到挂着美国国旗的巨大卡车，那些没有受过教育的人高喊着“美国第一”、“美国伟大”，这让人很困扰。&lt;/p&gt;
&lt;p&gt;有时甚至是受过教育的人，也相信这点。我的家庭医生坚信美国的医疗制度是世界最好的，但他从来没在其他国家生活的，拒绝承认其他国家实际上拥有更好的医疗制度。是的，他是特朗普的支持者。&lt;/p&gt;
&lt;p&gt;不要误会我的意思。民族主义无处不在，包括欧洲，甚至包括芬兰，但它的美国版本似乎确实有毒。&lt;/p&gt;
&lt;p&gt;老实说，这也是我住在西海岸的原因之一。俄勒冈州基本上非常自由，你肯定不会经常看到那些支持特朗普的旗帜。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;（3）家庭生活&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我的家庭生活相当正常。我有三个女儿，但她们年纪大了，大部分都飞走了。最小的还在上大学，暑假回家。二女儿正在读研究生，暑假不回家。大女儿在东海岸工作。我们仍然尝试全家一起度假，但去年的疫情让这一切没法实现。&lt;/p&gt;
&lt;p&gt;所以这些天，家里主要就是我和妻子，还有两只狗和一只猫。我已经接种了第一剂疫苗，离第二次疫苗接种还有几周的时间。再过几个月，我会再次去潜水，期待着恢复稍微正常一点的生活。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;挖矿难度的史上最大下调httpscryptowriteriopthe-biggest-downward-bitcoin-difficulty&#34;&gt;&lt;a href=&#34;https://crypto.writer.io/p/the-biggest-downward-bitcoin-difficulty&#34;&gt;挖矿难度的史上最大下调&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;最新一次的比特币挖矿难度调整，下调了27.94%，是历史上最大的难度下调。而且，难度已经连续下调了三个周期，比五月份高点下降了 42.6%。&lt;/p&gt;
&lt;p&gt;根据比特币的设计，每挖出 2,016 个区块，就要调整一次挖矿难度，防止挖矿变得过难或过易，保持每10分钟挖出一个比特币的速度。&lt;/p&gt;
&lt;p&gt;这次挖矿难度下调，应该与国内取缔比特币挖矿有关，使得算力大大减少，挖矿时间变长，难度不得不下调。&lt;/p&gt;
&lt;h3 id=&#34;爱尔兰国有电力公司httpswwwtheregistercom20210611ireland_data_cnetre_electricity&#34;&gt;&lt;a href=&#34;https://www.theregister.com/2021/06/11/ireland_data_cnetre_electricity/&#34;&gt;爱尔兰国有电力公司&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;发出警告，如果全国机房用电继续增长，该国可能会出现频繁断电。&lt;/p&gt;
&lt;p&gt;爱尔兰是欧洲主要的计算中心之一，亚马逊、Facebook、谷歌、微软都在那里建有大型机房。该国的机房用电量一直在快速增长，估计到2030年，会占到全国用电量的 1/4 到 1/3。爱尔兰的电开始不够了。&lt;/p&gt;
&lt;h3 id=&#34;windows-365httpswwwmicrosoftcomen-uswindows-365&#34;&gt;&lt;a href=&#34;https://www.microsoft.com/en-us/windows-365&#34;&gt;Windows 365&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;微软宣布推出云 PC 服务“Windows 365”，8月2日上线。用户可以在浏览器里面，使用 Windows 10，所有状态都保存在云端。&lt;/p&gt;
&lt;p&gt;它的最大好处是，能让你在各种系统上（包括 PC 和手机）都使用Windows，而且使用的是云端的同一台机器。你在办公室中断的工作，回到家可以在停下来的地方接着做。&lt;/p&gt;
&lt;p&gt;用户需要为这个服务支付月费，价格还未公布。云 PC 基于 Azure 虚拟桌面，初期提供12种配置，最低的入门级是单个 CPU、2GB RAM 和 64GB 存储。&lt;/p&gt;
&lt;h3 id=&#34;公鼠怀孕实验httpsmpweixinqqcomswfjua6d8-ixdrf2kpulq0q&#34;&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/WFjUA6d8-IxDRF2kPUlq0Q&#34;&gt;公鼠怀孕实验&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;中国科学家通过给公鼠移植子宫，让公鼠生下了10只小老鼠。这个实验引起了争议，本文介绍相关情况。&lt;/p&gt;
&lt;h3 id=&#34;bittorrent-20周年回顾httpstorrentfreakcombittorrent-turns-20-the-file-sharing-revolution-revisited-210702&#34;&gt;&lt;a href=&#34;https://torrentfreak.com/bittorrent-turns-20-the-file-sharing-revolution-revisited-210702/&#34;&gt;BitTorrent 20周年回顾&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;BitTorrent 下载是2001年7月2日诞生的，距今正好20年了。本文简单回顾了这20年来的发展。&lt;/p&gt;
&lt;h3 id=&#34;我是怎样找出攻击者的httpsblog0x3acompost141950176719playing-games-with-an-attacker-how-i-messed-with&#34;&gt;&lt;a href=&#34;https://blog.0x3a.com/post/141950176719/playing-games-with-an-attacker-how-i-messed-with&#34;&gt;我是怎样找出攻击者的？&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者发现，自己的网站一直受到攻击，但是对方躲在 Tor 网络后面，看不到真实 IP 地址。&lt;/p&gt;
&lt;p&gt;作者就想了一个办法，做了一个假的管理后台，然后在报错信息里面，故意泄露这个后台的网址，看看对方会不会上钩。&lt;/p&gt;
&lt;h3 id=&#34;如何正确设计登录表单httpslearnuidesignblogtips-signup-login-uxhtml&#34;&gt;&lt;a href=&#34;https://learnui.design/blog/tips-signup-login-ux.html&#34;&gt;如何正确设计登录表单&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;登录表单是各种应用的标配，本文给出11条设计建议，帮助大家做出易用的登录表单。&lt;/p&gt;
&lt;h3 id=&#34;git-an-interactive-historyhttpsgit-historyjpalmerdev&#34;&gt;&lt;a href=&#34;https://git-history.jpalmer.dev/&#34;&gt;Git: An Interactive History&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个数据可视化项目，展示如何将一个 Git 仓库的历史进行可视化。&lt;/p&gt;
&lt;h3 id=&#34;popular-messagehttpsgithubcomnihaojobpopular-message&#34;&gt;&lt;a href=&#34;https://github.com/nihaojob/popular-message&#34;&gt;popular-message&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个轻量级的网页提示消息（prompt）的 JS 库，无任何依赖。&lt;/p&gt;
&lt;h3 id=&#34;数据包的旅行httpswwwpracticalnetworkingnetseriespacket-travelingpacket-traveling&#34;&gt;&lt;a href=&#34;https://www.practicalnetworking.net/series/packet-traveling/packet-traveling/&#34;&gt;数据包的旅行&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一组英文系列文章，介绍互联网的架构和原理，从数据包的构成到路由的概念，图文并茂，写得非常好。&lt;/p&gt;
&lt;h3 id=&#34;化学元素价格httpsenwikipediaorgwikiprices_of_chemical_elements&#34;&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Prices_of_chemical_elements&#34;&gt;化学元素价格&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;维基百科的页面，列出了每一种化学元素的市场价格。根据该页面，最便宜的元素是氯气，每公斤只有人民币几毛钱；最贵的元素是钋，每公斤要价接近50万亿美元。&lt;/p&gt;
&lt;h3 id=&#34;amd-与英特尔市场份额httpswwwcpubenchmarknetmarket_sharehtml&#34;&gt;&lt;a href=&#34;https://www.cpubenchmark.net/market_share.html&#34;&gt;AMD 与英特尔市场份额&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/d3c43cc878ff08f224812a38e04fc2ae4699b21d8bb6afbeb2017196b4572d28/68747470733a2f2f63646e2e6265656b6b612e636f6d2f626c6f67696d672f61737365742f3230323130362f6267323032313036313930312e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/d3c43cc878ff08f224812a38e04fc2ae4699b21d8bb6afbeb2017196b4572d28/68747470733a2f2f63646e2e6265656b6b612e636f6d2f626c6f67696d672f61737365742f3230323130362f6267323032313036313930312e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这个网页列出了 AMD 和英特尔两年 CPU 的历年市场份额数据。上图是2004年至今两家公司的总体市场占有率，蓝线是英特尔，红线是 AMD。&lt;/p&gt;
&lt;h3 id=&#34;堡垒屋httpsenwikipediaorgwikibastle_house&#34;&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Bastle_house&#34;&gt;堡垒屋&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;世界上存在没有门的房子吗？回答是有的。&lt;/p&gt;
&lt;p&gt;中世纪时，英国乡下经常有强盗出没。为了保护自己，农民们建造了很多堡垒屋（bastle house）。这种房子非常坚固，墙壁往往厚达一米，窗户又高又小，而且没有门，只有通过梯子才能从高处的窗户爬进去。&lt;/p&gt;
&lt;h3 id=&#34;虫洞是什么&#34;&gt;虫洞是什么&lt;/h3&gt;
&lt;p&gt;摘自何香涛的《追逐类星体》（外语教学与研究出版社，2015）。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;要解释虫洞，先要从黑洞说起。&lt;/p&gt;
&lt;p&gt;天文学上，黑洞是一个很热门的概念，指的是一个具有巨大引力的星体，可以吸收周围的物质，连光也可以吸收。由于不会产生光，所以无法被看到，因此称为黑洞。&lt;/p&gt;
&lt;p&gt;此外，还有一种星体叫做白洞，正好与黑洞相反。黑洞是将物质吸进去，由外向内；白洞则是将物质排斥出来，由内向外，所有的物质都向外喷发。有人认为，许多X射线暴和γ射线暴正是由白洞造成的。&lt;/p&gt;
&lt;p&gt;现在让我们设想，一个黑洞的对面正好有一个白洞，它们连在一起。周围的物质被不停地吸入黑洞，由于黑洞的背后是一个白洞，白洞会不停地从黑洞中把物质抽出来，再喷发出去。这里最关键的部位是黑洞和白洞之间的衔接口，给黑洞命名的约翰·惠勒想出了一个新名词，把它叫作“虫洞”，像蛀虫在黑洞和白洞之间蛀的洞。所以，虫洞只是一个通道而已，那里并不存放任何物质。&lt;/p&gt;
&lt;p&gt;进一步探究虫洞的物理性质，科学家发现了虫洞还有更大的潜在功能。它不仅能够衔接黑洞和白洞，而且还可以把两个毫无关联的宇宙世界连起来。&lt;/p&gt;
&lt;p&gt;广而言之，我们的宇宙就是一个大黑洞，外界看不到我们，我们也看不到外界。现在，可以用虫洞来沟通，相当于在两个宇宙之间搭了一条隧道。这个隧道把两个宇宙的时空连接起来，因此又被称为“时空隧道”。&lt;/p&gt;
&lt;p&gt;我们不能认为地球上的人类是宇宙中唯一的高等智慧生命。同样，我们的宇宙也不应该是唯一的宇宙。在我们的宇宙之外，应该存在着一个超级大宇宙。如果把每个宇宙比作一个球泡，会有无数球泡飘浮在超级大宇宙中。根据以往的理论，一个个宇宙泡之间完全隔绝。而现在，只要通过时空隧道，一个宇宙中的人类就可以到另一个宇宙中去访问。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;chromium-浏览器httpsblogchromiumorg202107increasing-https-adoptionhtml宣布将把-https-协议的锁标志改成一个中性的箭头&#34;&gt;&lt;a href=&#34;https://blog.chromium.org/2021/07/increasing-https-adoption.html&#34;&gt;Chromium 浏览器&lt;/a&gt;宣布，将把 HTTPS 协议的锁标志，改成一个中性的箭头&lt;/h3&gt;
&lt;p&gt;以防用户看到“锁”以后，误认为该网站是经过认证的可靠网站。&lt;/p&gt;
&lt;p&gt;实际上，HTTPS 协议只能保障信息传输是安全的，并不能保证网站本身是可靠的。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://camo.githubusercontent.com/1df917eab5e0752b7e3f927dee6c19c26767fad4f80396dd01a7d0b41a27a88f/68747470733a2f2f63646e2e6265656b6b612e636f6d2f626c6f67696d672f61737365742f3230323130372f6267323032313037313531322e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;砂纸的砂粒是怎么做上去的httpsmpweixinqqcomsshjfb-te-xietw6kbluysq&#34;&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/ShjFb-tE-xiEtw6KBLuySQ&#34;&gt;砂纸的砂粒是怎么做上去的？&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;砂纸是木工的必备工具，它是怎么生产出来的？上面的砂粒怎么会均匀吸附到砂纸上呢？&lt;/p&gt;
&lt;h3 id=&#34;中国西北地区的干旱原因httpsmpweixinqqcomshugwusgngnayup7vdr-uga&#34;&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/HuGWUSGNgNAYUp7VDr-uGA&#34;&gt;中国西北地区的干旱原因&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个科普演讲，主讲人是中国科学院大气物理研究所的副研究员，分析中国西北地区为什么这么干旱，如果把喜马拉雅山脉炸开一个口子，会不会改变这种状况。&lt;/p&gt;
&lt;p&gt;其中提到一点，大家觉得延安很干旱，其实那里跟北京的降雨量差不多。&lt;/p&gt;
&lt;h3 id=&#34;一行-css-代码实现全站中文简繁转换httpswwwzhangxinxucomwordpress202101css-simplified-traditional-chinese&#34;&gt;&lt;a href=&#34;https://www.zhangxinxu.com/wordpress/2021/01/css-simplified-traditional-chinese/&#34;&gt;一行 CSS 代码实现全站中文简繁转换&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;CSS 命令 &lt;code&gt;font-variant-east-asian: traditional;&lt;/code&gt;，可以让网站字体从简体变成繁体。&lt;/p&gt;
&lt;h3 id=&#34;postgresql-数据库的变化捕获和实时通知httpskaifeijiccpostchange-data-capture-and-instant-notification-on-postgresql-via-listen-notify-and-server-sent-events&#34;&gt;&lt;a href=&#34;https://kaifeiji.cc/post/change-data-capture-and-instant-notification-on-postgresql-via-listen-notify-and-server-sent-events/&#34;&gt;PostgreSQL 数据库的变化捕获和实时通知&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;数据库发生变化时，如何通知前端网页？本文以 PostgreSQL 数据库为例，介绍了作者的解决方案，使用了服务器端事件。&lt;/p&gt;
&lt;h3 id=&#34;避免使用可变长数组httpsblogjorengaprogrammingvla-bad&#34;&gt;&lt;a href=&#34;https://blog.joren.ga/programming/vla-bad&#34;&gt;避免使用可变长数组&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;C 语言有一种语法，叫做可变长数组（VLA），数组的长度不在编译时确定，而在运行时确定。本文解释它有什么问题，为什么应该避免使用。&lt;/p&gt;
&lt;h3 id=&#34;netflix-prize-挑战赛十五周年回顾httpswwwquoracomhow-useful-was-the-netflix-prize-challenge-for-netflixanswerxavier-amatriainshare1&#34;&gt;&lt;a href=&#34;https://www.quora.com/How-useful-was-the-Netflix-Prize-challenge-for-Netflix/answer/Xavier-Amatriain?share=1&#34;&gt;Netflix Prize 挑战赛十五周年回顾&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;2006年，Netflix 为了改进推荐算法，发起了一项算法比赛，任何人只要能够击败基准算法，就能获得 100 万美元奖金。&lt;/p&gt;
&lt;p&gt;这是世界第一场大数据的算法比赛，世界各地的许多研究人员、学生、业余数学家和计算机科学家都参与了。本文在多年后，评论这个比赛的意义。&lt;/p&gt;
&lt;h3 id=&#34;scimago-graphicahttpsgraphicaapp&#34;&gt;&lt;a href=&#34;https://graphica.app/&#34;&gt;SCImago Graphica&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个桌面软件，可以选择各种指标，定制数据可视化图形，完全不用写一行代码。&lt;/p&gt;
&lt;h3 id=&#34;wifi-cardhttpswificardio&#34;&gt;&lt;a href=&#34;https://wificard.io/&#34;&gt;WiFi Card&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个网页工具，使用 WIFI 的名称和密码，生成一个二维码，手机扫一下，就能登陆这个无线网络。&lt;/p&gt;
&lt;h3 id=&#34;kubespherehttpsgithubcomkubespherekubesphere&#34;&gt;&lt;a href=&#34;https://github.com/kubesphere/kubesphere&#34;&gt;KubeSphere&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个国产的 Kubernetes 集群管理平台，操作容器的利器，功能强大，界面清爽易用，大大方便了 k8s 的使用。&lt;/p&gt;
&lt;h3 id=&#34;谷歌-api-设计指南httpsgoogleaipdevgeneral&#34;&gt;&lt;a href=&#34;https://google.aip.dev/general&#34;&gt;谷歌 API 设计指南&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;谷歌官方文档，讲解谷歌的 API 设计规范。&lt;/p&gt;
&lt;h3 id=&#34;2020年中国互联网网络安全报告httpswwwcertorgcnpublishmain4620212021072113094450452577220210721130944504525772_html&#34;&gt;&lt;a href=&#34;https://www.cert.org.cn/publish/main/46/2021/20210721130944504525772/20210721130944504525772_.html&#34;&gt;2020年中国互联网网络安全报告&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;7月20日，国家计算机网络应急中心发布的年度报告，介绍我国网络安全情况，披露一些安全事件，可以免费下载。&lt;/p&gt;
&lt;h3 id=&#34;自己动手写一个简单的数据库httpscstackgithubiodb_tutorial&#34;&gt;&lt;a href=&#34;https://cstack.github.io/db_tutorial/&#34;&gt;自己动手写一个简单的数据库&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一份英语教程，教大家从头开始，用 C 语言写一个类似 sqlite 的数据库，理解数据库的实现原理。&lt;/p&gt;
&lt;h3 id=&#34;编程音乐httpswwwmusicforprogrammingnet&#34;&gt;&lt;a href=&#34;https://www.musicforprogramming.net/&#34;&gt;编程音乐&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这个网站提供几十组精心选择的编程背景音乐。&lt;/p&gt;
&lt;h3 id=&#34;做完你的项目https250bpmcomblog50&#34;&gt;&lt;a href=&#34;https://250bpm.com/blog:50/&#34;&gt;做完你的项目&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;如果要为 UNIX 哲学添加一个原则，我认为应该是：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“做完你的项目。”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这是我能想到的最简单、但最被忽视的软件工程准则。&lt;/p&gt;
&lt;p&gt;大多数软件其实都没有真正完成，作者只是做出了基本功能，然后就发布了。很多软件后来不做了，也不是因为做完了，而是作者放弃了。&lt;/p&gt;
&lt;p&gt;让我们把程序员比作木匠。你买了一把椅子，因为觉得它能满足你的需求。可是买来以后，每隔几天，木匠就会出现在你的家里，对椅子进行修改。有些变动是你想要的，有些你无所谓，还有一些变动只会让你心生反感。甚至有时候，木匠还会出错，比如木头上伸出了一些尖刺，使椅子不再可用。&lt;/p&gt;
&lt;p&gt;你买的是椅子，而不是某种千变万化的家具，没人喜欢每天会变的椅子。&lt;/p&gt;
&lt;p&gt;程序员也是如此，应该对软件有一个总体规划，让它有一个完整的基本功能。虽然以后可以进行维护、错误修复和安全补丁，但基本功能应该从始至终都是完整清晰的。&lt;/p&gt;
&lt;p&gt;你不能说，因为出现了新情况，所以需要不断改变或完善它的功能。 如果一个软件一直在加功能，它就太大了，超出了你应该做的东西。你试图制造一个超出合理范围的东西，你需要画一下功能图，将过大的软件拆分成几个功能完整且合理的小软件。&lt;/p&gt;
&lt;p&gt;总之，做完你的项目再发布。用户拿到的，应该是一个基本上做完的项目。&lt;/p&gt;
&lt;h3 id=&#34;交通信号灯httpswwwfastcompanycom90655753the-traffic-light-gets-a-dazzling-21st-century-makeover&#34;&gt;&lt;a href=&#34;https://www.fastcompany.com/90655753/the-traffic-light-gets-a-dazzling-21st-century-makeover&#34;&gt;交通信号灯&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;1914年，美国城市克利夫兰安装了人类第一个交通信号灯，从那时到现在，基本样子没变过。一家俄罗斯设计公司，最近提出了新的信号灯设计。&lt;/p&gt;
&lt;p&gt;这种信号灯就是一整块液晶面板，通过背景色的变化，来提示红灯、黄灯和绿灯，并用勾、叉和感叹号等辅助符号，加强注意力。&lt;/p&gt;
&lt;p&gt;它还会显示剩余的秒数，以及绿灯时可通行的道路走向。&lt;/p&gt;
&lt;h3 id=&#34;一位设计师提出浏览器的窗口标签应该可以改变位置httpstwittercomneilsardesaistatus1416527160794361868&#34;&gt;&lt;a href=&#34;https://twitter.com/neilsardesai/status/1416527160794361868&#34;&gt;一位设计师提出，浏览器的窗口标签应该可以改变位置&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;放置在浏览器的左右两侧，就像活页夹一样。这种设计对宽屏幕显示器很有意义。&lt;/p&gt;
&lt;h3 id=&#34;javascript-新增的运算符httpswangdoccomes6operatorhtml&#34;&gt;&lt;a href=&#34;https://wangdoc.com/es6/operator.html&#34;&gt;JavaScript 新增的运算符&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文介绍 ES6 的后续标准为 JavaScript 新增的七个运算符，其中包括最新的 ES2021 标准增加的三个运算符。&lt;/p&gt;
&lt;h3 id=&#34;haskell-语言入门第一步httpsblogkalvadcomhaskell-series-part-1&#34;&gt;&lt;a href=&#34;https://blog.kalvad.com/haskell-series-part-1/&#34;&gt;Haskell 语言入门第一步&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这篇文章介绍怎样动手尝试 Haskell 语言，并写一个简单函数，内容清晰易懂 。&lt;/p&gt;
&lt;h3 id=&#34;关于微控制器的知识httpsblogtoitiowhat-you-need-to-know-about-microcontrollers-5fabd6d5b019&#34;&gt;&lt;a href=&#34;https://blog.toit.io/what-you-need-to-know-about-microcontrollers-5fabd6d5b019&#34;&gt;关于微控制器的知识&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;当代计算机越做越小，符合冯诺依曼架构的全套计算装置，已经可以做进一块芯片了，这种芯片式的计算机称为“微控制器”。本文介绍微控制器的基本知识。&lt;/p&gt;
&lt;h3 id=&#34;最糟糕的音量控制界面httpsuxdesignccthe-worst-volume-control-ui-in-the-world-60713dc86950&#34;&gt;&lt;a href=&#34;https://uxdesign.cc/the-worst-volume-control-ui-in-the-world-60713dc86950&#34;&gt;最糟糕的音量控制界面&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文收集各种极其难用的音量控制界面设计，有点恶作剧性质。&lt;/p&gt;
&lt;h3 id=&#34;js-脚本如何正确检测用户的设备httpsmultilogincomwhy-mimicking-a-device-is-almost-impossible&#34;&gt;&lt;a href=&#34;https://multilogin.com/why-mimicking-a-device-is-almost-impossible/&#34;&gt;JS 脚本如何正确检测用户的设备&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;用户经常使用伪装的 User-Agent 标头，隐藏自身的信息。本文给出了各种思路，如何用 JS 脚本，正确检测用户的上网设备。&lt;/p&gt;
&lt;h3 id=&#34;orbithttpsorbitkiwi&#34;&gt;&lt;a href=&#34;https://orbit.kiwi/&#34;&gt;Orbit&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个 React 的组件库，由旅游网站 Kiwi.com 设计，带有旅游休闲的风格。&lt;/p&gt;
&lt;h3 id=&#34;微软-rust-语言初学者教程httpswwwyoutubecomplaylistlistpllrxd0htiehjbtjrchbwovks_sr8evw1x&#34;&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PLlrxD0HtieHjbTjrchBwOVks_sr8EVW1x&#34;&gt;微软 Rust 语言初学者教程&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;微软公司推出 Rust 语言视频教程，一共35讲，每一讲都是几分钟的短视频，存放在 Youtube 上面。&lt;/p&gt;
&lt;h3 id=&#34;pitch-deck-hunthttpswwwpitchdeckhuntcom&#34;&gt;&lt;a href=&#34;https://www.pitchdeckhunt.com/&#34;&gt;Pitch Deck Hunt&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;创业公司向投资者和用户介绍自己的 PPT，叫做 Pitch Deck。该网站收集了150多家著名公司早期的 Pitch Deck，可以用来当作模板。&lt;/p&gt;
&lt;h3 id=&#34;地下小镇httpswwwbusinessinsidercominside-coober-pedy-australias-underground-town-2016-1&#34;&gt;&lt;a href=&#34;https://www.businessinsider.com/inside-coober-pedy-australias-underground-town-2016-1&#34;&gt;地下小镇&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;澳大利亚南部内陆有一个名叫库伯佩迪（Coober Pedy）的小镇。它最初是一个蛋白石矿场，现在已经停止开采了。&lt;/p&gt;
&lt;p&gt;该镇的夏季地表温度接近50摄氏度，为了躲避酷暑，许多居民都搬到地下的矿洞里面居住，已经有100年历史了。&lt;/p&gt;
&lt;p&gt;当地的地面上，到处都是烟囱和通气孔。人们则是在地下安家，客厅、卧室、厨房，一应俱全。酒吧、教堂、商店、旅馆、娱乐设施等也在地下，整个小镇可以都在地下运作，不到地面活动。&lt;/p&gt;
&lt;h3 id=&#34;一个人可以有多少个朋友httpskottkeorg2106the-circles-of-friendship&#34;&gt;&lt;a href=&#34;https://kottke.org/21/06/the-circles-of-friendship&#34;&gt;一个人可以有多少个朋友？&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;英国人类学家罗宾·邓巴（Robin Dunbar）提出过著名的“邓巴数”的概念。&lt;/p&gt;
&lt;p&gt;他认为，由于人类大脑的容量，一个人能够保持的友谊关系是有限的，平均大约为150人。大脑认知功能比较强的人，会有更多一点的朋友。&lt;/p&gt;
&lt;p&gt;下图就是他的理论。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/0afd407d70a6d64da159472b907a7e324090bb47d1839d1f15926df5287cb4fc/68747470733a2f2f63646e2e6265656b6b612e636f6d2f626c6f67696d672f61737365742f3230323130362f6267323032313036313730352e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/0afd407d70a6d64da159472b907a7e324090bb47d1839d1f15926df5287cb4fc/68747470733a2f2f63646e2e6265656b6b612e636f6d2f626c6f67696d672f61737365742f3230323130362f6267323032313036313730352e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;（1）你最贴心的朋友，平均是1.5个，很可能是你的伴侣。&lt;/p&gt;
&lt;p&gt;（2）你的亲密朋友大约是5个，如果你遇到困难，他们会放下一切来支持你。&lt;/p&gt;
&lt;p&gt;（3）你的至交平均是15个，他们是你的主要社交伙伴，你足够信任他们，会想着跟他们一起吃饭、旅行，交流生活经验。&lt;/p&gt;
&lt;p&gt;（4）你熟悉的朋友是50个，如果你在家里举办周末大烧烤，会邀请他们。&lt;/p&gt;
&lt;p&gt;（5）你的普通朋友是150个，你举行婚宴的时候，他们会参加。&lt;/p&gt;
&lt;p&gt;（6）你认识的人大约是500个，路上见到，会打招呼。&lt;/p&gt;
&lt;p&gt;（7）你记得住名字的人是1500个。&lt;/p&gt;
&lt;p&gt;（8）你对脸有印象的人是5000个。&lt;/p&gt;
&lt;p&gt;之所以会有这些层，是因为一个人的社交时间和精力是有限的。你不得不选择，如何分配这些时间，与哪些人共度。&lt;/p&gt;
&lt;p&gt;他还有其他一些推论。&lt;/p&gt;
&lt;p&gt;（1）一般来说，内向的人在每一层的朋友数，都比外向的人少。&lt;/p&gt;
&lt;p&gt;（2）与一个陌生人成为好朋友，大约需要相处200个小时。&lt;/p&gt;
&lt;p&gt;（3）随着年龄的增长，朋友关系变得越来越难以建立，每一层的朋友数字都会下降。&lt;/p&gt;
&lt;p&gt;（4）坠入爱河会让你减少两个好朋友。&lt;/p&gt;
&lt;h3 id=&#34;如何生成一个数独游戏httpsmeguanghechencompostgamesudoku&#34;&gt;&lt;a href=&#34;https://me.guanghechen.com/post/game/sudoku/&#34;&gt;如何生成一个数独游戏&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者介绍了自动生成数独游戏的编程思路。&lt;/p&gt;
&lt;h3 id=&#34;如何优化-node-项目的-docker-镜像httpsjuejincnpost6991689670027542564&#34;&gt;&lt;a href=&#34;https://juejin.cn/post/6991689670027542564&#34;&gt;如何优化 node 项目的 docker 镜像&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者介绍如何一步步将一个 Node.js 应用的 Docker 镜像文件，从 1.06G 压缩到 73.4M，构建速度从 29.6 秒提高到 1.3 秒。&lt;/p&gt;
&lt;h3 id=&#34;好友关系的数据库设计httpsminimalmodelingsubstackcompmodeling-mutual-friendship&#34;&gt;&lt;a href=&#34;https://minimalmodeling.substack.com/p/modeling-mutual-friendship&#34;&gt;好友关系的数据库设计&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;用户互相加为好友，数据库应该怎么设计，才能方便以后查询和删改？&lt;/p&gt;
&lt;h3 id=&#34;网页暗模式只要一行代码httpsdavidwalshnamedark-mode-invert-filter&#34;&gt;&lt;a href=&#34;https://davidwalsh.name/dark-mode-invert-filter&#34;&gt;网页暗模式只要一行代码&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文介绍如何使用一个 CSS 命令，反转网页颜色。&lt;/p&gt;
&lt;h3 id=&#34;谷歌是否索引-css-文本内容httpswwwsearchcandyukseotechnical-seocss-pseudo-elements&#34;&gt;&lt;a href=&#34;https://www.searchcandy.uk/seo/technical-seo/css-pseudo-elements/&#34;&gt;谷歌是否索引 CSS 文本内容&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;CSS 可以通过伪元素向网页添加文本内容，作者做了一个实验，看看谷歌会不会索引 CSS 引入的文本。&lt;/p&gt;
&lt;h3 id=&#34;为什么人眼对蓝色不易聚焦httpscalebkrusecom10-projectsseeing-blue&#34;&gt;&lt;a href=&#34;https://calebkruse.com/10-projects/seeing-blue/&#34;&gt;为什么人眼对蓝色不易聚焦&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一篇有点奇怪的文章，解释人眼为什么对蓝色不易聚焦，更容易对红色和绿色物体聚焦。&lt;/p&gt;
&lt;h3 id=&#34;dataeasehttpsgithubcomdataeasedataease&#34;&gt;&lt;a href=&#34;https://github.com/dataease/dataease&#34;&gt;DataEase&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个开源的数据可视化分析工具，支持丰富的数据源连接，能够通过拖拉拽方式，快速制作图表和仪表盘。&lt;/p&gt;
&lt;h3 id=&#34;mandodbhttpsgithubcomchenjiandongxmandodb&#34;&gt;&lt;a href=&#34;https://github.com/chenjiandongx/mandodb&#34;&gt;mandodb&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个示例项目，作者介绍如何从零开始实现一个小型的时序数据库（TSDB），也就是专门用于时间序列的数据库。&lt;/p&gt;
&lt;h3 id=&#34;rust-和-webassemblyhttpsrustwasmgithubiodocsbookintroductionhtml&#34;&gt;&lt;a href=&#34;https://rustwasm.github.io/docs/book/introduction.html&#34;&gt;Rust 和 WebAssembly&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一本免费阅读的英文教程，介绍如何用 Rust 语言开发 WebAssembly 程序。&lt;/p&gt;
&lt;h3 id=&#34;信息检索导论httpsnlpstanfordeduir-book&#34;&gt;&lt;a href=&#34;https://nlp.stanford.edu/IR-book/&#34;&gt;信息检索导论&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一本免费阅读的英语教材，介绍搜索引擎的原理和基本技术。&lt;/p&gt;
&lt;h3 id=&#34;public-api-listshttpsgithubcompublic-api-listspublic-api-lists&#34;&gt;&lt;a href=&#34;https://github.com/public-api-lists/public-api-lists&#34;&gt;Public API Lists&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这个 GitHub 仓库收集了各种专供软件开发使用的免费 API。&lt;/p&gt;
&lt;h3 id=&#34;开发者为什么放弃自己的开源项目httpssambhavsaggiscomenblogfree-software-and-freakonomics&#34;&gt;&lt;a href=&#34;https://sambhav.saggis.com/en/blog/free-software-and-freakonomics&#34;&gt;开发者为什么放弃自己的开源项目？&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;大部分的开源软件，是个人开发者创建的。其中能够长期维护的少之又少，绝大部分项目最终都会被放弃。&lt;/p&gt;
&lt;p&gt;下面是一个不完全列表，列出了开发者放弃自己的开源项目的主要原因。从中你就可以知道，个人维护一个长期项目有多难。&lt;/p&gt;
&lt;p&gt;1）该项目是免费的，因此没有金钱激励来让开发者继续工作。&lt;/p&gt;
&lt;p&gt;2）使项目跟上最新的技术进展，非常困难和耗时。&lt;/p&gt;
&lt;p&gt;3）开发者对这个项目感到厌烦，不想继续做了，因为最早只是出于好玩，或为了学校作业而开发的。&lt;/p&gt;
&lt;p&gt;4）项目已经失控，变得太大了，很难维护。&lt;/p&gt;
&lt;p&gt;5）该项目的主要用户是不太懂计算机的人，每天有大量的、愚蠢的、缺乏耐心的支持请求。&lt;/p&gt;
&lt;p&gt;6）出现了更好的替代方案。&lt;/p&gt;
&lt;p&gt;7）开发者之间的摩擦，导致主要贡献者离开。&lt;/p&gt;
&lt;p&gt;8）开发者的优先事项，从项目转移到其它事情上面，比如结婚有了小孩。&lt;/p&gt;
&lt;p&gt;9）项目的代码质量很差，导致维护和重构困难。&lt;/p&gt;
&lt;p&gt;10）开发者决定把项目卖给其他人。&lt;/p&gt;
&lt;p&gt;11）一种新技术出现了，使得该项目过时了。&lt;/p&gt;
&lt;h3 id=&#34;云服务流量有多贵&#34;&gt;云服务流量有多贵？&lt;/h3&gt;
&lt;p&gt;Cloudflare 的官网发表了一篇&lt;a href=&#34;https://blog.cloudflare.com/aws-egregious-egress/&#34;&gt;罕见的文章&lt;/a&gt;，它的 CEO 抨击亚马逊网络服务，流量收费太贵。&lt;/p&gt;
&lt;p&gt;亚马逊是全世界最大的云服务商，提供各种网络基础设施。用过的人都知道，它的收费里面，硬件费用（CPU、内存、硬盘等）是小头，流量费用才是大头。流量费有多贵？Cloudflare 根据自己从机房拿到的批发价推算，亚马逊在北美和欧洲，向用户收取的流量费，是批发价的80倍！机房的带宽批发价是 1Mbps 收费0.08美元，亚马逊转手卖给开发者，价格就是6.37美元！（带宽与流量的换算关系，放到后面解释。）&lt;/p&gt;
&lt;p&gt;我给大家算一笔账，按照这种流量费用，在亚马逊托管一个小网站要多少钱。&lt;/p&gt;
&lt;p&gt;假设网站每天的浏览量是2500个页面，每个页面的大小是 2MB，那么一天的流量就是 5GB，一个月下来就是 150GB。&lt;/p&gt;
&lt;p&gt;亚马逊有一个官方的&lt;a href=&#34;https://calculator.aws/#/createCalculator/EC2&#34;&gt;价格计算器&lt;/a&gt;，我们去那里选择硬件，这里一律选择最低配置，然后填写需要的流量是150GB，页面会自动给出价格。&lt;/p&gt;
&lt;p&gt;算出来的价格就是16.31美元/月（大约110元人民币），其中流量费要占到13.41美元。可以看到，这么小的网站，一年下来需要1000多元人民币。如果访问量增大10倍，每月达到1500GB，其实还是属于小网站，但是收取的费用会增加到每年1万多元人民币。&lt;/p&gt;
&lt;p&gt;一个&lt;a href=&#34;https://www.theregister.com/2020/09/28/aws_cost_anomaly_detection/&#34;&gt;真实的案例&lt;/a&gt;是，一个开发者平时的账单是每月23.00美元，某天一觉醒来，收到了一张2,657.68美元的账单。&lt;/p&gt;
&lt;p&gt;需要指出的是，不仅是亚马逊，其它云服务商的流量费也非常贵。&lt;a href=&#34;https://cloud.google.com/products/calculator&#34;&gt;谷歌云&lt;/a&gt;对同样网站收取的费用是每月16.73美元，其中流量费12.75美元。国内的&lt;a href=&#34;https://cn.aliyun.com/pricing-calculator&#34;&gt;阿里云&lt;/a&gt;和&lt;a href=&#34;https://buy.cloud.tencent.com/price/cvm/calculator&#34;&gt;腾讯云&lt;/a&gt; ，价格也相差无几。&lt;/p&gt;
&lt;p&gt;不过，国内的云服务商有一个好处，它是按照带宽收费，所以不会发生流量超标，因为带宽满了，新的访问者就进不来了。（1Mbps 的带宽在100%利用率的情况下，相当于每月328GB的流量，假设利用率平均为20%，150GB流量就大约需要2.3Mbps的带宽。）&lt;/p&gt;
&lt;p&gt;结论就是，小网站尽量不要托管在大型云服务商那里，流量费用实在吃不消。如果不得不放在上面，那就必须设法降低或转移流量，比如使用 CDN。&lt;/p&gt;
&lt;h3 id=&#34;谷歌的漏洞奖金httpssecuritygoogleblogcom202107a-new-chapter-for-googles-vulnerabilityhtml&#34;&gt;&lt;a href=&#34;https://security.googleblog.com/2021/07/a-new-chapter-for-googles-vulnerability.html&#34;&gt;谷歌的漏洞奖金&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;谷歌透露，过去10年，它一共向11,055个软件漏洞，支付了29,357,516美元的奖金，平均每个漏洞2656美元（约1.8万元人民币），共有84个国家的2,022名程序员拿到奖励。&lt;/p&gt;
&lt;p&gt;这其实非常划算，一年费用不到300万美元，就能发现1000多个漏洞。如果其中任何一个漏洞被人利用，对谷歌造成的损失，可能都远远大于这个数字。&lt;/p&gt;
&lt;p&gt;这就是为什么大型软件公司都悬赏开发者，向它报告软件漏洞。&lt;/p&gt;
&lt;h3 id=&#34;本田电动平衡车httpswwwyankodesigncom20210722this-self-balancing-honda-electric-scooter-redefines-futuristic-urban-commuting&#34;&gt;&lt;a href=&#34;https://www.yankodesign.com/2021/07/22/this-self-balancing-honda-electric-scooter-redefines-futuristic-urban-commuting/&#34;&gt;本田电动平衡车&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;日本摩托车厂商本田公司，发布了一个概念性的单轮电动平衡车的设计，令人耳目一新。这种车比摩托车成本更低、更节省空间。&lt;/p&gt;
&lt;h3 id=&#34;人工智能的读图会意httpszhuanlanzhihucomp398939467&#34;&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/398939467&#34;&gt;人工智能的读图会意&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;人工智能在图像学的应用，取得了新进展。&lt;/p&gt;
&lt;p&gt;8月12日，阿里巴巴达摩院研发的 AliceMind 系统（已在 &lt;a href=&#34;https://github.com/alibaba/AliceMind&#34;&gt;GitHub&lt;/a&gt; 开源），在2021国际 VQA 挑战赛中，获得榜首成绩，并且刷新了该比赛的得分纪录，首次超越人类的分数。&lt;/p&gt;
&lt;p&gt;所谓 VQA（Visual Question Answering） 指的是视觉问答，简单说，就是根据图片回答问题，属于视觉-文本推理，也叫做“读图会意”，是更高层次的“图像识别”。&lt;/p&gt;
&lt;p&gt;VQA 技术有着广阔的应用，可以使得图片搜索质量上一个台阶，并且在医疗诊断、智能驾驶等领域有着巨大的实用价值。据说，阿里巴巴内部已经把它用于店铺的智能客服，从商品图片提取信息，自动回答用户的咨询。&lt;/p&gt;
&lt;h3 id=&#34;usb-c-接口为什么这么混乱httpswwwifanrcom1374936&#34;&gt;&lt;a href=&#34;https://www.ifanr.com/1374936&#34;&gt;USB-C 接口为什么这么混乱&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;除了 iPhone，各种电子设备现在基本都使用 USB-C 接口，但是这种接口其实非常混乱，有着众多令人迷惑的版本号，并且集成了大量协议，甚至还可以加入私有协议。&lt;/p&gt;
&lt;h3 id=&#34;sql-表格连接的可视化连接httpsdataschoolcomhow-to-teach-people-sqlsql-join-types-explained-visually&#34;&gt;&lt;a href=&#34;https://dataschool.com/how-to-teach-people-sql/sql-join-types-explained-visually/&#34;&gt;SQL 表格连接的可视化连接&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;老生常谈的内容，使用图形介绍 SQL join 的类型，简明易懂，值得经常看看。&lt;/p&gt;
&lt;h3 id=&#34;船只的原理httpsciechanowskinaval-architecture&#34;&gt;&lt;a href=&#34;https://ciechanow.ski/naval-architecture/&#34;&gt;船只的原理&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文从浮力的物理学原理开始讲起，介绍船只为什么会浮在水面上，以及螺旋桨为什么会产生推力。它的最大特色就是制作精美，网页上有大量互动式的小动画。&lt;/p&gt;
&lt;h3 id=&#34;postgres-全文搜索简介httpsblogcrunchydatacomblogpostgres-full-text-search-a-search-engine-in-a-database&#34;&gt;&lt;a href=&#34;https://blog.crunchydata.com/blog/postgres-full-text-search-a-search-engine-in-a-database&#34;&gt;Postgres 全文搜索简介&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Postgres 数据库自带全文搜索，本文简单介绍英语的全文搜索怎么实现。&lt;/p&gt;
&lt;h3 id=&#34;javascript-的浮点数格式httpsgithubcomtrekhlebjavascript-algorithmstreemastersrcalgorithmsmathbinary-floating-point&#34;&gt;&lt;a href=&#34;https://github.com/trekhleb/javascript-algorithms/tree/master/src/algorithms/math/binary-floating-point&#34;&gt;JavaScript 的浮点数格式&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文介绍了 JavaScript 的浮点数格式，JS 引擎底层到底是怎么存储一个数字的，图文并茂。&lt;/p&gt;
&lt;h3 id=&#34;我为什么放弃一个25000星的开源项目httpsmarmelabcomblog20201021sunsetting-fakerhtml&#34;&gt;&lt;a href=&#34;https://marmelab.com/blog/2020/10/21/sunsetting-faker.html&#34;&gt;我为什么放弃一个25000星的开源项目&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者是一个热门开源项目的维护者，项目已经有10年历史，25000多颗星，但是作者决定不再维护，放弃该项目。&lt;/p&gt;
&lt;h3 id=&#34;srpchttpsgithubcomsogousrpcblobmasterreadme_cnmd&#34;&gt;&lt;a href=&#34;https://github.com/sogou/srpc/blob/master/README_cn.md&#34;&gt;SRPC&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;搜狗公司开源的一个 RPC 远程调用框架，使用 C++ 编写，支持多种传输协议和数据格式。&lt;/p&gt;
&lt;h3 id=&#34;pushpinhttpsgithubcomfanoutpushpin&#34;&gt;&lt;a href=&#34;https://github.com/fanout/pushpin&#34;&gt;Pushpin&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个 C++ 写的反向代理服务器，能够轻松实现 WebSocket、HTTP 流通信、HTTP 长轮询服务。&lt;/p&gt;
&lt;h3 id=&#34;javascript-cookiehttpsgithubcomjs-cookiejs-cookie&#34;&gt;&lt;a href=&#34;https://github.com/js-cookie/js-cookie&#34;&gt;JavaScript Cookie&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个浏览器 Cookie 操作库，简单易用，非常轻量级，压缩后体积不到 1KB。GitHub 有18000颗星。&lt;/p&gt;
&lt;h3 id=&#34;企业软件销售入门httpsreaddoubancomebook322579268&#34;&gt;&lt;a href=&#34;https://read.douban.com/ebook/322579268/&#34;&gt;企业软件销售入门&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;豆瓣读书上面的一本中文小册子，介绍如何向企业用户销售软件，即如何做 toB 的生意，免费阅读。&lt;/p&gt;
&lt;h3 id=&#34;candidehttpscandidegardeningcomgbidentify-plants&#34;&gt;&lt;a href=&#34;https://candidegardening.com/GB/identify-plants&#34;&gt;Candide&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这个网站可以上传植物照片，进行识别，告诉你这是什么植物。&lt;/p&gt;
&lt;h3 id=&#34;fastai-bookhttpsgithubcomfastaifastbook&#34;&gt;&lt;a href=&#34;https://github.com/fastai/fastbook&#34;&gt;FastAI book&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;FastAI 是一个深度学习库，这是它的教程书，介绍深度学习的基础知识，以及如何用这个库完成人工智能项目。&lt;/p&gt;
&lt;h3 id=&#34;气候问题评估报告httpswwwipccchreportsixth-assessment-report-working-group-i&#34;&gt;&lt;a href=&#34;https://www.ipcc.ch/report/sixth-assessment-report-working-group-i/&#34;&gt;《气候问题评估报告》&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;联合国发布，供各国政府参考。&lt;/p&gt;
&lt;h3 id=&#34;船屋顶httpswwwfastcompanycom90660790this-wildly-experimental-building-has-a-roof-made-of-boats&#34;&gt;&lt;a href=&#34;https://www.fastcompany.com/90660790/this-wildly-experimental-building-has-a-roof-made-of-boats&#34;&gt;船屋顶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;大型的世界性活动，比如奥运会和世博会，会新建大量场馆。等到活动结束，场馆就会闲置，非常可惜。&lt;/p&gt;
&lt;p&gt;即将开幕的迪拜2020世博会，意大利馆做了一个疯狂的尝试。设计师让三艘长度为40米的船，从意大利航行过来，到达迪拜以后，把船拆开翻转过来，船底当作屋顶，下面用150根钢柱支撑在地面上，变成一栋房子。&lt;/p&gt;
&lt;p&gt;等到活动结束，再把场馆拆掉，屋顶重新变成船，继续航行回意大利。这样既节省了材料，也节省了建筑材料的运输费用。&lt;/p&gt;
&lt;h3 id=&#34;碳排放交易是怎么回事httpswwwtmtpostcom5527751html&#34;&gt;&lt;a href=&#34;https://www.tmtpost.com/5527751.html&#34;&gt;碳排放交易是怎么回事&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者10年前从西安交通大学热能工程系毕业，选择从事碳排放管理员职业。本文用通俗的语言，解释碳排放交易到底是怎么回事，为什么对火力电厂的利润有很大影响。&lt;/p&gt;
&lt;h3 id=&#34;微软入职大礼包httpsjustyycomarchives45543&#34;&gt;&lt;a href=&#34;https://justyy.com/archives/45543&#34;&gt;微软入职大礼包&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者入职微软英国，上班第一天拿到入职大礼包，看看里面有什么。&lt;/p&gt;
&lt;h3 id=&#34;空气湿度知识httpssspaicompost68027&#34;&gt;&lt;a href=&#34;https://sspai.com/post/68027&#34;&gt;空气湿度知识&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;空气湿度对人体的影响非常大，比如气温为31度时，如果湿度达到78%，人体实际感受到的温度相当于40度。本文介绍什么是湿度，以及如何除湿或加湿。&lt;/p&gt;
&lt;h3 id=&#34;内燃机原理httpsciechanowskiinternal-combustion-engine&#34;&gt;&lt;a href=&#34;https://ciechanow.ski/internal-combustion-engine/&#34;&gt;内燃机原理&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一篇令人叹为观止的文章，使用大量互动式的动画，讲解内燃机（也就是汽车发动机）是运作过程。&lt;/p&gt;
&lt;h3 id=&#34;mdn-如何实现自动补全搜索httpshacksmozillaorg202108mdns-autocomplete-search&#34;&gt;&lt;a href=&#34;https://hacks.mozilla.org/2021/08/mdns-autocomplete-search/&#34;&gt;MDN 如何实现自动补全搜索？&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文介绍 Mozilla 的文档网站如何实现搜索框的自动补全功能。&lt;/p&gt;
&lt;h3 id=&#34;如何提高-docker-容器的安全性httpsbloggitguardiancomhow-to-improve-your-docker-containers-security-cheat-sheet&#34;&gt;&lt;a href=&#34;https://blog.gitguardian.com/how-to-improve-your-docker-containers-security-cheat-sheet/&#34;&gt;如何提高 Docker 容器的安全性&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文逐点列出提高 Docker 容器安全性的一些措施。&lt;/p&gt;
&lt;h3 id=&#34;c-语言-union-结构的妙用httpsutccutorontocacksspaceblogprogrammingcunionsfornamespaces&#34;&gt;&lt;a href=&#34;https://utcc.utoronto.ca/~cks/space/blog/programming/CUnionsForNamespaces&#34;&gt;C 语言 Union 结构的妙用&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者介绍了 Union 结构的一个小技巧，用来隐藏 Struct 结构，实现内部属性的直接访问。&lt;/p&gt;
&lt;h3 id=&#34;我如何住在海滩上建立自己的软件生意httpswwwexpatsoftwarecomarticlesguy-on-the-beach-with-a-laptophtml&#34;&gt;&lt;a href=&#34;https://www.expatsoftware.com/Articles/guy-on-the-beach-with-a-laptop.html&#34;&gt;我如何住在海滩上建立自己的软件生意&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者是一个国外程序员，一直住在海滩边冲浪，他利用业余时间开发 SaaS 服务，远程赚钱支持自己的冲浪生活。&lt;/p&gt;
&lt;h3 id=&#34;staticwikihttpsgithubcomsegfallstatic-wiki&#34;&gt;&lt;a href=&#34;https://github.com/segfall/static-wiki&#34;&gt;static.wiki&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;维基百科的静态化工具，将维基百科变成一个只读的离线静态网站。&lt;/p&gt;
&lt;p&gt;它将所有条目导入一个 SQLite 数据库，然后实现一个前端的查询展示页面。注意，它的查询是 SQLite 的静态化查询，不需要有后端服务。&lt;/p&gt;
&lt;h3 id=&#34;postgresapphttpspostgresappcom&#34;&gt;&lt;a href=&#34;https://postgresapp.com/&#34;&gt;Postgres.app&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;MacOS 系统的 PostgreSQL 数据库安装包，并且内置了许多常用插件，号称是在 Mac 上使用 PostgreSQL 的最简单方法。&lt;/p&gt;
&lt;h3 id=&#34;daryl-的-tcpip-入门httpswwwipprimercom&#34;&gt;&lt;a href=&#34;https://www.ipprimer.com/&#34;&gt;Daryl 的 TCP/IP 入门&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一份英语教程，向初学者介绍 TCP/IP 协议的子网、寻址和路由知识。&lt;/p&gt;
&lt;h3 id=&#34;算法第-4-版的-rust-实现httpsgithubcomdouchuanalgorithmtreemainsrc&#34;&gt;&lt;a href=&#34;https://github.com/douchuan/algorithm/tree/main/src&#34;&gt;算法（第 4 版）的 Rust 实现&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者学习《算法（第 4 版）》时，将书中的算法逐一用 Rust 语言实现，做成了一个仓库。&lt;/p&gt;
&lt;h3 id=&#34;自己动手写编译器httpsgithubcompandoliatinyc&#34;&gt;&lt;a href=&#34;https://github.com/pandolia/tinyc&#34;&gt;自己动手写编译器&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一本中文电子书，介绍一个非常简单的编译器的实现，通过实例，描述基本的编译原理及过程。&lt;/p&gt;
&lt;h3 id=&#34;远洋运输船httpswwwmarinetrafficcomblogrenewing-our-respect-for-invisible-essential-workers-of-the-seas&#34;&gt;&lt;a href=&#34;https://www.marinetraffic.com/blog/renewing-our-respect-for-invisible-essential-workers-of-the-seas/&#34;&gt;远洋运输船&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;大家可能有一种印象，人类都居住在陆地上，大海是没有人居住的。&lt;/p&gt;
&lt;p&gt;但是实际上，任何一个时刻，都有几万条船在远洋航行，包括货轮、油轮、渔轮，这意味着大概有几十万人生活在海上。&lt;/p&gt;
&lt;p&gt;上图中，每一个绿点是油轮，每一个红点是货轮。要是没有这些船，以及船上的船员，世界贸易就要停顿了。&lt;/p&gt;
&lt;h3 id=&#34;阿富汗地形图httpswwwvisualcapitalistcommap-explainer-key-facts-about-afghanistan&#34;&gt;&lt;a href=&#34;https://www.visualcapitalist.com/map-explainer-key-facts-about-afghanistan/&#34;&gt;阿富汗地形图&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;下面是阿富汗的地形图。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/78c61db91233043fde6e85bb422602d6dd6f53346752a64773b00659941119f6/68747470733a2f2f63646e2e6265656b6b612e636f6d2f626c6f67696d672f61737365742f3230323130382f6267323032313038313932302e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/78c61db91233043fde6e85bb422602d6dd6f53346752a64773b00659941119f6/68747470733a2f2f63646e2e6265656b6b612e636f6d2f626c6f67696d672f61737365742f3230323130382f6267323032313038313932302e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;可以看到，这个国家全境都是高山，只有西南方向有一点点平原。而且，它东部连接帕米尔高原，海拔非常高，最高峰将近7500米，到处是高耸的雪山、深邃的山谷和无人的高原荒漠。&lt;/p&gt;
&lt;p&gt;这种地形，再加上没有高等级道路，特别适合游击队出没，不适合正规军作战，大型武器无法发挥威力。这就是前苏联和美国都无法在阿富汗获胜，最终只能铩羽而归的主要外部原因。&lt;/p&gt;
&lt;h3 id=&#34;线圈枪httpswwwthefirearmblogcomblog20210805arcflash-labs-gr-1-anvil&#34;&gt;&lt;a href=&#34;https://www.thefirearmblog.com/blog/2021/08/05/arcflash-labs-gr-1-anvil/&#34;&gt;线圈枪&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一家美国公司宣布，发售世界上第一把手持线圈枪。这种枪的子弹不依靠火药引发的气体爆炸获得动能，而是通过电磁线圈的加速，将一颗小铁丸加速到极高的速度，从而达到子弹的杀伤效果。&lt;/p&gt;
&lt;p&gt;该枪的预售价格为 3,375.00 美元，充电器需要另外购置。&lt;/p&gt;
&lt;h3 id=&#34;man-命令的奇怪输出httpsunixstackexchangecomquestions405783why-does-man-print-gimme-gimme-gimme-at-0030&#34;&gt;&lt;a href=&#34;https://unix.stackexchange.com/questions/405783/why-does-man-print-gimme-gimme-gimme-at-0030&#34;&gt;man 命令的奇怪输出&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;有人发现，如果在半夜 00:30 分执行&lt;code&gt;man&lt;/code&gt;命令，会得到一条奇怪的报错信息“gimme gimme gimme”。&lt;/p&gt;
&lt;h3 id=&#34;css-检测支持悬停的设备httpscss-irlinfodetecting-hover-capable-devices&#34;&gt;&lt;a href=&#34;https://css-irl.info/detecting-hover-capable-devices/&#34;&gt;CSS 检测支持悬停的设备&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;鼠标有悬停（hover）事件，移动设备由于不使用鼠标，自然就没有这个动作。因此就可以通过它判断，用户是否正在使用移动设备。&lt;/p&gt;
&lt;p&gt;本文介绍如何使用 CSS 来侦测支持悬停事件的设备，并可以设置特殊的样式。&lt;/p&gt;
&lt;h3 id=&#34;html-元素的-download-属性httpsshksprmobiblog202108to-download-this-page-click-here&#34;&gt;&lt;a href=&#34;https://shkspr.mobi/blog/2021/08/to-download-this-page-click-here/&#34;&gt;HTML 元素的 download 属性&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;网页的链接标签（a 元素），有一个 download 属性。只要设了这个属性，点击后就会跳出下载对话框。本文演示了使用这个属性，下载当前网页。&lt;/p&gt;
&lt;h3 id=&#34;如何在-jest-中使用-testtodohttpsheyfirstcobloghow-to-use-test-todo-in-jest&#34;&gt;&lt;a href=&#34;https://heyfirst.co/blog/how-to-use-test-todo-in-jest&#34;&gt;如何在 Jest 中使用 test.todo()&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文介绍 JavaScript 测试框架 Jest 的 test.todo() 方法的用法。&lt;/p&gt;
&lt;h3 id=&#34;cross-context-eventshttpsgithubcommia1024cross-context-events&#34;&gt;&lt;a href=&#34;https://github.com/mia1024/cross-context-events&#34;&gt;Cross Context Events&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个 JS 事件库，允许在多个窗口、多个 iframe 之间共享事件。也就是说，使用它在一个浏览器窗口触发事件，其它窗口也能收到。&lt;/p&gt;
&lt;h3 id=&#34;stackoverflow-开发者调查-2021-版httpsinsightsstackoverflowcomsurvey2021&#34;&gt;&lt;a href=&#34;https://insights.stackoverflow.com/survey/2021&#34;&gt;StackOverflow 开发者调查 2021 版&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;StackOverflow 网站每年会进行一次开发者调查，了解全世界程序员的动态和状况，这是今年的调查结果。其中的&lt;a href=&#34;https://insights.stackoverflow.com/survey/2021#technology&#34;&gt;“技术”&lt;/a&gt;部分，可以了解当前的流行技术。&lt;/p&gt;
&lt;h3 id=&#34;metanumbershttpsmetanumberscom&#34;&gt;&lt;a href=&#34;https://metanumbers.com/&#34;&gt;MetaNumbers&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这个网站提供任一个正整数（最大到 9223372036854775807）的信息，主要是该数的各种数论上的特性。&lt;/p&gt;
&lt;h3 id=&#34;物联网-iot-初学者教程httpsgithubcommicrosoftiot-for-beginners&#34;&gt;&lt;a href=&#34;https://github.com/microsoft/IoT-For-Beginners&#34;&gt;物联网 IoT 初学者教程&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;微软发布的英文教程，详细介绍什么是物联网，以及物联网的应用。&lt;/p&gt;
&lt;h3 id=&#34;com-域名涨价httpsdomainnamewirecom20210211breaking-verisign-announces-com-price-hike-to-8-39&#34;&gt;&lt;a href=&#34;https://domainnamewire.com/2021/02/11/breaking-verisign-announces-com-price-hike-to-8-39/&#34;&gt;.com 域名涨价&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;从今年9月1日开始，.com 域名的注册费从 $7.85 上调到 $8.39，每年增加54美分。&lt;/p&gt;
&lt;p&gt;全世界的域名由 ICANN （互联网名称与数字地址分配组织）管理，它把 .com 域名的管理权委托给 VeriSign 公司，再由 VeriSign 向域名零售商收取注册费，并将一部分收入转交给 ICANN。&lt;/p&gt;
&lt;p&gt;由于 VeriSign 垄断了 .com 域名的注册权，并且还是一家上市公司，历史上域名注册费一直在上涨。可以预期，未来几年中 .com 域名的注册费还会上涨。&lt;/p&gt;
&lt;h3 id=&#34;算法裁员httpswwwgamasutracomviewnews386534xsolla_lays_off_150_after_an_algorithm_ruled_staff_unengaged_and_unproductivephp&#34;&gt;&lt;a href=&#34;https://www.gamasutra.com/view/news/386534/Xsolla_lays_off_150_after_an_algorithm_ruled_staff_unengaged_and_unproductive.php&#34;&gt;算法裁员&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;美国的游戏服务公司 Xsolla 的收益今年下降了40%，决定裁掉三分之一的员工，大约150人。这件事的特别之处在于，公司使用软件算法判定，应该裁掉哪些人。&lt;/p&gt;
&lt;p&gt;CEO 的内部邮件这样写道：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“你收到这封电子邮件，是因为我们的大数据团队分析了你在 Jira、Confluence、Gmail、聊天、文档、仪表板中的活动，并将你标记为不敬业和效率低下的员工。换句话说，当你远程工作时，你并不总是在工作。你们中的许多人可能会感到震惊，不认同软件的算法，但我真的相信 Xsolla 不适合你。”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;我怎么加入微软剑桥研究院httpsjustyycomarchives45631&#34;&gt;&lt;a href=&#34;https://justyy.com/archives/45631&#34;&gt;我怎么加入微软剑桥研究院&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者详细记录从亚马逊跳槽到微软剑桥研究院的过程。&lt;/p&gt;
&lt;h3 id=&#34;如何在-linux-中实时监控日志文件httpslinuxcnarticle-13733-1html&#34;&gt;&lt;a href=&#34;https://linux.cn/article-13733-1.html&#34;&gt;如何在 Linux 中实时监控日志文件&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Linux 系统的日志文件一般位于 /var/log，以 .log 扩展名结尾。本文教你如何在一个窗口里面，同时监控所有日志文件。&lt;/p&gt;
&lt;h3 id=&#34;操作系统是什么httpszhuanlanzhihucomp403919173&#34;&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/403919173&#34;&gt;操作系统是什么？&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文是《操作系统开发入门基础》系列译文的第一篇，讨论了操作系统的概念，哪些工作属于操作系统的范畴。&lt;/p&gt;
&lt;h3 id=&#34;hyperformulahttpsgithubcomhandsontablehyperformula&#34;&gt;&lt;a href=&#34;https://github.com/handsontable/hyperformula&#34;&gt;HyperFormula&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Excel 公式的 JS 版，目前有300多个公式。同时，这个库也提供数据操作功能，可以用作电子表格的后端。&lt;/p&gt;
&lt;h3 id=&#34;minecraft-的岩石和矿物httpswwwmindatorgaminecraft&#34;&gt;&lt;a href=&#34;https://www.mindat.org/a/minecraft&#34;&gt;Minecraft 的岩石和矿物&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Minecraft 游戏出现过各种各样的石头和矿物，这个网站列出游戏里的石头在真实世界的对应物（下图）。&lt;/p&gt;
&lt;h3 id=&#34;aws-的简单英语介绍httpsexpeditedsecuritycomaws-in-plain-english&#34;&gt;&lt;a href=&#34;https://expeditedsecurity.com/aws-in-plain-english/&#34;&gt;AWS 的简单英语介绍&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;AWS（亚马逊网络服务）现在包含50多种产品，官方的介绍有时很难懂，搞不清楚每种产品到底干什么。这个网页使用简单的英语，介绍每一种服务。&lt;/p&gt;
&lt;h3 id=&#34;short-fat-engineers-are-undervaluedhttpsnestedsubstackcompshort-fat-engineers-are-undervalued&#34;&gt;&lt;a href=&#34;https://nested.substack.com/p/short-fat-engineers-are-undervalued&#34;&gt;Short Fat Engineers Are Undervalued&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;国外作者画了一张图，将世界上的程序员比喻成三种形状。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;（1）大饼型：拥有知识广度，但没有知识深度。&lt;/p&gt;
&lt;p&gt;（2）竹竿型：拥有知识深度，但没有知识广度。&lt;/p&gt;
&lt;p&gt;（3）T 型：介于前两者之间。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;文章也认为，通常情况下，竹竿型程序员的出路最好，雇主愿意为知识深度买单。因为现代社会高度分工，越是大公司，岗位职责越明确，需要的是领域专家，而不是多面手。&lt;/p&gt;
&lt;p&gt;但是作者提到，&lt;strong&gt;有一种情况例外，知识广度有明显优势，那就是确定项目路线的时候。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/6310672af9274154e9519af5eee0d4dc83aee4064ac42a84420b9f0474090000/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323130322f6267323032313032313430352e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/6310672af9274154e9519af5eee0d4dc83aee4064ac42a84420b9f0474090000/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323130322f6267323032313032313430352e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;请看上图，右上角有一个黑点，那是公司的目标。当前位置在左下角的原点，两点之间没有现成的道路，需要自己寻找实现路径。&lt;/p&gt;
&lt;p&gt;这时，知识广度就发挥作用了，了解的信息越广泛，知道的情况越多，就越可能具备洞察力，能够在多条路径里面，选出最合适的道路。知识面狭窄的人，由于不了解其它道路，不管遇到什么问题，可能都选择他会的那一条路，比如 Java。&lt;/p&gt;
&lt;p&gt;这就是全能程序员的优势，判断正确的仰角 θ，使得两点之间距离最短；特长程序员的优势是前进速度 r，可以在既定道路上做到快速前进。所以，&lt;strong&gt;知识的广度能告诉你什么是正确的方向，知识的深度则可以让你在该方向上快速前进。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;对于长期而艰巨的项目，走得快固然重要，但更重要的是走对方向。如果仰角 θ 不对，走得再快也没用，因为一开始就走错方向，后期必须停下来校正方向，甚至可能永远到达不了目标，白白浪费了生命。因此，&lt;strong&gt;全能型的人才比较适合确定项目方向，担任团队领导。&lt;/strong&gt; 乔布斯、马斯克就是这样的人，强在知识的广度，而不是知识的深度。他们既懂技术，又懂市场和管理，还了解人文（“我喜欢站在人文和技术的交叉点”），一旦掌握资源，就能带领团队，做出创新的产品。但是，如果让他们担任工程师，绝对是糟糕的工程师，会被开除。&lt;/p&gt;
&lt;p&gt;不过话说回来，现实中，谁会因为你知道的事情多，就让你担任团队领导呢？反而是因为你克服了技术难题，才有机会来领导团队。乔布斯和马斯克都是自己创业才出头的，恐怕不是偶然。&lt;/p&gt;
&lt;p&gt;总结一下，对于公司来说，如果有明确的技术方向，那么就需要聘请特长程序员，帮助加快开发速度。如果是刚刚诞生的创业公司，方向还在摸索之中，那么全能程序员也许更有价值。&lt;/p&gt;
&lt;h3 id=&#34;高科技软甲httpswwwtmtpostcom5565230html&#34;&gt;&lt;a href=&#34;https://www.tmtpost.com/5565230.html&#34;&gt;高科技软甲&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;《自然》杂志报道，科学家最近研发出一种 3D 打印面料，可以做成人体软甲。&lt;/p&gt;
&lt;h3 id=&#34;智能机器马httpswwwithomecom0573894htm&#34;&gt;&lt;a href=&#34;https://www.ithome.com/0/573/894.htm&#34;&gt;智能机器马&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;小鹏汽车发布了一款可以乘坐的智能机器马，其实就是一个四足机器人，带有摄像头、激光雷达等汽车级别的智能驾驶系统。&lt;/p&gt;
&lt;p&gt;它可以当作玩具，让小朋友骑，会自动行进，智能避障，并且能跟小朋友进行互动对话。小朋友抚摸机器马，它也会做出反应。此外，它还可以当作载具，在主人取货、逛街、远足时载货。它的具体发售日期和售价，还没有公布。&lt;/p&gt;
&lt;h3 id=&#34;新陈代谢速率httpscnnytimescomhealth20210813metabolism-weight-aging&#34;&gt;&lt;a href=&#34;https://cn.nytimes.com/health/20210813/metabolism-weight-aging/&#34;&gt;新陈代谢速率&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;《科学》杂志报道，科学家发现人体新陈代谢的速率，与以前认为的不一样。&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;1岁时，新陈代谢达到最高点。&lt;/li&gt;
&lt;li&gt;1岁到20岁，新陈代谢每年放缓约3%。&lt;/li&gt;
&lt;li&gt;20岁到60岁，新陈代谢保持稳定。&lt;/li&gt;
&lt;li&gt;60岁以后，每年下降约0.7%。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;这意味着，青年和中年时期，人体的能量消耗速度并没有下降。&lt;/p&gt;
&lt;p&gt;所以，20岁到60岁之间，节食可以减肥，因为新陈代谢并没有放缓，只要吃得少，体重就会下降。进入60岁以后，就很难通过节食减肥，因为新陈代谢每年都在下降，节食效果越来越小。&lt;/p&gt;
&lt;h3 id=&#34;道路使用费httpswwwfierceelectronicscomelectronicsgoodbye-gas-tax-hello-road-user-fees&#34;&gt;&lt;a href=&#34;https://www.fierceelectronics.com/electronics/goodbye-gas-tax-hello-road-user-fees&#34;&gt;道路使用费&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;美国国会最近通过了一项计划，研究征收统一的道路使用费是否可行。&lt;/p&gt;
&lt;p&gt;目前，世界各国都对汽油额外收费，用于道路维护，比如美国征收汽油税，中国征收燃油附加费。但是，越来越多的人开始使用电动汽车，不再使用汽油车，这笔钱就收不到了。&lt;/p&gt;
&lt;p&gt;为了给道路维护提供资金，确实应该找到一种办法，按照行驶里程，对所有车辆征收道路使用费。&lt;/p&gt;
&lt;h3 id=&#34;elm-语言的使用心得httpsengineeringrakutentodaypostelm-at-rakuten&#34;&gt;&lt;a href=&#34;https://engineering.rakuten.today/post/elm-at-rakuten/&#34;&gt;elm 语言的使用心得&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者在生产环境使用 Elm 将近两年了，写了10万行代码。这篇文章详细评价了 elm 语言，给予很高的评价。本文写得很好，推荐阅读。&lt;/p&gt;
&lt;h3 id=&#34;netbsd-解释httpswwwmakeuseofcomwhat-is-netbsd&#34;&gt;&lt;a href=&#34;https://www.makeuseof.com/what-is-netbsd/&#34;&gt;NetBSD 解释&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一篇科普文章，介绍什么是 NetBSD 操作系统，它的由来和特点。&lt;/p&gt;
&lt;h3 id=&#34;lithttpslitdev&#34;&gt;&lt;a href=&#34;https://lit.dev/&#34;&gt;Lit&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;谷歌推出的基于 Web Components 的前端框架，非常小巧（5KB），用法很优雅。&lt;/p&gt;
&lt;h3 id=&#34;gitfshttpswwwpresslabscomdocscodegitfs&#34;&gt;&lt;a href=&#34;https://www.presslabs.com/docs/code/gitfs/&#34;&gt;Gitfs&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这个工具把一个远程 Git 仓库挂载到本地目录，该目录所有的变动自动提交到 Git，并推送到远程仓库，因此也可以回滚到任意时点。它相当于实现了基于 Git 的文件系统。&lt;/p&gt;
&lt;h3 id=&#34;交互式线性代数httptextbooksmathgatecheduilaindexhtml&#34;&gt;&lt;a href=&#34;http://textbooks.math.gatech.edu/ila/index.html&#34;&gt;交互式线性代数&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一本英文的初级线性代数教材，免费在线阅读，并提供 PDF 下载，最大特点就是配有很多图片，方便理解。&lt;/p&gt;
&lt;h3 id=&#34;机器学习入门httpsmlbookorg&#34;&gt;&lt;a href=&#34;http://smlbook.org/&#34;&gt;机器学习入门&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;瑞典乌普萨拉大学的《机器学习》英文教材，针对大学新生，有 PDF 全书下载。&lt;/p&gt;
&lt;h3 id=&#34;技术面试手册httpstechinterviewhandbookorg&#34;&gt;&lt;a href=&#34;https://techinterviewhandbook.org/&#34;&gt;技术面试手册&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;工程师如何准备技术面试的英文免费电子书，全书分成两部分：面试本身的准备和技术知识的准备。GitHub 有5万多颗星。&lt;/p&gt;
&lt;h3 id=&#34;中银胶囊塔大厦httpsfailedarchitecturecom201406a-year-in-the-metabolist-future-of-1972&#34;&gt;&lt;a href=&#34;https://failedarchitecture.com/2014/06/a-year-in-the-metabolist-future-of-1972/&#34;&gt;中银胶囊塔大厦&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;1972年，日本东京建造了一个胶囊大厦，使用140个预置的公寓单元，堆叠成一幢楼，称为中银胶囊塔。&lt;/p&gt;
&lt;p&gt;建筑师的设想是，以后可以随意更换某个单元，使用新的胶囊替换旧的，不影响其他单元。但是建造完成后，开发公司就破产了，所有单元后来都没有更换过。&lt;/p&gt;
&lt;p&gt;更糟糕的是，由于组合结构本身的缺陷，以及建造质量不过关，建成后一直有漏水问题，导致内部结构生锈，破损不堪。前几年，政府决定拆除这栋楼，但是一直没有动工。&lt;/p&gt;
&lt;p&gt;目前，楼里只有少部分的房间，还有人居住。前几年，有一位摄影师拍摄了一些胶囊大楼居民的生活状态。&lt;/p&gt;
&lt;h3 id=&#34;古斯塔夫哈肯松httpsenwikipediaorgwikigustaf_håkansson&#34;&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Gustaf_H%C3%A5kansson&#34;&gt;古斯塔夫·哈肯松&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;1951年，66岁的瑞典人古斯塔夫·哈肯松（Gustaf Håkansson），报名参加一个超长距离1764公里的自行车比赛。主办方拒绝了，理由是他的年纪太大了，比赛只允许40岁以下的人参加。&lt;/p&gt;
&lt;p&gt;但是，他还是跟选手一起出发了，但不是正式参赛者，而是在最后一名参赛者出发后一分钟出发，并穿着一件写着零的号码牌衬衫。&lt;/p&gt;
&lt;p&gt;比赛分成好几天，其它参赛者睡觉时，古斯塔夫·哈肯松依然在骑车。他留着很长的白胡子，显得更加苍老。许多报纸都报道了他的故事，引起了全国的关注，他变成了知名人物。经过6 天 14 小时 20 分钟，他率先到达终点，比其它参赛者早了 24 小时。人们在终点迎接他。&lt;/p&gt;
&lt;p&gt;他一直活到了1987年，102岁逝世。&lt;/p&gt;
&lt;h3 id=&#34;空中看极光httpstwistedsiftercom202109southern-lights-under-full-moon-from-space-iss&#34;&gt;&lt;a href=&#34;https://twistedsifter.com/2021/09/southern-lights-under-full-moon-from-space-iss/&#34;&gt;空中看极光&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一位欧洲宇航员在国际空间站，拍到了地球南极的极光照片。&lt;/p&gt;
&lt;p&gt;最难得的是，那天是满月，所以光照非常好，可以清晰地看到云层和地面，非常壮观。&lt;/p&gt;
&lt;h3 id=&#34;搞笑诺贝尔奖httpsmpweixinqqcoms9mtihbjox5jmkrbl9njcqa&#34;&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/9mTIHBJox5JMkrbl9nJcqA&#34;&gt;搞笑诺贝尔奖&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;哈佛大学每年评选（似乎）无意义的研究，颁给搞笑诺贝尔奖。今年，日本学者（上图）获得了其中的动力学奖，他通过马路实验（下图）得到结论：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“如果两波人相向而行，其中有人边走边看手机，将引发人群的冲撞。”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这已经是日本学者连续15年获得搞笑诺贝尔奖了。日本网民也在议论，日本的学者是不是太多了，找不到有意义的研究题目了？&lt;/p&gt;
&lt;h3 id=&#34;游戏厅的衰落httpswwwjapantimescojplife20210606digitaljapanese-gaming-arcades-pandemic&#34;&gt;&lt;a href=&#34;https://www.japantimes.co.jp/life/2021/06/06/digital/japanese-gaming-arcades-pandemic/&#34;&gt;游戏厅的衰落&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;日本的电子游戏厅曾经盛极一时，各种街机玲琅满目，但是，现在已经盛况不再。根据警方的统计，1986年日本全国曾经有 26,573 家游戏厅，到了2019年只剩下 4,022 家，疫情爆发以后，数目更是继续锐减，可能不到最高峰时的十分之一。&lt;/p&gt;
&lt;p&gt;互联网和手机游戏的兴起，是游戏厅衰落的主要原因。目前，游戏厅的最大顾客来源是传统游戏爱好者，以及老年人。一位65岁的老人说，他把游乐厅当作社交场所，可以结交很多朋友。&lt;/p&gt;
&lt;p&gt;一些人认为，游戏厅最终会消失。另一些人则认为，游戏厅值得保留下来，街机有其独特的乐趣。南梦宫、Square Enix、世嘉等街机公司，呼吁日本政府采取措施，促进街机行业的发展。&lt;/p&gt;
&lt;h3 id=&#34;漂浮式光伏电站httpmcnhubeicomcontent2021-0515content_13795434html&#34;&gt;&lt;a href=&#34;http://m.cnhubei.com/content/2021-05/15/content_13795434.html&#34;&gt;漂浮式光伏电站&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;山东德州最近建成了，世界最大的单体水上漂浮式光伏电站。在水库的水面上，漂浮着面积2200亩的太阳能光伏板，设计总容量为320兆瓦，第一期建成了200兆瓦。&lt;/p&gt;
&lt;p&gt;漂浮式光伏电站的好处是，对水体没有破坏性，比较环保，节省地基成本，施工周期短，还可以减少水库的水量蒸发、遮挡阳光抑制藻类生长。另一方面，光伏板放在水里，可以有效降温，显著提高发电效率。&lt;/p&gt;
&lt;h3 id=&#34;如何免费搭建一个-vs-code-网页版httpsjustyycomarchives45744&#34;&gt;&lt;a href=&#34;https://justyy.com/archives/45744&#34;&gt;如何免费搭建一个 VS Code 网页版&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;VS Code 编辑器有网页版，本文教你怎么把它部署在免费服务器上，可以用来写笔记，或者偶尔远程编辑代码。&lt;/p&gt;
&lt;h3 id=&#34;你所不知道的-asmlhttpsthreadreaderappcomthread1429464932446183431html&#34;&gt;&lt;a href=&#34;https://threadreaderapp.com/thread/1429464932446183431.html&#34;&gt;你所不知道的 ASML&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;全世界最先进的芯片工厂，都依赖一家公司生产的 EUV（极紫外光刻）芯片制造机，这家公司就是荷兰的 ASML（阿斯麦）公司。它一年生产50台 EUV，每台售价1.5亿美元起。&lt;/p&gt;
&lt;h3 id=&#34;12-张视觉错觉图片httpsnautilusblog12-mind_bending-perceptual-illusions&#34;&gt;&lt;a href=&#34;https://nautil.us/blog/12-mind_bending-perceptual-illusions&#34;&gt;12 张视觉错觉图片&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文收集了 12 张著名的视觉错误图片。比如，上面这两张图片，看上去是不同角度拍摄的同一条街道，但是实际上，它们是同一张图片并排放在一起。&lt;/p&gt;
&lt;h3 id=&#34;绝对值的计算并不简单httpshabrcomenpost574082&#34;&gt;&lt;a href=&#34;https://habr.com/en/post/574082/&#34;&gt;绝对值的计算并不简单&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;绝对值的算法似乎是一个微不足道的问题：判断一个数是否为负数，如果是的，就去掉它的负号。如果你采用这样的算法，那你就错了。&lt;/p&gt;
&lt;h3 id=&#34;ventoyhttpsgithubcomventoyventoy&#34;&gt;&lt;a href=&#34;https://github.com/ventoy/Ventoy&#34;&gt;Ventoy&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个 U 盘的启动盘制作工具，直接把系统镜像文件复制到 U 盘即可。它支持电脑启动时，从多个系统镜像文件里面选择一个启动。&lt;/p&gt;
&lt;h3 id=&#34;webdenhttpswebdendevlanding&#34;&gt;&lt;a href=&#34;https://webden.dev/landing/&#34;&gt;WebDen&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;专供手机浏览器使用的网页代码编辑环境，提供 HTML、CSS、JS 的开发和调试。&lt;/p&gt;
&lt;h3 id=&#34;view-sourcehttpsneatniknetview-source&#34;&gt;&lt;a href=&#34;https://neatnik.net/view-source/&#34;&gt;View Source&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个 Web 小工具，输入网址，就可以高亮显示该网址的源码，非常好用。&lt;/p&gt;
&lt;h3 id=&#34;fishdrawhttpsgithubcomlingdong-fishdraw&#34;&gt;&lt;a href=&#34;https://github.com/LingDong-/fishdraw&#34;&gt;fishdraw&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/764492faba2ed12173ed4d08c5e98c6da61e38d90913943baa4d32037f9ba9e5/68747470733a2f2f63646e2e6265656b6b612e636f6d2f626c6f67696d672f61737365742f3230323130382f6267323032313038313331312e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/764492faba2ed12173ed4d08c5e98c6da61e38d90913943baa4d32037f9ba9e5/68747470733a2f2f63646e2e6265656b6b612e636f6d2f626c6f67696d672f61737365742f3230323130382f6267323032313038313331312e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;一个 JS 脚本，可以自动生成鱼的图形。这里还有一个可以&lt;a href=&#34;https://github.com/zv/tree&#34;&gt;自动画树&lt;/a&gt;的库。&lt;/p&gt;
&lt;h3 id=&#34;mini-storeshttpsgithubcomlinjcmini-stores&#34;&gt;&lt;a href=&#34;https://github.com/linjc/mini-stores&#34;&gt;mini-stores&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;小程序状态管理库，方便管理页面状态，支持各公司的小程序。&lt;/p&gt;
&lt;h3 id=&#34;neumorphismhttpsneumorphismcoldstonefun&#34;&gt;&lt;a href=&#34;https://neumorphism.coldstone.fun/&#34;&gt;Neumorphism&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个网页工具，用来生成照明阴影效果的 Flutter 代码。这里还有 &lt;a href=&#34;https://neumorphism.io/&#34;&gt;CSS 版&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&#34;samantha-ming-个人网站httpswwwsamanthamingcom&#34;&gt;&lt;a href=&#34;https://www.samanthaming.com/&#34;&gt;Samantha Ming 个人网站&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Samantha Ming 是一名加拿大前端工程师，她在个人网站上分享了很多前端代码的技巧，内容质量很高，制作精美。&lt;/p&gt;
&lt;h3 id=&#34;糖尿病教育网站httpsdtcucsfeduzh-hans&#34;&gt;&lt;a href=&#34;https://dtc.ucsf.edu/zh-hans/&#34;&gt;糖尿病教育网站&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;加州大学旧金山分校主办的网站，全部使用中文，提供糖尿病、健康、运动、饮食知识，内容很不错。&lt;/p&gt;
&lt;h3 id=&#34;程序员的数学导论httpspimbookorg&#34;&gt;&lt;a href=&#34;https://pimbook.org/&#34;&gt;程序员的数学导论&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一本英文的数学教材，专门写给没有数学基础的程序员，主要介绍微积分和线性代数，并且结合编程实例（比如加密和神经网络）进行讲解。全书可以0元购买。&lt;/p&gt;
&lt;h3 id=&#34;国际数据管理手册httpwwwgrcdinlgsbglobal-sourcebookhtml&#34;&gt;[国际数据管理手册](&lt;a href=&#34;http://www.grcdi.nl/gsb/global&#34;&gt;http://www.grcdi.nl/gsb/global&lt;/a&gt; sourcebook.html)&lt;/h3&gt;
&lt;p&gt;该网站提供全世界各国的各种数据格式，比如地址、电话、邮政编码、货币、车牌等的格式。&lt;/p&gt;
&lt;h3 id=&#34;世界上最长的钢琴httpswwwalexanderpianonzpagethe-alexander-piano&#34;&gt;&lt;a href=&#34;https://www.alexanderpiano.nz/page/the-alexander-piano&#34;&gt;世界上最长的钢琴&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;钢琴的音质与琴弦的长度有关。琴弦越长，振动越慢，就能发出越低频的声音，所以高级的三角钢琴，体积都很大，长度都不短于2.3米。&lt;/p&gt;
&lt;p&gt;一个新西兰青年阿德里安不禁突发奇想，如果制造一个特别长的钢琴，不就可以发出非常低的音频吗？&lt;/p&gt;
&lt;p&gt;他决定自己来造一个，从图书馆找到资料，在钢琴师傅的指导下，开始动手建造。&lt;/p&gt;
&lt;p&gt;最后，他造出了世界上最长的钢琴，长度接近10米。&lt;/p&gt;
&lt;p&gt;他说，本想造得更长，但是他家的车库放不下了。果然，这架钢琴的音质相当好，吸引了很多专业音乐家专程来演奏，还灌制了唱片。&lt;/p&gt;
&lt;h3 id=&#34;看书缩短刑期httpsprison-offcombrazil-prisoners-reading-books-to-shorten-their-sentenceslangen&#34;&gt;&lt;a href=&#34;https://prison-off.com/brazil-prisoners-reading-books-to-shorten-their-sentences/?lang=en&#34;&gt;看书缩短刑期&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;巴西政府宣布，该国监狱里面的囚犯，每读一本书可以缩短刑期四天。书籍必须是文学、哲学、科学或经典著作，每年最多可减少48天的刑期，即读12本书。&lt;/p&gt;
&lt;p&gt;每读完一本书，犯人必须撰写一篇读后感，该文章必须“正确使用语法，没有更正，保持页边距和清晰的笔迹”。监狱委员会根据读后感，来判断是否可以减刑。&lt;/p&gt;
&lt;p&gt;巴西的监狱人满为患，相当一部分犯人是文盲。这个计划应该有助于推动犯人的学习和改造。&lt;/p&gt;
&lt;h3 id=&#34;巴黎无车日httpswwwbusinessinsidercompedestrians-take-to-streets-of-paris-for-day-without-cars-2021-9&#34;&gt;&lt;a href=&#34;https://www.businessinsider.com/pedestrians-take-to-streets-of-paris-for-day-without-cars-2021-9&#34;&gt;巴黎“无车日”&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;上个星期天（9月19日）是巴黎的“无车日”。自从2015年，该市规定每年这一天从上午11点到下午6点，城区全境禁止机动车，只保留公共汽车和紧急目的用车，违者将罚款135欧元（约1000元人民币）。&lt;/p&gt;
&lt;p&gt;当天，香榭丽舍大街挤满了行人，平时那里都是挤满了车。人们发现城市变得安静，交通堵塞消失了，空气也干净了。欧洲城市的中心城区，由于沿袭了历史上的布局，通常都非常狭小，不适合大量汽车通行，一直有禁止机动车的呼声。加上近年来防止气候变暖的考虑，“无车日”在欧洲城市变得越来越流行。&lt;/p&gt;
&lt;h3 id=&#34;前端资源的完整性校验httpsgithubcomdreamapplehappyblogtreemaster20210920&#34;&gt;&lt;a href=&#34;https://github.com/dreamapplehappy/blog/tree/master/2021/09/20&#34;&gt;前端资源的完整性校验&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;网页的&lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt;和&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;标签有一个 integrity 属性，指定所加载内容的哈希值，防止被篡改。本文介绍这个属性的用法。&lt;/p&gt;
&lt;h3 id=&#34;最好的顶级域名httpsslcisthe-best-tld-is-not-com&#34;&gt;[最好的顶级域名](&lt;a href=&#34;https://slc.is/#The&#34;&gt;https://slc.is/#The&lt;/a&gt; Best TLD is Not .com)&lt;/h3&gt;
&lt;p&gt;世界主要的顶级域名都被美国控制（比如 .com 和 .net），国别顶级域名则被各个主权国家控制（比如 .cn）。本文讨论有没有一个相对自由、可靠的顶级域名。&lt;/p&gt;
&lt;h3 id=&#34;使用-c-语言编写-shellhttpsbrennanio20150116write-a-shell-in-c&#34;&gt;&lt;a href=&#34;https://brennan.io/2015/01/16/write-a-shell-in-c/&#34;&gt;使用 C 语言编写 Shell&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这篇教程讲解如何使用 C 语言，自己实现一个简单的 Shell。其实很容易，只要几十行代码就够了。&lt;/p&gt;
&lt;h3 id=&#34;如何使用-github-actions-自动化开发流程httpsposthogcomblogautomating-a-software-company-with-github-actions&#34;&gt;&lt;a href=&#34;https://posthog.com/blog/automating-a-software-company-with-github-actions&#34;&gt;如何使用 GitHub Actions 自动化开发流程&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者介绍他们公司如何使用 GitHub Actions，将各种开发步骤自动化，举了很多例子，演示了测试、代码格式化、构建、部署的配置文件应该怎么写。&lt;/p&gt;
&lt;h3 id=&#34;cloudflare-images-发布httpsblogcloudflarecomannouncing-cloudflare-images&#34;&gt;&lt;a href=&#34;https://blog.cloudflare.com/announcing-cloudflare-images/&#34;&gt;Cloudflare Images 发布&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;CDN 服务商 Cloudflare 发布了 Cloudflare Images 服务，这是官方的介绍文章。该服务可以托管图片的存储，提供优化、剪切和 CDN，价格相当优惠。&lt;/p&gt;
&lt;h3 id=&#34;css-的绝对长度单位都不准确httpswwwsmashingmagazinecom202107css-absolute-units&#34;&gt;&lt;a href=&#34;https://www.smashingmagazine.com/2021/07/css-absolute-units/&#34;&gt;CSS 的绝对长度单位都不准确&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;CSS 有几个长度单位属于绝对长度，比如像素&lt;code&gt;px&lt;/code&gt;、厘米&lt;code&gt;cm&lt;/code&gt;、英寸&lt;code&gt;in&lt;/code&gt;、点&lt;code&gt;pt&lt;/code&gt;。但是，这些单位都不是准确长度，比如&lt;code&gt;1cm&lt;/code&gt;在屏幕上并不等于1厘米（上图）。&lt;/p&gt;
&lt;h3 id=&#34;mdcathttpsgithubcomcalganaygunmdcat&#34;&gt;&lt;a href=&#34;https://github.com/calganaygun/MDcat&#34;&gt;MDcat&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;GitHub 有一个官方接口，将 Markdown 源码转为 HTML 代码。这个项目是一个简单的演示，使用 Python 代码去调用这个接口，完成 Markdown 的代码转换。&lt;/p&gt;
&lt;h3 id=&#34;favicon-panghttpsfavicon-pongglitchme&#34;&gt;&lt;a href=&#34;https://favicon-pong.glitch.me/&#34;&gt;favicon pang&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这个网页的 favicon 图标是一个乒乓球游戏，通过拖动网页滚动条来玩游戏。&lt;/p&gt;
&lt;h3 id=&#34;cyberhttpsoncyberio&#34;&gt;&lt;a href=&#34;https://oncyber.io/&#34;&gt;Cyber&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;该网站允许用户创造虚拟画廊，展示自己创作的或拥有的数字艺术品（需要 NFT）。体验非常出色，值得参观，比如&lt;a href=&#34;https://oncyber.io/twinflames&#34;&gt;这个画廊&lt;/a&gt;和&lt;a href=&#34;https://oncyber.io/thevoid&#34;&gt;这个画廊&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&#34;apps-for-gnomehttpsappsgnomeorgzh-cn&#34;&gt;&lt;a href=&#34;https://apps.gnome.org/zh-CN/&#34;&gt;Apps for GNOME&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Gnome 是 Linux 的桌面系统，这个网站是官方的 App 站，介绍自带的各种 App，制作得非常清新漂亮。&lt;/p&gt;
&lt;h3 id=&#34;数据库连接字符串大全httpswwwconnectionstringscom&#34;&gt;&lt;a href=&#34;https://www.connectionstrings.com/&#34;&gt;数据库连接字符串大全&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;软件连接数据库，必须提供一个数据库连接字符串。这个网站收集各种数据源的连接字符串。&lt;/p&gt;
&lt;h3 id=&#34;风向袋httpsdatageneticscomblogjuly22021indexhtml&#34;&gt;&lt;a href=&#34;https://datagenetics.com/blog/july22021/index.html&#34;&gt;风向袋&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;你可能见过风向袋。它是一种锥形的管状纺织品，一头大，另一头小，用来确定风强和风向。&lt;/p&gt;
&lt;p&gt;由于风向袋的尾部直径比头部小，受风时会自然在风的方向上膨胀起来，因此可以用来了解风从哪里吹来。&lt;/p&gt;
&lt;p&gt;风越大，风向管就会飘扬得越水平。它分成五段，三段红色，两段白色。根据水平方向的段数，可以大概判断风的强度。一段代表三节风。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/eb4bd788da38c638bbbc9029495ac08fa92abb9e4f3d031415374312dc27a894/68747470733a2f2f63646e2e6265656b6b612e636f6d2f626c6f67696d672f61737365742f3230323130372f6267323032313037323730362e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/eb4bd788da38c638bbbc9029495ac08fa92abb9e4f3d031415374312dc27a894/68747470733a2f2f63646e2e6265656b6b612e636f6d2f626c6f67696d672f61737365742f3230323130372f6267323032313037323730362e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;如果风向袋呈现完全的水平状，那么风力至少是15节，用级数表示，就是五级风。&lt;/p&gt;
&lt;h3 id=&#34;浏览器标准被大公司左右httpsthreadreaderappcomthread1421078387376918529html&#34;&gt;&lt;a href=&#34;https://threadreaderapp.com/thread/1421078387376918529.html&#34;&gt;浏览器标准被大公司左右&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;最近这些年，浏览器开发商（比如谷歌和苹果）从 W3C 手中夺取了网络标准的控制权。&lt;/p&gt;
&lt;p&gt;网络标准正越来越多由大公司来决定，而不是由标准化组织 W3C 来决定。&lt;/p&gt;
&lt;p&gt;大公司为了自己的业务，让浏览器的功能不断膨胀，目标是让 Web 网站做到原生应用可以做的一切，这是一个巨大的错误。&lt;/p&gt;
&lt;p&gt;大公司明白，添加到 Web 的功能越多，浏览器之间的竞争就会越少！&lt;/p&gt;
&lt;p&gt;谁能跟上谷歌推出新标准的脚步？Mozilla 不能，苹果不能，甚至微软也认输了，放弃自己开发浏览器引擎，直接采用了 Chromium 作为自家 Edge 浏览器的内核。&lt;/p&gt;
&lt;p&gt;想象一下，现在有一家小公司试图从头开始编写一个 Web 浏览器。简直不可能！网络如此复杂，他别无选择，只能采用少数现有的浏览器引擎之一：Chromium、WebKit、Gecko。&lt;/p&gt;
&lt;p&gt;这就是现在的状况，浏览器市场的竞争正在越来越少。“每个人都必须采用 Chromium”，这正是谷歌的计划。&lt;/p&gt;
&lt;p&gt;谁主导了浏览器引擎，谁就控制了互联网。即使 Web 标准是开放的，理论上允许任何人实现浏览器引擎。但是 Web 标准那么多、那么复杂，实际上没有人可以实现能与 Chromium 抗衡的浏览器引擎，那么这种开放也没有意义了。&lt;/p&gt;
&lt;p&gt;现在的 Web 标准被大公司控制，已经沦为 Chromium、WebKit、Gecko 和它们各自怪癖的集合。以后怎么可能还会有新引擎？&lt;/p&gt;
&lt;p&gt;如果没有新的人可以编写浏览器引擎，网络就不会是开放的。开放只是一种错觉。&lt;/p&gt;
&lt;h3 id=&#34;鸟类撞上玻璃幕墙怎么办httpsmpweixinqqcomsan8yrhuohvqbgnzd3ngvoa&#34;&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/aN8yRHuohvqbgnZd3NGVoA&#34;&gt;鸟类撞上玻璃幕墙怎么办？&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;玻璃幕墙建筑越来越多，撞上玻璃的鸟类也越来越多，导致大量鸟类死亡。本文是这个问题的调查报告。&lt;/p&gt;
&lt;h3 id=&#34;facebook-下线的原因httpsriskledgercomblogfacebook-outage&#34;&gt;&lt;a href=&#34;https://riskledger.com/blog/facebook-outage&#34;&gt;Facebook 下线的原因&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本周，Facebook 下线了七个小时，原因是它的 BGP 路由被撤销了，可能是内部人员更新 BGP 时出错了。本文是一篇简单的解释，什么是 BGP，为什么它会导致 Facebook 下线。&lt;/p&gt;
&lt;h3 id=&#34;service-worker-简介httpsdevelopersgooglecomwebfundamentalsprimersservice-workers&#34;&gt;&lt;a href=&#34;https://developers.google.com/web/fundamentals/primers/service-workers&#34;&gt;Service Worker 简介&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;谷歌官方的 Service Worker 教程，介绍什么是 PWA 应用，以及怎么开发，写得非常好，很容易懂。官方提供中文版翻译。&lt;/p&gt;
&lt;h3 id=&#34;一个人能领导多少人httpswwwpatkuacombloghow-many-people-can-someone-lead&#34;&gt;&lt;a href=&#34;https://www.patkua.com/blog/how-many-people-can-someone-lead/&#34;&gt;一个人能领导多少人？&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;人的精力是有限的，如果想做到有效领导，那么直线下属最好不超过5-7人。&lt;/p&gt;
&lt;h3 id=&#34;异步函数如何使用缓存httpsstackfulldevmemoizing-async-functions-in-javascript&#34;&gt;&lt;a href=&#34;https://stackfull.dev/memoizing-async-functions-in-javascript&#34;&gt;异步函数如何使用缓存？&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;需要密集计算的函数，可以部署缓存（memoizing），用来提高性能。本文介绍了函数缓存的概念和实现。&lt;/p&gt;
&lt;h3 id=&#34;chrome-背景窗口的大小httpsshksprmobiblog202109whats-the-window-size-of-a-background-tab&#34;&gt;&lt;a href=&#34;https://shkspr.mobi/blog/2021/09/whats-the-window-size-of-a-background-tab/&#34;&gt;Chrome 背景窗口的大小&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Chrome 浏览器有一个 Bug，如果一个窗口在后台打开，这个窗口的大小（window.outerHeight）会是 0，但是内部视口（window.innerHeight）的大小却不是 0，这会导致一些奇怪的问题。&lt;/p&gt;
&lt;h3 id=&#34;sourcemappingurl-的恶意使用httpsweizmangithubiojavascript-anti-debugging-some-next-level-shit-part-1&#34;&gt;&lt;a href=&#34;https://weizman.github.io/?javascript-anti-debugging-some-next-level-shit-part-1&#34;&gt;SourceMappingURL 的恶意使用&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;浏览器加载网页时，如果指定了 Sourece Map 文件网址，就会加载这个文件。但是，这个网址居然可以用脚本动态修改，因此恶意脚本可以用它发送用户信息。不过，这个技巧的生效条件，是用户必须打开开发者工具。&lt;/p&gt;
&lt;h3 id=&#34;networkmanagerhttpsgithubcomborntoberootnetworkmanager&#34;&gt;&lt;a href=&#34;https://github.com/BornToBeRoot/NETworkManager&#34;&gt;NETworkManager&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Windows 原生的网络管理器非常难用，这是一个第三方的网络管理器，在图形界面中，提供各种方便的网络管理、调试功能。&lt;/p&gt;
&lt;h3 id=&#34;archttpsarciocdn&#34;&gt;&lt;a href=&#34;https://arc.io/cdn&#34;&gt;Arc&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个众包 CDN，宣称用户使用它们的服务可以赚钱。它跟以前的迅雷 CDN 是一样的，访问者打开安装了它的脚本的网站以后，就会分享一部分带宽，用来给其它用户作为 CDN 加速。&lt;/p&gt;
&lt;p&gt;虽然不确定这样做是否合适，但从技术上看，是很有趣的实践。&lt;/p&gt;
&lt;h3 id=&#34;git-cliffhttpsgithubcomorhungit-cliff&#34;&gt;&lt;a href=&#34;https://github.com/orhun/git-cliff&#34;&gt;git-cliff&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个根据提交信息，生成 Changelog 文件的命令行工具。&lt;/p&gt;
&lt;h3 id=&#34;深入计算机系统httpsdiveintosystemsorgbookindexhtml&#34;&gt;&lt;a href=&#34;https://diveintosystems.org/book/index.html&#34;&gt;深入计算机系统&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;免费阅读的英文教材，介绍计算机系统的底层知识，内容包含 C 语言和汇编语言的教程。&lt;/p&gt;
&lt;h3 id=&#34;js-库的免费公共-cdnhttpswwwwebfxcomblogweb-designfree-public-cdns&#34;&gt;&lt;a href=&#34;https://www.webfx.com/blog/web-design/free-public-cdns/&#34;&gt;JS 库的免费公共 CDN&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;网上有一些 JS 库的公共 CDN，可以从它们加载库脚本。本文列出了主要的名单。&lt;/p&gt;
&lt;h3 id=&#34;programming-idiomshttpsprogramming-idiomsorgaboutabout-block-all-idioms&#34;&gt;&lt;a href=&#34;https://programming-idioms.org/about#about-block-all-idioms&#34;&gt;Programming-Idioms&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;该网站列出主要语言的常用操作（比如创建数组、连接数组等），目前已经有250多种操作。可以指定任意两种语言进行&lt;a href=&#34;https://programming-idioms.org/cheatsheet/JS/Java&#34;&gt;对比&lt;/a&gt;，方便快速入门。&lt;/p&gt;
&lt;h3 id=&#34;openmojihttpsopenmojiorg&#34;&gt;&lt;a href=&#34;https://openmoji.org/&#34;&gt;OpenMoji&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一套开源的 Emoji 图标，目前已经有将近4000个图标，还在持续增加中。&lt;/p&gt;
&lt;h3 id=&#34;mathletshttpsmathletsorgmathlets&#34;&gt;&lt;a href=&#34;https://mathlets.org/mathlets/&#34;&gt;Mathlets&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这个网站提供网页小程序，帮助学习各种数学概念，比如正弦曲线、复数运算、傅里叶变换等等。&lt;/p&gt;
&lt;h3 id=&#34;大公司起家的地方&#34;&gt;大公司起家的地方&lt;/h3&gt;
&lt;p&gt;下图是苹果、谷歌、亚马逊等大公司，各自创业起家的地方。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/236be63439dd8d658dcf09fb21b1949f8d18be29885f0f647c68636244d0ca41/68747470733a2f2f63646e2e6265656b6b612e636f6d2f626c6f67696d672f61737365742f3230323130382f6267323032313038303430372e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/236be63439dd8d658dcf09fb21b1949f8d18be29885f0f647c68636244d0ca41/68747470733a2f2f63646e2e6265656b6b612e636f6d2f626c6f67696d672f61737365742f3230323130382f6267323032313038303430372e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;地铁隧道的建设过程httpsspectrumieeeorglondons-crossrail-is-a-21-billion-test-of-virtual-modeling&#34;&gt;&lt;a href=&#34;https://spectrum.ieee.org/londons-crossrail-is-a-21-billion-test-of-virtual-modeling&#34;&gt;地铁隧道的建设过程&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;下面是一组伦敦地铁隧道的建设照片，展示了隧道是怎么建设的。&lt;/p&gt;
&lt;p&gt;第一步，先用盾构机打洞。盾构机的直径7米，每天可以前进38米。&lt;/p&gt;
&lt;p&gt;第二步，洞壁涂上混凝土。&lt;/p&gt;
&lt;p&gt;第三步，铺设各种线路，同时保证良好的空气流通。&lt;/p&gt;
&lt;p&gt;第四步，铺设路面和墙面，具备开通条件。&lt;/p&gt;
&lt;h3 id=&#34;乔布斯逝世十周年httpswwwwiredcomstoryremembering-steve-jobs-10-years-after-his-death&#34;&gt;&lt;a href=&#34;https://www.wired.com/story/remembering-steve-jobs-10-years-after-his-death/&#34;&gt;乔布斯逝世十周年&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;乔布斯去世于2011年10月5日，今年是十周年。&lt;/p&gt;
&lt;p&gt;著名 IT 作家史蒂文·利维发表了一篇回忆短文。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;2011年时，作为一家科技媒体，妥善的做法是提前准备好史蒂夫·乔布斯的讣告，我们都知道他没有多少时间了。&lt;/p&gt;
&lt;p&gt;将近有一年，苹果公司坚持说，它的创始人兼首席执行官能够成功康复，但是乔布斯本人的状况却是每况愈下。他的身体坚持不了多久了，他也认识到这一点。&lt;/p&gt;
&lt;p&gt;那一年的早些时候，我和另一名记者要求对他专访。地点就在无限环路1号（One Infinite Loop）的苹果公司总部大楼四楼的一间办公室。专访没有指定议题，但是我们三人都知道这是为了告别。&lt;/p&gt;
&lt;p&gt;那一天是工作日中午，整个苹果总部有数千人在上班，但是我们90分钟的谈话过程中，没有被一个电话或访客打断。就好像对于苹果公司来说，他已经是一个鬼魂了。&lt;/p&gt;
&lt;p&gt;专访结束后，我还是没办法提前准备他的讣告。内心里，我不想承认他会很快逝世。&lt;/p&gt;
&lt;p&gt;所以，2011年10月5日的下午，快要天黑的时候，接到乔布斯逝世的电话，我惊呆了。&lt;/p&gt;
&lt;p&gt;那时，我手里什么文章也没有。于是，接下来的四个小时里，我开始写文章回顾乔布斯的一生，我使用的就是他创造的 Mac 电脑。我尽自己所能，讲述他的生平和遗产。&lt;/p&gt;
&lt;p&gt;在讣告的最后一段，我写道：“乔布斯的全部遗产，在很长一段时间内都不会消失。”直到今天，我想我们还在整理他留下的遗产。不会再有像他这样特质的领导者和创新者，我们仍然生活在他的世界里。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;木制大钟httpswwwablogtowatchcomsuzuki-kango-plock-wooden-automaton-time-writing-clock&#34;&gt;&lt;a href=&#34;https://www.ablogtowatch.com/suzuki-kango-plock-wooden-automaton-time-writing-clock/&#34;&gt;木制大钟&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个日本大学生，为了自己的毕业设计，制作了一个木制大钟，一共有400个零件，全部手工制作，令人叹为观止，简直是一件艺术品。&lt;/p&gt;
&lt;p&gt;它的最神奇之处，莫过于显示时间的表盘是一块白板，每当时间发生变化，机器会自动抹去原来的时间，用笔写上新的时间。&lt;/p&gt;
&lt;h3 id=&#34;我在通用电气工作的一件往事httpsjustyycomarchives45872&#34;&gt;&lt;a href=&#34;https://justyy.com/archives/45872&#34;&gt;我在通用电气工作的一件往事&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者2018年底加入了美国通用电气在英国剑桥的软件部门，发现公司内部使用的是一种自己发明的语言，但是这种语言没有 while 语句。&lt;/p&gt;
&lt;h3 id=&#34;中位数为什么比平均值有用httpsblogtimescalecombloghow-percentile-approximation-works-and-why-its-more-useful-than-averages&#34;&gt;&lt;a href=&#34;https://blog.timescale.com/blog/how-percentile-approximation-works-and-why-its-more-useful-than-averages/&#34;&gt;中位数为什么比平均值有用&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/24b93f3f10fa862e02101716bf7b25f16d46172614adb093fd38f08eacce51ce/68747470733a2f2f63646e2e6265656b6b612e636f6d2f626c6f67696d672f61737365742f3230323130392f6267323032313039313530312e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/24b93f3f10fa862e02101716bf7b25f16d46172614adb093fd38f08eacce51ce/68747470733a2f2f63646e2e6265656b6b612e636f6d2f626c6f67696d672f61737365742f3230323130392f6267323032313039313530312e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这篇文章的前半部分使用图形，通俗地解释了为什么中位数（medium）比平均值（average）更好地反映了总体状况。&lt;/p&gt;
&lt;h3 id=&#34;envoy-开源五年的回顾httpsmattklein123dev202109145-years-envoy-oss&#34;&gt;&lt;a href=&#34;https://mattklein123.dev/2021/09/14/5-years-envoy-oss/&#34;&gt;Envoy 开源五年的回顾&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这是一篇长文，作者是开源项目 Envoy 的创始人，讲述了这个项目是如何诞生和发展的，抒发了很多个人感想，值得一读。网上有&lt;a href=&#34;https://cloudnative.to/blog/envoy-oss-5-year/&#34;&gt;中文翻译&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&#34;javascript-如何遍历树结构httpsstackfulldevtree-data-structure-in-javascript&#34;&gt;&lt;a href=&#34;https://stackfull.dev/tree-data-structure-in-javascript&#34;&gt;JavaScript 如何遍历树结构&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文介绍了树结构在 JavaScript 语言里面如何遍历，写得浅显易懂，解释了广度优先、深度优先等多种方法的实现。&lt;/p&gt;
&lt;h3 id=&#34;windows-11-in-reacthttpsgithubcomblueedgetechnowindows11&#34;&gt;&lt;a href=&#34;https://github.com/blueedgetechno/windows11&#34;&gt;Windows 11 in React&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;该项目将 Windows 11 的桌面移植到网页上，使用 React 开发。&lt;/p&gt;
&lt;h3 id=&#34;youtube-dl-guihttpsgithubcomjely2002youtube-dl-gui&#34;&gt;&lt;a href=&#34;https://github.com/jely2002/youtube-dl-gui&#34;&gt;youtube-dl-gui&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;youtube-dl 的图形界面封装，支持多个视频网站的视频下载。&lt;/p&gt;
&lt;h3 id=&#34;ozzillatehttpswwwozzillatecom&#34;&gt;&lt;a href=&#34;https://www.ozzillate.com/&#34;&gt;Ozzillate&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个很有意思的声波传送工具，将上传的文件转成声波，其它电脑从麦克风“听到”以后，再将声波转回文件。&lt;/p&gt;
&lt;h3 id=&#34;message-boxhttpsgithubcomkingccmessage-box&#34;&gt;&lt;a href=&#34;https://github.com/kingcc/message-box&#34;&gt;message-box&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个 Web Component 的消息框组件。&lt;/p&gt;
&lt;h3 id=&#34;云媒体速览httpslaoshengtopfly&#34;&gt;&lt;a href=&#34;https://laosheng.top/fly/&#34;&gt;云媒体速览&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;该网站收集了中国333个地级市的报纸电子版和电视直播网址。&lt;/p&gt;
&lt;h3 id=&#34;中等代数httpssaylordotorggithubiotext_intermediate-algebraindexhtml&#34;&gt;&lt;a href=&#34;https://saylordotorg.github.io/text_intermediate-algebra/index.html&#34;&gt;中等代数&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一本英文的数学教材，讲解中学代数，包括线性方程、指数函数、二项式定理等等，免费阅读。&lt;/p&gt;
&lt;h3 id=&#34;教娃编程视频300天httpszhihua-laicomteachingch&#34;&gt;&lt;a href=&#34;https://zhihua-lai.com/teaching/ch/&#34;&gt;教娃编程视频300天&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个工程师给娃讲了很多数学和计算机知识的短视频，详见&lt;a href=&#34;https://justyy.com/archives/45834&#34;&gt;说明文章&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&#34;路径算法的动图演示httpsgithubcomzhm-realpathplanning&#34;&gt;&lt;a href=&#34;https://github.com/zhm-real/PathPlanning&#34;&gt;路径算法的动图演示&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这个仓库提供常见路径算法的动画演示，一共有20多个算法演示。&lt;/p&gt;
&lt;h3 id=&#34;高濑川httpswrathofgnonsubstackcompsustainable-infrastructure&#34;&gt;&lt;a href=&#34;https://wrathofgnon.substack.com/p/sustainable-infrastructure&#34;&gt;高濑川&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;1608 年，一个名叫角仓了以（Suminokura Ryōi）的日本商人，得到了一份合同，为京都的一座寺庙提供建筑材料。&lt;/p&gt;
&lt;p&gt;这件事的最大困难，就是无法把巨大数量的建材运到市中心。于是，他出钱请人挖了一条运河，从港口通到市中心。他用当地采石场的石头铺设岸堤和河底，由于他的船吃水大约15厘米，河的深度就翻一倍，定为30厘米。&lt;/p&gt;
&lt;p&gt;1614年，这条长9.7公里、宽7米的运河挖好了，称为“高濑川”。&lt;/p&gt;
&lt;p&gt;这条运河一直沿用到1920年，基本上不需要维护，可靠地发挥着航运功能。1920年以后，停止了航运，变成了纯粹的观光河流，直到今天还保留着400年前建造时的样貌。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://twitter.com/susam/status/1423959528081530881&#34;&gt;《解析数论导论》的封面&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;1976年出版的美国高等数学教材《解析数论导论》，封面是一张很奇怪的图片。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/65905033cf52d0284d9fbfb0fbdff96a4a2a22d966e6a51738752ef00c717aab/68747470733a2f2f63646e2e6265656b6b612e636f6d2f626c6f67696d672f61737365742f3230323130382f6267323032313038303730372e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/65905033cf52d0284d9fbfb0fbdff96a4a2a22d966e6a51738752ef00c717aab/68747470733a2f2f63646e2e6265656b6b612e636f6d2f626c6f67696d672f61737365742f3230323130382f6267323032313038303730372e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;很多人以为，这张图片只是一张普通的对称图片，但其实是有含义的。&lt;/p&gt;
&lt;p&gt;它画了一个坐标轴，x 轴和 y 轴都是0到17，每个点的坐标&lt;code&gt;(x, y)&lt;/code&gt;就是一个数值对。只要数值对的最大公约数不等于1 (&lt;code&gt;gcd(x, y) ≠ 1&lt;/code&gt;)，该点就会画上一个方块，否则为空。&lt;/p&gt;
&lt;p&gt;举例来说，原点&lt;code&gt;(0, 0)&lt;/code&gt;的最大公约数为&lt;code&gt;0&lt;/code&gt;，所以有一个方块；而它旁边的两个点&lt;code&gt;(0, 1)&lt;/code&gt;和&lt;code&gt;(1, 0)&lt;/code&gt;，可以认为最大公约数为&lt;code&gt;1&lt;/code&gt;，所以为空。&lt;/p&gt;
&lt;p&gt;对角线上除了&lt;code&gt;(1, 1)&lt;/code&gt;，其它点的最大公约数都不等于1，所以这些点都有一个方块。&lt;/p&gt;
&lt;h3 id=&#34;谷歌如何收购-androidhttpsarstechnicacominformation-technology202108excerpt-the-history-of-android-as-written-by-a-longtime-android-developer&#34;&gt;&lt;a href=&#34;https://arstechnica.com/information-technology/2021/08/excerpt-the-history-of-android-as-written-by-a-longtime-android-developer/&#34;&gt;谷歌如何收购 Android&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://book.douban.com/subject/35564446/&#34;&gt;Android&lt;/a&gt; 是谷歌公司的操作系统，但并不是谷歌从头开发的，而是从一家小公司收购而来的。&lt;/p&gt;
&lt;p&gt;最近，美国出版了一本新书，作者采访了几十位当事人，介绍 Android 的诞生内幕。&lt;/p&gt;
&lt;p&gt;Android 团队最早的创业想法，是为照相机开发一个操作系统。但是，后来意识到手机会取代相机，成为主流的拍摄设备，就转而为手机开发操作系统。&lt;/p&gt;
&lt;p&gt;2005年初，Android 团队陷入困境，急需现金，开始寻找外部投资。&lt;/p&gt;
&lt;p&gt;工程师就为当时的按键手机写了一个演示程序，包括一个主屏幕和几个应用程序，不过大部分都不能运行。毫不奇怪，这个演示程序与今天的 Android 相去甚远。&lt;/p&gt;
&lt;p&gt;有了演示程序，他们又准备了一个 PPT，解释他们的愿景，然后就开始向潜在投资者推销自己，试图获得投资。&lt;/p&gt;
&lt;p&gt;这个 PPT 保存到了今天，一共15页。&lt;/p&gt;
&lt;p&gt;他们首先解释了为什么手机市场即将发生巨变。&lt;/p&gt;
&lt;p&gt;2004年，全球个人电脑出货量为1.78亿台，手机出货量为6.75亿部，几乎是 PC 数量的四倍。这意味着，手机市场已经远远超过 PC 市场，并且还在高速发展。&lt;/p&gt;
&lt;p&gt;但是，2004年手机的处理器和内存只相当于 1998 年 PC 的性能（200MHz 的 CPU 和 32MB 的内存），因此手机需要一个真正的、功能强大的操作系统。&lt;/p&gt;
&lt;p&gt;而且，手机的硬件成本正在下降，但是软件成本没有下降，手机制造商迫切需要一个廉价的操作系统，从而降低软件成本。&lt;/p&gt;
&lt;p&gt;手机制造商并不是软件开发专家，没有能力也没有兴趣，持续改进软件，因此需要外部的软件公司为他们提供操作系统。&lt;/p&gt;
&lt;p&gt;Android 将是一个免费的手机操作系统，以开源的形式提供给手机制造商。手机公司能够自由使用这个操作系统，不必依赖软件公司，也无需自己来开发。&lt;/p&gt;
&lt;p&gt;2005年的市场上，手机操作系统寥寥无几。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;微软的系统要得到许可后，才能移植。&lt;/li&gt;
&lt;li&gt;塞班（Symbian）系统主要由诺基亚使用，其它手机公司虽然可以用，但是无法与诺基亚竞争。&lt;/li&gt;
&lt;li&gt;黑莓的系统不能用于其他手机。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对于那些想要制造一款功能强大的智能手机的制造商来说，根本没有操作系统可用，要么自己从头开发，要么支付高额许可费，使用那些专有的操作系统。然后，就会面对一个更大的问题：根本没有应用程序生态，谁来为这些操作系统开发应用程序呢？&lt;/p&gt;
&lt;p&gt;塞班系统允许外部应用程序，但是通用性很差，为一种型号手机写的程序，无法运行在另一个型号上，即使两部手机出自同一个制造商，它们的应用程序也不是通用的。&lt;/p&gt;
&lt;p&gt;Android 希望提供世界第一个完整的开源的手机操作系统。它建立在 Linux 之上，为应用程序开发者提供单一的编程模型，同一个应用程序可以运行在使用该系统的所有设备上，从而简化开发。&lt;/p&gt;
&lt;p&gt;接着就是最困难、也是最重要的问题，Android 如何赚钱呢。如果这个开源手机操作系统，不能让发明者赚到钱，怎么吸引外部投资呢，又如何保证能够持续开发呢？&lt;/p&gt;
&lt;p&gt;Android 团队设想，通过为手机制造商提供云服务、以及应用程序的基础设施（比如认证和加密）来盈利。后来的事实证明，谷歌果然是通过谷歌服务框架和 Play 应用商店来盈利。&lt;/p&gt;
&lt;p&gt;创始团队与很多风投进行了接触，其中就包括了谷歌。谷歌邀请他们到总部来会谈，两位谷歌创始人拉里和佩奇都参加了。那次会议非常随意，但是谷歌显然对 Android 很感兴趣。会议结束时，谷歌说：“我们想帮助你们。”&lt;/p&gt;
&lt;p&gt;接着，Android 团队去了亚洲，访问了三星和 HTC，了解手机制造商的态度。三星说，如果美国的无线运营商能够接受 Android，他们就愿意推出基于 Android 的手机。HTC 则说，希望独家合作，这个系统只授权给他们使用。团队不愿答应这个要求，但是后来推出的世界第一部 Android 手机，就是 HTC G1。&lt;/p&gt;
&lt;p&gt;从亚洲回来以后，谷歌又找 Android 团队开会。这次会议来了更多的人。团队原以为，谷歌想了解项目开发进展，但是演讲进行到一半，谷歌打断了他们，直接说：“我们想收购你们。”&lt;/p&gt;
&lt;p&gt;谷歌表示，如果 Android 愿意被收购，而不是接受风险投资，情况会好得多。这样可以不必理会风险投资家的要求，也不必向客户和运营商收取专门服务的费用，一心一意将操作系统免费提供给手机制造商即可。而且，手机内部还可以绑定谷歌的搜索服务，谷歌会从搜索获得收入，这些收入可以与手机制造商分享，从而手机制造商会从 Android 获利，因而有动力使用这个系统。&lt;/p&gt;
&lt;p&gt;2005年7月，Android 正式加入谷歌。&lt;/p&gt;
&lt;p&gt;几周后，团队再次在谷歌内部，向高管进行了宣讲。当讲到如何将 Android 货币化时，拉里打断了演讲者：“&lt;strong&gt;不用考虑这个，我只希望你们造出最好的手机，其余的事情以后再说。&lt;/strong&gt;”谷歌收购这个团队的原因很简单，就是希望通过它可以让谷歌进入移动设备市场。&lt;/p&gt;
&lt;h3 id=&#34;多少美国人相信进化论httpsnewsumichedustudy-evolution-now-accepted-by-majority-of-americans&#34;&gt;&lt;a href=&#34;https://news.umich.edu/study-evolution-now-accepted-by-majority-of-americans/&#34;&gt;多少美国人相信进化论&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;密歇根大学的一项调查显示，目前相信进化论的美国人终于超过了一半。2019年，54%的美国成年人相信，人类是从动物进化而来的，比1985年的40%有大幅成长。这个比例在34个西方国家里面，几乎是最低的，只高于土耳其的27%。&lt;/p&gt;
&lt;p&gt;大家都说美国是一个自由派的国家，但美国也是一个非常保守的国家，宗教观念有很大的市场。&lt;/p&gt;
&lt;h3 id=&#34;地铁地图电路板httpschaijiaxuncompcb-metro-map-build-log&#34;&gt;&lt;a href=&#34;https://chaijiaxun.com/pcb-metro-map-build-log/&#34;&gt;地铁地图电路板&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个新加坡网友讲述，自己怎么把新加坡地铁线路图做成一块电路板，还设法让每个节点发光亮起来。&lt;/p&gt;
&lt;h3 id=&#34;勒索软件是什么样子httpswwwbleepingcomputercomnewssecurityfree-revil-ransomware-master-decrypter-released-for-past-victims&#34;&gt;&lt;a href=&#34;https://www.bleepingcomputer.com/news/security/free-revil-ransomware-master-decrypter-released-for-past-victims/&#34;&gt;勒索软件是什么样子&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这篇文章提供了勒索软件 REvil 中毒的样子，以及拿到解密器以后，解开中毒文件的演示，可以用来了解这种软件如何勒索钱财。&lt;/p&gt;
&lt;h3 id=&#34;通过水流理解电的基本知识httpswwwfreeingenergycomunderstanding-the-basics-of-electricity-by-thinking-of-it-as-water&#34;&gt;&lt;a href=&#34;https://www.freeingenergy.com/understanding-the-basics-of-electricity-by-thinking-of-it-as-water/&#34;&gt;通过水流理解电的基本知识&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;课本经常把电流比喻成水流，来讲解电的基本知识。这篇文章也是采用这种方法解释电，写得很有新意。&lt;/p&gt;
&lt;h3 id=&#34;如何压缩设计素材httpswwwzachleatcomwebvector-raster-split&#34;&gt;&lt;a href=&#34;https://www.zachleat.com/web/vector-raster-split/&#34;&gt;如何压缩设计素材&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者从 Figma 导出设计素材，试了不同的格式，从最初的 10MB 变成了最后的 78KB。&lt;/p&gt;
&lt;h3 id=&#34;objective-c-简史httpsmediumcomchmcorea-short-history-of-objective-c-aff9d2bde8dd&#34;&gt;&lt;a href=&#34;https://medium.com/chmcore/a-short-history-of-objective-c-aff9d2bde8dd&#34;&gt;Objective-C 简史&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文介绍 Objective-C 怎么从一种科学家的语言，变成了苹果公司的官方开发语言。&lt;/p&gt;
&lt;h3 id=&#34;html2jsonhttpsgithubcomjxckhtml2json&#34;&gt;&lt;a href=&#34;https://github.com/Jxck/html2json&#34;&gt;html2json&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个 JS 库，可以将 HTML 代码与 JSON 代码互相转换。&lt;/p&gt;
&lt;h3 id=&#34;video2webphttpsvideo2webpmattjio&#34;&gt;&lt;a href=&#34;https://video2webp.mattj.io/&#34;&gt;Video2WebP&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个网页服务，可以将短视频转成 WebP 动画图片，用来替代 GIF 动画。&lt;/p&gt;
&lt;h3 id=&#34;jsvuhttpsgithubcomgooglechromelabsjsvu&#34;&gt;&lt;a href=&#34;https://github.com/GoogleChromeLabs/jsvu&#34;&gt;jsvu&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;jsvu 是一个 JS 引擎的调用器，用来调用各种 JS 引擎（比如 V8、QuickJS、Chakra 等等），或者同一个引擎的各种版本。它的主要用途是测试代码在不同引擎下的表现。&lt;/p&gt;
&lt;h3 id=&#34;7csshttpsgithubcomkhang-nd7css&#34;&gt;&lt;a href=&#34;https://github.com/khang-nd/7.css&#34;&gt;7.css&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个 CSS 框架，用来复现 Windows 7 的 UI。&lt;/p&gt;
&lt;h3 id=&#34;javascript-游戏基础教程httpscodeincompletecomarticlesjavascript-game-foundations&#34;&gt;&lt;a href=&#34;https://codeincomplete.com/articles/javascript-game-foundations/&#34;&gt;Javascript 游戏基础教程&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这个英文教程一共10节课，教你使用 JavaScript 开发一个网页游戏。&lt;/p&gt;
&lt;h3 id=&#34;java-周刊httpswwwbaeldungcomcategoryweekly-review&#34;&gt;&lt;a href=&#34;https://www.baeldung.com/category/weekly-review/&#34;&gt;Java 周刊&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;国外开发者编写的 Java 周刊，提供各种关于 Java 技术进展的链接。&lt;/p&gt;
&lt;h3 id=&#34;open-meteohttpsopen-meteocomendocs&#34;&gt;&lt;a href=&#34;https://open-meteo.com/en/docs&#34;&gt;Open Meteo&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;免费的天气 API 服务，可以获取全球任意地点的天气数据，以 JSON 格式返回。&lt;/p&gt;
&lt;h3 id=&#34;世界最厚的书httpstwittercomjudgedrokkstatus1424038060501700610&#34;&gt;&lt;a href=&#34;https://twitter.com/JudgeDrokk/status/1424038060501700610&#34;&gt;世界最厚的书&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一本名叫《ZX Spectrum 游戏全书》的书，可能是世界上最厚的书。&lt;/p&gt;
&lt;p&gt;ZX Spectrum 是1980年代的一种9位家用电脑，这本书收录了该平台上面的所有游戏。&lt;/p&gt;
&lt;h3 id=&#34;挂在绳子上睡觉httpsmikedashhistorycom20210519the-twopenny-hangover&#34;&gt;&lt;a href=&#34;https://mikedashhistory.com/2021/05/19/the-twopenny-hangover/&#34;&gt;挂在绳子上睡觉&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;有一种传说，19世纪的英国，有一种专门给穷人准备的廉价宿舍。这种宿舍没有床，只拉了几根绳子，穷人把整个身子挂在绳子上睡觉。&lt;/p&gt;
&lt;p&gt;后来的一些小说和电影，纷纷使用了这种说法，补充了细节，还原了画面。但是，由于始终找不到可靠的证据，历史学家倾向于认为，这种宿舍只是当年那些作家的夸大和虚构。&lt;/p&gt;
&lt;h3 id=&#34;pixar-故事公式httpsstartuppitchsubstackcompnail-your-startup-pitch-use-pixars&#34;&gt;&lt;a href=&#34;https://startuppitch.substack.com/p/nail-your-startup-pitch-use-pixars&#34;&gt;Pixar 故事公式&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;公司创始人的主要工作是什么？&lt;/p&gt;
&lt;p&gt;他的主要工作很可能是讲故事。向员工讲故事，向投资人讲故事，向媒体讲故事，向用户讲故事。这样可以团结团队、获得投资和报道，完成用户营销。&lt;/p&gt;
&lt;p&gt;每个人都喜欢听到一个好故事，你的故事越吸引人，就越容易成功。&lt;/p&gt;
&lt;p&gt;可是，大多数人都不具备讲故事的能力，所以我们应该向那些善于讲故事的人学习。&lt;/p&gt;
&lt;p&gt;Pixar 是全世界著名的动画公司，制作了很多脍炙人口的动画电影。&lt;/p&gt;
&lt;p&gt;它具有非凡的讲故事能力，每部电影都让人们津津乐道。它的编剧透露，这些故事都是按照一个公式展开的。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://camo.githubusercontent.com/0cb9515ed03f836c4f1d47dfaacede3441ae12ab8085091d76c1eec6c14acaac/68747470733a2f2f63646e2e6265656b6b612e636f6d2f626c6f67696d672f61737365742f3230323130382f6267323032313038313530352e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;每个故事都依次分成六个部分。&lt;/p&gt;
&lt;p&gt;（1）很久以前：描述一下世界以前的样子。&lt;/p&gt;
&lt;p&gt;（2）每天的生活：大家怎么过日子。&lt;/p&gt;
&lt;p&gt;（3）直到有一天：一个突发事件引发了巨变。&lt;/p&gt;
&lt;p&gt;（4）由于这件事：主人公遭受到了磨难。&lt;/p&gt;
&lt;p&gt;（5）由于这件事：主人公下定决心，展开新的冒险，找到出路。&lt;/p&gt;
&lt;p&gt;（6）最终：问题解决了，主人公过上了美好生活。&lt;/p&gt;
&lt;p&gt;大家可以回想一下，Pixar 的每部电影是不是符合这个公式。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://camo.githubusercontent.com/4a7113cd6abebe50f7f625f49d8d12f72ce11c0de5af1e0cca18aa1234915998/68747470733a2f2f63646e2e6265656b6b612e636f6d2f626c6f67696d672f61737365742f3230323130382f6267323032313038313530372e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;下面，就让我们按照这个公式，讲好自己公司的故事。&lt;/p&gt;
&lt;p&gt;（1）很久以前：世界有一个难题。&lt;/p&gt;
&lt;p&gt;（2）每天的生活：现有的各种解决方法都很糟糕，用户很痛苦。&lt;/p&gt;
&lt;p&gt;（3）直到有一天：我们想出了新的方法。&lt;/p&gt;
&lt;p&gt;（4）由于这件事：我们的方法比以前的方法都好。&lt;/p&gt;
&lt;p&gt;（5）由于这件事：我们将会吸引大量的客户。&lt;/p&gt;
&lt;p&gt;（6）最终：我们将会赢得了市场，取得成功。&lt;/p&gt;
&lt;p&gt;有了自己的故事以后，你还必须不停迭代，补充新内容，争取每一讲都比上一次效果更好。&lt;/p&gt;
&lt;h3 id=&#34;vscodedevhttpscodevisualstudiocomblogs20211020vscode-dev-发布&#34;&gt;&lt;a href=&#34;https://code.visualstudio.com/blogs/2021/10/20/vscode-dev&#34;&gt;vscode.dev&lt;/a&gt; 发布&lt;/h3&gt;
&lt;p&gt;VS Code 正式发布官方的浏览器版，从此可以在浏览器里面使用这个编辑器。它跟另一个网站&lt;code&gt;github.dev&lt;/code&gt;很接近，唯一的区别是还支持其他的代码托管服务。&lt;/p&gt;
&lt;h3 id=&#34;怎么为网站申请-issn-号码httpsshksprmobiblog202109how-to-add-issn-metadata-to-a-web-page&#34;&gt;&lt;a href=&#34;https://shkspr.mobi/blog/2021/09/how-to-add-issn-metadata-to-a-web-page/&#34;&gt;怎么为网站申请 ISSN 号码？&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者介绍怎么为自己的个人网站，申请了一个 ISSN（国际标准期刊号），便于被学术期刊引用。&lt;/p&gt;
&lt;h3 id=&#34;你的网站是否有-securitytxt-文件httpskrebsonsecuritycom202109does-your-organization-have-a-security-txt-file&#34;&gt;&lt;a href=&#34;https://krebsonsecurity.com/2021/09/does-your-organization-have-a-security-txt-file/&#34;&gt;你的网站是否有 Security.txt 文件？&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;越来越多的大公司开始在服务器放置“Security.txt”文件，这是一项新提议的标准，该文件用来描述网站的安全政策和漏洞联系方式。&lt;/p&gt;
&lt;h3 id=&#34;网页的发呆检测-apihttpswebdevidle-detection&#34;&gt;&lt;a href=&#34;https://web.dev/idle-detection/&#34;&gt;网页的发呆检测 API&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Chrome 浏览器现在原生提供&lt;code&gt;IdleDetector&lt;/code&gt;对象，在它上面部署了发呆检测 API，可以用脚本获知用户是否正在发呆（即没有任何操作）。&lt;/p&gt;
&lt;h3 id=&#34;listssrhthttpslistssrht&#34;&gt;&lt;a href=&#34;https://lists.sr.ht/&#34;&gt;lists.sr.ht&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个免费的邮件列表服务，可以用来架设自己的邮件列表。&lt;/p&gt;
&lt;h3 id=&#34;树莓派家用服务器搭建指南httpsgithubcomzhaooleepi&#34;&gt;&lt;a href=&#34;https://github.com/zhaoolee/pi&#34;&gt;树莓派家用服务器搭建指南&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;树莓派系列教程。作者买了一台低配云服务器获得固定 ip 地址，通过 frp 内网穿透，把家里的树莓派 4B 变成了一个真正的云服务器，可以在公网访问。&lt;/p&gt;
&lt;h3 id=&#34;英特尔处理器博物馆httpswwwmynikkocomcpu&#34;&gt;&lt;a href=&#34;https://www.mynikko.com/CPU/&#34;&gt;英特尔处理器博物馆&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个爱好者的个人中文网站，图文并茂地介绍了自己收藏的从 3101 到 Pentium M 的多种英特尔处理器芯片资料。&lt;/p&gt;
&lt;h3 id=&#34;git-飞行规则httpsgithubcomk88hudsongit-flight-rulesblobmasterreadme_zh-cnmd&#34;&gt;&lt;a href=&#34;https://github.com/k88hudson/git-flight-rules/blob/master/README_zh-CN.md&#34;&gt;Git 飞行规则&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个 Git FAQ 的中文翻译，收集各种 Git 操作出现问题后的应对措施。&lt;/p&gt;
&lt;h3 id=&#34;去中心化图书馆httpslibgenfundwebhtml&#34;&gt;&lt;a href=&#34;https://libgen.fun/dweb.html&#34;&gt;去中心化图书馆&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Libgen 电子书图书馆项目宣布，该项目已经完全做到了去中心化，搬到了 IPFS 上面，网页文件、数据库、甚至域名都不是集中托管的。它给出了去中心化图书馆的几个域名。&lt;/p&gt;
&lt;h3 id=&#34;dissection-fonthttperikdemaineorgfontsdissect&#34;&gt;&lt;a href=&#34;http://erikdemaine.org/fonts/dissect/&#34;&gt;Dissection Font&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;计算机科学大师高纳德（Donald Knuth）曾经参与发明一种“解剖字体”（Dissection Font）。所有的字符都可以切成碎片，拼成一个 6 x 6 的正方形。&lt;/p&gt;
&lt;h3 id=&#34;直流电的回归httpswwwlowtechmagazinecom201604slow-electricity-the-return-of-low-voltage-dc-powerhtml&#34;&gt;&lt;a href=&#34;https://www.lowtechmagazine.com/2016/04/slow-electricity-the-return-of-low-voltage-dc-power.html&#34;&gt;直流电的回归&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;（1）交流电为什么获胜？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;19世纪末，人类开始使用电力。当时有两派，一派主张直流电，另一派主张交流电。&lt;/p&gt;
&lt;p&gt;最后，交流电获胜，主要原因是交流电长途传输的效率更高，直流电做不到长途传输。&lt;/p&gt;
&lt;p&gt;当时，交流电已经可以做到高电压，但是直流电的电压一直做不上去。这导致大功率传输时，直流电就会产生很大的电流（因为 电压 * 电流 = 功率）。另一方面，电流通过导体产生的热量，与电流的平方成正比。这意味着，直流电的长距离传输会因为电流较大，而产生很大的热量损耗。交流电由于电压可以做得很高，就没有这个问题。&lt;/p&gt;
&lt;p&gt;所以，高电压是长距离电力传输的关键，这就是交流电获胜的根本原因。直流电直到1960年代才有办法做到高电压，但是已经太晚了。目前，直流电的应用都局限在低压短距离的使用，传输距离往往在几米之内，最长不超过1公里。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;（2）两个新趋势&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;但是，最近出现的两个趋势，导致人们重新对直流电发生了兴趣。&lt;/p&gt;
&lt;p&gt;第一个趋势是太阳能发电的兴起，使得发电变成了分布式，而不是集中式。哪里需要能源，哪里就放置太阳能板，这种场景下不需要长距离电力传输。此外，太阳能发电产生的是直流电，电池释放的也是直流电。&lt;/p&gt;
&lt;p&gt;第二个趋势是越来越多的电器内部使用直流电，比如所有电子设备（包括计算机和手机）、固态照明 （LED）、平板电视、微波炉等等。专家预计，未来20年内，多达50%的家庭负载消耗的是直流电。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;（3）电流转换的损失&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;如果家庭使用的是太阳能发电，就要进行两次电流转换。&lt;/p&gt;
&lt;p&gt;首先，光伏板的直流电通过逆变器转换为交流电，传输进入家庭。然后，交流电再次通过逆变器转换为直流电，才能被电脑、LED 和微波炉等直流设备使用。每一次电流转换，都会发生能量损失，最严重情况下，会损失掉20%~30%。&lt;/p&gt;
&lt;p&gt;如果带有光伏板的建筑直接采用直流供电，就可以避免这种电流转换损失。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;（4）直流供电的好处&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;首先，一旦直流供电，就没有了电流转换的能量损耗，所需的光伏板变少了，存储能量的电池系统也可以变小。&lt;/p&gt;
&lt;p&gt;其次，逆变器是一种昂贵的设备，而且寿命短于光伏板。不使用逆变器，可以节省不少钱。&lt;/p&gt;
&lt;p&gt;再次，目前的很多直流电气设备，内部带有交流电到直流电的转换，去掉这个部分，可以使这些设备更简单、更便宜、更可靠、能耗更低。&lt;/p&gt;
&lt;p&gt;最后，直流电的电压低。很多直流电器不超过24伏，没有电击或火灾危险，使得电工可以使用相对简单的接线，无需接地，也无需担心触电。这进一步节省了成本。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;（5）直流供电的缺点&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;低压直流电的最大问题是无法长距离传输。&lt;/p&gt;
&lt;p&gt;前面说过，能量损失等于电流的平方乘以电阻。一根普通的铜线，在10米的距离内以12V的电压传输，100瓦的功率对应的电流是8.33A，会产生3%的能量损失，这可以接受。但是，电线长度为 50 米时，能量损失变为16%，长度为 100 米时，能量损失增加到了32%。这足以抵消直流电的效率优势。&lt;/p&gt;
&lt;p&gt;由于线路损耗很高，大功率电器也很难使用直流电。如果在12V直流电网上运行 1,000 瓦的微波炉，在电线长度仅为1米的情况下，能量损失高达16%，在电缆长度为3米的情况下，能量损失会增加到47%。&lt;/p&gt;
&lt;p&gt;所以，低压直流电网不适用于洗衣机、洗碗机、吸尘器、电饭锅、电烤箱或热水锅炉等大功率电力设备。另外，有些电器（比如冰箱）本身的功率比微波炉小，但是它每天 24 小时运行，长时间下来也会导致巨大的线路损耗。&lt;/p&gt;
&lt;p&gt;同样的，线路损耗也限制了多台低功率设备使用同一根供电线缆。如果一根12V的电缆长度为 12 米，并且我们希望将线路损耗保持在10%以下，那么所有电器的总功率将限制在大约150瓦。这意味着，这根线路只能同时使用两台笔记本电脑（每台 20 瓦的功率）、一台直流电冰箱（45 瓦）、五个8瓦的 LED 灯（总共 40 瓦），还留下25瓦可以支持其它较小的设备。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;（6）解决方案&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;有几种方法可以避免低压直流电的线路损耗。&lt;/p&gt;
&lt;p&gt;第一种方法是尽量减少配电电缆长度。比如，厨房、客厅、卧室这些用电最多的地方，尽量搬到屋顶光伏板的下方，减少电缆长度。&lt;/p&gt;
&lt;p&gt;第二种方法是每一个或两个房间，设置一个独立的太阳能发电系统。&lt;/p&gt;
&lt;p&gt;第三种方法是选择更高的电压：24V 或 48V 而不是 12V。但是，目前市场上的大多数低压直流电器都在12V下运行，而且更高的电压（高于24V）消除了直流系统的安全优势。美国有很多数据中心、办公室、住宅建筑使用的直流电系统升压到了 380V，这就需要跟 110V 或 220V 交流电一样严格的安全措施了。&lt;/p&gt;
&lt;p&gt;第四种方法是使用两套供电系统，同时供应交流电和直流电。低功率设备使用直流电网，比如 LED 灯（&amp;lt; 10 瓦）、笔记本电脑（&amp;lt; 20 瓦）、电视（30-90 瓦）和冰箱（&amp;lt;50 瓦），大功率设备使用单独的交流电网。但是这样做，直流电带来的节能和成本降低效益，就微乎其微了，很容易被抵消。&lt;/p&gt;
&lt;h3 id=&#34;近零能耗样板楼httpwwwbjxinhuanetcom2021-0811c_1127749972htm&#34;&gt;&lt;a href=&#34;http://www.bj.xinhuanet.com/2021-08/11/c_1127749972.htm&#34;&gt;“近零能耗”样板楼&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;国内首个“近零能耗”样板楼在北京通州区亮相。该楼基本不用外部能源，完全自身供能，支持空调和暖气，一年四季保持室温20摄氏度左右。&lt;/p&gt;
&lt;p&gt;楼里分别安装了地源热泵、空气源热泵，光伏发电板等能源装置。热泵从地下“捕捉”地热能，从空气中“吸收”空气能，光伏发电板则通过太阳能发电。然后，地下一共埋了5个储能罐，将这些能量储存起来，为整栋楼供电、冬季供热、夏季降温。&lt;/p&gt;
&lt;h3 id=&#34;张忠谋演讲经营人的学习与成长httpszhidxcomp301575html&#34;&gt;&lt;a href=&#34;https://zhidx.com/p/301575.html&#34;&gt;张忠谋演讲：经营人的学习与成长&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;台积电创始人张忠谋的最新演讲，介绍他怎么创立和经营管理台积电。&lt;/p&gt;
&lt;h3 id=&#34;解读国家科学技术大奖httpszhuanlanzhihucomp429247683&#34;&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/429247683&#34;&gt;解读国家科学技术大奖&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;通过国家科学技术大奖，可以知道我国的重大科技突破点在哪里，看出政府的导向。&lt;/p&gt;
&lt;h3 id=&#34;ads-b-信号不能对境外提供httpswwwguanchacnzhangzhongzuo2021_11_03_613334shtml&#34;&gt;&lt;a href=&#34;https://www.guancha.cn/ZhangZhongZuo/2021_11_03_613334.shtml&#34;&gt;ADS-B 信号不能对境外提供&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;ADS-B 是飞机发出的广播信号，明码对外发送自己的位置、高度、速度、航向等信息。连续接收信号，就可以描绘出飞机的航行轨迹，并实时获取其飞行状态。&lt;/p&gt;
&lt;h3 id=&#34;如何找到数组里面的唯一数字httpsyonatankracomhow-to-find-a-unique-number-in-a-list-of-pairs&#34;&gt;&lt;a href=&#34;https://yonatankra.com/how-to-find-a-unique-number-in-a-list-of-pairs/&#34;&gt;如何找到数组里面的唯一数字&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文介绍一道简单的算法题：数组的所有成员都成对出现，只有一个成员除外（比如&lt;code&gt;[1,3,17,3,1]&lt;/code&gt;），如何快速找到这个成员。&lt;/p&gt;
&lt;h3 id=&#34;css-属性-accent-colorhttpsdavidwalshnamecss-accent-color&#34;&gt;&lt;a href=&#34;https://davidwalsh.name/css-accent-color&#34;&gt;CSS 属性 accent-color&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文介绍一个新的 CSS 属性&lt;code&gt;accent-color&lt;/code&gt;，可以设置表单的选择框控件（checkbox 或 radio）选中时的颜色。&lt;/p&gt;
&lt;h3 id=&#34;nginx-如何将环境变量注入网页httpswwwinnoqcomdeblognginx-ssi-env&#34;&gt;&lt;a href=&#34;https://www.innoq.com/de/blog/nginx-ssi-env/&#34;&gt;NGINX 如何将环境变量注入网页&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;NGINX 可以向网页写入内容，本文演示应该怎么做。&lt;/p&gt;
&lt;h3 id=&#34;如何从谷歌搜索结果删除你的网页httpsbtaoorg20211003removing-from-google&#34;&gt;&lt;a href=&#34;https://btao.org/2021/10/03/removing-from-google/&#34;&gt;如何从谷歌搜索结果删除你的网页&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文介绍一个简单的方法，只要加入一行 HTML 代码，就可以从谷歌搜索结果里面，删除你的网页。&lt;/p&gt;
&lt;h3 id=&#34;googletwitter-和-spotify-如何处理内部文档httpsblogdoctavecom20210907how-google-twitter-and-spotify-build-culture-of-documentationhtml&#34;&gt;&lt;a href=&#34;https://blog.doctave.com/2021/09/07/how-google-twitter-and-spotify-build-culture-of-documentation.html&#34;&gt;Google、Twitter 和 Spotify 如何处理内部文档&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;软件公司的内部文档，往往是一个痛点，要么根本没有文档，要么就是杂乱不堪，分散在代码、Word 文件、Confluence 等各处。软件公司越大，这个问题越严重，本文介绍三家大型互联网公司如何处理内部文档。&lt;/p&gt;
&lt;h3 id=&#34;waydroidhttpswaydroid&#34;&gt;&lt;a href=&#34;https://waydro.id/&#34;&gt;Waydroid&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个 Linux 系统的安卓容器，可以让安卓应用在 Linux 桌面电脑的容器里面运行。&lt;/p&gt;
&lt;h3 id=&#34;agora-flathttpsflatwhiteboardagoraio&#34;&gt;&lt;a href=&#34;https://flat.whiteboard.agora.io/&#34;&gt;Agora Flat&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个前后端都开源的在线教室，企业可以用来作为自己的内部培训工具，或者对外的远程教学工具。&lt;/p&gt;
&lt;h3 id=&#34;motion-onehttpsmotiondev&#34;&gt;&lt;a href=&#34;https://motion.dev/&#34;&gt;Motion One&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个 JS 动画库，底层使用 Web Animations API，上层则是自己设计的简单易懂的语法，可以很轻松让网页产生动画效果。&lt;/p&gt;
&lt;h3 id=&#34;semi-designhttpssemidesignzh-cn&#34;&gt;&lt;a href=&#34;https://semi.design/zh-CN&#34;&gt;Semi Design&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;抖音前端团队推出的设计系统，支撑字节内部近千平台产品。目前提供50多个组件、国际化14种语言、支持 TypeScript、SSR 等特性。&lt;/p&gt;
&lt;h3 id=&#34;swayhttpsswaywmorg&#34;&gt;&lt;a href=&#34;https://swaywm.org/&#34;&gt;Sway&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Linux 系统的平铺式窗口管理器，完全兼容 i3。区别是，i3 底层的显示协议是 X11，而 Sway 是 Wayland。&lt;/p&gt;
&lt;h3 id=&#34;微图httpsdevtooltechtiny-image&#34;&gt;&lt;a href=&#34;https://devtool.tech/tiny-image&#34;&gt;微图&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个批量压缩图片的网页工具，纯浏览器端压缩，不经过服务器，速度较快。&lt;/p&gt;
&lt;h3 id=&#34;toolgraphicshttpstoolgraphicsgeometric&#34;&gt;&lt;a href=&#34;https://tool.graphics/geometric&#34;&gt;Tool.Graphics&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这个网站可以生成各种几何图形填充的随机图片，并且能够可以调节参数。&lt;/p&gt;
&lt;h3 id=&#34;read-aloudhttpsgithubcomken107read-aloud&#34;&gt;&lt;a href=&#34;https://github.com/ken107/read-aloud&#34;&gt;Read Aloud&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;开源的浏览器朗读插件，可以朗读整个网页或选定文本，支持40多种语言，包括中文。&lt;/p&gt;
&lt;h3 id=&#34;日本传统色系httpszhwikipediaorgwiki日本传统色系&#34;&gt;&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E6%97%A5%E6%9C%AC%E4%BC%A0%E7%BB%9F%E8%89%B2%E7%B3%BB&#34;&gt;日本传统色系&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;维基百科资料，列出了日本古典文学里经常出现的颜色，常用于和服或其他日本传统艺术和手工艺品。&lt;/p&gt;
&lt;h3 id=&#34;modern-unixhttpsgithubcomibraheemdevmodern-unix&#34;&gt;&lt;a href=&#34;https://github.com/ibraheemdev/modern-unix&#34;&gt;Modern Unix&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;该仓库收集传统 Unix 命令行工具的现代替代品，比如 lds 替代 ls、ripgrep 替代 grep。&lt;/p&gt;
&lt;h3 id=&#34;awesome-console-serviceshttpsgithubcomchubinawesome-console-services&#34;&gt;&lt;a href=&#34;https://github.com/chubin/awesome-console-services&#34;&gt;awesome-console-services&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;该仓库收集各种供命令行使用的外部服务，比如&lt;code&gt;curl ip-api.com&lt;/code&gt;可以查看当前 IP 地址对应的地理位置。&lt;/p&gt;
&lt;h3 id=&#34;awesome-metaversehttpsgithubcomshadowcz007awesome-metaverse&#34;&gt;&lt;a href=&#34;https://github.com/shadowcz007/awesome-metaverse&#34;&gt;awesome-metaverse&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;该仓库收集元宇宙相关资源。&lt;/p&gt;
&lt;h3 id=&#34;废弃的摩托罗拉总部httpswwwabandonedspacescomindustrymotorolahtml&#34;&gt;&lt;a href=&#34;https://www.abandonedspaces.com/industry/motorola.html&#34;&gt;废弃的摩托罗拉总部&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;1976年，摩托罗拉公司将总部搬到了芝加哥郊区。&lt;/p&gt;
&lt;p&gt;手机就是在这里发明的，它使得摩托罗拉成为无线通信巨头。但是，这里也见证了，这家公司逐渐走下坡路，最终分崩离析。&lt;/p&gt;
&lt;p&gt;2007年至2009年，连续遭受重大亏损后，摩托罗拉决定拆分为两个独立的公司，随后决定将总部从郊区搬到芝加哥市中心。&lt;/p&gt;
&lt;p&gt;原来的总部被废弃后，2017年决定拆除，改建为多功能综合体。下面是拆除前的一些照片，墙上还留有没有撕掉的标语和宣传画，记录了这家公司的兴衰。&lt;/p&gt;
&lt;h3 id=&#34;埃舍尔未完成的画httpswwwuniversiteitleidennlennews202004how-mathematician-hendrik-lenstra-completed-an-unfinished-artwork-by-escher&#34;&gt;&lt;a href=&#34;https://www.universiteitleiden.nl/en/news/2020/04/how-mathematician-hendrik-lenstra-completed-an-unfinished-artwork-by-escher&#34;&gt;埃舍尔未完成的画&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;荷兰画家埃舍尔（1898年－1972年）以创作视觉错误绘画而闻名。&lt;/p&gt;
&lt;p&gt;在他晚年，有一幅作品描绘了一个观众正在画廊里观看画作，画廊的窗户与城市的街景融合在一起。&lt;/p&gt;
&lt;p&gt;不知道什么原因，这幅画的中心部分没有画，而是留出一个空白，埃舍尔写上了自己的签名。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://camo.githubusercontent.com/30ea4399148d9b1129ac9a89d813e01cbeb37d28ed8cc17c3e06083b2b1a0fae/68747470733a2f2f63646e2e6265656b6b612e636f6d2f626c6f67696d672f61737365742f3230323130382f6267323032313038313530342e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;2000年，一个美国数学教授在飞机上翻看杂志，偶然看到了这幅画。他突然意识到，这是一个螺旋扩张，可以用数学公式表达。&lt;/p&gt;
&lt;p&gt;他就写了一个程序，让软件自动生成这幅画中间缺少的部分。&lt;/p&gt;
&lt;h3 id=&#34;斜率比截距重要httpsmatt-rickardcomhire-slope-not-intercept&#34;&gt;&lt;a href=&#34;https://matt-rickard.com/hire-slope-not-intercept/&#34;&gt;斜率比截距重要&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;忘掉 y 轴的截距吧，长远来看，斜率是唯一重要的事情。&lt;/p&gt;
&lt;p&gt;如果 x 轴表示时间，y 轴表示你要实现的目标，那么实现目标的过程可以画成一条直线。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/f5bbf3bd33ef74430c4abea005806754986d5abc61e5171d821f860398f0840f/68747470733a2f2f63646e2e6265656b6b612e636f6d2f626c6f67696d672f61737365742f3230323130382f6267323032313038313930372e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/f5bbf3bd33ef74430c4abea005806754986d5abc61e5171d821f860398f0840f/68747470733a2f2f63646e2e6265656b6b612e636f6d2f626c6f67696d672f61737365742f3230323130382f6267323032313038313930372e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这条直线可以用两个变量描述：y 轴截距（直线与 y 轴的交点）和斜率（y 随时间变化的速度）。&lt;/p&gt;
&lt;p&gt;如果我们把 y 轴截距看成是你的起点，那么斜率就是你为了实现目标，而适应、学习和付出努力的前进速度。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;即使一条线的起点远低于另一条线，只要它的斜率更大，终究会超越前一条线。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;你可能听过这样的建议：做一个终身学习者，每天学一点，不断进步。很少有人能够遵循这条建议，因为在开始后的很长时间内，根本看不到有什么效果。时间周期越短，直线看起来越平坦，当你远远落后时，这是非常令人沮丧的。&lt;/p&gt;
&lt;p&gt;但是，只要坚持下去，保持向上的斜率，长期以后，你将远远地超越原来的人生道路。&lt;/p&gt;
&lt;p&gt;记住，短期总是比我们想象的要长，各种打击足以让你灰心丧气，但是 &lt;strong&gt;长期总是比我们想象的要短。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;同一个道理，在招聘时，有潜力但经验不足的候选人，长期来看，比经验丰富但潜力不足的候选人，对公司更有帮助。&lt;/p&gt;
&lt;p&gt;总之，当事情没有达到你的目标时，不要放弃，每一个伟大的事业都始于一个小小的念头。学习一项新技能，每天进步一点点，短时间内，一切看起来都是老样子，但是随着时间的推移，改进会持续累积起来，进步会越来越明显。&lt;/p&gt;
&lt;h3 id=&#34;虚拟网红httpswwwallkpopcomarticle202109social-media-influencer-model-created-from-artificial-intelligence-lands-100-sponsorships&#34;&gt;&lt;a href=&#34;https://www.allkpop.com/article/2021/09/social-media-influencer-model-created-from-artificial-intelligence-lands-100-sponsorships&#34;&gt;虚拟网红&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;韩国 Sidus Studio X 工作室使用人工智能，创建了一个名叫 Rozy 的虚拟女孩，年龄永远是22岁。从去年 12月以来，她一直以真人的身份活跃在网上，发照片、发视频、拍广告，已经有很多粉丝了。&lt;/p&gt;
&lt;p&gt;照片看上去非常逼真，根本看不出来是虚拟人物。工作室负责人解释说：“如今，名人有时会因为丑闻而退出电视剧，虚拟网红完全无需担心有任何丑闻。”&lt;/p&gt;
&lt;p&gt;目前，她已经拿到了100多个产品合作，并有八个专属合约，估计到2021年底可以赚到超过10亿韩元（约500多万人民币）。&lt;/p&gt;
&lt;h3 id=&#34;8座最有创新的中国当代建筑httpsmpweixinqqcomssjk4xt9qb1gpg11myse6na&#34;&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/sjK4xT9Qb1gpG11myse6NA&#34;&gt;8座最有创新的中国当代建筑&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;纽约当代艺术博物馆最近从160多个候选作品中，选出了外国专家眼中8个最有创新的中国当代建筑。上图是浙江松阳县的竹林剧场，下图是上海的池社画廊，墙面用砖块模拟起伏的曲面。&lt;/p&gt;
&lt;h3 id=&#34;声明式与命令式-uihttpsalexsidorenkocomblogreact-is-declarative-what-does-it-mean&#34;&gt;&lt;a href=&#34;https://alexsidorenko.com/blog/react-is-declarative-what-does-it-mean/&#34;&gt;声明式与命令式 UI&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文介绍 React 框架里面命令式（imperative）UI 与声明式（declarative） UI 的含义与差异。&lt;/p&gt;
&lt;h3 id=&#34;cloudflare-的-dns-apihttpsdeveloperscloudflarecom1111other-ways-to-use-1111dns-in-google-sheets&#34;&gt;&lt;a href=&#34;https://developers.cloudflare.com/1.1.1.1/other-ways-to-use-1.1.1.1/dns-in-google-sheets&#34;&gt;Cloudflare 的 DNS API&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Cloudflare 提供一个 DNS API，可以通过 HTTP 请求获取任意域名的 DNS 信息，而且没有使用限制，不必注册，完全免费。本文是官方的一个使用示例。&lt;/p&gt;
&lt;h3 id=&#34;如何提高二维码的可用性httpshuonwgithubioblog202110nsw-covid-qr&#34;&gt;&lt;a href=&#34;https://huonw.github.io/blog/2021/10/nsw-covid-qr/&#34;&gt;如何提高二维码的可用性&lt;/a&gt;&lt;/h3&gt;
&lt;h3 id=&#34;财富创造机制的清单httpsblogrongarretinfo200910catalog-of-wealth-creation-mechanismshtml&#34;&gt;&lt;a href=&#34;https://blog.rongarret.info/2009/10/catalog-of-wealth-creation-mechanisms.html&#34;&gt;财富创造机制的清单&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文提出，所有的财富创造活动，都可以归类为九种模式。不管是什么新技术，都是使用这九种模式来创造财富。很有启发意义的一篇文章。&lt;/p&gt;
&lt;h3 id=&#34;如何添加缩略图到静态网站httpswwwbabblingfishcat-gallery&#34;&gt;&lt;a href=&#34;https://www.babbling.fish/cat-gallery/&#34;&gt;如何添加缩略图到静态网站&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者希望从 markdown 仓库生成静态网站，但是又不愿把图片存放在仓库里面。那么有没有办法，在生成静态网站的时候，实时生成外部图片的缩略图，放入页面？&lt;/p&gt;
&lt;h3 id=&#34;cloudcrafthttpswwwcloudcraftco&#34;&gt;&lt;a href=&#34;https://www.cloudcraft.co/&#34;&gt;Cloudcraft&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个网页工具，用来画网络架构图。&lt;/p&gt;
&lt;h3 id=&#34;3d-人体模型httpsfakeclientscommannequin&#34;&gt;&lt;a href=&#34;https://fakeclients.com/mannequin/&#34;&gt;3D 人体模型&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这个网页工具可以生成各种姿势的 3D 人体模型，并可以配上道具，用作艺术家、建模师的参考。&lt;/p&gt;
&lt;h3 id=&#34;htpdatehttpsgithubcombobwen-devhtpdate&#34;&gt;&lt;a href=&#34;https://github.com/bobwen-dev/htpdate/&#34;&gt;htpdate&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;向服务器发出 HTTP 请求，服务器会返回请求时间。利用这个原理，这个工具向多个网站服务器发出请求，从中获取准确的当前时间，用于校准系统时间。它适用于无法使用 ntp 设置系统时间的场合&lt;/p&gt;
&lt;h3 id=&#34;yoctocolorshttpsgithubcomsindresorhusyoctocolors&#34;&gt;&lt;a href=&#34;https://github.com/sindresorhus/yoctocolors&#34;&gt;yoctocolors&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个 JavaScript 的命令行颜色库，类似于 Chalk，优势是体积小、速度快。作者是著名的 Sindre Sorhus。&lt;/p&gt;
&lt;h3 id=&#34;tiny-sass-compilerhttpsgithubcomwizardpiscestiny-sass-compiler&#34;&gt;&lt;a href=&#34;https://github.com/wizardpisces/tiny-sass-compiler&#34;&gt;tiny-sass-compiler&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个网友自己写的 SASS 编译器，将 SASS 代码编译为 CSS，没有第三方依赖，基本上所有功能都支持，可以用来学习怎么写编译器。&lt;/p&gt;
&lt;h3 id=&#34;awesome-mathhttpsgithubcomrossantawesome-math&#34;&gt;&lt;a href=&#34;https://github.com/rossant/awesome-math&#34;&gt;Awesome Math&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这个仓库收集互联网上各种有用的数学资源。&lt;/p&gt;
&lt;h3 id=&#34;用汇编语言编写-python-扩展httpstonybaloneygithubiopostsextending-python-with-assemblyhtml&#34;&gt;&lt;a href=&#34;https://tonybaloney.github.io/posts/extending-python-with-assembly.html&#34;&gt;用汇编语言编写 Python 扩展&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一篇长篇教程，前半部分介绍的都是汇编语言基本知识，可以用来学习汇编语言。&lt;/p&gt;
&lt;h3 id=&#34;paul-graham-文集httpsgithubcomevmnpaul-graham&#34;&gt;&lt;a href=&#34;https://github.com/evmn/Paul-Graham&#34;&gt;Paul Graham 文集&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者写了一个脚本，将 YC 创始人、创业导师 Paul Graham 官网上面的文章都抓下来，生成了 mobi 电子书，可以在 Kindle 阅读。&lt;/p&gt;
&lt;h3 id=&#34;理解-awkhttpsearthlydevblogawk-examples&#34;&gt;&lt;a href=&#34;https://earthly.dev/blog/awk-examples/&#34;&gt;理解 AWK&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;AWK 是 Linux 系统的文本文件的行数据处理工具，本文是一篇新的教程。&lt;/p&gt;
&lt;h3 id=&#34;孤独想象httpinagblogcom202005vasjen-katro&#34;&gt;&lt;a href=&#34;http://inagblog.com/2020/05/vasjen-katro/&#34;&gt;孤独想象&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;北欧警察为了防止驯鹿被夜间公路上的汽车撞死，为驯鹿角涂上荧光粉，让司机远远就能看到。&lt;/p&gt;
&lt;p&gt;一个阿尔巴尼亚艺术家受到这件事启发，制作了一张合成照片，名为《孤独想象》。&lt;/p&gt;
&lt;h3 id=&#34;移轴摄影拍出的世界httpswwwlittlebigworldde&#34;&gt;&lt;a href=&#34;https://www.littlebigworld.de/&#34;&gt;移轴摄影拍出的世界&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个德国摄影师专门使用移轴摄影，将真实世界拍成模型。他的所有作品都放在自己的官网上。&lt;/p&gt;
&lt;h3 id=&#34;杰文斯悖论httpszhwikipediaorgwikijevons悖論&#34;&gt;&lt;a href=&#34;https://zh.wikipedia.org/wiki/Jevons%E6%82%96%E8%AB%96&#34;&gt;杰文斯悖论&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;1865年，英国经济学家威廉·斯坦利·杰文斯（William Stanley Jevons）观察到，提高煤炭的使用效率，会导致煤炭消费量的增加。&lt;/p&gt;
&lt;p&gt;他因而提出，&lt;strong&gt;节省资源的技术，只会带来资源使用量的增加。&lt;/strong&gt; 由于这与人们的直觉相反，所以称为杰文斯悖论。&lt;/p&gt;
&lt;p&gt;举例来说，家用电器越省电，其实不会导致用电量下降。因为省电一开始会让电费下降，人们就会使用更多的家用电器，结果反而导致用电量上升。&lt;/p&gt;
&lt;p&gt;再比如，由于交通拥堵，政府新建更多、更宽的道路，希望疏通交通。结果，行车时间的减少，导致市民购买更多的车辆，交通最终并没有好转。这就是杰文斯悖论的一个著名推论：“如果不限制车辆增长，再多的道路都会被堵住。”&lt;/p&gt;
&lt;p&gt;杰文斯悖论有时被认为意味着，节约能源的努力是徒劳的。提高化石能源的使用效率，反而会加快化石能源的耗尽速度。&lt;/p&gt;
&lt;p&gt;这说明，可持续能源政策不能只依赖节能技术的进步，而必须配合其他类型的政府干预措施，限制能源的使用。&lt;/p&gt;
&lt;h3 id=&#34;mysql-数据库索引概览httpsblogcsdnnetwallace_wwwarticledetails117264149&#34;&gt;&lt;a href=&#34;https://blog.csdn.net/wallace_www/article/details/117264149&#34;&gt;MySQL 数据库索引概览&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文详细介绍了数据库索引的概念和种类，并讨论使用索引时应该考虑的因素。&lt;/p&gt;
&lt;h3 id=&#34;printf-的返回值httpswwwnetmeisterorgblogreturn-printfhtml&#34;&gt;&lt;a href=&#34;https://www.netmeister.org/blog/return-printf.html&#34;&gt;printf() 的返回值&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文介绍 C 语言的一个很奇怪的语法点：printf() 为什么会有两种返回值。&lt;/p&gt;
&lt;h3 id=&#34;如何侦测开发者工具httpsmediumcomweizmangaljavascript-anti-debugging-some-next-level-sh-t-part-2-abusing-chromium-devtools-scope-pane-b2796c00331d&#34;&gt;&lt;a href=&#34;https://medium.com/@weizmangal/javascript-anti-debugging-some-next-level-sh-t-part-2-abusing-chromium-devtools-scope-pane-b2796c00331d&#34;&gt;如何侦测开发者工具&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文介绍了几个技巧，可以侦测用户是否打开了浏览器的开发者工具。&lt;/p&gt;
&lt;h3 id=&#34;如何使用-calibre-将本地网页转成电子书httpsbbspediycomthread-269615htm&#34;&gt;&lt;a href=&#34;https://bbs.pediy.com/thread-269615.htm&#34;&gt;如何使用 Calibre 将本地网页转成电子书&lt;/a&gt;&lt;/h3&gt;
&lt;h3 id=&#34;react-native-开发一个新闻应用httpswwwfreecodecamporgnewsbuild-an-android-news-app-with-react-native-and-native-base&#34;&gt;&lt;a href=&#34;https://www.freecodecamp.org/news/build-an-android-news-app-with-react-native-and-native-base/&#34;&gt;React Native 开发一个新闻应用&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文一步步演示，如何使用 React Native 开发一个新闻 App。&lt;/p&gt;
&lt;h3 id=&#34;为什么网站应该使用抖动图像httpsendtimesdevwhy-you-should-dither-images&#34;&gt;&lt;a href=&#34;https://endtimes.dev/why-you-should-dither-images/&#34;&gt;为什么网站应该使用抖动图像&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者主张，大多数情况下，网站应该使用抖动图像（dithering image），减少图片体积。他介绍了图像抖动的概念，以及为什么抖动图像需要保存成 png 或 webp 格式。&lt;/p&gt;
&lt;h3 id=&#34;彩色括号功能的实现httpscodevisualstudiocomblogs20210929bracket-pair-colorization&#34;&gt;&lt;a href=&#34;https://code.visualstudio.com/blogs/2021/09/29/bracket-pair-colorization&#34;&gt;彩色括号功能的实现&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;VS Code 编译器有一个插件，可以让不同的括号对显示不同的颜色。但是，这个功能需要解析代码，很吃性能，大型文件会产生卡顿。VS Code 官方团队就写了这篇文章，记录了他们为了改进括号配对的性能，所做出的努力。&lt;/p&gt;
&lt;h3 id=&#34;基于-cloudflare-pages-的全栈开发httpsblogcloudflarecombuilding-full-stack-with-pages&#34;&gt;&lt;a href=&#34;https://blog.cloudflare.com/building-full-stack-with-pages/&#34;&gt;基于 Cloudflare Pages 的全栈开发&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Cloudflare 公司本周宣布，他们的静态网页寄存服务 Cloudflare Pages 已经跟其他服务打通了，可以用来全栈开发，包括云函数、图片存储和 KV 键值对存储。&lt;/p&gt;
&lt;h3 id=&#34;hurlhttpshurldev&#34;&gt;&lt;a href=&#34;https://hurl.dev/&#34;&gt;Hurl&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个命令行工具，作用类似于 curl，可以用来发出 HTTP 请求，获取回应，但它是特别为测试而设计的，配置文件里面允许写断言，很适合在命令行测试 HTTP 接口。&lt;/p&gt;
&lt;h3 id=&#34;colorfuhttpscolorfuarteditor&#34;&gt;&lt;a href=&#34;https://colorfu.art/editor&#34;&gt;ColorFu&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个基于网页的壁纸生成器，提供了丰富的颜色、简洁的界面，可以快速制作“文字 + 颜色/纹理/图片”这种形式的壁纸。&lt;/p&gt;
&lt;h3 id=&#34;xtermjshttpsxtermjsorg&#34;&gt;&lt;a href=&#34;https://xtermjs.org/&#34;&gt;Xterm.js&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个 JS 组件，在网页上加入命令行窗口，可以与服务器进行通信，接受并展示服务器的命令行输出。&lt;/p&gt;
&lt;h3 id=&#34;yabaihttpsgithubcomkoekeishiyayabai&#34;&gt;&lt;a href=&#34;https://github.com/koekeishiya/yabai/&#34;&gt;yabai&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;MacOS 系统的平铺式窗口管理器，苹果电脑命令行工作者的福音。&lt;/p&gt;
&lt;h3 id=&#34;roapihttpsgithubcomroapiroapi&#34;&gt;&lt;a href=&#34;https://github.com/roapi/roapi&#34;&gt;ROAPI&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个 API 服务器，不用编写任何代码，就可以把 JSON 文件或 CSV 文件转成 API 服务，自动提供 REST、GraphQL、SQL 接口，参见&lt;a href=&#34;https://tech.marksblogg.com/roapi-rust-data-api.html&#34;&gt;这篇教程&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&#34;weird-jsonhttpsgithubcomi5ikweird-json&#34;&gt;&lt;a href=&#34;https://github.com/i5ik/weird-json&#34;&gt;weird json&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个 JS 库，采用了一种与众不同的方法，通过将对象转成字符串，完成两个对象之间的深拷贝。&lt;/p&gt;
&lt;h3 id=&#34;matrix-rainhttpsgithubcomnojvekmatrix-rain&#34;&gt;&lt;a href=&#34;https://github.com/nojvek/matrix-rain&#34;&gt;Matrix Rain&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个 JS 库，可以在命令行环境展示电影《黑客帝国》的绿色字符雨效果，还可以调整各种参数。&lt;/p&gt;
&lt;h3 id=&#34;中文-newsletter-订阅httpsgithubcomalaskasquirrelemail-newsletter-rss&#34;&gt;&lt;a href=&#34;https://github.com/alaskasquirrel/Email-newsletter-RSS&#34;&gt;中文 Newsletter 订阅&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这个仓库收集各种中文的邮件列表，我们这个周刊也在其中&lt;/p&gt;
&lt;h3 id=&#34;oldmousecomhttpoldmousecom&#34;&gt;&lt;a href=&#34;http://oldmouse.com/&#34;&gt;oldmouse.com&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这个网站记录鼠标的发展历史，你可以在上面找到各种老式鼠标。&lt;/p&gt;
&lt;h3 id=&#34;乌得勒支httpstwittercomdavid_perellstatus1434731477237907460&#34;&gt;&lt;a href=&#34;https://twitter.com/david_perell/status/1434731477237907460&#34;&gt;乌得勒支&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;乌得勒支是荷兰第四大城市，整个城市都是为行人规划的，不是为汽车规划的，而且河岸建得很低，有很多亲水步道，非常美丽宜居。&lt;/p&gt;
&lt;h3 id=&#34;巴克莱银行的-74000-个电话号码httpsshksprmobiblog202105the-74000-numbers-of-barclays-bank&#34;&gt;&lt;a href=&#34;https://shkspr.mobi/blog/2021/05/the-74000-numbers-of-barclays-bank/&#34;&gt;巴克莱银行的 74,000 个电话号码&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;英国有很多电话诈骗，骗子冒充银行工作人员，打电话给客户。&lt;/p&gt;
&lt;p&gt;巴克莱银行为了防止诈骗，专门制作了一个网站，客户可以在上面查询，来电号码是否真的属于巴克莱银行。&lt;/p&gt;
&lt;p&gt;但是你能相信吗？这个网站居然加载了一个 1.3MB 的 &lt;a href=&#34;https://www.barclays.co.uk/content/dam/json-files/TelephoneNumberChecker_26_03_2021.json&#34;&gt;JSON 文件&lt;/a&gt;，其中包含巴克莱银行拥有的所有 74,000 个电话号码。&lt;/p&gt;
&lt;p&gt;更绝的是，如果你在电话号码前面，加上英国的国际区号&lt;code&gt;+44&lt;/code&gt;，网站会告诉你，它不认识这个号码。&lt;/p&gt;
&lt;p&gt;如果号码里面加上破折号，网站也会不认识这个号码。&lt;/p&gt;
&lt;h3 id=&#34;设计数据密集型应用httpsgithubcomvonngddia&#34;&gt;&lt;a href=&#34;https://github.com/Vonng/ddia&#34;&gt;设计数据密集型应用&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;gitbooks:https://vonng.gitbooks.io/ddia-cn/content/&lt;/p&gt;
&lt;h3 id=&#34;如何改善函数的可读性httpswwwtinyblogdevblog2020-07-13-javascript-roro-pattern&#34;&gt;&lt;a href=&#34;https://www.tinyblog.dev/blog/2020-07-13-javascript-roro-pattern/&#34;&gt;如何改善函数的可读性&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;只需要稍微改变参数的定义方式，就能极大提高 JavaScript 函数代码的可读性。&lt;/p&gt;
&lt;h3 id=&#34;tmux-入门指南httpspragmaticpineapplecomgentle-guide-to-get-started-with-tmux用-curl-计时httpssusaminmazetiming-with-curlhtml&#34;&gt;&lt;a href=&#34;https://pragmaticpineapple.com/gentle-guide-to-get-started-with-tmux/&#34;&gt;Tmux 入门指南&lt;/a&gt;&lt;a href=&#34;https://susam.in/maze/timing-with-curl.html&#34;&gt;用 curl 计时&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;本文介绍了一种技巧，使用 curl 在命令行获取网站的响应时间。&lt;/p&gt;
&lt;h3 id=&#34;少了一个数据库索引让我们多花了5000美元httpsbriananglinmepostsspending-5k-to-learn-how-database-indexes-work&#34;&gt;&lt;a href=&#34;https://briananglin.me/posts/spending-5k-to-learn-how-database-indexes-work/&#34;&gt;少了一个数据库索引，让我们多花了5000美元&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;作者讲了一个亲身经历的案例，SQL 语句少建了一个索引，而数据库服务商按照读取的行数收费，导致费用暴增。&lt;/p&gt;
&lt;h3 id=&#34;netlify-drophttpsappnetlifycomdrop&#34;&gt;&lt;a href=&#34;https://app.netlify.com/drop&#34;&gt;Netlify Drop&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Netlify 最近发布的一个静态网页托管服务，只要把包含 HTML、CSS、JS 文件的目录拖到上传位置，Netlify 就会自动将这个目录发布为网站。这跟 Dropbox 的功能有点像。&lt;/p&gt;
&lt;h3 id=&#34;css-doodlehttpsyuanchuandevpolygon-shapes&#34;&gt;&lt;a href=&#34;https://yuanchuan.dev/polygon-shapes&#34;&gt;CSS Doodle&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个 Web Component 组件，可以使用 CSS 语法产生各种形状。&lt;/p&gt;
&lt;h3 id=&#34;arco-designhttpsarcodesign&#34;&gt;&lt;a href=&#34;https://arco.design/&#34;&gt;Arco Design&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;字节跳动推出的企业级设计系统，提供丰富的原子组件，同时支持 React 组件库 和 Vue 组件库，可以进行各种定制。&lt;/p&gt;
&lt;h3 id=&#34;remixhttpsblogremixrunpremix-preview&#34;&gt;&lt;a href=&#34;https://blog.remix.run/p/remix-preview&#34;&gt;Remix&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;React Router 的作者发布的一个框架，在服务器运行 React 脚本，类似 next.js。&lt;/p&gt;
&lt;h3 id=&#34;google-dnshttpsdnsgoogle&#34;&gt;&lt;a href=&#34;https://dns.google/&#34;&gt;Google DNS&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;谷歌提供的 DNS 查询页面，可以查询某个域名或 IP 地址的 DNS 信息。&lt;/p&gt;
&lt;h3 id=&#34;树形目录列表生成器httpsdevtooltechtree&#34;&gt;&lt;a href=&#34;https://devtool.tech/tree&#34;&gt;树形目录列表生成器&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个网页小工具，生成文本的树形目录结构，方便将目录结构插入 Markdown 文章。&lt;/p&gt;
&lt;h3 id=&#34;deepcoursehttpsarthurdouillardcomdeepcourse&#34;&gt;&lt;a href=&#34;https://arthurdouillard.com/deepcourse/&#34;&gt;DeepCourse&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个深度学习课程，所有章节以路线图的形式呈现，可以一个个节点按顺序学习。点击一个节点，就可以学习相应的知识点。&lt;/p&gt;
&lt;h3 id=&#34;十年前httpsnealfunten-years-ago&#34;&gt;&lt;a href=&#34;https://neal.fun/ten-years-ago/&#34;&gt;十年前&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;这个网站可以查看，十年前的同一天，美国的十几个著名网站是什么样子。&lt;/p&gt;
&lt;h3 id=&#34;古人活在今天的样子httpsmossandfogcomartist-imagines-what-famous-historical-figures-would-look-like-today&#34;&gt;&lt;a href=&#34;https://mossandfog.com/artist-imagines-what-famous-historical-figures-would-look-like-today/&#34;&gt;古人活在今天的样子&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个美国艺术家想知道，古人如果活在今天会是什么样子。她就用今天的服装和风格，重新绘制了古人的画像。&lt;/p&gt;
&lt;h3 id=&#34;蓝牙的来历httpswwwthelocaldk20210303how-a-viking-king-inspired-one-of-our-best-known-modern-technologies&#34;&gt;&lt;a href=&#34;https://www.thelocal.dk/20210303/how-a-viking-king-inspired-one-of-our-best-known-modern-technologies/&#34;&gt;蓝牙的来历&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;蓝牙（bluetooth）是一种短距离、低功耗无线通信协议。这个协议的名字很奇怪，它是怎么来的呢？&lt;/p&gt;
&lt;p&gt;1998年，加拿大举行了一次国际会议，讨论如何制定一个无线通信的国际标准。&lt;/p&gt;
&lt;p&gt;当时，各家公司都有自己的无线通信协议，怎样才能推出一个统一的国际标准，成了争论不休的问题。&lt;/p&gt;
&lt;p&gt;爱立信公司的瑞典工程师 Sven Mattisson 和英特尔公司的美国工程师 Jim Kardach，都是会议的参加者。&lt;/p&gt;
&lt;p&gt;一天会议结束后，他们一起去了多伦多的一间酒吧，喝酒闲聊，谈到了历史。美国工程师要求瑞典工程师，给他讲讲北欧的历史。后者正好在读一本北欧历史小说，就向前者推荐了这本书。&lt;/p&gt;
&lt;p&gt;小说的一个主要人物是，公元10世纪的丹麦国王哈拉尔德·戈姆森，他有个绰号叫做“蓝牙”。这个绰号的来历不明，有人认为，国王有一颗牙齿坏了，传说中坏牙齿的颜色发蓝，因而得名。&lt;/p&gt;
&lt;p&gt;瑞典工程师接着说，这个国王统一了丹麦。美国工程师听到这里，灵机一动，提议把将要制定的国际标准的代号定为“蓝牙”，因为新标准会统一其它标准。与会者知道以后，表示同意这个提议。&lt;/p&gt;
&lt;p&gt;最终，这个低成本、低功耗的国际通信标准，就被叫做“蓝牙”，在1998年5月推出，电子设备可以使用它进行短距离无线通信。&lt;/p&gt;
&lt;p&gt;世界第一台蓝牙设备在1999年上市。当时，蓝牙还只是临时的代号，但是人们想不出更合适的名字，于是它变成了永久名字。&lt;/p&gt;
- https://www.openheart.icu/speech/interesting/ - ALL RIGHTS RESERVED KRIS NIE</description>
        </item>
    
    
    
        <item>
        <title>Speech</title>
        <link>https://www.openheart.icu/speech/speech/</link>
        <pubDate>Tue, 21 Jul 2020 19:45:28 +0000</pubDate>
        
        <guid>https://www.openheart.icu/speech/speech/</guid>
        <description>42th openheart https://www.openheart.icu/speech/speech/ -&lt;ol&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;唯一不适应远程工作的是中层管理人员。&lt;/p&gt;
&lt;p&gt;基层员工对于在家工作感到很高兴，只要把活做好就可以了。高层管理人员只需要对销售和产量数字负责。中层管理人员的不适应在于，他们的职责是直接监控基层员工，最常用的判断方法是通过是否坐在座位上等迹象，来判断工作量和工作是否勤奋。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://news.ycombinator.com/item?id=23607203&#34;&gt;Hacker news 读者&lt;/a&gt;&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;我有一种反英雄主义的精神。以前看电视时，我就对皇帝和将军不感兴趣，觉得他们已经有荣耀和风光了。&lt;/p&gt;
&lt;p&gt;我更关心皇帝和将军手下的那些小兵，有时战斗刚开始，他们就被杀死了。他们脑海里想的是什么？会有人记得他们，为他们哭泣吗？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; 黄西自传《黄瓜的黄，西瓜的西》&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;时钟和镜子改变了人类社会。&lt;/p&gt;
&lt;p&gt;时钟创造了一种焦虑文化。&lt;/p&gt;
&lt;p&gt;镜子创造了一种自恋文化。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; David Perell&lt;/p&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;100年前的中国，四千个人里面才有一个中学生，其他都是文盲。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; 李敖&lt;/p&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;看到抽象的东西，应该尽量使它变得具体；看到具体的东西，应该尽量使它变得抽象。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; 李敖&lt;/p&gt;
&lt;ol start=&#34;6&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;如果你花钱买，你就是客户，如果你免费获得，你就是产品。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://www.wired.com/story/a-startup-is-testing-the-subscription-model-for-search-engines/&#34;&gt;《创业公司尝试搜索引擎的订阅模式》&lt;/a&gt;&lt;/p&gt;
&lt;ol start=&#34;7&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;40年前算法很重要，大部分程序员都需要懂，因为硬件差，必须靠算法保证性能。&lt;/p&gt;
&lt;p&gt;但是今天只剩下不到1%的程序员直接跟算法打交道，其他人都使用现成的软件包，或从大公司购买算法，算法已成为一种商品，普通程序员不再需要自己生产了，也不需要有很深入的了解。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;http://shape-of-code.coding-guidelines.com/2020/07/05/algorithms-are-now-commodities/&#34;&gt;《算法现在是商品》&lt;/a&gt;&lt;/p&gt;
&lt;ol start=&#34;8&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;本站100%无 JavaScript。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://www.swiftbysundell.com/special/javascript-free/&#34;&gt;swiftbysundell.com&lt;/a&gt;&lt;/p&gt;
&lt;ol start=&#34;9&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;我希望 JavaScript 程序员、Java 程序员、PHP 程序员、Perl 程序员、Python 程序员、C 程序员、C ++ 程序员、以及其他重要语言的程序员，大家聚在一起开个会，一劳永逸地提出一个大家都遵守的解决方案，我们应该如何处理时间和日期。我厌倦了每个语言都有自己一套处理时间和日期的方法。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://news.ycombinator.com/item?id=23781819&#34;&gt;《JavaScript 语言准备提出新的时间和日期 API》&lt;/a&gt;&lt;/p&gt;
&lt;ol start=&#34;10&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;至少12年 Kubernetes 经验。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Required Technical and Professional Expertise&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Minimum 12+ years’ experience in Kubernetes administration and management&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; IBM 招聘云工程师的&lt;a href=&#34;https://intellijobs.ai/job/IBMCloud-Native-Infrastructure-Engineer-Architect-bvJJ6yraexfWOk1nMRKP-bvJJ6yraexfWOk1nMRKP&#34;&gt;公告&lt;/a&gt;，但 Kubernetes 是2014年发布的。&lt;/p&gt;
&lt;ol start=&#34;11&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;一家公司获得垄断地位以后，就不需要从任何形式的产品开发获益了，只通过市场营销或金融工程就能增加利润。最终，公司就会被销售人员和财务人员控制。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; 史蒂夫·乔布斯&lt;/p&gt;
&lt;ol start=&#34;12&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;锚定偏差（anchoring bias）指的是决策时严重依赖第一个可用的信息。&lt;/p&gt;
&lt;p&gt;比如，你走进一家体育用品商店，发现的第一件商品，是一条价值500美元的运动裤。接着，你看到另一条价格为300美元的运动裤时，就会觉得它很便宜，实际上如果首先看到这条300美元的裤子，你会觉得它根本不便宜。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://models.substack.com/p/why-are-we-anchored-often&#34;&gt;《锚定偏差》&lt;/a&gt;&lt;/p&gt;
&lt;ol start=&#34;13&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;信息成瘾指的是强迫性信息消费：明明已经看完所有内容，你仍在继续滚动浏览 Facebook；你刚刚关闭 Instagram，立即再次打开它；你每五分钟拿起手机，检查有没有新的通知。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://www.defetter.com/&#34;&gt;《什么是信息成瘾》&lt;/a&gt;&lt;/p&gt;
&lt;ol start=&#34;14&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;谷歌的网页排名算法 PageRank，得名于创始人拉里·佩奇（ Larry Page），实际含义是佩奇的算法（Page&amp;rsquo;s rank）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://notes.rolandcrosby.com/posts/unexpectedly-eponymous/&#34;&gt;《意想不到的来自人名的事物》&lt;/a&gt;&lt;/p&gt;
&lt;ol start=&#34;15&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;低本底钢（Low-background steel）指的是1945年第一枚核弹爆炸之前生产的任何钢铁。此后有了核爆，大气中辐射物质增加，影响了所生产的所有钢铁。&lt;/p&gt;
&lt;p&gt;低本底钢目前用于需要最高灵敏度的放射性核检测设备中，主要来源是在第一次核爆发生前建造的船只，它们大多沉没在水底。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://en.wikipedia.org/wiki/Low-background_steel&#34;&gt;维基百科&lt;/a&gt;&lt;/p&gt;
&lt;ol start=&#34;16&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;我一直是“强观点，弱立场”（strong opinions, weakly held）。&lt;/p&gt;
&lt;p&gt;不管什么事情，我都会凭直觉得到一个结论，这就是“强观点”；只要有任何与结论相悖的信息，我就会修正自己的观点，这就是“弱立场”。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://commoncog.com/blog/strong-opinions-weakly-held-is-bad/&#34;&gt;《强观点，弱立场》&lt;/a&gt;&lt;/p&gt;
&lt;ol start=&#34;17&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;几乎所有的企业软件公司，都是销售人员多于工程人员。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://news.ycombinator.com/item?id=23907923&#34;&gt;Hacker News 读者&lt;/a&gt;&lt;/p&gt;
&lt;ol start=&#34;18&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;地球与火星之间的通讯大约需要40分钟，发出一条指令，40分钟以后才能收到，这意味着火星登陆器必须高度自动化，具有自主决策的能力。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://thediplomat.com/2020/07/why-is-china-going-to-mars/&#34;&gt;《中国为什么想去火星》&lt;/a&gt;&lt;/p&gt;
&lt;ol start=&#34;19&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;女：你觉得怎样才是“完美的约会”（the perfect date）？&lt;/p&gt;
&lt;p&gt;男： DD/MM/YYYY，别的日期格式（date format）都容易产生误会。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://twitter.com/rafrasenberg/status/1286968074323865602&#34;&gt;推特&lt;/a&gt;。英语里面，约会和日期是同一个词&lt;code&gt;date&lt;/code&gt;。&lt;/p&gt;
&lt;ol start=&#34;20&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;REST 和 GraphQL 的最大区别是处理缓存的方式。&lt;/p&gt;
&lt;p&gt;当你用 REST 方式构建 API 时，基本上可以自动获得 HTTP 的缓存能力。如果选择 GraphQL，你就需要自己为客户端或应用程序添加缓存。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://www.stxnext.com/blog/how-to-build-a-good-api-that-wont-embarrass-you&#34;&gt;《如何构建优秀 API》&lt;/a&gt;&lt;/p&gt;
&lt;ol start=&#34;21&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;不要轻易说出自己痛苦，能体会的人很少，看热闹的人很多。&lt;/p&gt;
&lt;p&gt;也不要轻易炫耀，会替你感到高兴的人很少，等着看你最后下场的人很多。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; 推特用户&lt;/p&gt;
&lt;ol start=&#34;22&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;所谓完美，不是指不能再添加别的东西了，而是指没有东西可以从其中拿掉了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://www.brainyquote.com/quotes/antoine_de_saintexupery_103610&#34;&gt;安托万·德圣埃克絮佩里&lt;/a&gt;&lt;/p&gt;
&lt;ol start=&#34;23&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;公司刚成立时，需要瑞士军刀型人才。&lt;/p&gt;
&lt;p&gt;公司一旦发展壮大，需要菜刀型人才。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; David Perell&lt;/p&gt;
&lt;ol start=&#34;24&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;硬件总是变得越来越快，但软件总是变得越来越慢。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://en.wikipedia.org/wiki/Wirth&#39;s_law&#34;&gt;维尔斯定律&lt;/a&gt;（Wirth&amp;rsquo;s law）&lt;/p&gt;
&lt;ol start=&#34;25&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;SSD 固态硬盘变成主流，导致 Windows 10 在 HDD 机械硬盘上几乎无法使用。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://news.ycombinator.com/item?id=24015218&#34;&gt;Hacker News 读者&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;26&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Web 和浏览器已经发展到令人恐怖的技术规模。微软完全放弃了，Mozilla 在死亡线上挣扎，Safari 根本无足轻重，只剩下 Google 一个玩家。&lt;/p&gt;
&lt;p&gt;我呼吁谷歌立即无限期地中止向 Web 和浏览器添加新 API。浏览器实际上应该开始考虑缩小 API 并削减功能，更关注性能、效率、可靠性和安全性。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://drewdevault.com/2020/08/13/Web-browsers-need-to-stop.html&#34;&gt;《Web 需要停下来》&lt;/a&gt;&lt;/p&gt;
&lt;ol start=&#34;27&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;无知的一阶效应包括做出错误的决定，二阶效应包括不了解决定为何错误。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://unintendedconsequenc.es/tiktok-ban-openness-trap/&#34;&gt;unintended consequences&lt;/a&gt;&lt;/p&gt;
&lt;ol start=&#34;28&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;物理学家狄拉克（Dirac）沉默寡言，回答别人时经常只用一个单词。他顽皮的同事们引入了一种新的度量单位，测量人类的语速，就叫做Dirac，每小时只说一个词即为一个 Dirac。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://theconversation.com/the-life-changing-love-of-one-of-the-20th-centurys-greatest-physicists-51229&#34;&gt;《狄拉克的恋爱》&lt;/a&gt;&lt;/p&gt;
&lt;ol start=&#34;29&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;制作一加仑糖浆需要50加仑的果汁，表达也是这样，你要把想法以压缩后的形式展示出来。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://www.perell.com/blog/expression-is-compression&#34;&gt;《表达就是压缩》&lt;/a&gt;&lt;/p&gt;
&lt;ol start=&#34;30&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;我们公司是一家历史悠久的 IT 公司。人力资源部门的反馈表明，我们很难挽留年轻员工，因为他们不想使用旧系统。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://news.ycombinator.com/item?id=24230266&#34;&gt;Hacker News 读者&lt;/a&gt;&lt;/p&gt;
&lt;ol start=&#34;31&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;架构师的工作不是做出决策，而是尽可能久地推迟决策，先在不做出重大决策的情况下构建程序，以便以后有足够信息时再做出决策。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://tomgamon.com/posts/2020-08-25-dont-marry-your-design/&#34;&gt;Bob Martin&lt;/a&gt;&lt;/p&gt;
&lt;ol start=&#34;32&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;公钥加密已经发明40多年了，但是我们仍然把魔术数字印在信用卡上，任何看到它们的人都可以未经授权拿走我们所有的钱。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://news.ycombinator.com/item?id=24277899&#34;&gt;Hacker News 读者&lt;/a&gt;&lt;/p&gt;
&lt;ol start=&#34;33&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;我加入谷歌，是因为需要更多钱；离开谷歌，是因为需要更多时间。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://theartofmachinery.com/2020/08/04/leaving_google.html&#34;&gt;《离开谷歌的这五年》&lt;/a&gt;&lt;/p&gt;
&lt;ol start=&#34;34&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;如果微软推出容器服务，有些人是不会买的。但是，GitHub 的容器服务，他们就会买。我认为，这就是微软收购 GitHub 的部分原因。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://news.ycombinator.com/item?id=24346163&#34;&gt;Hacker News 读者&lt;/a&gt;评论 &lt;a href=&#34;https://github.blog/2020-09-01-introducing-github-container-registry/&#34;&gt;GitHub 推出容器仓库服务&lt;/a&gt;&lt;/p&gt;
&lt;ol start=&#34;45&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;贫民窟里的人已经睡眠静了。对面日新里的一排临邓脱路的洋楼里，还有几家点着了红绿的电灯，在那里弹罢拉拉衣加。一声二声清脆的歌音，带着哀调，从静寂的深夜的冷空气里传到我的耳膜上来，这大约是俄国的飘泊的少女，在那里卖钱的歌唱。天上罩满了灰白的薄云，同腐烂的尸体似的沉沉的盖在那里。云层破处也能看得出一点两点星来，但星的近处，黝黝看得出来的天色，好像有无限的哀愁蕴藏着的样子。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; 郁达夫《春风沉醉的晚上》&lt;/p&gt;
&lt;ol start=&#34;46&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;军队为什么要实行军衔制度？这是为了部队被打散，临时拼建时，能够迅速确定指挥关系。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; 维基百科&lt;/p&gt;
&lt;ol start=&#34;47&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;我辞职不是因为收入，也不是因为人际关系，而是因为我觉得自己被困住了，没有增长的空间了。公司的业务离当前行业的技术发展越来越远，让我作为开发人员感到非常痛苦。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash;&lt;a href=&#34;https://stitcher.io/blog/dont-get-stuck&#34;&gt;《不要被困住》&lt;/a&gt;&lt;/p&gt;
&lt;ol start=&#34;48&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;让一只猴子在打字机上随机按键，当按键时间达到无穷时，几乎必然能够打出任何给定的文字，比如莎士比亚的全部著作。这称为“无限猴子定力”。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://en.wikipedia.org/wiki/Infinite_monkey_theorem&#34;&gt;维基百科&lt;/a&gt;&lt;/p&gt;
&lt;ol start=&#34;49&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;苹果公司不允许恶棍在电影中使用 iPhone。因此，如果您正在看一部新电影并且角色拥有 iPhone，那么他们就不是坏人，这算是剧透吗？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://finance.yahoo.com/news/2020-02-26-rian-johnson-apple-movie-villains-use-iphones-on-came.html&#34;&gt;《苹果和流行文化》&lt;/a&gt;&lt;/p&gt;
&lt;ol start=&#34;50&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;2005年，我的毕业论文的《参考书目》部分包含了152个 URL。为了纪念毕业十五周年，我重新检查了这些 URL，其中82个不再起作用。我因此假定，互联网链接的腐烂率是57%。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash;&lt;a href=&#34;https://www.lightbluetouchpaper.org/2020/09/03/a-measurement-of-link-rot-57/&#34;&gt;《测量链接腐烂率》&lt;/a&gt;&lt;/p&gt;
&lt;ol start=&#34;51&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;互联网软件行业的开发模式，已经从漫长的开发周期和专门的质量保证（QA）阶段，转移到了快节奏的连续集成/连续交付（CI / CD）管道，这样做极大地提高了迭代速度。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://engineering.linkedin.com/blog/2020/production-testing-with-dark-canaries&#34;&gt;《黑暗金丝雀模式的生产模式》&lt;/a&gt;&lt;/p&gt;
&lt;ol start=&#34;52&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;你能在下面的一副扑克牌中，快速找到三个方块的那张牌吗？这就是用户面对大型菜单进行导航时的感受。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;https://camo.githubusercontent.com/74202f12ef5f086091c1ad42a3bbeb860ffc9ed9/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323030392f6267323032303039313430312e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://uxmovement.com/navigation/solving-the-megaton-problem-with-mega-menus/&#34;&gt;《大菜单导航的解决方案》&lt;/a&gt;&lt;/p&gt;
&lt;ol start=&#34;53&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;三年前，我们搬到伦敦教书，一直租房住，现在可以买房了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://www.imperial.ac.uk/news/203853/imperial-mathematician-scoops-3m-breakthrough-prize/&#34;&gt;英国马丁·海尔教授&lt;/a&gt;（Martin Hairer）的获奖感言。他获得了今年的数学突破奖，奖金为300万美元，这是目前奖金最高的科学奖项。&lt;/p&gt;
&lt;ol start=&#34;54&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;It is not dead,it is indeed done.(它还没有死，但确实已经写完了)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://momentjs.com/docs/#/-project-status/&#34;&gt;Moment.js&lt;/a&gt; 宣布停止开发，进入维护状态。&lt;/p&gt;
&lt;ol start=&#34;55&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;技术的快速进步，尽管带来了不可预测的后果，但是它让人类站到了更高的地方。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash;&lt;a href=&#34;https://hawaiigentech.com/post/commentary/frogs-wont-let-themselves-be-cooked/&#34;&gt;《时代变化中的技术隐喻》&lt;/a&gt;&lt;/p&gt;
&lt;ol start=&#34;56&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;你会在20个方向上走一步，还是在一个方向上走20步？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; 匿名&lt;/p&gt;
&lt;ol start=&#34;57&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;GPT-3 模型就像一个聪明的学生，他没有读完书，试图胡说八道，将一些众所周知的事实、一些真相、一些直率的谎言，编织在一种流畅的叙述中。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://syncedreview.com/2020/09%E4%BC%8A%E4%B8%87%E5%B8%95/09/new-multitask-benchmark-suggests-even-the-best-language-models-dont-have-a-clue-what-theyre-doing/&#34;&gt;一个教授&lt;/a&gt;评论 GPT-3 模型可以自动生成人类可读的文本&lt;/p&gt;
&lt;ol start=&#34;58&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;网站需要3种技术，但是由于用到各种工具和框架，最终使我接触了约20种不同的技术，有时还不得不研究第 n 级依赖项的源代码。&lt;/p&gt;
&lt;p&gt;这就是我不喜欢现代 Web 开发的地方，你想使用三个工具，但是必须知道如何使用二十个工具。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://css-tricks.com/weaved-webs/&#34;&gt;《编织在一起的 Web》&lt;/a&gt;&lt;/p&gt;
&lt;ol start=&#34;59&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Conway&amp;rsquo;s law&lt;/strong&gt;：设计系统的架构受制于产生这些设计的组织的沟通结构。&amp;ndash;&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E9%A9%AC%E5%B0%94%E6%96%87%C2%B7%E5%BA%B7%E5%A8%81&#34;&gt;马尔文·康威&lt;/a&gt;1967&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Any organization that designs a system (defined broadly) will produce a design whose structure is a copy of the organization&amp;rsquo;s communication structure.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash;  Melvin E. Conway&lt;/p&gt;
&lt;ol start=&#34;60&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;如果你无法将产品的价格翻倍，那么你的产品就不占有市场优势。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://blog.asmartbear.com/kung-fu.html&#34;&gt;《创业公司的功夫》&lt;/a&gt;&lt;/p&gt;
&lt;ol start=&#34;61&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;苹果公司在发布新的操作系统（iOS、iPadOS、watchOS ）之前，都公开了测试版，但是等到正式版上市，并没有多少改进，依然有很多 Bug。&lt;/p&gt;
&lt;p&gt;那么，公开测试版的意义何在？真的是为了提高正式版的质量吗？……无论最初的目的是什么，公共测试版现在都是一种营销工具，一种大肆宣传新版本、并让苹果爱好者购买与新版本一起发布的新产品的方式。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://leancrew.com/all-this/2020/09/betas/&#34;&gt;《苹果软件的测试版》&lt;/a&gt;&lt;/p&gt;
&lt;ol start=&#34;62&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;关系数据库有两个优势，一个是节省存储空间，另一个是可以跟踪复杂的数据关系。&lt;/p&gt;
&lt;p&gt;但是，现在的存储设备很便宜，反而是 CPU 的处理时间更贵。所以，我建议客户，如果不需要处理复杂的数据关系，那就避免使用关系型数据库，而使用 NoSQL 数据库。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://news.ycombinator.com/item?id=24542193&#34;&gt;Hacker News 读者&lt;/a&gt;&lt;/p&gt;
&lt;ol start=&#34;63&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;有一种说法，年龄在35岁以上的人，建立学术影响力的唯一机会是编写一本教科书。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://blog.ploeh.dk/2020/09/14/we-need-young-programmers-we-need-old-programmers/&#34;&gt;Mark Seemann&lt;/a&gt;&lt;/p&gt;
&lt;ol start=&#34;64&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;理性的人使自己适应世界，不理性的人不愿意妥协，坚持要求世界适应他的方式。因此，一切进步都取决于不理性的人。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; 萧伯纳&lt;/p&gt;
&lt;ol start=&#34;65&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;Zoom 之类的远程会议软件已经成为标准，疫情结束后，很多商务旅行永远不会回来了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://news.ycombinator.com/item?id=24576832&#34;&gt;Hacker News 读者&lt;/a&gt;&lt;/p&gt;
&lt;ol start=&#34;66&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;一百多年前美国有一个物理学家叫做亨利·罗兰，做过一次演讲，他说假如我们停止科学的进步而只留意科学的应用，很快就会退化成中国人那样。多少代人以来，中国人都没有什么进步，因为他们只满足科学应用，却从来没有追问过他们所做事情的原理。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://finance.sina.com.cn/china/2020-09-18/doc-iivhuipp5079056.shtml&#34;&gt;《美国从来没有放弃制造业》&lt;/a&gt;&lt;/p&gt;
&lt;ol start=&#34;67&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;1320年到1820年的五百年之间，英格兰没有建立任何新的大学。&lt;/p&gt;
&lt;p&gt;原因是1320年，牛津大学和剑桥大学向国王爱德华三世国王请愿，要求阻止在英国境内成立新大学，国王同意了他们的要求。这导致了两所大学比英国其他大学多出了500年的领先优势。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://viaappia.substack.com/p/the-ancient-universities&#34;&gt;《古代大学》&lt;/a&gt;&lt;/p&gt;
&lt;ol start=&#34;68&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;如果你想要像 Calibre 这样的优秀开源项目，那就需要世界上有些古怪的人，愿意牺牲自己的时间，做出产品无偿给他人使用。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://news.ycombinator.com/item?id=24586602&#34;&gt;Hacker News 读者&lt;/a&gt;评论 Calibre 5.0 发布&lt;/p&gt;
&lt;ol start=&#34;69&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;如果你需要工作来支付房租和账单，并且没有把握找到其他工作，那么你就被困住了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://news.ycombinator.com/item?id=24595613&#34;&gt;Hacker News 读者&lt;/a&gt;&lt;/p&gt;
&lt;ol start=&#34;70&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;人工智能不需要恨我们就可以摧毁我们。正如我们不讨厌蚂蚁，但是如果我们需要修建高速公路，就会摧毁蚁丘一样。人工智能将以同样的方式对待我们，你不讨厌蚂蚁，你只是在修路。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;-– &lt;a href=&#34;https://podcastnotes.org/sway/elon-musk-wants-to-hack-your-brain-elon-musk-on-sway-with-kara-swisher/&#34;&gt;伊隆·马斯克&lt;/a&gt;（Elon Musk）&lt;/p&gt;
&lt;ol start=&#34;71&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;如果你需要工作来支付房租和账单，并且没有把握找到其他工作，那么你就被困住了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://news.ycombinator.com/item?id=24595613&#34;&gt;Hacker News 读者&lt;/a&gt;&lt;/p&gt;
&lt;ol start=&#34;72&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;人工智能不需要恨我们就可以摧毁我们。正如我们不讨厌蚂蚁，但是如果我们需要修建高速公路，就会摧毁蚁丘一样。人工智能将以同样的方式对待我们，你不讨厌蚂蚁，你只是在修路。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;-– &lt;a href=&#34;https://podcastnotes.org/sway/elon-musk-wants-to-hack-your-brain-elon-musk-on-sway-with-kara-swisher/&#34;&gt;伊隆·马斯克&lt;/a&gt;（Elon Musk）&lt;/p&gt;
&lt;ol start=&#34;73&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;我脑子里有太多东西了，就像打开太多浏览器窗口。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;-– &lt;a href=&#34;https://podcastnotes.org/sway/elon-musk-wants-to-hack-your-brain-elon-musk-on-sway-with-kara-swisher/&#34;&gt;伊隆·马斯克&lt;/a&gt;（Elon Musk）&lt;/p&gt;
&lt;ol start=&#34;74&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/We_shall_fight_on_the_beaches&#34;&gt;We shall fight on the beaches.&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol start=&#34;75&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ndash; A common title given to a speech delivered by the British Prime Minister &lt;a href=&#34;https://en.wikipedia.org/wiki/Winston_Churchill&#34;&gt;Winston Churchill&lt;/a&gt; to the &lt;a href=&#34;https://en.wikipedia.org/wiki/British_House_of_Commons&#34;&gt;House of Commons&lt;/a&gt; of the &lt;a href=&#34;https://en.wikipedia.org/wiki/Parliament_of_the_United_Kingdom&#34;&gt;Parliament of the United Kingdom&lt;/a&gt; on 4 June 1940.&lt;/p&gt;
&lt;p&gt;只有员工倾向于长期待在一家公司中，培训员工才是有意义的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://news.ycombinator.com/item?id=24624950&#34;&gt;保罗·格雷厄姆&lt;/a&gt;（Paul Graham）&lt;/p&gt;
&lt;ol start=&#34;76&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;切勿购买需要连接互联网的家电产品。它们不仅不安全，而且还会收集你的信息，并试图向你播放广告。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://news.ycombinator.com/item?id=24625626&#34;&gt;Hacker News 读者&lt;/a&gt;&lt;/p&gt;
&lt;ol start=&#34;77&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;对我来说，写一本书跟创业的困难程度是一样的。所以，我出版了第一本书以后，就没有接着写第二本书。我还在等第一本书的伤疤消失，并且天真地希望写下一本书也许会容易一些。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://martin.kleppmann.com/2020/09/29/is-book-writing-worth-it.html&#34;&gt;《写书：值得吗？》&lt;/a&gt;&lt;/p&gt;
&lt;ol start=&#34;78&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;氢气（H2）不是能源，因为它不存在于自然界，必须通过消耗其他能源才能生产出来。因此，氢气燃料电池更恰当的描述是能量存储系统，而不是能源。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://news.ycombinator.com/item?id=24568930&#34;&gt;Hacker News 读者&lt;/a&gt;&lt;/p&gt;
&lt;ol start=&#34;79&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;没有愚蠢的想法，只有早期的想法。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://eriktorenberg.substack.com/p/take-asymmetric-bets&#34;&gt;马克·安德森（Marc Andreessen）&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;80&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;人们认为保持专注，意味着要对那些必须专注去做的事情说 Yes。其实并非如此，保持专注的真正含义是对其他一百个好主意说 No。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://www.inc.com/marcel-schwantes/warren-buffett-says-this-is-1-simple-habit-that-separates-successful-people-from-everyone-else.html&#34;&gt;乔布斯&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;81&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;现在，世界人口的年增长率约为1.1％，科学家的年增长率超过4％，科学研究（论文、书籍、数据集等）的年增长率约为8-9％。&lt;/p&gt;
&lt;p&gt;这就是说，科学知识的增长速度，几乎比人口增长高一个数量级。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://lelon.io/blog/boosting-scientific-productivity-again&#34;&gt;《再次提高科学生产力》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;82&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;暗模式（dark mode）会导致不易阅读的问题。黑暗背景中高亮度的文字，使得老年人和眼睛散光的人，觉得文字周围有光晕。所以，暗模式不适合文字阅读。纸张是白的，墨水是黑的，因为这样的搭配最容易阅读。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://commandcenter.blogspot.com/2020/09/color-blindness-is-inaccurate-term.html&#34;&gt;《色盲的科学解释》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;83&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;有的人翻译文章，就像哈希函数。经过他的翻译，就认不出原文了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://news.ycombinator.com/item?id=24696385&#34;&gt;Hacker News 读者&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;84&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;根据研究，一个 JavaScript 项目平均有377个依赖关系，而 Java 项目有43个，Python 项目只有16个。你使用的依赖项越多，就隐含着必须信任的外部开发者也越多。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://www.btao.org/2020/10/02/npm-trust.html&#34;&gt;《NPM 的信任网》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;85&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;太阳能取代传统的化石能源发电的最大问题是，现在的电网并不是为屋顶太阳能发电设计的，它是为集中式的发电厂设计的。如果燃煤发电厂消失，就需要将电网改造成分布式，每户家庭都有自己的电池储能系统。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://www.nytimes.com/2020/09/29/business/energy-environment/australia-rooftop-solar-coal.html&#34;&gt;《纽约时报：煤炭大国澳大利亚如何推动屋顶太阳能》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;86&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;为什么成年人学习外语，不如儿童快？一个主要原因是，如果小孩犯了语法错误，随时会得到纠正；成年人犯了语法错误，别人会不好意思指出，如果当面指出，很可能得罪人。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://news.ycombinator.com/item?id=24712573&#34;&gt;Hacker News 读者&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;87&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果你拿到5万月薪时，并没有比5千月薪时更快乐，那就说明你是一个利己主义者，而不是利他主义者。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;88&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;生产一吨大豆需要约1500吨水，所以中国的大豆可能永远都会生产不足。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://www.theatlantic.com/international/archive/2020/02/china-brazil-amazon-environment-pork/606601/&#34;&gt;《大西洋杂志》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;89&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;伊朗人无法访问 GitLab、GitHub、Docker、NPM、Google Developer、Android、AWS、Go、Kubernetes。根据美国政府的要求，那些网站全部屏蔽了伊朗的 IP 地址。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://ahmadhaghighi.com/blog/2020/gitlab/&#34;&gt;《GitLab 阻止了伊朗人的访问》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;90&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;日本的垃圾分类手册长达37页，而且每天回收的垃圾不一样，这导致我一周大约有6个小时要用来处理垃圾。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://twitter.com/searls/status/1320411053910609921&#34;&gt;一个美国人&lt;/a&gt;在日本生活的感想&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://camo.githubusercontent.com/43665d3daaeeee985fcf31fed4ed3ea7f765dfbb9bc86df8ec0008bf310f0db1/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031302f6267323032303130323630312e6a7067&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/43665d3daaeeee985fcf31fed4ed3ea7f765dfbb9bc86df8ec0008bf310f0db1/68747470733a2f2f7777772e77616e67626173652e636f6d2f626c6f67696d672f61737365742f3230323031302f6267323032303130323630312e6a7067&#34; alt=&#34;img&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;91&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;信用卡已经过时了，收费太高。在美国，商家和消费者每笔交易要交纳2％的手续费，简直就是信用卡在对美国经济收税。这也是支付宝和微信支付在中国流行的原因，你可以向任何人付款，而且是小额付款，几乎没有任何费用。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://www.ncuscr.org/media/podcast/uschinainsights/kai-fu-lee-future-ai-united-states-china&#34;&gt;李开复&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;92&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;丰田公司的一个决策原则是，做决定的不是等级最高的人，而是最接近正在发生的事情的人。丰田公司认为，决策时掌握的实践知识越多，决策就会越好。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; 《丰田之道》&lt;/p&gt;
&lt;p&gt;93&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;一切都是关联的，但是距离近的东西比远处的东西对你更相关。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://en.wikipedia.org/wiki/Tobler&#39;s_first_law_of_geography&#34;&gt;托伯勒地理第一定律&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;94&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;你在科技业追求的是什么？当然是在最赚钱公司的最赚钱部门，卡到一个位置嘛。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; Joeman（台湾 Youtuber）谈别人不理解，自己辞掉产品经理去拍视频。&lt;/p&gt;
&lt;p&gt;95&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;4G 上网的二氧化碳排放比 WIFI 上网高4～7倍。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://devblogs.microsoft.com/sustainable-software/carbon-aware-vs-carbon-efficient-applications/?WT.mc_id=green-8661-cxa&#34;&gt;《程序员的碳意识》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;96&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;为什么许多人对新冠病毒在全世界造成的大量死亡感到麻木，因为对于我们大多数人来说，这场疫情的最惨痛经历是目击不到的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://www.bbc.com/future/article/20200930-can-empathy-be-bad-for-you&#34;&gt;BBC&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;97&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;2011年，IBM 公司首次提出，正在开发的沃森（Watson）人工智能系统可能有一天可以治愈癌症。那时，该公司的年收入为1070亿美元，自那以后，业务规模每年都在缩小，2017年的年收入变成790亿美元。内部员工开始提出“公司应该停止研究癌症。”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://slate.com/business/2018/08/ibms-watson-how-the-ai-project-to-improve-cancer-treatment-went-wrong.html&#34;&gt;《沃森系统出了什么问题？》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;98&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1820年，英格兰最著名的外科医生罗伯特·李斯特顿（Robert Liston）创造了一项世界记录，他做了历史上唯一一场死亡率达到300％的手术。&lt;/p&gt;
&lt;p&gt;他为一位肌肉坏死的病人截肢，沾过病人血液的手术刀不小心割伤了一位助手，旁边还有一位医师正在观摩手术。由于当时人们不知道细菌的存在，没有消毒意识，几天后，患者、助手、旁观医师相继死亡。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://medium.com/history-of-yesterday/the-surgery-with-a-300-mortality-rate-d64ecf6db6db&#34;&gt;《麻醉药发明之前的医学》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;99&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;小说家雷蒙德·卡佛（Raymond Carver）死后，人们在他的上衣口袋里发现一张折叠的纸，上面列出了他提醒自己别忘记的事情：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;鸡蛋&lt;/li&gt;
&lt;li&gt;花生酱&lt;/li&gt;
&lt;li&gt;热巧克力&lt;/li&gt;
&lt;li&gt;澳大利亚&lt;/li&gt;
&lt;li&gt;南极洲&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://www.theparisreview.org/blog/2020/11/16/we-are-built-to-forget/&#34;&gt;《巴黎评论》杂志&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;100&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;太多的人把辩论看作是战斗，要分出胜负。其实，辩论应该是一种合作，两个人合作发现真理。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;http://www.liamrosen.com/arguments.html&#34;&gt;《建设性辩论的初学者指南》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;101&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;亚马逊云服务开始提供 macOS 实例，底层是 M1 芯片的 Mac mini。价格不便宜，每小时1.083美元，相当于每天25.99美元。这意味着，如果你的使用时间多于77天，那就不如自己买一台 Mac mini 了（价格1999美元）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://www.theregister.com/2020/12/02/aws_ec2_mac_pricing/&#34;&gt;《亚马逊提供云 Mac 服务》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;102&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果数据不多，最好避免使用数据库，纯文本文件或数据存储在内存中就可以了。数据库确实有一些优势，比如结构化数据、文件锁定、原子性操作等等，但是会让软件变得沉重。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://www.arp242.net/stupid-light.html&#34;&gt;《追求轻盈的软件》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;103&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;当年，微软规定的编码风格是，（变量名里面）2个或3个字母的缩写词必须全部大写，4个或4个以上字母的缩写词必须首字母大写。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://twitter.com/brendaneich/status/1316377408027594753&#34;&gt;Chris Wilson&lt;/a&gt;（前微软员工）回答为什么 XMLHttpRequest 会有如此奇葩的大小写组合。&lt;/p&gt;
&lt;p&gt;104&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;关于产品有两个令人不快的事实。&lt;/p&gt;
&lt;p&gt;真相1：我们至少有一半的想法行不通。&lt;/p&gt;
&lt;p&gt;真相2：即使是好主意，也要经过多次迭代才能变得可行。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://mgadams.com/the-founders-guide-to-actually-understanding-users-c68feaecac44&#34;&gt;eBay 创始团队成员马蒂·卡根&lt;/a&gt;（Marty Cagan）&lt;/p&gt;
&lt;p&gt;105&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;DNS 相关协议在过去的三十年一直在增长，平均每两天增加一页，现在已经有数千页的密集文本。实际上，没人有办法在开发前阅读所有文档。&lt;/p&gt;
&lt;p&gt;DNS 已经到了如此复杂的地步，以至于没人能完全掌握一切。这将导致不可能编写任何新的 DNS 实现。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://www.ietf.org/blog/herding-dns-camel/&#34;&gt;《放牧 DNS 骆驼》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;106&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;不管你多么聪明或多么有经验，你的大多数想法根本行不通。成功的想法需要花费时间和辛勤的工作，才能成为被市场广泛采用的真实产品。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://mgadams.com/the-founders-guide-to-actually-understanding-users-c68feaecac44&#34;&gt;《做一个真正了解用户的创始人》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;107&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;游泳横渡英吉利海峡的人说，最困难的部分之一是最后阶段，你已经可以看到前方的海岸，但实际上还有很长一段距离。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://blog.thinkst.com/2020/11/new-features-arent-solved-problems.html&#34;&gt;《构建新功能的痛苦》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;108&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Also: when Covid first started, and facemasks were plentiful in China but almost impossible to get in the US, Chao-Yang Lu, one of the leaders of the new work and my sometime correspondent on the theory of BosonSampling, decided to mail me a box of 200 masks (I didn’t ask for it). I don’t think that influenced my later review, but it was appreciated nonetheless.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://www.scottaaronson.com/blog/?p=5122&#34;&gt;Scott Aaronson&lt;/a&gt; 对中国量子计算机论文审核意见的附言&lt;/p&gt;
&lt;p&gt;109&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;提高测试覆盖率的最好方法，是识别并删除不必要的代码。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://preslav.me/2020/12/03/the-myth-of-code-coverage/&#34;&gt;《测试覆盖率神话》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;110&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;一般而言，尖端技术很快就会被替代，因此生命周期很短。相反地，落后但非常便宜的技术会长期存在，甚至可能持续数十年。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://lwn.net/SubscriberLink/838807/9b293f03c03ef0c5/&#34;&gt;《32位 Linux 系统的未来》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;111&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;时尚服饰的变化越来越快，而且新衣服正变得与二手衣服一样便宜，这导致同一件服装的穿着次数急剧下降。世界范围内，这个数值平均下降了36％，在中国则是下降了70％。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://www.bloomberg.com/opinion/articles/2018-01-15/no-one-wants-your-used-clothes-anymore&#34;&gt;《没人想要你的旧衣服》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;112&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;代码注释是一种道歉，为未选择更清晰的名称或更合理的参数而道歉，为代码无法维护而道歉，为不使用知名算法而道歉，为编写“聪明”代码而道歉，为没有良好的版本控制系统而道歉，为未完成代码编写工作而道歉，为留下漏洞或代码中的缺陷而道歉。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://critter.blog/2020/09/15/dont-comment-your-code-refactor-it/&#34;&gt;Uncle Bob&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;113&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;未来的银行网点将像休息室，划分成一个个休闲区，没有柜员机，行员指导客户在自己的设备上完成在线操作，并进行深入的一对一对话。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://internationalbanker.com/banking/banking-post-covid-19-five-things-that-will-and-wont-change/&#34;&gt;《银行的变化》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;114&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;19世纪以前，人类一直不知道，鸟类冬季去了哪里。1882年，一个德国猎人射杀了一只白鹳，发现它的脖子上有一个2.5英尺长的铁矛尖。鉴定表明，这个矛尖产自非洲，研究人员才意识到这只鹳去过非洲。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash;&lt;a href=&#34;https://thereader.mitpress.mit.edu/when-birds-migrated-to-the-moon/&#34;&gt;《鸟类冬季到哪里去了？》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;115&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;人工智能 AI 迄今所有令人印象深刻的成就，都不过是曲线拟合，并不是真正的智能。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://mindmatters.ai/2020/12/ai-still-just-curve-fitting-not-finding-a-theory-of-everything/&#34;&gt;Judea Pearl&lt;/a&gt;（图灵奖获得者）&lt;/p&gt;
&lt;p&gt;115&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果我只有一个小时来拯救世界，那么我将花费55分钟来定义问题，而仅花5分钟来找到解决方案。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; 据说出自&lt;a href=&#34;https://quoteinvestigator.com/2014/05/22/solve/&#34;&gt;爱因斯坦&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;116&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;不要被贪婪的公司动机所吸引，不要投入全部的时间和精力，这绝对会导致您毫无正当理由地失去自己的一生。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://jonathancarter.org/2020/12/10/centos-stream-or-debian/&#34;&gt;Jonathan Carter&lt;/a&gt;，Debian 项目负责人&lt;/p&gt;
&lt;p&gt;117&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;优秀的人讨论思想，普通的人讨论事件，狭隘的人讨论人。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; 埃莉诺·罗斯福，罗斯福总统夫人&lt;/p&gt;
&lt;p&gt;118&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;一个人在生物学上，每天的生存需要消耗 90W 的能量，相当于单个电灯泡所需的能量。但是考虑到人类使用各种设备（家用电器、交通工具等等），每人每天平均消耗 3,000W 的能量。如果你是美国人，这个数字会上升到接近 11,000W，这相当于一头蓝鲸（地球上最大的哺乳动物）的能量需求。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://linkedstarsblog.com/2018/12/17/scaling-considerations-in-complex-systems-and-organizations-implications/&#34;&gt;物理学家杰弗里·韦斯特&lt;/a&gt;（Geoffrey West）&lt;/p&gt;
&lt;p&gt;119&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;阅读各种资料、书籍、文章，只是让你懂得更多，并不会让你提高技能。只有通过练习（practice）才能提高技能。如果你想变得更好，那就去动手做。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://twitter.com/jasonfried/status/1338626702264582146&#34;&gt;Jason Fried&lt;/a&gt;（Basecamp 的创始人）&lt;/p&gt;
&lt;p&gt;120&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果我与某人在办公室合作一年，我会知道他的孩子的名字，以及他在周末要做的事情。但如果我们是远程合作，我就什么都不会知道，因为远程会让工作变得直接，没有人与人之间的了解。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; David Perell&lt;/p&gt;
&lt;p&gt;121&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“教授的月工资是10万卢比，瑜伽老师6万卢比，印度理工学院（相当于清华大学）毕业生6万卢比，大学行政人员2.3万卢比，路边小店的店长是2万卢比，中学教师1.5万卢比，出租车司机1.2万卢比。”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://book.douban.com/subject/30177716/&#34;&gt;《我在印度的 701 天》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;122&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;一个知道怎么做的人可能总能找到一份工作，但是知道为什么做的人将成为他的老板。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://motiveex.com/quotes/john-maxwell-leadership-quotes-sayings/&#34;&gt;约翰·麦克斯韦&lt;/a&gt;（John Maxwell），畅销书《影响力》的作者&lt;/p&gt;
&lt;p&gt;123&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;一项研究发现，外科医生生日那天动大手术的老年患者，死亡率比一年中任何其他一天都高得多。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://www.psychnewsdaily.com/elderly-emergency-surgery-patients-23-more-likely-to-die-if-operation-takes-place-on-surgeons-birthday/&#34;&gt;《英国医学杂志》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;124&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;最早的时候，编程语言都是大项目，需要投入大量资金，进行前期规划，并且有一个标准化委员会。上个世纪90年代，情况发生了巨大变化。很多最流行的语言（PHP、Python、JavaScript、Ruby）都是由孤独的程序员单枪匹马设计出来的，其中一些人并不追求学术，只是业余爱好，没有任何宏伟的目标，他只想让日常工作变得更容易，或者为自己找一些简单的编程乐趣。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;http://tagide.com/blog/academia/research-in-programming-languages/&#34;&gt;《编程语言研究》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;125&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;擅长编程比赛，常常跟正式的工作表现负相关。因为编程竞赛的获胜者习惯于快速地提出解决方案，但是在工作中，你需要反思问题，并且慢慢地进展，确保一切正确，才会表现更好。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://catonmat.net/programming-competitions-work-performance&#34;&gt;Peter Norvig&lt;/a&gt;，谷歌研究总监&lt;/p&gt;
&lt;p&gt;126&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Webpack 有巨大的可配置性和可扩展性，复杂度非常高。使用 Webpack 不像是使用打包器，而像是“配置你自己的打包器”。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://news.ycombinator.com/item?id=24742026&#34;&gt;Hacker News 读者&lt;/a&gt;评论 &lt;a href=&#34;https://webpack.js.org/blog/2020-10-10-webpack-5-release/&#34;&gt;Webpack 5.0 发布&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;127&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我加入的由风险投资支持的创业公司越多，我就越意识到：&lt;/p&gt;
&lt;p&gt;风险投资家不是为企业增值，而是从企业那里吸走所有价值。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://news.ycombinator.com/item?id=25470030&#34;&gt;Hacker News 读者&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;128&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;美国每天大约有55,000首新曲目（含纯音乐）上传到网上。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://www.billboard.com/articles/business/9500546/streaming-music-growth-stalled-factors-attention-economy&#34;&gt;《音乐流媒体是否正在停滞不前？》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;129&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;100年前，由于汽车的诞生，乱穿马路才变成非法。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://www.virginiamercury.com/2020/12/21/jaywalking-decriminalization-is-coming-to-virginia-100-years-after-the-auto-industry-helped-make-it-a-crime/&#34;&gt;《乱穿马路非法100周年》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;130&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;根据一些研究，中国人的中位数年龄现在高于美国，并且继续上升。所以，即使中国人均收入比美国低得多，年龄却更老。中国在富裕之前变老，已经成为了现实。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://noahpinion.substack.com/p/chinese-demography&#34;&gt;《中国人口正在萎缩》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;131&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我之前在一家独角兽工作，后来辞职去了创业公司，上班第一天就感到比以前下降了一个等级。以前的办公室非常漂亮，现在的办公室是一个堆放着硬件零件的漆黑小房间，研究着一种不知前途的产品，由于各种令人烦恼的小问题，要花很多年才能进入大众市场。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://yolken.net/blog/quitting-a-new-job&#34;&gt;《入职两个月后辞职》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;132&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;大公司想尽办法引诱人们多消费，真正的解决方案通常恰恰相反：你应该少消费。&lt;/p&gt;
&lt;p&gt;大多数情况下，我们的问题主要是由过度消费引起的。如果你超重，不是要购买健身鞋和蛋白质粉，而是要少吃东西。如果你头痛和感到巨大压力，不是要购买头痛药和抗抑郁药，而要更多地睡觉和走路，并且不在深夜浏览社交媒体。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash;&lt;a href=&#34;https://telegra.ph/Consume-Less-Create-More-Its-More-Fun-12-04&#34;&gt;《少消费，多创造》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;133&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;投资于研发可以促进经济增长。但是，研究发现，促进经济增长的主要是公司投资的研发，而不是政府投资的研发。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://lemire.me/blog/2013/02/26/does-academic-research-cause-economic-growth/&#34;&gt;《学术研究会导致经济增长吗？》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;134&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;21世纪，我们被各种各样的数字强盗所困扰，从身份窃贼到跟踪者，再到公司和政府间谍，再到骚扰者。我们没有办法保护自己。&lt;/p&gt;
&lt;p&gt;为了安全起见，你必须与军阀结盟。苹果、谷歌、Facebook、微软和其他一些军阀已经建立了防御要塞的庞大堡垒，金钱可以买到的最凶猛的网络雇佣兵时刻都在攻击他们的堡垒。他们将为你防御所有攻击者，但是如果他们想获取你的信息，你将毫无防备。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://locusmag.com/2021/01/cory-doctorow-neofeudalism-and-the-digital-manor/&#34;&gt;《数字安全的封建时代》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;135&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;喜马拉雅山脉造就了巨大的河网，在整个亚洲广阔的土地上留下了惊人的丰富土壤。山脉的两边是世界上人口最多的两个国家，这绝非偶然。如果算上巴基斯坦、孟加拉国和尼泊尔，所有这些国家也都严重依赖喜马拉雅山脉发源的河流，那么地球上将近一半的人类与这个山脉有关。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://www.nytimes.com/2021/01/05/books/review/himalaya-a-human-history-ed-douglas.html&#34;&gt;《喜马拉雅山脉：人类历史》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;136&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;代码应该尽可能简单，因为下一个维护你的代码的人不会像你那么聪明。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash;&lt;a href=&#34;https://www.bti360.com/what-ive-learned-in-45-years-in-the-software-industry/&#34;&gt;《我在软件行业45年学到的东西》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;137&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;为什么我需要钱？原因跟你想的不一样，我几乎没有时间休闲，也没有度假屋或游艇之类的东西。&lt;/p&gt;
&lt;p&gt;我一半的钱用于解决地球上的问题，另一半钱用来在火星上建立一个自给自足的居民点，确保一旦地球被流星击中（恐龙灭绝就是这种情况）、或者第三次世界大战爆发、人类自己消灭自己时，（所有生物种群的）生命能够延续下去。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://twitter.com/elonmusk/status/1050812486226599936&#34;&gt;伊隆·马斯克&lt;/a&gt;，由于特斯拉股价暴涨，他已经接近世界首富&lt;/p&gt;
&lt;p&gt;138&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;英语中，“大学”（university）这个词是“单一性”（uni-）和“多样性”（versity）两个词的结合。它的意思是，大学就是将各种各样的知识统一起来，寻求规律。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; David Perell&lt;/p&gt;
&lt;p&gt;139&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我在日常工作中使用 Java 。我不喜欢这门语言，但愿意使用它，原因是它可以让我有所作为。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash;&lt;a href=&#34;https://news.ycombinator.com/item?id=25799400&#34;&gt;Hacker News 读者&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;140&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;无人驾驶技术的公司是这样估值的，每位工程师大约1000万美元。例如，一个刚起步的三人创业公司，估值就是3000万美元。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash;&lt;a href=&#34;https://www.nytimes.com/2020/05/12/technology/self-driving-cars-coronavirus.html&#34;&gt;《纽约时报》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;141&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;协和飞机是一架超音速客机，于1969年首飞，距今已经超过50年。1969年的人们大概以为，我们现在应该生活在太空中，或者到处都是飞行汽车，而不会想到今天最快的客机依然比协和飞机慢。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://www.lynalden.com/ethereum-analysis/&#34;&gt;Lyn Alden&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;142&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我和其他工程师一样，都有 MacBook Pro。再过几年，所有这些机器都会被淘汰，被新的 ARM 芯片的型号取代。到那时，开发者会觉得，在ARM 机器上开发，但是在 x86 服务器上进行部署的想法，将是令人不舒服的。因此，苹果公司的“换芯”行动，会大大加速服务器的变革，从 x86 架构转向 ARM 架构。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://news.ycombinator.com/item?id=25834066&#34;&gt;Hacker News 读者&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;143&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;一个复杂的大型软件，即使支持某些简单的功能，也无法以直观、易于使用的方式呈现。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://news.ycombinator.com/item?id=25840318&#34;&gt;Hacker News 读者&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;144&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;要么是用户控制程序，要么是程序控制用户。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://www.gnu.org/philosophy/keep-control-of-your-computing.en.html&#34;&gt;理查德·斯托曼&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;145&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;C 语言很保守，变化和增长非常缓慢。这其实是一项吸引人的功能，开发人员常常低估了它。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash;&lt;a href=&#34;https://nullprogram.com/blog/2018/11/21/&#34;&gt;《为什么没有 C 语言大会？》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;146&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我在游戏《星露谷》（Stardew Valley）上面花了很多时间，不禁希望可以在游戏里，雇用某人为牛和山羊挤奶，而不必每天早上花时间陪它们。&lt;/p&gt;
&lt;p&gt;我喜欢这个游戏，是因为向往田园生活，渴望逃避大公司的人生。但是最终，我仍然想雇用别人为我工作，这个游戏让我在支持资本主义还是反对资本主义方面摇摆不定。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://www.pixelatedplaygrounds.com/sidequests/game-design-perspective-stardew-valley&#34;&gt;《星露谷的游戏设计》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;147&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;NoSQL 数据库的问题在于，随着时间的流逝，你的简单模型不可避免地变得越来越复杂，然后它不再起作用。在过去的十年中，我已经意识到使用 RDBMS 数据库基本上是100％的正确选择。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://news.ycombinator.com/item?id=25888139&#34;&gt;Hacker News 读者&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;148&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;写作时感到的痛苦，是理清思想的痛苦。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; David Perell&lt;/p&gt;
&lt;p&gt;149&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;勃兰多里尼定律，又称谣言不对称原理，它指出了批驳网络谣言的难度：“反驳谣言所需的能量比产生谣言要高一个数量级。”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://en.wikipedia.org/wiki/Brandolini&#39;s_law&#34;&gt;维基百科&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;150&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;研究人员发现，随着狼、狐狸、牛、猪等野生物种的驯化，它们的外观也会发生变化，出现皮肤斑点、松软的耳朵和弯曲的尾巴。这些似乎都有利于引发人类的好奇心和友善。这就是为什么现代犬比冰河世纪的狼看起来友好得多的原因。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://arstechnica.com/science/2021/02/dogs-have-been-our-best-friends-for-at-least-23000-years/&#34;&gt;《狗的驯化至少已经有23000年》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;151&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果一本书四十年来一直再版，我们可以期待再过四十年它也会再版。如果再过十年，它确实还在再版，我就会预期它还会再存在五十年。&lt;/p&gt;
&lt;p&gt;已经存在很长时间的事物，不会像人一样“老化”，而是恰恰相反，会增加额外的预期寿命。一种事物的坚固性与其已经存在的时间成正比！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://en.wikipedia.org/wiki/Lindy_effect&#34;&gt;纳西姆·塔莱布（Nassim Taleb）&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;152&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果你只看大众媒体和算法推荐给你的文章，你最终将罹患智力糖尿病。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://perell.com/note/the-paradox-of-abundance/&#34;&gt;David Perell&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;153&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;有一种普遍的误解，认为免费提供产品就无法产生任何收入。事实上，免费有时候不是定价策略，而是一种定位策略，尝试通过免费吸引用户，然后将产品定位在正确的受众群体面前。等有了用户以后，出售增值功能自然就成为最合适的扩展策略。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://www.chrisfrantz.com/how-to-kill-a-unicorn/&#34;&gt;《免费增值是产品启动的有效方式》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;154&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;打车软件的地图可以查看车辆距你还有多远，这有巨大的心理学意义。它不会减少你等待出租车的时间，但可以使等待的煎熬程度减少90％。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://www.collaborativefund.com/blog/story/&#34;&gt;《点金术：心理学的神奇力量》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;155&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;SVG 是一个非常臃肿的文件格式，规格文档厚达826页。如果要正确渲染所有 SVG 文件，还需要考虑另外20页的 XLink 规范。此外，SVG 支持 CSS 样式和 JAVASCRIPT 脚本。是的，SVG 文件可以包含&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;标签。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://www.eisfunke.com/article/svg-the-good-the-bad-and-the-ugly.html&#34;&gt;《SVG：优点，缺点和丑陋之处》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;156&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;根据我的计算，地球上的新冠病毒大约有20万亿个。每个病毒的半径假设为50纳米，那么体积为523,000立方纳米。如果把它们放在一起，所有的新冠病毒仍然无法填满一个易拉罐。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://www.bbc.com/future/article/20210210-why-the-entire-coronavirus-would-fit-in-a-can-of-coca-cola&#34;&gt;《世界上所有的新冠病毒可以装进一罐可乐》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;157&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;知识的诅咒（&lt;a href=&#34;https://en.wikipedia.org/wiki/Curse_of_knowledge&#34;&gt;Curse of knowledge&lt;/a&gt;）是一种认知偏差，指的是与他人交流时，你不知不觉地假设对方拥有跟你相似的认知，能够理解你的意思。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://zh.wikipedia.org/wiki/%E7%9F%A5%E8%AD%98%E7%9A%84%E8%A9%9B%E5%92%92&#34;&gt;维基百科&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;158&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果构建一个系统需要花费大量时间，那么理解它也将花费大量时间。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://blog.royalsloth.eu/posts/on-navigating-a-large-codebase/&#34;&gt;《导航大型代码库》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;159&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;鸟站在雪地里，脚为什么不冷？&lt;/p&gt;
&lt;p&gt;如果你嚼过鸡爪，就会发现它没有太多肉，几乎都是肌腱和骨头，因此鸟脚的细胞中只有很少的液体。这意味着它很难冻结，没有冻结的液体就不会形成冰晶，避免了组织损伤和冻伤。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://medium.com/i-wanna-know/why-birds-dont-get-cold-feet-515487d50ed5&#34;&gt;《为什么鸟的脚不冷？》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;160&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;中国文化的特点是尊重权力，表现为在家尊重父母，在学校里尊重老师，在单位里尊重领导。尊重权力强调的是服从领导者的意志，在这种背景下，公司管理的进步相对来说比较难，因为权力太好用了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash;&lt;a href=&#34;https://mp.weixin.qq.com/s/4kN65Eu_mYKmC-GLig082g&#34;&gt;《与五位学者对谈互联网加班文化》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;161&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我年轻时有个梦想，希望能在大学任教，传授自己学习与创业上的心得，但后来我某位在大学任教的朋友聊到，现在学生都很混，包括研究生。&lt;/p&gt;
&lt;p&gt;我心想，这不是我要的啊！跟一群没有兴趣听你课的人讲述你的人生经验，这无异是对牛弹琴呢！这不是分享，而是痛苦，从此我打消了到大学任教的念头。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash;&lt;a href=&#34;https://mapleduh.pixnet.net/blog/post/49595249&#34;&gt;《在个人网站写文章，我更自在》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;162&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;各种聊天软件（Signal、Telegram、WhatsApp 等）都有相同的问题：它们都是有围墙的花园，用户只能跟安装了同样软件的人交流。这就像给不同域的人发送电子邮件，都需要单独的邮件客户端一样，比如Gmail 用户只能与 Gmail 用户通信。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://stuker.com/2021/whatsapp-and-most-alternatives-share-the-same-problem/&#34;&gt;《聊天软件共同的问题》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;163&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;有史以来发行的所有美元，几乎有四分之一是在2020年发行的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://eriktorenberg.substack.com/p/the-devaluing-of-the-us-dollar&#34;&gt;《美元的贬值》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;164&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;小的、渐进式的创新可以使行业主导企业保持领先地位，但是激进的创新可以使新公司超越行业主导企业，这就叫“跨越式发展”。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://en.wikipedia.org/wiki/Leapfrogging&#34;&gt;维基百科&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;165&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;杀手级应用（killer application）指的是极受市场欢迎的计算机程序，证明了底层技术的价值。比如，消费者只是为了运行该程序，而会购买必需的硬件。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://en.wikipedia.org/wiki/Killer_application&#34;&gt;维基百科&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;166&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果你自己开公司，每月收入少于2万美元，那么你的公司根本不是公司，而是一份你的工作。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://every.to/superorganizers/how-i-bought-a-business-for-0&#34;&gt;《我如何收购一家 SaaS 公司》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;167&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;以前是其它行业的公司购买软件，现在是某一个公司创建一种软件，然后使用自己的软件进入该行业，并对这个行业加以改造。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash;&lt;a href=&#34;https://www.ben-evans.com/benedictevans/2021/3/18/outgrowing-software&#34;&gt;《超越软件》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;168&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;2020年，音乐产业的总收入不到200亿美元，是20年前的一半。流媒体的发展，大大缩小了音乐市场的产值。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash;&lt;a href=&#34;https://www.ben-evans.com/benedictevans/2021/3/18/outgrowing-software&#34;&gt;《超越软件》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;169&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;旅行是非常棒的经历，但是你不能寄希望于旅行会让你的生活真正发生变革。我曾经环球旅行，现在差不多过去了十年，感觉就像对我的生活没有发生过影响。随着现在的生活越来越安定，旅行的记忆正在迅速消失。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://news.ycombinator.com/item?id=26408486&#34;&gt;Hacker News 读者&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;170&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;美国旧金山的金门大桥建于1930年代，用了三年半。如今，加州的基础建设严重滞后，建造一条通往金门大桥的道路，要花费七年的时间，实际成本比桥还贵。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash;&lt;a href=&#34;https://eriktorenberg.substack.com/p/the-world-according-to-peter-thiel&#34;&gt;《增长是如何停滞的》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;171&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;终身学习的首要问题是，你一定要尝试找到乐趣，以及可持续的长期动力。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://junglecoder.com/blog/learning-without-burnout&#34;&gt;《学习而不感到厌倦》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;172&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;它来自于殖民时期的印度，政府颁布法令说每打死一条眼镜蛇都可以领取赏金。结果，民众为了赏金开始养殖眼镜蛇，政府不得不取消赏金，养殖蛇的人就把蛇都放了，放出去的蛇继而繁殖，反而使得眼镜蛇数量大增。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://zh.wikipedia.org/wiki/%E7%9C%BC%E9%95%9C%E8%9B%87%E6%95%88%E5%BA%94&#34;&gt;维基百科&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;173&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;写作过程分为两个阶段：发散和收敛。在发散阶段，你自由地探索新想法；在收敛阶段，你变得专注，将想法尽量简化，以便将其发布。我最喜欢的一句写作格言：收集点，然后连接点。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; David Perell&lt;/p&gt;
&lt;p&gt;174&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;金钱杀死了黑客团体，加密货币的兴起是最后一击。有些黑客团队通过入侵比特币交易所而成为亿万富翁，那些声称自己不在乎钱的黑客几乎毫无例外地都是孩子，或者只是假装自己不在乎。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://news.ycombinator.com/item?id=26498998&#34;&gt;Hacker News 读者&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;175&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;很多人认为他们需要使用面向对象编程，实际上他们只需要模块化。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://news.ycombinator.com/item?id=26588045&#34;&gt;Hacker News 读者&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;176&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;目前，W3C 规范有1,217个，总字数超过1亿。这意味着，已经不可能从头开发一个全新的网络浏览器，因为网络已经变得如此复杂，创建新的网络浏览器的工作量可与阿波罗登月或曼哈顿计划相媲美。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://drewdevault.com/2020/03/18/Reckless-limitless-scope.html&#34;&gt;《网络浏览器的无限范围》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;177&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;世界上每个程序员一觉醒来，都会有“我应该开发一个 Todo 清单程序的想法”，人们喜欢开发生产力工具。所以，你应该尽量避免将生产力工具作为创业项目，那类软件根本没有护城河。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash;&lt;a href=&#34;https://threadreaderapp.com/thread/1376985869542887425.html&#34;&gt;《我如何因为创业损失1000万美元的故事》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;178&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;做正确的事情比长时间工作重要得多。大多数人将大部分时间浪费在无关紧要的事情上。&lt;/p&gt;
&lt;p&gt;一旦确定了目标，就必须迅速完成少数优先级最高的任务，这是第一位重要的。我还没有遇到过一个非常成功但行动缓慢的人。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://blog.samaltman.com/how-to-be-successful&#34;&gt;Sam Altman&lt;/a&gt;，OpenAI 的CEO 和 YC 前总裁&lt;/p&gt;
&lt;p&gt;179&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;旅行不是为了看到不同的事物，而是为了学会不同地看待事物。&lt;/p&gt;
&lt;p&gt;（You don&amp;rsquo;t travel to see different things, you travel to see things differently.）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://m.facebook.com/HanksWorldWide/photos/pb.160385744474061.-2207520000.1564413746./238546423324659/&#34;&gt;Ben Davenpor&lt;/a&gt;，风险投资家&lt;/p&gt;
&lt;p&gt;180&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在泰国工作的人，都说那是一个很糟糕的地方；在泰国休假的人，都说那个地方好极了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; 网友&lt;/p&gt;
&lt;p&gt;181&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;入职以后，公司给每位员工发了一台电脑，表面上看是每个人拥有了一台电脑，其实是给每个电脑配了一个人。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash;&lt;a href=&#34;https://dig.chouti.com/link/29787991&#34;&gt;网友&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;182&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1980年，加利福尼亚的一名商人创办了一个精子库，只存储诺贝尔奖获得者和其他杰出知识权威的精子，承诺为女性提供科学界最佳精子，帮助她们生下天才婴儿。&lt;/p&gt;
&lt;p&gt;在该精子库的努力之下，大约有200名儿童出生，但还没有一人成为杰出天才，甚至连成就斐然的工程师都没有。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash;《人体简史》，作者为比尔·布莱森&lt;/p&gt;
&lt;p&gt;183&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;上个世纪60年代到80年代，你写好程序，需要提交给大型机运行，然后等待它返回结果。&lt;/p&gt;
&lt;p&gt;现在2020年代，大型机又回来了！它们只是被改称为“云”。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://news.ycombinator.com/item?id=26857859&#34;&gt;Hacker News 读者&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;184&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我总是努力写零外部依赖的代码，多年以后依然可以运行。这是人类对抗熵的战争中， 我所做出的一点贡献。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://www.humio.com/whats-new/blog/why-we-chose-elm-for-humio-s-web-ui&#34;&gt;乔·阿姆斯特朗&lt;/a&gt;（Joe Armstrong），Erlang 语言的发明发明者&lt;/p&gt;
&lt;p&gt;185&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;年轻时，你希望成为大明星。随着年龄的增长，你的目标降低了一些，希望打动别人，在这个世界上留下印记。后来，你就会想，只要熬过去了，有几个人记得你的名字，就已经在这个世界上留下了印记。你没必要去影响整个世界，还是好好享受生活为好。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash;&lt;a href=&#34;https://cn.nytimes.com/opinion/20210420/life-adulthood-death/&#34;&gt;《死亡和疫情教会我的事情》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;186&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;巴菲特的财产为845亿美元。其中842亿美元是在他50岁生日后获得的。他20岁进入投资业，如果只做了30年就不干了，就根本不会有人听说过他。&lt;/p&gt;
&lt;p&gt;只有坚持下来不放弃，才可能有所作为，因为只有在足够长的时间里面，复利才会显示威力。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://www.swyx.io/psychology-of-money/&#34;&gt;《金钱心理学的笔记》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;187&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;由于没法做实验，没有一家药厂愿意为孕妇开发药物，这导致孕妇一旦生病，就无药可用。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; 《人体简史》，by 比尔·布莱森&lt;/p&gt;
&lt;p&gt;188&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;机器学习模型的耗电量越来越大。目前，最复杂的模型 GPT-3，要使用 1,287 兆瓦的电能，相当于大型水电站的发电量，运行一次产生552公吨的二氧化碳排放量。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://venturebeat.com/2021/04/29/google-led-paper-pushes-back-against-claims-of-ai-inefficiency/&#34;&gt;《谷歌否认 AI 模型的低效率》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;189&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;很多创业公司是君主制，公司和创始人越来越难以区分，比如特斯拉公司。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://www.axios.com/company-founders-elon-musk-tesla-stock-c4db4d28-d632-46bc-bf84-fa59c0f0b523.html&#34;&gt;《创始人的控制溢价》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;190&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;创业公司的三个核心要素：团队，产品和市场。其中最重要的是市场，用户数量和增长率是决定性因素。创业公司失败的第一大原因就是缺乏市场。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://pmarchive.com/guide_to_startups_part4.html&#34;&gt;Marc Andreessen 的创业指南&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;191&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;领先他人一年，你会致富；领先他人十年，你会发疯。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://twitter.com/david_perell/status/1388121872332591105&#34;&gt;David Perell&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;192&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果你的身家达到440亿美元，你也不会想忍受管理手下的小兵。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://www.inputmag.com/tech/bytedance-ceo-is-stepping-down-because-hes-rich-tired-and-bored&#34;&gt;国外网站&lt;/a&gt;评论张一鸣辞去字节跳动的 CEO&lt;/p&gt;
&lt;p&gt;193&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我们的新冠肺炎疫苗，定价是每剂19.50美元，这是疫情期间的特殊定价。正常情况下的定价，应该是每剂150美元或者175美元。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; 辉瑞公司 CEO &lt;a href=&#34;https://mattstoller.substack.com/p/why-joe-biden-punched-big-pharma&#34;&gt;阿梅里奥&lt;/a&gt;（Frank D&amp;rsquo;Amelio）&lt;/p&gt;
&lt;p&gt;194&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;出色的写作读起来是如此自然，读者完全意识不到，作者反复修改所花费的时间。&lt;/p&gt;
&lt;p&gt;同样地，出色的产品用起来是如此简单，用户完全意识不到，开发者所付出的辛勤劳动。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://twitter.com/david_perell/status/1378943650755842050&#34;&gt;David Perell&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;195&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;根据 Cloudflare 的统计，用户完成网站的图形识别验证码，平均需要32秒。&lt;/p&gt;
&lt;p&gt;假设用户每10天就会遇到一次这样的验证码，乘以全球46亿互联网用户，那么人类每天共花费500人年以完成这些验证码。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://www.theregister.com/2021/05/14/cloudflare_cryptographic_attestation_of_personhood_captcha_killer/&#34;&gt;《Cloudflare 希望结束“验证码疯狂”》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;196&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;产生一个好的想法，最佳方法就是先产生许许多多的想法。（The best way to have a good idea is to have a lot of ideas.）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash;&lt;a href=&#34;https://www.brainyquote.com/quotes/linus_pauling_163645&#34;&gt;鲍林&lt;/a&gt;（Linus Pauling），诺贝尔化学奖得主&lt;/p&gt;
&lt;p&gt;197&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我遇到很多初级工程师，发现了一件奇怪的事情，他们为自己能写出逻辑高度复杂的代码而自豪，并且没有任何文档。&lt;/p&gt;
&lt;p&gt;他们以为这样就能展示自己的能力，但实际上，这是展示能力的最糟糕的方式。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://news.ycombinator.com/item?id=27333947&#34;&gt;Hacker News 读者&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;198&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;上海有一条网红道路“武康路”，路宽15.2米，沿街建筑的高度以8-16米为主，街道的高宽比接近1:1。&lt;/p&gt;
&lt;p&gt;按照土地规划专家的说法，这样高宽比的道路最容易给人天然的亲切感和安全感。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash;&lt;a href=&#34;https://mp.weixin.qq.com/s/cJsjdqYJNfmsnsPo9gPeXw&#34;&gt;《网红道路武康路》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;199&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;写作是你对自己思想的研究和开发。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; David Perell&lt;/p&gt;
&lt;p&gt;200&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;最容易使用的程序，是那些对用户的新知识要求最少的程序。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;http://www.catb.org/~esr/writings/taoup/html/ch01s06.html&#34;&gt;《Unix 哲学基础》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;201&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;高级工程师的技能之一，就是要帮助其他人晋升。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://skamille.medium.com/an-incomplete-list-of-skills-senior-engineers-need-beyond-coding-8ed4a521b29f&#34;&gt;《高级工程师的技能清单》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;202&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;可能永远不会有 Python 4.0，我们被 Python 2 升级到 Python 3 搞怕了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://www.techrepublic.com/article/programming-languages-why-python-4-0-will-probably-never-arrive-according-to-its-creator/&#34;&gt;Guido van Rossum&lt;/a&gt;，Python 语言创始人&lt;/p&gt;
&lt;p&gt;203&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;2012年，牛津大学起诉印度德里大学的一个复印中心，复印盗版教材出售给学生。&lt;/p&gt;
&lt;p&gt;德里高等法院裁定，牛津大学败诉，学生使用盗版教材不违法。理由是原版教材的定价超出了印度学生的承受能力，学生永远不会成为原告的客户。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://www.reddit.com/r/scihub/comments/mk46x4/scihub_v_elsevier_wiley_acs_can_scihub_be_shut/&#34;&gt;《 Sci-Hub 会被印度法院关闭吗？》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;204&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;随着大多数产品成为联网产品，如果你想购买未联网的版本，不得不支付额外费用，因为厂家将不能获取你的个人数据，也不能向你推送广告了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://news.ycombinator.com/item?id=27628210&#34;&gt;Hacker News 读者&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;205&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;为了让毕业生和 Java 程序员对 JavaScript 更满意，标准委员会不断改造这种语言的语法，先添加了类（class），又在那些人的不断要求下，添加了私有属性，因为那些人一旦离开了 OOP（面向对象编程），就不知道怎么编程。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://news.ycombinator.com/item?id=27491353&#34;&gt;Hacker News 读者&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;206&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;欧洲的问题是，人们几乎完全使用美国开发的软件平台，以及中国生产的硬件。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash;&lt;a href=&#34;https://berthub.eu/articles/posts/europes-software-problem/&#34;&gt;《欧洲的软件问题》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;207&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我从第三世界国家搬到欧洲，发现欧洲人都被宠坏了。西欧国家的生活质量非常高，国家提供各种福利，生活轻松到让你丧失抱负。更不要提拖拖拉拉的官僚主义，以及各种要求严格的法规，只会把小公司赶出市场。&lt;/p&gt;
&lt;p&gt;一个创新和竞争的社会，需要非常灵活的工作法规、追求高速增长的企业家、不轻松的生活方式，以及具有抱负的劳动者。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://news.ycombinator.com/item?id=27514512&#34;&gt;Hacker News 读者&lt;/a&gt;对《欧洲的软件问题》一文的留言&lt;/p&gt;
&lt;p&gt;208&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;雇用聪明人并告诉他们该做什么是没有意义的；我们雇用聪明的人，因为他们可以告诉我们该做什么。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://betterprogramming.pub/10-admirable-attributes-of-a-great-technical-lead-251d13a8843b&#34;&gt;史蒂夫·乔布斯&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;209&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;很多人喜欢向后兼容的软件，但是这意味着，软件需要保留它的错误。在以前版本犯下的设计错误，以后就必须一直兼容，不能废除。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash;&lt;a href=&#34;https://utcc.utoronto.ca/~cks/space/blog/tech/MistakesAndBackwardCompatibility&#34;&gt;《承诺向后兼容，就是承诺保留错误》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;210&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;与其编写 Javadoc 注释，不如为方法和变量起好名字，使得它们可以解释编码意图，成为自文档的代码（self-documenting code）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://henrikwarne.com/2021/06/15/on-comments-in-code/&#34;&gt;《论代码注释》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;211&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;每个举办奥运会的城市，都会因此产生大量碳排放。每隔几年就去建造一批全新的体育场馆，这些场馆在赛后往往闲置。国际奥委会应该考虑，在一个固定地点永久举办奥运会。&lt;/p&gt;
&lt;p&gt;1896年第一届现代奥运会召开时，希腊就希望能够永久举办，顾拜旦担心不利于奥运会推广，没有答应。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://www.popsci.com/science/permanent-olympic-stadium/&#34;&gt;《奥运会应该选择一个永久举办地》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;212&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;亚马逊公司有一项规定，如果要开会，必须先有会议文档，没有文档，就取消会议。&lt;/p&gt;
&lt;p&gt;会议开始后，所有人先花几分钟看文档，然后再开始讨论文档列出的问题。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://www.justingarrison.com/blog/2021-03-15-the-document-culture-of-amazon/&#34;&gt;《亚马逊的文档文化》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;213&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;2014年，我离开公司，休息了一年去旅行。结果是我丧失了一大笔收入，并且最终发现自己喜欢编码，而不太喜欢旅行。&lt;/p&gt;
&lt;p&gt;在我们的文化中，旅行被过度美化了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://news.ycombinator.com/item?id=27564724&#34;&gt;Hacker News 读者&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;214&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;年轻时，我犯的最大错误，就是没有及时离职。我以为我必须向公司证明自己，然后再离开，但这其实没有任何意义。你不欠雇主任何东西，不必向雇主证明任何事情。他们对你丝毫没有忠诚度，对你做对或做错、是聪明还是愚蠢，毫不在意。&lt;/p&gt;
&lt;p&gt;把时间用在你最终不会引以为豪的东西上面，是一件可怕的事情，浪费了你在地球上的短暂旅程。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://news.ycombinator.com/item?id=27565815&#34;&gt;Hacker News 读者&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;215&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;新手作家追求写得聪明，专业作家追求写得清晰，大师追求引起读者灵魂的共鸣。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://twitter.com/david_perell/status/1409610371527233539&#34;&gt;David Perell&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;216&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我们的目标是永远保存 10 亿人的著作。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://blog.archive.org/2021/07/21/reflections-as-the-internet-archive-turns-25/&#34;&gt;布鲁斯特·卡利&lt;/a&gt;，互联网档案馆（Internet Archive）创始人，庆祝该项目创立25周年。&lt;/p&gt;
&lt;p&gt;217&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;每一行代码都是一种负担。如果增加代码行数，就会增加你的责任。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash;&lt;a href=&#34;https://blog.kalvad.com/surviving-guide-for-a-tech-startup/&#34;&gt;《创业公司生存指南》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;218&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;抖音的推荐算法有一个最大的优势，就是它的内容很短，用户的观看历史以秒计算。用户使用一个小时，可以产生几百条观看记录。Netflix 需要等待一个月，才能获得相同数量的用户观看记录。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://news.ycombinator.com/item?id=27757449&#34;&gt;Hacker News 读者&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;219&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;一个人的思想就像是一座冰山，自己能意识到的只是很小一部分，其它大部分都埋在脑海深处，只有通过思考和写作，才能把它们发掘出来。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; David Perell&lt;/p&gt;
&lt;p&gt;220&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;软件项目和其他工程项目有一个重要区别，就是项目执行期间可能发生重大变更。举例来说，如果你正在建造一架民航飞机，没人会在造到一半时告诉你，他们希望这架飞机能够飞出大气层，进入太空。但在软件项目中，这是可能的，IT 公司的特点就是业务逻辑一切皆有可能，如果你建造的东西会飞，那么需求方就会觉得，它应该能飞到任何想去的地方。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://vadimkravcenko.com/en/dealing-with-complex-projects/&#34;&gt;《复杂项目 101》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;221&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我担心未来的技术会让美国的电影人以数字方式复制我的动作，再套上任何演员的脸。我一生都在训练，我们武者只会越来越老，他们却可以永远拥有我的动作，变成他们的知识产权，所以我拒绝与他们合作，不让他们使用数字技术捕捉我的动作。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://www.scmp.com/abacus/culture/article/3028904/jet-li-says-he-rejected-matrix-because-he-didnt-want-his-kung-fu&#34;&gt;李连杰&lt;/a&gt;，谈为什么拒绝出演《黑客帝国》续集&lt;/p&gt;
&lt;p&gt;222&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;向别人销售东西时，要把它说得很复杂，人们愿意为复杂的东西买单；说服别人时，要把内容说得很简单，越复杂的东西，能说服的听众就越少。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://www.collaborativefund.com/blog/too-smart/&#34;&gt;《太聪明的人，为何不容易沟通》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;223&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;悉尼是一个生活成本六位数的城市，但是你很难找到六位数收入的工作。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://news.ycombinator.com/item?id=27926743&#34;&gt;Hacker News 读者&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;224&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;频率错觉（Frequency illusion）是一种认知偏差，指的是第一次注意到某事后，往往会更频繁地注意到它，导致认为此事是高频现象。简单说，频率错觉就是“你刚刚发现一个概念或事物，然后突然发现它似乎无处不在”。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://en.wikipedia.org/wiki/Frequency_illusion&#34;&gt;维基百科&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;225&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Windows 的游戏优势有多大？根据 Steam 游戏平台 2021 年 6 月的数据，Linux 上玩家比例是 0.89%，macOS 是 2.54%，Windows 是 96.57%。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://www.phoronix.com/scan.php?page=news_item&amp;amp;px=Steam-On-Linux-Tap-Dance-0.9&#34;&gt;phoronix.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;226&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;苹果公司刚成立时，员工编号由第一任 CEO 斯科蒂分配。他喜欢激怒乔布斯，所以给沃兹的员工编号是1号，给乔布斯是2号。&lt;/p&gt;
&lt;p&gt;乔布斯恳求变成0号员工，斯科蒂拒绝了。后来，斯科蒂被解雇了，乔布斯就得到了梦寐以求的 0 号。顺便说一句，沃兹从不关心他的编号是什么。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://www.quora.com/When-Apple-began-designating-employee-numbers-was-Steve-Jobs-offended-that-Wozniak-received-1-while-he-got-2-and-so-he-believed-he-should-be-second-to-no-one-so-he-took-0-instead/answer/Randy-Wigginton&#34;&gt;兰迪·威金顿&lt;/a&gt;，苹果公司第一位软件工程师&lt;/p&gt;
&lt;p&gt;227&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;最好的程序员不是善于编写复杂代码，而是有能力为复杂的问题提出简单的解决方案。只有糟糕的程序员，才会对简单的问题提出复杂的解决方案。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://news.ycombinator.com/item?id=28072652&#34;&gt;Hacker News 用户&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;228&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;世界上只有美国和厄立特里亚两个国家，是根据公民身份而不是居住地征税。只要你是美国人，不管住在哪里，都必须向美国政府交税。其它国家的规定是，本国公民如果住在其它国家，则无需向本国政府交税。&lt;/p&gt;
&lt;p&gt;这导致大量的美国富豪放弃美国国籍，申请其它国家的公民。谷歌公司的创始人拉里佩奇就申请成为新西兰公民，前 CEO 埃里克·施密特（Eric Schmidt）申请成为塞浦路斯公民。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://www.axios.com/wealthy-people-are-renouncing-american-citizenship-67fbada4-e2e4-4699-b106-c986839f209d.html&#34;&gt;《为什么富人放弃美国国籍》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;229&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;根据我的经验，大多数程序员在新公司开始工作约 6-8 个月后，才能完全发挥自己的能力。等到在同一家公司工作2年到3年后，绝大多数人开始停滞不前，对工作不再那么有兴趣。&lt;/p&gt;
&lt;p&gt;观察到这一点后，我作为老板真的不太在乎，自己的员工在工作2-3年后跳槽。长远来看，只有极少数人会不断进步，所以我不会特意留住员工，我认为这不是很值得。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://news.ycombinator.com/item?id=28050106&#34;&gt;Hacker News 读者&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;230&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;你的代码应该是写给下一个开发者的情书。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://www.agriwebb.com/au/your-code-should-be-a-love-letter-to-the-next-developer/&#34;&gt;AgriWebb&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;231&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我从互联网上得到的最好的经验之一，就是永远不要复制和粘贴不是自己编写的代码。如果你一定要复制，那就照着它逐字输入，逼着自己思考，这些代码实际上是什么意思。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://news.ycombinator.com/item?id=27534343&#34;&gt;Hacker News 读者&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;232&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;推行 996 工作制的心态，可以追溯到制造业时代。一家服装厂提高产量的最简单方法是什么？就是让你的工人加班。&lt;/p&gt;
&lt;p&gt;不幸的是，这不适用于科技公司，程序员在一段代码上花费更多时间，并不意味着写出更好的代码。事实上，处理错误的最佳方法通常是休息一下，然后回来重新阅读代码，你会更容易发现错误。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://news.ycombinator.com/item?id=28326010&#34;&gt;Hacker News 读者&lt;/a&gt;，评论中国最高法院判定 996 工作制违法&lt;/p&gt;
&lt;p&gt;233&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;日本和韩国都有法律规定，手机拍照必须有快门声，无法关闭这个声音，目的是防止偷拍。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://www.zhihu.com/question/19763901&#34;&gt;知乎&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;234&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;无所畏惧（fearless）不是没有恐惧；而是你依然心怀恐惧，但无论如何都决定要跳进去。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://www.thecut.com/2021/07/how-thrilling-ceo-shilla-kim-parker-gets-it-done.html&#34;&gt;Taylor Swift&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;235&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我在普林斯顿大学学习物理学时，曾经与一个同学一起花了三个小时，研究一个非常困难的偏微分方程，但一无所获。后来，我们去找了班上最聪明的同学，他看了几分钟就说：“余弦变换可以解”。我们表示不理解，他就写了三页纸的答案，并说几年前就解过类似的问题。&lt;/p&gt;
&lt;p&gt;因为这件事，我知道自己永远不会成为一名伟大的理论物理学家，所以就改学了计算机。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://get21stnight.com/2021/08/09/difficult-math-is-about-recognizing-patterns-lessons-from-jeff-bezos/&#34;&gt;贝佐斯&lt;/a&gt;，亚马逊公司的老板，回忆大学生活&lt;/p&gt;
&lt;p&gt;236&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;赚到一百万美元以后，再往前走的动力都来自你的热情。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://news.ycombinator.com/item?id=27865101&#34;&gt;Joel Spolsky&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;237&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;幸福的秘诀就是永远抱有低期望值。（the secret to happiness is low expectations.）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; Hacker News 读者&lt;/p&gt;
&lt;p&gt;238&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;唯一比量子力学更难的是解释量子力学。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash;&lt;a href=&#34;https://theamericanscholar.org/physics-for-the-feeble-minded/&#34;&gt;《理解量子革命》书评&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;239&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;游戏分成两种。一种是有限游戏，另一种是无限游戏。有限游戏的目的是获胜，某方获胜就结束了，无限游戏的目的是继续游戏，你玩这个游戏是为了可以继续玩下去。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://www.indiehackers.com/post/infinite-entrepreneurship-da92f36f21&#34;&gt;《无限创业》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;240&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;一个可运行的复杂系统，总是从一个简单系统演变而来的。似乎可以因此推断：从头开始设计一个复杂系统，永远不会奏效，必须从一个简单系统开始设计。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://www.ivanmontilla.com/blog/galls-law-and-how-i-ignored-it&#34;&gt;《加尔定律》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;241&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;大师并不是一开始就是大师。你把他们早期第一阶段的作品找出来看看，就会了解他们取得了多大的进步。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; David Perell&lt;/p&gt;
&lt;p&gt;242&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;每秒是不相等的。早上精力充沛的一个小时工作，相当于晚上疲倦时三个小时的工作。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; David Perell&lt;/p&gt;
&lt;p&gt;243&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我在大学里得到的最好建议是：“找到最好的老师，上他们所有的课，不管是什么课。”&lt;/p&gt;
&lt;p&gt;这个建议也适用于互联网。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; David Perell&lt;/p&gt;
&lt;p&gt;244&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“英雄项目”指的是80%以上的贡献来自20%的开发人员的项目。通过对 1000 多个开源 GitHub 项目的分析，发现大多数开源项目都是英雄项目。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash;&lt;a href=&#34;https://neverworkintheory.org/2021/09/10/why-software-projects-need-heroes.html&#34;&gt;《为什么软件项目需要英雄》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;245&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;很多人认为，照抄国外的成功软件，不能算是创新。我认为这是一个非常荒谬的论点，将一个商业模型复制到另一个市场，真的没那么容易。&lt;/p&gt;
&lt;p&gt;执行就是创新。能够成功执行，调整模型适应当地需求，就是创新。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://restofworld.org/2021/how-500-startups-finds-unicorns/&#34;&gt;《如何发现下一个独角兽》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;246&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;有些开源软件项目欢迎协作，并鼓励外部贡献，例如 Linux 内核。&lt;/p&gt;
&lt;p&gt;还有一些开源项目几乎与世隔绝，无法容忍外人插手，GIMP、GTK、Gnome 的维护者就属于后一类。除非你是内部集团的一部分，否则你的代码不会得到任何合并。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://news.ycombinator.com/item?id=28579444&#34;&gt;Hacker News 读者&lt;/a&gt;&lt;a href=&#34;https://news.ycombinator.com/item?id=28550566&#34;&gt;https://news.ycombinator.com/item?id=28550566&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;247&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;现在的社会不是为了人的发展，而是人为了外部世界而发展，反过来了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://cn.nytimes.com/china/20210714/lying-flat-in-china/&#34;&gt;骆华忠&lt;/a&gt;，摘自《纽约时报》对他的专访&lt;/p&gt;
&lt;p&gt;248&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;理财的核心原则，就是两句话：“增加收入，减少开支”。&lt;/p&gt;
&lt;p&gt;但是，这两句话相互矛盾，需要不同的技能。增加收入通常需要花钱，提高获利潜力。减少开支意味着对于投资新事物持有保守态度，这种心态会阻止你赚更多的钱。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://jonpauluritis.com/articles/my-top-10-money-rules/&#34;&gt;《我的十条金钱规则》&lt;/a&gt;&lt;a href=&#34;https://web.eecs.utk.edu/~azh/blog/featurestheywanted.html&#34;&gt;https://web.eecs.utk.edu/~azh/blog/featurestheywanted.html&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;249&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;经常有人说：“学习 xx 语言会让你成为更好的程序员。” 我认为，这种说法有些误导。学习新的语言确实很有趣，而且非常有用，但是真正让我更擅长编程的是做大量的编程练习，尤其是那些挑战能力极限的问题。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://scattered-thoughts.net/writing/things-unlearned/&#34;&gt;《我没有学到的东西》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;250&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;20世纪前期，匈牙利诞生了很多优秀科学家，其中最著名的是冯·诺依曼。这些科学家的共同特征就是在富裕家庭中长大，父母重视教育和勤奋工作，欧美的教育制度也允许他们早早进入大学，尽早开始学术研究，在25岁之前（冯诺依曼甚至在18岁之前），就发表了高质量的研究成果。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash;&lt;a href=&#34;https://www.privatdozent.co/p/the-martians-of-budapest-03b&#34;&gt;《布达佩斯的火星人》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;251&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Windows 11 并没有令人信服地回答：为什么用户需要这个新版本？它感觉就像微软认定自己必须做点什么，也确实有一些非常好的理由，推出一个新版本，但实际上 Windows 11 还在摸索未来的道路。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://www.pcworld.com/article/539183/windows-11-review-an-unnecessary-replacement-for-windows-10.html&#34;&gt;《Windows 11 是 Windows 10 不必要的替代品》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;252&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我不投资加密货币，原因主要是我不喜欢价格剧烈波动带来的心理负担。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://news.ycombinator.com/item?id=28732366&#34;&gt;Hacker News 读者&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;253&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我去母亲家住了一个星期回来，结果上网时就收到了母亲使用的牙膏品牌的推送。我从没在网上搜索过这个品牌，这到底是怎么发生的？&lt;/p&gt;
&lt;p&gt;后来我想通了。那些应用发现我的 GPS 定位，经常与母亲的手机在同一个位置，就把向我母亲推送的广告，也推送给我。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://threadreaderapp.com/thread/1397032784703655938.html&#34;&gt;Twitter 用户&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;254&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;阅读你喜欢的书，直到你喜欢阅读。（Read what you love until you love to read.）&lt;/p&gt;
&lt;p&gt;做你喜欢的事，直到你喜欢去做。（Do what you love until you love to Do.）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://twitter.com/id_aa_carmack/status/1445424833181925376&#34;&gt;@naval&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;255&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;历史上，没有人为氧气打过仗，因为有足够的氧气供每个人使用。大多数战争是为了土地和人口，它们都是稀缺而有价值的资源。&lt;/p&gt;
&lt;p&gt;供养人口需要粮食，二战后的农业革命，使得粮食变得如此便宜，这大大减少了战争，而促进了合作。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://www.lesswrong.com/posts/cLehpZAY3HZuEQbHe/cheap-food-causes-cooperative-ethics&#34;&gt;《廉价食品导致合作》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;256&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我不把 Facebook、Instagram、TikTok、Snapchat 这种软件，看成互联网的一部分。它们只是一个应用程序，只向注册会员开放，不与外部分享数据。它们虽然有网站，但是难于使用，而且有很多限制，只作为补充的访问方式。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://blog.archive.today/post/665401109290074112/why-do-you-view-fb-ig-tiktok-snapchat-as&#34;&gt;Archive.is blog&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;257&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Simplicity of both the interface and the implementation are more important than any other attributes of the system — including correctness, consistency, and completeness&lt;/p&gt;
&lt;p&gt;保持接口与实现的简单性，比系统的任何其他属性，包括准确性、一致性和完整性，都来得更加重要。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;—— &lt;a href=&#34;https://en.wikipedia.org/wiki/Richard_P._Gabriel&#34;&gt;Richard P. Gabriel&lt;/a&gt;，&lt;a href=&#34;https://en.wikipedia.org/wiki/Worse_is_better&#34;&gt;The Rise of &amp;lsquo;Worse is Better&amp;rsquo;&lt;/a&gt;，1991&lt;/p&gt;
&lt;p&gt;258&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Just because something &lt;strong&gt;can&lt;/strong&gt; be distributed doesn’t mean it &lt;strong&gt;should&lt;/strong&gt; be distributed. Trying to make a distributed call act like a local call always ends in tears&lt;/p&gt;
&lt;p&gt;某个功能&lt;strong&gt;能够&lt;/strong&gt;进行分布式，并不意味着它就&lt;strong&gt;应该&lt;/strong&gt;进行分布式，强行追求透明的分布式操作，只会自寻苦果&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;—— &lt;a href=&#34;https://en.wikipedia.org/wiki/Kyle_Brown_(computer_scientist)&#34;&gt;Kyle Brown&lt;/a&gt;，IBM Fellow，&lt;a href=&#34;https://developer.ibm.com/technologies/microservices/articles/cl-evolution-microservices-patterns/&#34;&gt;Beyond Buzzwords: A Brief History of Microservices Patterns&lt;/a&gt;，2016&lt;/p&gt;
&lt;p&gt;259&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;2016年，WhatsApp 的用户超过10亿，但是只有50个工程师。每个小团队由1到3名工程师组成，拥有很大的自主权。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash;&lt;a href=&#34;https://www.quastor.org/p/how-whatsapp-scaled-to-1-billion&#34;&gt;《WhatsApp 如何在只有50名工程师的情况下扩展到10亿用户》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;260&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果你收到我的邮件，只允许三种操作，否则就要立即辞职。&lt;/p&gt;
&lt;p&gt;第一种，回邮给我，解释为什么我说错了；&lt;/p&gt;
&lt;p&gt;第二种，如果有歧义，要求我进一步澄清；&lt;/p&gt;
&lt;p&gt;第三种，按照我说的去做。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://www.cnbc.com/2021/11/19/elon-musk-emails-at-tesla-in-october-2021-music-direct-orders.html&#34;&gt;马斯克&lt;/a&gt;今年10月发给所有特斯拉经理的内部邮件&lt;/p&gt;
&lt;p&gt;261&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;美国人喜欢轻资产的高科技业，互联网巨头 &lt;a href=&#34;https://en.wikipedia.org/wiki/Big_Tech#FANG,_FAANG,_and_MAMAA&#34;&gt;FAANG&lt;/a&gt; 都是轻资产重设计的模式，凡是要盖厂房搞制造就外包，让亚洲人穷忙又赚不了太多的钱，这才是美国人想要的产业模式。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ndash; Mobile01 读者&lt;/p&gt;
- https://www.openheart.icu/speech/speech/ - ALL RIGHTS RESERVED KRIS NIE</description>
        </item>
    
    
    
        <item>
        <title>.NET INTERVIEW</title>
        <link>https://www.openheart.icu/dotnet/dot-net-interview/</link>
        <pubDate>Fri, 17 Jul 2020 23:28:00 +0000</pubDate>
        
        <guid>https://www.openheart.icu/dotnet/dot-net-interview/</guid>
        <description>42th openheart https://www.openheart.icu/dotnet/dot-net-interview/ -&lt;h1 id=&#34;net-interview&#34;&gt;.NET INTERVIEW&lt;/h1&gt;
&lt;h2 id=&#34;from-jeffrey-zhaos-blog&#34;&gt;from Jeffrey Zhao&amp;rsquo;s blog&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;http://blog.zhaojie.me/2011/03/my-interview-questions-for-dotnet-programmers.html&#34;&gt;我在面试.NET/C#程序员时会提出的问题&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;什么是net什么是cli什么是clril是什么jit是什么它是如何工作的gc是什么简述一下gc的工作方式&#34;&gt;什么是.NET？什么是CLI？什么是CLR？IL是什么？JIT是什么，它是如何工作的？GC是什么，简述一下GC的工作方式？&lt;/h3&gt;
&lt;h4 id=&#34;什么是net&#34;&gt;什么是.net&lt;/h4&gt;
&lt;p&gt;&lt;em&gt;.NET是个平台，你就把它看成C#&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;一个.NET应用是一个运行于.NET Framework之上的应用程序。（更精确的说，一个.NET应用是一个使用.NET Framework类库来编写，并运行于公共语言运行时 Common Language Runtime之上的应用程序。）如果一个应用程序跟.NET Framework无关，它就不能叫做.NET程序。比如，仅仅使用了XML并不就是.NET应用，仅仅使用SOAP SDK调用一个Web Service也不是.NET应用&lt;/p&gt;
&lt;p&gt;开发平台（Dot Net Framework）：包含通用语言运行时（CLR）和Dot Net框架类库（FCL）两个部分。他们提供了一致的编程模型，简化的编程方式，可靠的版本机制（用全局程序集缓存GAC来避免DLL Hell），轻便的部署管理（程序集自带的元数据可以避免ini文件和注册表） ，广泛的平台支持（只要这台机器兼容标准下的CLR和FCL就可以部署，当然运行的时候IL会变成本机代码），无缝的语言集成，自动化的内存管理（垃圾收集），类型安全（CLR会阻止利用缓冲区溢出错误进行的攻击），CLR支持跨语言调试，统一的错误报告，全新的安全策略（CAS），兼容以往的COM组件&lt;/p&gt;
&lt;h4 id=&#34;什么是clr&#34;&gt;什么是CLR&lt;/h4&gt;
&lt;p&gt;CLR(公用语言运行时)和Java虚拟机一样也是一个&lt;strong&gt;运行时环境&lt;/strong&gt;，它负责资源管理（内存分配和垃圾收集），并保证应用和底层操作系统之间必要的分离。.NET Framework 提供了一个称为公共语言运行时的运行时环境**（Commen Language Runtime）**，它运行代码并提供使开发过程更轻松的服务。公共语言运行时的功能通过编译器和工具公开，你可以编写利用此托管执行环境的代码。 使用基于公共语言运行时的语言编译器开发的代码称为托管代码；托管代码具有许多优点，例如：跨语言集成、跨语言异常处理、增强的安全性、版本控制和部署支持、简化的组件交互模型、调试和分析服务等。&lt;/p&gt;
&lt;h4 id=&#34;什么是cli&#34;&gt;什么是CLI&lt;/h4&gt;
&lt;p&gt;通用语言基础结构（Common Language Infrastructure，CLI）是CLR的一个子集，也就是.NET中最终对编译成MSIL代码的应用程序的运行环境进行管理的那一部分。在 CLR结构图中CLI位于下半部分，主要包括类加载器(Class Loader)、实时编译器(IL To Native Compilers)和一个运行时环境的垃圾收集器(Garbage Collector)。CLI是.Net和CLR的灵魂，CLI为IL代码提供运行的环境，你可以将使用任何语言编写的代码通过其特定的编译器转换为 MSIL代码之后运行其上，甚至还可以自己写MSIL代码在CLI上面运行。&lt;/p&gt;
&lt;h4 id=&#34;什么是il&#34;&gt;什么是IL&lt;/h4&gt;
&lt;p&gt;IL是微软.NET平台上衍生出来的一门中间语言，.NET平台上的各种高级语言（如C#，VB，F#）的编译器会将各自的文字表述方式转化为 IL。各种不同的文字形式最终被统一到了IL的表述方式，其中包含了.NET平台上的各种元素，如“范型”，“类”、、“接口”、“模块”、“属性”等 等。值得注意的是，各种高级语言本身可能根本没有这些“概念”在里头，如IronScheme是一个在.NET平台上的Scheme语言实现，其中根本没有前面提到的这些IL——亦或说是.NET平台上的名词。IL本身并不知道自己是由哪种高级语言转化而来的，哪种语言中有哪些特性，IL也根本不会关心。&lt;/p&gt;
&lt;h4 id=&#34;什么是jit&#34;&gt;什么是JIT&lt;/h4&gt;
&lt;p&gt;JIT（Just In Time, JIT）是.Net边运行边编译的一种机制。&lt;/p&gt;
&lt;p&gt;开发人员需要通过IL与CLR进行交流，虽然IL本身支持一些面向对象的概念，但是对于开发人员来讲还是过于复杂低效，于是C#应运而生，程序员只需编写C#代码，csc编译器会将其翻译成IL；虽然CLR理解IL，但是CPU只认识二进制指令，所以CLR需要JIT的帮助，将IL翻译成CPU指令. JIT按需工作，当一个.NET方法即将被执行时，JIT会介入，把该方法（IL指令）编译成CPU指令，并保存以供重用。&lt;/p&gt;
&lt;h4 id=&#34;什么是gc以及它的工作方式&#34;&gt;什么是GC，以及它的工作方式&lt;/h4&gt;
&lt;p&gt;GC:.NET Framework 的垃圾回收器管理应用程序的内存分配和释放&lt;/p&gt;
&lt;h5 id=&#34;分配内存&#34;&gt;分配内存&lt;/h5&gt;
&lt;p&gt;初始化新进程时，运行时会为进程保留一个连续的地址空间区域。 这个保留的地址空间被称为托管堆。 托管堆维护着一个指针，用它指向将在堆中分配的下一个对象的地址。 最初，该指针设置为指向托管堆的基址。 托管堆上包含了所有&lt;a href=&#34;https://docs.microsoft.com/zh-cn/dotnet/standard/base-types/common-type-system&#34;&gt;引用类型&lt;/a&gt;。 应用程序创建第一个引用类型时，将为托管堆的基址中的类型分配内存。 应用程序创建下一个对象时，垃圾回收器在紧接第一个对象后面的地址空间内为它分配内存。 只要地址空间可用，垃圾回收器就会继续以这种方式为新对象分配空间。&lt;/p&gt;
&lt;p&gt;从托管堆中分配内存要比非托管内存分配速度快。 由于运行时通过为指针添加值来为对象分配内存，所以这几乎和从堆栈中分配内存一样快。 另外，由于连续分配的新对象在托管堆中是连续存储，所以应用程序可以快速访问这些对象。&lt;/p&gt;
&lt;h5 id=&#34;释放内存&#34;&gt;释放内存&lt;/h5&gt;
&lt;p&gt;垃圾回收器的优化引擎根据所执行的分配决定执行回收的最佳时间。 垃圾回收器在执行回收时，会释放应用程序不再使用的对象的内存。 它通过检查应用程序的根来确定不再使用的对象。 每个应用程序都有一组根。 每个根或者引用托管堆中的对象，或者设置为空。 应用程序的根包含线程堆栈上的静态字段、局部变量和参数以及 CPU 寄存器。 垃圾回收器可以访问由&lt;a href=&#34;https://docs.microsoft.com/zh-cn/dotnet/standard/managed-execution-process&#34;&gt;实时 (JIT) 编译器&lt;/a&gt;和运行时维护的活动根的列表。 垃圾回收器对照此列表检查应用程序的根，并在此过程中创建一个图表，在其中包含所有可从这些根中访问的对象。&lt;/p&gt;
&lt;p&gt;不在该图表中的对象将无法从应用程序的根中访问。 垃圾回收器会考虑无法访问的对象垃圾，并释放为它们分配的内存。 在回收中，垃圾回收器检查托管堆，查找无法访问对象所占据的地址空间块。 发现无法访问的对象时，它就使用内存复制功能来压缩内存中可以访问的对象，释放分配给不可访问对象的地址空间块。 在压缩了可访问对象的内存后，垃圾回收器就会做出必要的指针更正，以便应用程序的根指向新地址中的对象。 它还将托管堆指针定位至最后一个可访问对象之后。 请注意，只有在回收发现大量的无法访问的对象时，才会压缩内存。 如果托管堆中的所有对象均未被回收，则不需要压缩内存。&lt;/p&gt;
&lt;p&gt;为了改进性能，运行时为单独堆中的大型对象分配内存。 垃圾回收器会自动释放大型对象的内存。 但是，为了避免移动内存中的大型对象，不会压缩此内存。&lt;/p&gt;
&lt;h5 id=&#34;级别和性能&#34;&gt;级别和性能&lt;/h5&gt;
&lt;p&gt;为优化垃圾回收器的性能，将托管堆分为三代：第 0 代、第 1 代和第 2 代。运行时的垃圾回收算法基于以下几个普遍原理，这些垃圾回收方案的原理已在计算机软件业通过实验得到了证实。 首先，压缩托管堆的一部分内存要比压缩整个托管堆速度快。 其次，较新的对象生存期较短，而较旧的对象生存期则较长。 最后，较新的对象趋向于相互关联，并且大致同时由应用程序访问。&lt;/p&gt;
&lt;p&gt;运行时的垃圾回收器将新对象存储在第 0 级中。 在应用程序生存期的早期创建的对象如果未被回收，则被升级并存储在第 1 级和第 2 级中。因为压缩托管堆的一部分要比压缩整个托管堆速度快，所以此方案允许垃圾回收器在每次执行回收时释放特定级别的内存，而不是整个托管堆的内存。&lt;/p&gt;
&lt;p&gt;实际上，垃圾回收器在第 0 级托管堆已满时执行回收。 如果应用程序在第 0 级托管堆已满时尝试新建对象，垃圾回收器将会发现第 0 级托管堆中没有可分配给该对象的剩余地址空间。 垃圾回收器执行回收，尝试为对象释放第 0 级托管堆中的地址空间。 垃圾回收器从检查第 0 级托管堆中的对象（而不是托管堆中的所有对象）开始执行回收。 这是最有效的途径，因为新对象的生存期往往较短，并且期望在执行回收时，应用程序不再使用第 0 级托管堆中的许多对象。 另外，单独回收第 0 级托管堆通常可以回收足够的内存，这样，应用程序便可以继续创建新对象。&lt;/p&gt;
&lt;p&gt;垃圾回收器执行第 0 级托管堆的回收后，会压缩可访问对象的内存，如本主题前面的&lt;a href=&#34;https://docs.microsoft.com/zh-cn/dotnet/standard/automatic-memory-management#cpconautomaticmemorymanagementreleasingmemoryanchor1&#34;&gt;释放内存&lt;/a&gt;中所述。 然后，垃圾回收器升级这些对象，并考虑第 1 级托管堆的这一部分。 因为未被回收的对象往往具有较长的生存期，所以将它们升级至更高的级别很有意义。 因此，垃圾回收器在每次执行第 0 级托管堆的回收时，不必重新检查第 1 级和第 2 级托管堆中的对象。&lt;/p&gt;
&lt;p&gt;在执行第 0 级托管堆的首次回收并把可访问的对象升级至第 1 级托管堆后，垃圾回收器将考虑第 0 级托管堆的其余部分。 它将继续为第 0 级托管堆中的新对象分配内存，直至第 0 级托管堆已满并需执行另一回收为止。 这时，垃圾回收器的优化引擎会决定是否需要检查较旧的级别中的对象。 例如，如果第 0 级托管堆的回收没有回收足够的内存，不能使应用程序成功完成创建新对象的尝试，垃圾回收器就会先执行第 1 级托管堆的回收，然后再执行第 2 级托管堆的回收。 如果这样仍不能回收足够的内存，垃圾回收器将执行第 2、1 和 0 级托管堆的回收。 每次回收后，垃圾回收器都会压缩第 0 级托管堆中的可访问对象并将它们升级至第 1 级托管堆。 第 1 级托管堆中未被回收的对象将会升级至第 2 级托管堆。 由于垃圾回收器只支持三个级别，因此第 2 级托管堆中未被回收的对象会继续保留在第 2 级托管堆中，直到在将来的回收中确定它们为无法访问为止。&lt;/p&gt;
&lt;p&gt;托管代码就是执行过程交由运行时管理的代码。 在这种情况下，相关的运行时称为公共语言运行时 (CLR)，不管使用的是哪种实现（Mono、.NET Framework 或.NET Core）。 CLR 负责提取托管代码、将其编译成机器代码，然后执行它。 除此之外，运行时还提供多个重要服务，例如自动内存管理、安全边界、类型安全，等等。&lt;/p&gt;
&lt;p&gt;托管的执行过程包括以下步骤：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;选择编译器。若要获取公共语言运行时提供的好处，必须使用一个或多个面向运行时的语言编译器。&lt;/li&gt;
&lt;li&gt;将代码编译为 MSIL。编译将你的源代码转换为 Microsoft 中间语言 (MSIL) 并生成必需的元数据。&lt;/li&gt;
&lt;li&gt;将 MSIL 编译为本机代码。在执行时，实时 (JIT) 编译器将 MSIL 转换为本机代码。 在此编译期间，代码必须通过检查 MSIL 和元数据的验证过程以查明是否可以将代码确定为类型安全。&lt;/li&gt;
&lt;li&gt;运行代码。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;公共语言运行时提供启用要发生的执行的基础结构以及执行期间可使用的服务。&lt;/p&gt;
&lt;p&gt;//TODO:还可以在深入一下&lt;/p&gt;
&lt;h3 id=&#34;类class和结构struct的区别是什么它们对性能有影响吗net-bcl里有哪些是类结构为什么它们不是结构类在自定义类型时您如何选择是类还是结构&#34;&gt;类（class）和结构（struct）的区别是什么？它们对性能有影响吗？.NET BCL里有哪些是类（结构），为什么它们不是结构（类）？在自定义类型时，您如何选择是类还是结构？&lt;/h3&gt;
&lt;h4 id=&#34;什么是class和struct&#34;&gt;什么是class和struct&lt;/h4&gt;
&lt;p&gt;class 和struct 最本质的区别: class 是引用类型，它在堆中分配空间，栈中保存的只是引用；而struct 是值类型，它在栈中分配空间。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;什么是class?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;class（类）是面向对象编程的基本概念，是一种自定义数据结构类型，通常包含字段、属性、方法、构造函数、索引器、操作符等。在.NET中，所有的类都最终继承自 System.Object 类，因此是一种引用类型，也就是说，new 一个类的实例时，在栈（stack）上存放该实例在托管堆（Managed Heap）中的地址，而实例的值保存在托管堆（Managed Heap）中。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;托管堆&lt;/strong&gt;（&lt;strong&gt;Managed Heap&lt;/strong&gt;） ：&lt;strong&gt;托管堆&lt;/strong&gt;分配在被操作系统保留的一段内存区域中，这段内存区域是由 CLR 来管理的，这段内存称之为&lt;strong&gt;托管堆&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;什么是struct?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;struct（结构）是一种值类型，用于将一组相关的变量组织为一个单一的变量实体 。所有的结构直接派生自 System.ValueType，间接派生自System.Object，但&lt;strong&gt;结构是隐式密封&lt;/strong&gt;的，不能作为基类再派生出其他的结构，也不能从类派生，但可以从接口派生。struct 实例在创建时分配在线程的栈（stack）上，它本身存储了值。所以在使用 struct 时，我们可以将其当作 int、char 这样的基本类型对待。&lt;/p&gt;
&lt;h4 id=&#34;使用区别&#34;&gt;使用区别&lt;/h4&gt;
&lt;p&gt;class是引用类型，struct是值类型；既然 class 是引用类型，class 可以设为 null；但是我们不能将 struct 设为 null，因为它是值类型。&lt;/p&gt;
&lt;p&gt;当你实例化一个 class，它将创建在&lt;strong&gt;堆&lt;/strong&gt;上。
而你实例化一个 struct，它将创建在&lt;strong&gt;栈&lt;/strong&gt;上。&lt;/p&gt;
&lt;p&gt;你使用的是一个对 class 实例的引用。
而你使用的不是对一个 struct 的引用（而是直接使用它们）。&lt;/p&gt;
&lt;p&gt;当我们将 class 作为参数传给一个方法，
我们传递的是一个引用。struct 传递的是值而非引用。&lt;/p&gt;
&lt;p&gt;class 可以定义析构器，但是 struct 不可以。&lt;/p&gt;
&lt;p&gt;class可以有显示的无参构造器，但是 struct不可以。&lt;/p&gt;
&lt;p&gt;class 的构造器不需要初始化全部字段。
struct 的构造器必须初始化所有字段。&lt;/p&gt;
&lt;p&gt;struct 在声明时不能对实例字段进行赋值。&lt;/p&gt;
&lt;p&gt;class使用前必须new关键字实例化(静态类除外)，struct不需要。&lt;/p&gt;
&lt;p&gt;class 支持继承和多态，struct 不支持。注意：但是 struct 可以和类一样实现接口。&lt;/p&gt;
&lt;p&gt;既然 struct 不支持继承，其成员不能以 protected 或 protected internal 修饰。&lt;/p&gt;
&lt;p&gt;class 比较适合大的和复杂的数据。
struct 适用于作为经常使用的一些数据组合成的新类型。&lt;/p&gt;
&lt;p&gt;struct 类型总是隐式密封的，因此在定义结构时不能使用 sealed 和 abstract 关键字。&lt;/p&gt;
&lt;p&gt;struct的函数成员不能声明为 abstract 和 virtual，但是可以使用 override 关键字，用以覆写它的基类 System.ValueType 中的方法。&lt;/p&gt;
&lt;h4 id=&#34;适用场合&#34;&gt;适用场合&lt;/h4&gt;
&lt;p&gt;struct 有性能优势，class 有面向对象的扩展优势.&lt;/p&gt;
&lt;p&gt;由于结构是值类型，并且直接存储数据，因此在一个对象的主要成员为数据且数据量不大的情况下，使用结构会带来更好的性能.&lt;/p&gt;
&lt;p&gt;将一个结构变量赋值给另一个结构变量，就是把数据从一个结构复制到另一个结构。而类则不同，在类的变量之间，复制的是引用，而不是类数据.&lt;/p&gt;
&lt;p&gt;当把一个结构类型的变量赋值给另一个结构时，对性能的影响取决于结构的大小，当数据比较大的时候，这种数据复制机制会带来较大的开销.&lt;/p&gt;
&lt;p&gt;对于点、矩形和颜色这样的轻量对象，假如要声明一个含有许多个颜色对象的数组，则 CLR 需要为每个对象分配内存，在此情况下，使用结构的成本较低.&lt;/p&gt;
&lt;p&gt;当堆栈的空间很有限，且有大量的逻辑对象时，创建类要比创建结构好一些.&lt;/p&gt;
&lt;p&gt;在表现抽象和多级别的对象层次时，类是最好的选择，因为结构不支持继承.&lt;/p&gt;
&lt;p&gt;用于底层数据存储的类型设计为 struct 类型，将用于定义应用程序行为的类型设计为 class。如果对类型将来的应用情况不能确定，应该使用 class.&lt;/p&gt;
&lt;h3 id=&#34;泛型的作用是什么它有什么优势它对性能有影响吗它在执行时的行为是什么net-bcl中有哪些泛型类型举例说明平时编程中您定义的泛型类型&#34;&gt;泛型的作用是什么？它有什么优势？它对性能有影响吗？它在执行时的行为是什么？.NET BCL中有哪些泛型类型？举例说明平时编程中您定义的泛型类型。&lt;/h3&gt;
&lt;h4 id=&#34;泛型的作用&#34;&gt;泛型的作用&lt;/h4&gt;
&lt;p&gt;泛型的作用在于“算法的重用”。&lt;/p&gt;
&lt;p&gt;比如，原来的ArrayList只能接受Object，现在通过List可以接受任何类型，也就是说ArrayList的方法都被各个类型重用了。但是Dot Net的泛型有个比较制肘地方，就是你很难对数值类型（值类型）进行算法抽象，因为这牵涉到运算符重载的问题，同时Dot Net的泛型的类型参数也不能约束成一个基元值类型，如int、double、float。&lt;/p&gt;
&lt;h4 id=&#34;泛型的优势&#34;&gt;泛型的优势&lt;/h4&gt;
&lt;p&gt;1.源代码保护。&lt;/p&gt;
&lt;p&gt;如果你知道C++模板对泛型的实现机制，就会知道C++在编译的时候根据对泛型的调用，自动“内联”了一个实现，这样泛型的内容就暴露了，尔DotNet的实现方式就不同了，泛型类和方法会被编译成IL，在执行的时候由JIT负责将IL变化为指定类型参数的本地代码，从而保护了源代码。&lt;/p&gt;
&lt;p&gt;2.类型安全。&lt;/p&gt;
&lt;p&gt;这点是最显而易见的，抛弃了使用ArrayList时各种丑陋的强制类型转换&lt;/p&gt;
&lt;p&gt;3.更清晰地代码。&lt;/p&gt;
&lt;p&gt;因为没有了强制类型转换，所以代码自然显得更清晰，但是使用泛型时候带来的&amp;lt;&amp;gt;有时候确实也会让人搞糊涂，幸好泛型方法可以用类型推断或者using语句来进一步简化写法。&lt;/p&gt;
&lt;p&gt;4.更好的性能。&lt;/p&gt;
&lt;p&gt;因为值类型可以避免装箱和拆箱所带来的损耗（垃圾回收的次数也会减少）。这点正是泛型神奇的地方，开发历史上抽象能力的上升往往意味着性能的下降，但是泛型却不是！泛型抽象了算法，但是C++和DotNet对泛型的实现能够让性能无损，并且更快。Java的擦除法泛型就没有这种性能上的好处。&lt;/p&gt;
&lt;h4 id=&#34;对性能的影响&#34;&gt;对性能的影响&lt;/h4&gt;
&lt;p&gt;对性能有积极的影响，因为值类型可以避免装箱和拆箱所带来的负面影响，避免了垃圾回收，使得性能显著提高。但是对引用类型这种影响就不明显了。但是需要注意的是首次为一个特定数据类型调用方法时，CLR都会为这个方法生成本地代码。这会增大应用程序的工作集大小，从而影响性能。&lt;/p&gt;
&lt;h4 id=&#34;泛型在执行时的行为是什么&#34;&gt;泛型在执行时的行为是什么&lt;/h4&gt;
&lt;p&gt;使用泛型类型参数的一个方法在进行JIT编译时，CLR获取IL，用指定的类型实参进行替换，然后创建本地代码。需要特别注意的是引用类型是共享代码的，而对值类型就会为每一种生成独立的一份类型代码。但是需要指出的是引用类型的这种代码共享并不会造成封闭类型只执行一次构造函数（包括静态构造函数）。&lt;/p&gt;
&lt;h4 id=&#34;net-bcl中有哪些泛型类型&#34;&gt;.NET BCL中有哪些泛型类型&lt;/h4&gt;
&lt;p&gt;List、Dictionary、Queue、Stack、SortedList和SortedDictionary、LinkedList等等。&lt;/p&gt;
&lt;h3 id=&#34;异常的作用是什么net-bcl中有哪些常见的异常在代码中您是如何捕获处理异常的在catch-ex中throw和throw-ex有什么区别您会如何设计异常的结构什么情况下您会抛出异常&#34;&gt;异常的作用是什么？.NET BCL中有哪些常见的异常？在代码中您是如何捕获/处理异常的？在“catch (ex)”中，“throw”和“throw ex”有什么区别？您会如何设计异常的结构，什么情况下您会抛出异常？&lt;/h3&gt;
&lt;h4 id=&#34;异常的作用是什么&#34;&gt;异常的作用是什么&lt;/h4&gt;
&lt;p&gt;异常用于处理系统级或者应用程序级的错误状态。异常处理是一种结构化的处理过程，个人认为他最大的优点就在于将“成功场景”剥离出来，使得代码更加清晰自然。但是异常处理相对于返回错误码有一个缺点，那就是他会失去发生异常的位置。不过异常本身提供了很多帮助调试问题的工具，一般都带有栈跟踪，这样位置的问题就得到一定程度的解决。还有就是IF和异常之间的选择，我记得以前有人讨论过在各种分支下是使用异常来处理各种“失败场景”的分支还是使用IF或者SWITCH来处理呢？这其实是一个假问题，因为异常和错误是有概念上的不同的，这里的错误是指有违“主成功场景”的“异常场景”，尔异常是指当程序不能完成其名字所表示功能时的错误。&lt;/p&gt;
&lt;h4 id=&#34;net-bcl中有哪些常见的异常&#34;&gt;.NET BCL中有哪些常见的异常&lt;/h4&gt;
&lt;p&gt;随便说几个，最著名的恐怕就是那句像绕口令一样的“&lt;strong&gt;未将对象引用设置到对象实例&lt;/strong&gt;”了，还有那些基本一出现整个应用程序就被判死刑的“&lt;strong&gt;堆栈溢出&lt;/strong&gt;”、“&lt;strong&gt;内存无法分配&lt;/strong&gt;”异常了&lt;/p&gt;
&lt;h4 id=&#34;在代码中您是如何捕获处理异常的&#34;&gt;在代码中您是如何捕获/处理异常的&lt;/h4&gt;
&lt;p&gt;的最多的CATCH就是抓住数据的异常，然后回滚数据库来事务处理。这是一个典型的场景，因为你明确并且能够很好的恢复状态&lt;/p&gt;
&lt;h4 id=&#34;在catch-ex中throw和throw-ex有什么区别&#34;&gt;在“catch (ex)”中，“throw”和“throw ex”有什么区别&lt;/h4&gt;
&lt;p&gt;throw 重新抛出异常但是不破坏异常发生的调用栈尔“throw ex”会重置调用栈这样捕获异常的人会以为代码出错在这里。&lt;/p&gt;
&lt;p&gt;直接使用throw ex会导致吃掉原始异常点，重置堆栈中的异常起始点&lt;/p&gt;
&lt;p&gt;推荐使用&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-c#&#34; data-lang=&#34;c#&#34;&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;try&lt;/span&gt;{}
&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;catch&lt;/span&gt; (Exception ex)
{
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;throw&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;new&lt;/span&gt; Exception(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;经过进一步包装的异常&amp;#34;&lt;/span&gt;, ex);
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;listt和t的区别是什么平时你如何进行选择dictionarytkey-tvalue是做什么的net-bcl中还有哪些常用的容器它们分别是如何实现的哪种数据结构分别是适用于哪些场景&#34;&gt;List&lt;!-- raw HTML omitted --&gt;和T[]的区别是什么，平时你如何进行选择？Dictionary&amp;lt;TKey, TValue&amp;gt;是做什么的？.NET BCL中还有哪些常用的容器？它们分别是如何实现的（哪种数据结构）？分别是适用于哪些场景？&lt;/h3&gt;
&lt;p&gt;List&lt;!-- raw HTML omitted --&gt;长度不固定，动态变化，支持方法较多；T[]固定大小的泛型数组。&lt;/p&gt;
&lt;p&gt;Dictionary&amp;lt;TKey, TValue&amp;gt;是泛型字典，提供一对一的关系；&lt;/p&gt;
&lt;p&gt;.Net BCL中常用的集合有Stack&lt;!-- raw HTML omitted --&gt;、Queue&lt;!-- raw HTML omitted --&gt;、LinkedList&lt;!-- raw HTML omitted --&gt;，对应的数据结构是栈、队列和链表。&lt;/p&gt;
&lt;h3 id=&#34;抽象类和接口有什么区别使用时有什么需要注意的吗如何选择是定义一个完全抽象的抽象类还是接口什么是接口的显式实现为什么说它很重要&#34;&gt;抽象类和接口有什么区别？使用时有什么需要注意的吗？如何选择是定义一个“完全抽象”的抽象类，还是接口？什么是接口的“显式实现”？为什么说它很重要？&lt;/h3&gt;
&lt;p&gt;抽象类不能实例化。
抽象类的用途是提供多个派生类可共享基类的公共定义。
抽象类也可以定义抽象方法。
抽象方法没有实现，所以方法定义后面是分号，而不是常规的方法块。
抽象类的派生类必须实现所有抽象方法。
抽象类只能单继承&lt;/p&gt;
&lt;p&gt;接口类似于抽象基类：实现接口的任何非抽象类型都必须实现接口的所有成员。
不能直接实例化接口。
接口可以包含事件、索引器、方法和属性。
接口不包含方法的实现。
类和结构可继承多个接口。
接口自身可从多个接口继承。&lt;/p&gt;
&lt;p&gt;相同点：都不能被实例化，都可以通过继承实现其抽象方法；&lt;/p&gt;
&lt;p&gt;不同点：接口支持多继承，抽象类不能；接口只能定义行为，抽象类既可以定义行为，还能提供实现；接口只包含方法、属性、索引器和事件的签名，不能包括自定义字段和实现方法，抽象类可以包含自定义字段和实现方法。&lt;/p&gt;
&lt;h4 id=&#34;显式地实现接口成员&#34;&gt;显式地实现接口成员&lt;/h4&gt;
&lt;p&gt;即创建一个仅通过该接口调用并且特定于该接口的类成员&lt;/p&gt;
&lt;p&gt;类成员 IControl.Paint 只能通过 IControl 接口使用， ISurface.Paint 只能通过 ISurface 使用。&lt;/p&gt;
&lt;p&gt;两个方法实现都是分离的，都不可以直接在类中使用。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-c#&#34; data-lang=&#34;c#&#34;&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;interface&lt;/span&gt; IControl
{
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;void&lt;/span&gt; Paint();
}
&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;interface&lt;/span&gt; ISurface
{
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;void&lt;/span&gt; Paint();
}
&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#008b45;font-weight:bold&#34;&gt;SampleClass&lt;/span&gt; : IControl, ISurface
{
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;void&lt;/span&gt; Paint()
    {
    }
}

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-c#&#34; data-lang=&#34;c#&#34;&gt;SampleClass obj = &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;new&lt;/span&gt; SampleClass();
&lt;span style=&#34;color:#228b22&#34;&gt;//obj.Paint(); // Compiler error.
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;
IControl c = (IControl)obj;
c.Paint(); &lt;span style=&#34;color:#228b22&#34;&gt;// Calls IControl.Paint on SampleClass.
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;
ISurface s = (ISurface)obj;
s.Paint(); &lt;span style=&#34;color:#228b22&#34;&gt;// Calls ISurface.Paint on SampleClass.
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;显式实现还用于解决两个接口分别声明具有相同名称的不同成员（如属性和方法）的情况：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-c#&#34; data-lang=&#34;c#&#34;&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;interface&lt;/span&gt; ILeft
{
	&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; P { &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;get&lt;/span&gt;;}
}
&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;interface&lt;/span&gt; IRight
{
	&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; P();
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;为了同时实现两个接口，类必须对属性 P 和/或方法 P 使用显式实现以避免编译器错误。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-c#&#34; data-lang=&#34;c#&#34;&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#008b45;font-weight:bold&#34;&gt;Middle&lt;/span&gt; : ILeft, IRight
{
    &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; ILeft.P { &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;get&lt;/span&gt; { &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;; } }
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; P() { &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;; }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;抽象类和接口的使用&#34;&gt;抽象类和接口的使用&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;如果预计要创建组件的多个版本，则创建抽象类。抽象类提供简单的方法来控制组件版本；&lt;/li&gt;
&lt;li&gt;如果创建的功能将在大范围的全异对象间使用，则使用接口。如果要设计小而简练的功能块，则使用接口；&lt;/li&gt;
&lt;li&gt;如果要设计大的功能单元，则使用抽象类。如果要在组件的所有实现间提供通用的已实现功能，则使用抽象类；&lt;/li&gt;
&lt;li&gt;抽象类主要用于关系密切的对象；而接口适合为不相关的类提供通用功能。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;字符串是引用类型类型还是结构类型它和普通的引用类型相比有什么特别的地方吗使用字符串时有什么需要注意的地方为什么说stringbuilder比较高效在连接多个字符串时它无论何时都比直接相加更高效吗&#34;&gt;字符串是引用类型类型还是结构类型？它和普通的引用类型相比有什么特别的地方吗？使用字符串时有什么需要注意的地方？为什么说StringBuilder比较高效？在连接多个字符串时，它无论何时都比直接相加更高效吗？&lt;/h3&gt;
&lt;p&gt;MSDN 中明确指出 String 是引用类型而不是值类型，但 String 表面上用起来却像是值类型&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-c#&#34; data-lang=&#34;c#&#34;&gt;&lt;span style=&#34;color:#228b22&#34;&gt;//值类型
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; a = &lt;span style=&#34;color:#b452cd&#34;&gt;1&lt;/span&gt;;
&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; b = a;
a = &lt;span style=&#34;color:#b452cd&#34;&gt;2&lt;/span&gt;;
Console.WriteLine(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;a is {0},b is {1}&amp;#34;&lt;/span&gt;, a, b);
 
&lt;span style=&#34;color:#228b22&#34;&gt;//引用类型
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;string&lt;/span&gt; str1 = &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;ab&amp;#34;&lt;/span&gt;;
&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;string&lt;/span&gt; str2 = str1;
str1 = &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;abc&amp;#34;&lt;/span&gt;;
Console.WriteLine(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;str1 is {0},str2 is {1}&amp;#34;&lt;/span&gt;, str1, str2);
Console.Read();
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;//结果：
a is 2,b is 1
str1 is abc,str2 is ab
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;原因：string对象是不可变的，包括长度和其中任何字符都是不可以改变的。&lt;/p&gt;
&lt;h4 id=&#34;string的不变性&#34;&gt;String的不变性&lt;/h4&gt;
&lt;p&gt;string 对象称为不可变的（只读），即字符串恒定性(Immutability)，字符串一经创建，就不可改变。有的时候看来似乎修改了，实际是string经过了特殊处理，每次改变值时都会建立一个新的string对象，变量会指向这个新的对象，而原来的还是指向原来的对象，所以不会改变。这也是string效率低下的原因。如果经常改变string的值则应该使用StringBuilder而不使用string。&lt;/p&gt;
&lt;h4 id=&#34;stringstringbuilder&#34;&gt;String、StringBuilder&lt;/h4&gt;
&lt;p&gt;当大量使用string进行拼接的时候，直接使用string+会影响效率，使用StringBuilder更为合适；&lt;/p&gt;
&lt;p&gt;在连接多个字符串时，StringBuilder并不总是比String高效，对于简单的字符串连接操作，在性能上StringBuilder不一定总是优于String，因为StringBuilder对象的创建代价比较大，在字符串连接目标较少的情况下，过度滥用StringBuilder会导致性能的浪费而非节约。只有大量的或者无法预知次数的字符串操作，才考虑以StringBuilder实现。&lt;/p&gt;
&lt;h3 id=&#34;如何高效地进行数组复制二维数组和数组的数组有什么区别在使用双重循环遍历一个二维数组时如何选择内外层的遍历顺序&#34;&gt;如何高效地进行数组复制？“二维数组”和“数组的数组”有什么区别？在使用双重循环遍历一个二维数组时，如何选择内外层的遍历顺序？&lt;/h3&gt;
&lt;h3 id=&#34;什么是元编程net有哪些元编程的手段和场景什么是反射能否举一些反射的常用场景有人说反射性能较差您怎么看待这个问题有什么办法可以提高反射的性能吗&#34;&gt;什么是元编程，.NET有哪些元编程的手段和场景？什么是反射？能否举一些反射的常用场景？有人说反射性能较差，您怎么看待这个问题？有什么办法可以提高反射的性能吗？&lt;/h3&gt;
&lt;h3 id=&#34;委托是什么匿名方法是什么在c-30中lambda表达式是什么扩展方法是什么linq是什么您觉得c-30中还有哪些重要的特性它们带来了什么优势bcl中哪些类库和这些特性有关您平时最常用哪些&#34;&gt;委托是什么？匿名方法是什么？在C# 3.0中，Lambda表达式是什么？扩展方法是什么？LINQ是什么？您觉得C# 3.0中还有哪些重要的特性，它们带来了什么优势？BCL中哪些类库和这些特性有关？您平时最常用哪些？&lt;/h3&gt;
&lt;h4 id=&#34;委托是什么&#34;&gt;委托是什么&lt;/h4&gt;
&lt;p&gt;MSND:委托是一种引用方法的类型，太抽象了这定义，看不懂&lt;/p&gt;
&lt;p&gt;我的理解是：委托就是对于一组方法的抽象，代表一组方法的共同特征。&lt;/p&gt;
&lt;h4 id=&#34;匿名方法是什么&#34;&gt;匿名方法是什么&lt;/h4&gt;
&lt;p&gt;匿名方法是指将一段代码块作为委托参数传递给另外一个方法中。&lt;/p&gt;
&lt;p&gt;匿名方法能访问方法中的变量和类中的成员。&lt;/p&gt;
&lt;p&gt;使用匿名方法，则不必创建当独的方法，因此减少了实例化委托所需的编码开销。&lt;/p&gt;
&lt;h4 id=&#34;lamdba表达式是什么&#34;&gt;lamdba表达式是什么&lt;/h4&gt;
&lt;p&gt;“Lambda 表达式”是一个匿名函数，它可以包含表达式和语句，并且可用于创建委托或表达式树类型。&lt;/p&gt;
&lt;h4 id=&#34;扩展方法是什么&#34;&gt;扩展方法是什么&lt;/h4&gt;
&lt;p&gt;扩展方法是使我们能在现有类型的基础上添加新方法，而无需创建派生类、重新编译或以其他方式修改原始类型。&lt;/p&gt;
&lt;h4 id=&#34;linq是什么&#34;&gt;LINQ是什么&lt;/h4&gt;
&lt;p&gt;语言级集成查询（Language INtegrated Query），是一组用于c#和Visual Basic语言的扩展。它允许编写C#或者Visual Basic代码以查询数据库相同的方式操作内存数据。&lt;/p&gt;
&lt;h3 id=&#34;工作之外您看哪些技术相关的书网站社区项目等等您还接触哪些net以外的技术能和net或net中有针对性的部分做个对比吗&#34;&gt;工作之外您看哪些技术相关的书、网站、社区、项目等等？您还接触哪些.NET以外的技术，能和.NET或.NET中有针对性的部分做个对比吗？&lt;/h3&gt;
&lt;p&gt;多了去了&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;what-u-should-know&#34;&gt;What u should know&lt;/h2&gt;
&lt;h3 id=&#34;server&#34;&gt;Server&lt;/h3&gt;
&lt;h4 id=&#34;kestrel&#34;&gt;Kestrel&lt;/h4&gt;
&lt;p&gt;Kestrel 是 ASP.NET Core 项目模板指定的默认 Web 服务器。&lt;/p&gt;
&lt;h5 id=&#34;何时结合使用-kestrel-和反向代理&#34;&gt;何时结合使用 Kestrel 和反向代理：&lt;/h5&gt;
&lt;p&gt;可以单独使用 Kestrel，也可以将其与反向代理服务器（如 &lt;a href=&#34;https://www.iis.net/&#34;&gt;Internet Information Services (IIS)&lt;/a&gt;、&lt;a href=&#34;https://nginx.org/&#34;&gt;Nginx&lt;/a&gt; 或 &lt;a href=&#34;https://httpd.apache.org/&#34;&gt;Apache&lt;/a&gt;）结合使用。 反向代理服务器接收来自网络的 HTTP 请求，并将这些请求转发到 Kestrel。&lt;/p&gt;
&lt;p&gt;Kestrel 用作边缘（面向 Internet）Web 服务器：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.microsoft.com/zh-cn/aspnet/core/fundamentals/servers/kestrel/_static/kestrel-to-internet2.png?view=aspnetcore-5.0&#34; alt=&#34;Kestrel 直接与 Internet 通信，不使用反向代理服务器&#34;&gt;&lt;/p&gt;
&lt;p&gt;Kestrel 用于反向代理配置：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.microsoft.com/zh-cn/aspnet/core/fundamentals/servers/kestrel/_static/kestrel-to-internet.png?view=aspnetcore-5.0&#34; alt=&#34;Kestrel 通过反向代理服务器（如 IIS、Nginx 或 Apache）间接与 Internet 进行通信&#34;&gt;&lt;/p&gt;
&lt;p&gt;无论配置是否使用反向代理服务器，都是受支持的托管配置。&lt;/p&gt;
&lt;p&gt;在没有反向代理服务器的情况下用作边缘服务器的 Kestrel 不支持在多个进程间共享相同的 IP 和端口。 如果将 Kestrel 配置为侦听某个端口，Kestrel 会处理该端口的所有流量（无视请求的 &lt;code&gt;Host&lt;/code&gt; 标头）。 可以共享端口的反向代理能在唯一的 IP 和端口上将请求转发至 Kestrel。&lt;/p&gt;
&lt;p&gt;即使不需要反向代理服务器，使用反向代理服务器可能也是个不错的选择。&lt;/p&gt;
&lt;p&gt;反向代理：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可以限制所承载的应用中的公开的公共外围应用。&lt;/li&gt;
&lt;li&gt;提供额外的配置和防护层。&lt;/li&gt;
&lt;li&gt;可以更好地与现有基础结构集成。&lt;/li&gt;
&lt;li&gt;简化了负载均和和安全通信 (HTTPS) 配置。 仅反向代理服务器需要 X.509 证书，并且该服务器可使用普通 HTTP 在内部网络上与应用服务器通信。&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;相关资料&#34;&gt;相关资料：&lt;/h5&gt;
&lt;p&gt;&lt;a href=&#34;https://dotnetcoretutorials.com/2019/12/25/kestrel-vs-iis/%5B&#34;&gt;Kestrel vs IIS&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&#34;apache&#34;&gt;Apache&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;Apache对每个请求都会创建一个进程&lt;/strong&gt;, 因此请求越多，进程创建的也越多，&lt;strong&gt;那么整体网站的性能也就越低&lt;/strong&gt;。这是因为每个进程都会占用一定的资源，当进程越来越多的时候，对于整个服务器的性能消耗都是一个很大的影响。当从外部境内的请求持续增长的时候，Apache服务器就会变得越来越慢，处理的越来越吃力了。因为处理的变慢了，就会导致有更多的请求积压下来，从而导致性能进一步降低。这就形成了&lt;strong&gt;恶性的循环&lt;/strong&gt;。&lt;/p&gt;
&lt;h4 id=&#34;nginx&#34;&gt;Nginx&lt;/h4&gt;
&lt;p&gt;nginx是用另外一种方式来处理请求的。当请求处理达到一个峰值的时候，会要求这些请求等待，当&lt;strong&gt;有空间的时候再放进来&lt;/strong&gt;。这就是&lt;strong&gt;基于事件为导向的处理方式&lt;/strong&gt;。因为事件消耗的资源，要比进程消耗的资源小的多的多，所以nginx，在同等性能的条件下能够处理4倍于Apache服务器的请求。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;集合类型和泛型&#34;&gt;集合类型和泛型&lt;/h3&gt;
&lt;h4 id=&#34;数组array&#34;&gt;数组(Array)&lt;/h4&gt;
&lt;p&gt;数组具有以下的特点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;数组属于线性结构，在内存中是连续存放的。&lt;/li&gt;
&lt;li&gt;数组的元素类型必须相同。&lt;/li&gt;
&lt;li&gt;数组可以直接通过下标访问。&lt;/li&gt;
&lt;li&gt;数组的查找速度非常快，新增和删除速度慢。&lt;/li&gt;
&lt;li&gt;数组在初始化时要指定数组长度。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;动态数组arraylist&#34;&gt;动态数组(ArrayList)&lt;/h4&gt;
&lt;p&gt;动态数组具有以下的特点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;ArrayList的底层其实就是一个数组。&lt;/li&gt;
&lt;li&gt;ArrayList在声明时不必指定长度，会根据存储的数据动态的增加或减少长度。&lt;/li&gt;
&lt;li&gt;ArrayList会把所有的元素都当做Object处理，因此可以存储不同数据类型的元素。&lt;/li&gt;
&lt;li&gt;插入和删除一个元素时，会移动它之后所有元素的位置，效率低，频繁进行插入或者删除元素推荐使用LinkedList。&lt;/li&gt;
&lt;li&gt;ArrayList是非类型安全的，在插入和删除元素时会进行拆箱和装箱问题，影响性能，效率低。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;泛型list&#34;&gt;泛型List&lt;/h4&gt;
&lt;p&gt;泛型List具有以下的特点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;List是ArrayList的泛型类。&lt;/li&gt;
&lt;li&gt;泛型List需要在声明时指定具体的类型。&lt;/li&gt;
&lt;li&gt;泛型List没有装箱和拆箱操作，因此List比ArrayList效率高而且类型安全。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;双向链表linkedlist&#34;&gt;双向链表（LinkedList）&lt;/h4&gt;
&lt;p&gt;双向链表具有如下特点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;链表的节点在内存中的空间是不连续的，每块空间称作一个节点，每个节点都存有一个前驱和后置指针，分别指向前一个节点和后一个节点，因此向链表中添加和删除元素的效果高，只需要更改相应节点的指针指向即可。&lt;/li&gt;
&lt;li&gt;链表的查找效率低。查找元素时不能通过下标进行访问，只能从头开始通过地址按顺序查找。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;堆栈stack&#34;&gt;堆栈（Stack）&lt;/h4&gt;
&lt;p&gt;堆栈具有如下特点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;堆栈是先进后出的原则，最先插入的元素最后被访问，最后插入的元素最先被访问。&lt;/li&gt;
&lt;li&gt;Push入栈，Pop出栈并返回栈顶元素，Peek只返回栈顶元素。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;queue队列&#34;&gt;Queue（队列）&lt;/h4&gt;
&lt;p&gt;队列具有以下特点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;队列是先进先出的原则，最先进入的元素最先被访问，最后进入的元素最后被访问。&lt;/li&gt;
&lt;li&gt;Enqueue入队列，Dequeue出队列并返回列首元素，Peek只返回列首元素。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;字典dictionary&#34;&gt;字典（Dictionary）&lt;/h4&gt;
&lt;p&gt;字典具有以下特点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;创建字典时需要指定key和value的数据类型。&lt;/li&gt;
&lt;li&gt;字典中的key值是唯一的，value的值可以不唯一。&lt;/li&gt;
&lt;li&gt;可以通过key快速查找对应的value，速度快，但是消耗内存。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;在字典中,数组entries用来存储数据,buckets作为桥梁,每次通过hash function获取了key的哈希值后,对这个哈希值进行取余,即&lt;code&gt;hashResult%bucketsLength=bucketIndex&lt;/code&gt;,余数作为buckets的index,而buckets的value就是这个key对应的entry所在entries中的索引,所以最终我们就可以通过这个索引在entries中拿到我们想要的数据,整个过程不需要对所有数据进行遍历,的时间复杂度为1.&lt;/p&gt;
&lt;h4 id=&#34;几种常见数据结构的使用情景&#34;&gt;几种常见数据结构的使用情景&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;数据结构&lt;/th&gt;
&lt;th&gt;使用场景&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Array&lt;/td&gt;
&lt;td&gt;需要处理的元素数量确定并且需要使用下标进行访问时可以考虑，不过建议使用List&lt;!-- raw HTML omitted --&gt;。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ArrayList&lt;/td&gt;
&lt;td&gt;不推荐使用，建议使用泛型List&lt;!-- raw HTML omitted --&gt;。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;List&lt;!-- raw HTML omitted --&gt;&lt;/td&gt;
&lt;td&gt;需要处理的元素数量不确定时，通常建议使用。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;LinkedList&lt;!-- raw HTML omitted --&gt;&lt;/td&gt;
&lt;td&gt;链表适合元素数量不固定，而且需要经常增减节点的情况，链表增减元素效率高。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Queue&lt;!-- raw HTML omitted --&gt;&lt;/td&gt;
&lt;td&gt;队列适合于先进先出的情况。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Stack&lt;!-- raw HTML omitted --&gt;&lt;/td&gt;
&lt;td&gt;堆栈适合于先进后出的情况。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Dictionary&amp;lt;K,T&amp;gt;&lt;/td&gt;
&lt;td&gt;字典适合于需要键值对操作的情况。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;许多泛型集合类型均为非泛型类型的直接模拟。 &lt;a href=&#34;https://docs.microsoft.com/zh-cn/dotnet/api/system.collections.generic.dictionary-2?view=dotnet-plat-ext-3.1&#34;&gt;Dictionary&lt;/a&gt; 是 &lt;a href=&#34;https://docs.microsoft.com/zh-cn/dotnet/api/system.collections.hashtable?view=dotnet-plat-ext-3.1&#34;&gt;Hashtable&lt;/a&gt; 的泛型版本；它使用枚举的泛型结构 &lt;a href=&#34;https://docs.microsoft.com/zh-cn/dotnet/api/system.collections.generic.keyvaluepair-2?view=dotnet-plat-ext-3.1&#34;&gt;KeyValuePair&lt;/a&gt;而不是 &lt;a href=&#34;https://docs.microsoft.com/zh-cn/dotnet/api/system.collections.dictionaryentry?view=dotnet-plat-ext-3.1&#34;&gt;DictionaryEntry&lt;/a&gt;。 &lt;a href=&#34;https://docs.microsoft.com/zh-cn/dotnet/api/system.collections.generic.list-1?view=dotnet-plat-ext-3.1&#34;&gt;List&lt;/a&gt; 是 &lt;a href=&#34;https://docs.microsoft.com/zh-cn/dotnet/api/system.collections.arraylist?view=dotnet-plat-ext-3.1&#34;&gt;ArrayList&lt;/a&gt; 的泛型版本。 存在响应非泛型版本的泛型 &lt;a href=&#34;https://docs.microsoft.com/zh-cn/dotnet/api/system.collections.generic.queue-1?view=dotnet-plat-ext-3.1&#34;&gt;Queue&lt;/a&gt; 和 &lt;a href=&#34;https://docs.microsoft.com/zh-cn/dotnet/api/system.collections.generic.stack-1?view=dotnet-plat-ext-3.1&#34;&gt;Stack&lt;/a&gt; 类。 存在 &lt;a href=&#34;https://docs.microsoft.com/zh-cn/dotnet/api/system.collections.generic.sortedlist-2?view=dotnet-plat-ext-3.1&#34;&gt;SortedList&lt;/a&gt; 的泛型和非泛型版本。 这两个版本均为字典和列表的混合。&lt;a href=&#34;https://docs.microsoft.com/zh-cn/dotnet/api/system.collections.generic.sorteddictionary-2?view=dotnet-plat-ext-3.1&#34;&gt;SortedDictionary&lt;/a&gt; 泛型类是一个纯字典，并且没有任何非泛型对应项。 &lt;a href=&#34;https://docs.microsoft.com/zh-cn/dotnet/api/system.collections.generic.linkedlist-1?view=dotnet-plat-ext-3.1&#34;&gt;LinkedList&lt;/a&gt;泛型类是真正的链接列表，不包含任何非泛型。&lt;/p&gt;
&lt;h4 id=&#34;线程安全&#34;&gt;线程安全&lt;/h4&gt;
&lt;p&gt;ConcurrentDictionary是&lt;code&gt;System.Collections.Concurrent&lt;/code&gt;中&lt;strong&gt;线程安全&lt;/strong&gt;的字典类&lt;/p&gt;
&lt;h4 id=&#34;和equals方法的区别&#34;&gt;==和equals方法的区别&lt;/h4&gt;
&lt;p&gt;首先的区别是，equals 是方法，而 == 是操作符；&lt;/p&gt;
&lt;p&gt;对于基本类型的变量来说（如 short、 int、 long、 float、 double），只能使用 == ，因为这些基本类型的变量没有 equals 方法。对于基本类型变量的比较，使用 == 比较， &lt;code&gt;一般比较的是它们的值&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;对于引用类型的变量来说（例如 String 类）才有 equals 方法，因为 String 继承了 Object 类， equals 是 Object 类的通用方法。对于该类型对象的比较，默认情况下，也就是没有复写 Object 类的 equals 方法，使用 == 和 equals 比较是一样效果的，都是比较的是它们在内存中的存放地址。但是对于某些类来说，为了满足自身业务需求，可能存在 equals 方法被复写的情况，这时使用 equals 方法比较需要看具体的情况，例如 String 类，使用 equals 方法会比较它们的值；&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;聚集索引与非聚集索引&#34;&gt;聚集索引与非聚集索引&lt;/h3&gt;
&lt;p&gt;MSDN介绍索引创建有如下Typical Implementations：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在创建 PRIMARY KEY 约束时，如果不存在该表的聚集索引且未指定唯一非聚集索引，则将自动对一列或多列创建唯一聚集索引。 主键列不允许空值。&lt;/p&gt;
&lt;p&gt;在创建 UNIQUE 约束时，默认情况下将创建唯一非聚集索引，以便强制 UNIQUE 约束。 如果不存在该表的聚集索引，则可以指定唯一聚集索引。&lt;/p&gt;
&lt;p&gt;将索引创建为约束的一部分后，会自动将索引命名为与约束名称相同的名称。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;PRIMARY KEY and UNIQUE constraints会自动创建索引。登录时，用户名必然是unique的，所以使用用户名查询进行SQL优化时无需再考虑创建索引。&lt;/p&gt;
&lt;h4 id=&#34;聚集索引&#34;&gt;聚集索引&lt;/h4&gt;
&lt;p&gt;MSDN上讲到 &lt;em&gt;A heap is a table without a clustered index&lt;/em&gt; (没有聚集索引的表叫做堆)。B+树是应数据库所需而出现的一种B树的变形树，存储在堆中的数据是无序的（&lt;em&gt;Data is stored in the heap without specifying an order&lt;/em&gt;），那怎么让数据按照B+树的结构存储并以方便查找呢？bingo, it&amp;rsquo;s clustered index.&lt;/p&gt;
&lt;p&gt;在primary key或者unique constraints加上聚集索引后，数据以B+树结构排序，以方便数据库进行查找（B+树的所在章并非树而是查找）。数据库数据存储结构（B+树）如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.openheart.icu/image/B+Tree-20200916191519.png&#34; alt=&#34;B+Tree&#34;&gt;&lt;/p&gt;
&lt;p&gt;使用B+树进行查找在提高关系数据库查找效率的同时，如果频繁的对数据进行增删改树的结构必然会被破坏，数据库将重新梳理索引重建树，聚集索引会给查询以外的操作带来的byproduct，影响增删改的效率。&lt;/p&gt;
&lt;h4 id=&#34;非聚集索引&#34;&gt;非聚集索引&lt;/h4&gt;
&lt;p&gt;非聚集索引与聚集索引类似，只不过是针对unique contraints字段创建的。可以给表中多个字段都加上非聚集索引，数据库就会有多个独立的树结构，每个索引互相之间不存在关联。&lt;/p&gt;
&lt;p&gt;每次给字段建一个新索引， 字段中的数据就会被复制一份出来， 用于生成索引。 因此， 给表添加索引，会增加表的体积， 占用磁盘存储空间。&lt;/p&gt;
&lt;h4 id=&#34;引申&#34;&gt;引申&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;非聚集索引和聚集索引的区别&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;通过聚集索引可以一次查到需要查找的数据（聚集索引的叶子节点直接指向数据）， 而通过非聚集索引第一次只能查到记录对应的主键值 ， 再使用主键的值通过聚集索引查找到需要的数据（非聚簇索引的叶节点仍然是索引节点，然后由该索引结点指向对应的数据块）。&lt;/p&gt;
&lt;p&gt;聚集索引一张表只能有一个，而非聚集索引一张表可以有多个。&lt;/p&gt;
&lt;p&gt;一般来说聚簇索引 B 树的叶子节点存储的数据，非聚簇索引叶子节点存储指针，所以非聚簇索引要多一次I/O操作才能读取到数据&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;B+ Tree索引和Hash索引区别&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;哈希索引适合等值查询，但是不无法进行范围查询哈希索引没办法利用索引完成排序，哈希索引不支持多列联合索引的最左匹配规则，如果有大量重复键值得情况下，哈希索引的效率会很低，因为存在哈希碰撞问题。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;何时使用聚集索引或者非聚集索引&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;动作描述&lt;/th&gt;
&lt;th&gt;使用聚集索引&lt;/th&gt;
&lt;th&gt;使用非聚集索引&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;列经常被分组排序&lt;/td&gt;
&lt;td&gt;应&lt;/td&gt;
&lt;td&gt;应&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;返回某范围内的数据&lt;/td&gt;
&lt;td&gt;应&lt;/td&gt;
&lt;td&gt;不应&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;一个或极少不同值&lt;/td&gt;
&lt;td&gt;不应&lt;/td&gt;
&lt;td&gt;不应&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;小数目的不同值&lt;/td&gt;
&lt;td&gt;应&lt;/td&gt;
&lt;td&gt;不应&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;大数目的不同值&lt;/td&gt;
&lt;td&gt;不应&lt;/td&gt;
&lt;td&gt;应&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;频繁更新的列&lt;/td&gt;
&lt;td&gt;不应&lt;/td&gt;
&lt;td&gt;应&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;外键列&lt;/td&gt;
&lt;td&gt;应&lt;/td&gt;
&lt;td&gt;应&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;主键列&lt;/td&gt;
&lt;td&gt;应&lt;/td&gt;
&lt;td&gt;应&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;频繁修改索引列&lt;/td&gt;
&lt;td&gt;不应&lt;/td&gt;
&lt;td&gt;应&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;复合索引&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;通过包含非键列，可以创建覆盖更多查询的非聚集索引。 这是因为非键列具有下列优点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;它们可以是不允许作为索引键列的数据类型。&lt;/li&gt;
&lt;li&gt;在计算索引键列数或索引键大小时， 数据库引擎不考虑它们。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在where条件中字段用索引，如果用多字段就用复合索引。当查询中的所有列都作为键列或非键列包含在索引中时，带有包含性非键列的索引可以显著提高查询性能。 这样可以实现性能提升，因为查询优化器可以在索引中找到所有列值；不访问表或聚集索引数据，从而减少磁盘 I/O 操作。&lt;/p&gt;
&lt;p&gt;当索引包含查询引用的所有列时，它通常称为“覆盖查询”。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;查询优化&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;explain，使用执行计划去分析是否走索引，没有索引创建索引，有的话判断索引为什么失效？&lt;/p&gt;
&lt;p&gt;索引什么时候会失效？最左匹配原则、or条件两边有一边没有使用索引、条件字段函数操作、字段类型隐式转换、like以%开头、表中数据较少导致全表比索引快，这些条件都会导致索引失效。&lt;/p&gt;
&lt;p&gt;最左匹配原则：以最左边的为起点任何连续的索引都能匹配上。同时遇到范围查询(&amp;gt;、&amp;lt;、between、like)就会停止匹配&lt;/p&gt;
&lt;p&gt;sqlserver创建分区表的步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;创建文件组&lt;/li&gt;
&lt;li&gt;创建数据文件&lt;/li&gt;
&lt;li&gt;创建分区函数&lt;/li&gt;
&lt;li&gt;创建分区方案&lt;/li&gt;
&lt;li&gt;创建分区表&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id=&#34;sqlserver中varcharmaxtextxml的区别&#34;&gt;sqlserver中varchar(max)/text/xml的区别&lt;/h3&gt;
&lt;p&gt;varchar(max)=text&lt;/p&gt;
&lt;p&gt;nvarchar(max)=ntext&lt;/p&gt;
&lt;p&gt;varbinary(max)=image&lt;/p&gt;
&lt;p&gt;有了大值数据类型之后，在对大值数据操作的时候要比以前灵活的多了。比如：之前text是不能用‘like’ ‘=’&lt;/p&gt;
&lt;p&gt;如果能保证XML格式的字段永远只存储XMl，而应当用xml数据类型存储XML，XML能的保证格式，并且可能要使用服务器端验证并查询XML。&lt;/p&gt;
&lt;p&gt;char是定长的，会自动空格补足&lt;/p&gt;
&lt;p&gt;varchar(n)&lt;/p&gt;
&lt;p&gt;长度为 n 个字节的可变长度且非 Unicode 的字符数据。n 必须是一个介于 1 和 8,000 之间的数值。存储大小为输入数据的字节的实际长度，而不是 n 个字节。&lt;/p&gt;
&lt;p&gt;nvarchar(n)&lt;/p&gt;
&lt;p&gt;包含 n 个字符的可变长度 Unicode 字符数据。n 的值必须介于 1 与 4,000 之间。字节的存储大小是所输入字符个数的两倍。&lt;/p&gt;
&lt;p&gt;两字段分别有字段值：我和coffee&lt;/p&gt;
&lt;p&gt;那么varchar字段占2×2+6=10个字节的存储空间，而nvarchar字段占8×2=16个字节的存储空间。&lt;/p&gt;
&lt;p&gt;如字段值只是英文可选择varchar，而字段值存在较多的双字节（中文、韩文等）字符时用nvarchar&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;sql-join&#34;&gt;SQL JOIN&lt;/h3&gt;
&lt;p&gt;内连接：（只有2张表匹配的行才能显示）&lt;/p&gt;
&lt;p&gt;左连接：（左边的表不加限制）&lt;/p&gt;
&lt;p&gt;右连接：（右边的表不加限制）&lt;/p&gt;
&lt;p&gt;全外连接：(左右2张表都不加限制）&lt;/p&gt;
&lt;p&gt;UNION 内部的 SELECT 语句必须拥有相同数量的列。列也必须拥有相似的数据类型 UNION 只选取记录，而UNION ALL会列出所有记录&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;deletetruncate&#34;&gt;delete/truncate&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;delete可以删除表中的一条或多条数据，也可以删除全部数据；而truncate只能将表中的全部数据删除。&lt;/li&gt;
&lt;li&gt;delete删除表数据后，标识字段不能复用。也就是说如果你把id=10（假如id是标识字段）的那行数据删除了，你也不可能再插入一条数据让id=10.&lt;/li&gt;
&lt;li&gt;truncate删除表数据后，标识重新恢复初始状态。默认为初始值为1，也就是说，truncate之后，再插入一条数据，id=1.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;时间复杂度&#34;&gt;时间复杂度&lt;/h3&gt;
&lt;h4 id=&#34;c-中列表字典集合操作的时间复杂度&#34;&gt;C# 中列表、字典、集合操作的时间复杂度&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;List&lt;/strong&gt;列表是顺序线性表，Add操作是O(1)或O(N)，因为List是动态扩容的，在未扩容之前，其Add操作是O(1)，而在扩容的时候，Add操作是O(N)的。其Contains方法，是按照线性检索的，其复杂度是O(n)。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;SortedList&lt;/strong&gt;列表是有序线性表，Add操作是O(n)，其Contains方法是通过二分查找检索元素的，因此复杂度是O(log n)，其Containskey方法也是通过二分查找检索元素，复杂度也是O(log n)，ContainsValue方法是使用线性查找元素，复杂度是O(n)。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;HashSet&lt;/strong&gt;集合类是包含不重复项的无序hash表(非线性)，它本身是一个一维数组，但是二维链表结构(扩展：一维数组的大小总是2的N次方)。Add操作是O(1)或是O(N)的，原因同List集合类。Contains方法是O(1)。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;SortedSet&lt;/strong&gt;集合类是基于红黑树实现的，其Add方法是O(lg n)，Contains方法也是O(lg n)。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Dictionary&lt;/strong&gt;字典类是hash表，Add操作是O(1)或是O(N)的，原理同上。其Containskey方法是O(1)，原因是通过hash来查找元素而不是遍历元素。ContainsValue方法的时间复杂度是O(N)，原因是内部通过遍历key来查找value，而不是通过hash来查找。Item[Key]属性根据key来检索value，其时间复杂度也是O(1)。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;SortedDictionary&lt;/strong&gt;字典类是基于平衡二叉树实现的，其Add方法是O(lg n),ContainsKey方法也是O(lg n)，而ContainsValue方法则是O(n)。&lt;/p&gt;
&lt;h4 id=&#34;常见算法时间复杂度&#34;&gt;常见算法时间复杂度&lt;/h4&gt;
&lt;p&gt;以下表格统整了一些常用的时间复杂度类。表中，poly(&lt;em&gt;x&lt;/em&gt;) = $x^{O(1)}$，也就是 &lt;em&gt;x&lt;/em&gt; 的多项式。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;名称&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E5%A4%8D%E6%9D%82%E5%BA%A6%E7%B1%BB&#34;&gt;复杂度类&lt;/a&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;运行时间（{\displaystyle T(n)}&lt;img src=&#34;https://wikimedia.org/api/rest_v1/media/math/render/svg/0be5a46684e1279c27414b285fa995f30407d002&#34; alt=&#34;T(n)&#34;&gt;）&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;运行时间举例&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;算法举例&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E5%B8%B8%E6%95%B8%E6%99%82%E9%96%93&#34;&gt;常数时间&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$O(1)$&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;10&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;判断一个二进制数的奇偶&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;反&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E9%98%BF%E5%85%8B%E6%9B%BC%E5%87%BD%E6%95%B0&#34;&gt;阿克曼&lt;/a&gt;时间&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$O(\alpha(n))$&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E5%B9%B6%E6%9F%A5%E9%9B%86&#34;&gt;并查集&lt;/a&gt;的单个操作的&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E5%B9%B3%E6%91%8A%E6%97%B6%E9%97%B4&#34;&gt;平摊时间&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E8%BF%AD%E4%BB%A3%E5%B0%8D%E6%95%B8&#34;&gt;迭代对数&lt;/a&gt;时间&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$O(\log^*n)$&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E5%9B%BE%E7%9D%80%E8%89%B2%E9%97%AE%E9%A2%98&#34;&gt;分布式圆环着色问题&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;对数对数时间&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$O(\log \log n)$&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;有界&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97&#34;&gt;优先队列&lt;/a&gt;的单个操作[&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6#cite_note-1&#34;&gt;1]&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;对数时间&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;a href=&#34;https://zh.wikipedia.org/wiki/DLOGTIME&#34;&gt;DLOGTIME&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$O(\log n)$&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$\log n$，$\log n^{2}$&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E4%BA%8C%E5%88%86%E6%90%9C%E7%B4%A2&#34;&gt;二分搜索&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E5%B9%82%E5%AF%B9%E6%95%B0&#34;&gt;幂对数&lt;/a&gt;时间&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$(\log n)^{O(1)}$&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$(\log n)^{2}$&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;（小于1次）幂时间&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$O(n^{c})$，其中$ 0&amp;lt;c&amp;lt;1$&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$n^{\frac {1}{2}}$，$n^{\frac {2}{3}}$&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;a href=&#34;https://zh.wikipedia.org/wiki/K-d%E6%A0%91&#34;&gt;K-d树&lt;/a&gt;的搜索操作&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E7%B7%9A%E6%80%A7%E6%99%82%E9%96%93&#34;&gt;线性时间&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$O(n)$&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$n$&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;无序&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E6%95%B0%E7%BB%84&#34;&gt;数组&lt;/a&gt;的搜索&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;线性迭代对数时间&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$O(n\log ^{*}n)$&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;a href=&#34;https://zh.wikipedia.org/w/index.php?title=%E8%90%8A%E5%A7%86%E5%BE%B7%C2%B7%E8%B3%BD%E5%BE%B7%E7%88%BE&amp;amp;action=edit&amp;amp;redlink=1&#34;&gt;莱姆德·赛德尔&lt;/a&gt;的&lt;a href=&#34;https://zh.wikipedia.org/w/index.php?title=%E4%B8%89%E8%A7%92%E5%88%86%E5%89%B2%E5%A4%9A%E8%BE%B9%E5%BD%A2&amp;amp;action=edit&amp;amp;redlink=1&#34;&gt;三角分割多边形&lt;/a&gt;算法&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;线性对数时间&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$O(n\log n)$&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$n\log n$，$\log n!$&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;最快的&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E6%AF%94%E8%BE%83%E6%8E%92%E5%BA%8F&#34;&gt;比较排序&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;二次时间&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$O(n^{2})$&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$ n^{2}$&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F&#34;&gt;冒泡排序&lt;/a&gt;、&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F&#34;&gt;插入排序&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;三次时间&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$O(n^{3})$&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$n^{3}$&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E7%9F%A9%E9%98%B5%E4%B9%98%E6%B3%95&#34;&gt;矩阵乘法&lt;/a&gt;的基本实现，计算&lt;a href=&#34;https://zh.wikipedia.org/w/index.php?title=%E9%83%A8%E5%88%86%E7%9B%B8%E5%85%B3%E6%80%A7&amp;amp;action=edit&amp;amp;redlink=1&#34;&gt;部分相关性&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;多项式时间&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;a href=&#34;https://zh.wikipedia.org/w/index.php?title=P_(%E5%A4%8D%E6%9D%82%E6%80%A7)&amp;amp;action=edit&amp;amp;redlink=1&#34;&gt;P&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$2^{O(\log n)}=n^{O(1)}$&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$n$，$n\log n$，$n^{10}$&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E7%BA%BF%E6%80%A7%E8%A7%84%E5%88%92&#34;&gt;线性规划&lt;/a&gt;中的&lt;a href=&#34;https://zh.wikipedia.org/w/index.php?title=%E5%8D%A1%E9%A6%AC%E5%8D%A1%E6%BC%94%E7%AE%97%E6%B3%95&amp;amp;action=edit&amp;amp;redlink=1&#34;&gt;卡马卡算法&lt;/a&gt;，&lt;a href=&#34;https://zh.wikipedia.org/wiki/AKS%E8%B3%AA%E6%95%B8%E6%B8%AC%E8%A9%A6&#34;&gt;AKS质数测试&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;准多项式时间&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;QP&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$2^{(\log n)O(1)}$&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;关于&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E6%9C%89%E5%90%91%E5%9B%BE&#34;&gt;有向&lt;/a&gt;&lt;a href=&#34;https://zh.wikipedia.org/w/index.php?title=%E6%96%AF%E5%9D%A6%E7%BA%B3%E6%A0%91%E9%97%AE%E9%A2%98&amp;amp;action=edit&amp;amp;redlink=1&#34;&gt;斯坦纳树问题&lt;/a&gt;最著名的{\displaystyle O(\log ^{2}n)}&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E8%BF%91%E4%BC%BC%E7%AE%97%E6%B3%95&#34;&gt;近似算法&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;次指数时间（第一定义）&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;a href=&#34;https://zh.wikipedia.org/w/index.php?title=SUBEXP&amp;amp;action=edit&amp;amp;redlink=1&#34;&gt;SUBEXP&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$O(2^{n^{\epsilon }})$，对任意的$ε &amp;gt; 0$&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$O(2^{(\log n)^{\log \log n}}$&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;假设复杂性理论推测，&lt;a href=&#34;https://zh.wikipedia.org/wiki/BPP_(%E8%A4%87%E9%9B%9C%E5%BA%A6)&#34;&gt;BPP&lt;/a&gt; 包含在 SUBEXP 中。[&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6#cite_note-bpp-2&#34;&gt;2]&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;次指数时间（第二定义）&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$2O(n)$&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$2^{n^{1/3}}$&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;用于&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E6%95%B4%E6%95%B0%E5%88%86%E8%A7%A3&#34;&gt;整数分解&lt;/a&gt;与&lt;a href=&#34;https://zh.wikipedia.org/w/index.php?title=%E5%9C%96%E5%BD%A2%E5%90%8C%E6%A7%8B%E5%95%8F%E9%A1%8C&amp;amp;action=edit&amp;amp;redlink=1&#34;&gt;图形同构问题&lt;/a&gt;的著名算法&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E6%8C%87%E6%95%B8%E6%99%82%E9%96%93&#34;&gt;指数时间&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;a href=&#34;https://zh.wikipedia.org/w/index.php?title=E_(complexity)&amp;amp;action=edit&amp;amp;redlink=1&#34;&gt;E&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$2O(n)$&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$1.1^n, 10^n$&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;使用&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92&#34;&gt;动态规划&lt;/a&gt;解决&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E6%97%85%E8%A1%8C%E6%8E%A8%E9%94%80%E5%91%98%E9%97%AE%E9%A2%98&#34;&gt;旅行推销员问题&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;阶乘时间&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$O(n!)$&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;em&gt;n&lt;/em&gt;!&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;通过&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E6%9A%B4%E5%8A%9B%E6%90%9C%E7%B4%A2&#34;&gt;暴力搜索&lt;/a&gt;解决旅行推销员问题&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E6%8C%87%E6%95%B8%E6%99%82%E9%96%93&#34;&gt;指数时间&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;a href=&#34;https://zh.wikipedia.org/wiki/EXPTIME&#34;&gt;EXPTIME&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$2poly(n)$&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$2^n, 2^{n^{2}}$&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;双重指数时间&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;a href=&#34;https://zh.wikipedia.org/wiki/2-EXPTIME&#34;&gt;2-EXPTIME&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$22poly(n)$&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$2^{2^n}$&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;在&lt;a href=&#34;https://zh.wikipedia.org/w/index.php?title=%E9%A0%90%E8%86%A8%E8%84%B9%E7%AE%97%E8%A1%93&amp;amp;action=edit&amp;amp;redlink=1&#34;&gt;预膨胀算术&lt;/a&gt;中决定一个给定描述的真实性&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h3 id=&#34;字符串操作&#34;&gt;字符串操作&lt;/h3&gt;
&lt;h4 id=&#34;拼接字符串&#34;&gt;拼接字符串&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;&#39;&#39;+&amp;quot;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;第一步先在内存中分配空间，存储变量的对象。“+=”时，又会重新创建一个对象来存储新的字符串，把创建的字符串指向这个新的地址。&lt;/p&gt;
&lt;p&gt;只有简单拼接无伤大雅，如果有时候需要循环拼接时，就会不断创建新的对象，很浪费性能和内存。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;String.Format()&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;可以看到是先创建一个StringBuilder类型的变量，长度为第一个参数的长度+参数长度的8倍。.Net自动分配一个比较大的容量来存储&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;StringBuilder.Append&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;StringBuilder 是预先创建一个比较大的内存，以后每次操作时判断容量上限是否不够用，如果不够用就自动把容量扩大一倍，修改的还是第一次创建的对象的值。&lt;/p&gt;
&lt;p&gt;如果是简单的拼写时，可以用 &amp;ldquo;+=&amp;rdquo;, string.format，循环内拼写很长的字符串时，就需要用到StringBuilder来节省性能和内存了。&lt;/p&gt;
&lt;h4 id=&#34;stringbuilder&#34;&gt;StringBuilder&lt;/h4&gt;
&lt;p&gt;String 对象是不可改变的。每次使用 System.String 类中的方法之一时，都要在内存中创建一个新的字符串对象，这就需要为该新对象分配新的空间。在需要对字符串执行重复修改的情况下，与创建新的 String 对象相关的系统开销可能会非常昂贵。如果要修改字符串而不创建新的对象，则可以使用 System.Text.StringBuilder 类。例如，当在一个循环中将许多字符串连接在一起时，使用 StringBuilder 类可以提升性能。&lt;/p&gt;
&lt;p&gt;通过用一个重载的构造函数方法初始化变量，可以创建 StringBuilder 类的新实例，正如以下示例中所阐释的那样。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;StringBuilder  MyStringBuilder = new StringBuilder(&amp;quot;Hello   World!&amp;quot;); 
&lt;/code&gt;&lt;/pre&gt;&lt;h5 id=&#34;设置容量和长度&#34;&gt;设置容量和长度&lt;/h5&gt;
&lt;p&gt;虽然 StringBuilder 对象是动态对象，允许扩充它所封装的字符串中字符的数量，但是您可以为它可容纳的最大字符数指定一个值。此值称为该对象的容量，不应将它与当前 StringBuilder 对象容纳的字符串长度混淆在一起。例如，可以创建 StringBuilder 类的带有字符串“Hello”（长度为5）的一个新实例，同时可以指定该对象的最大容量为25。当修改 StringBuilder 时，在达到容量之前，它不会为其自己重新分配空间。当达到容量时，将自动分配新的空间且容量翻倍。可以使用重载的构造函数之一来指定 StringBuilder 类的容量。以下代码示例指定可以将 MyStringBuilder 对象扩充到最大 25 个空白。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;StringBuilder MyStringBuilder = new StringBuilder(&amp;quot;Hello   World!&amp;quot;,   25); 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;另外，可以使用读/写 Capacity 属性来设置对象的最大长度。以下代码示例使用 Capacity 属性来定义对象的最大长度。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; MyStringBuilder.Capacity = 25;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;EnsureCapacity 方法可用来检查当前 StringBuilder 的容量。如果容量大于传递的值，则不进行任何更改；但是，如果容量小于传递的值，则会更改当前的容量以使其与传递的值匹配。&lt;/p&gt;
&lt;p&gt;也可以查看或设置 Length 属性。如果将 Length 属性设置为大于 Capacity 属性的值，则自动将 Capacity 属性更改为与 Length 属性相同的值。如果将 Length 属性设置为小于当前 StringBuilder 对象内的字符串长度的值，则会缩短该字符串。&lt;/p&gt;
&lt;p&gt;无参的构造方法默认父类AbstractStringBuilder的构造方法，并默认容量为16。&lt;/p&gt;
&lt;p&gt;有参的构造方法初始化容量为参数字符串的长度+16。&lt;/p&gt;
&lt;h5 id=&#34;扩容&#34;&gt;扩容&lt;/h5&gt;
&lt;p&gt;StringBuilder.Length属性指示对象当前包含的字符数 StringBuilder 。 如果向对象添加字符 StringBuilder ，则其长度将增加，直到它等于属性的大小 StringBuilder.Capacity ，该大小定义对象可以包含的字符数。 如果添加的字符数导致对象的长度 StringBuilder 超过其当前容量，则分配新内存，属性的值 Capacity 翻倍，新字符将添加到 StringBuilder 对象中，并 Length 调整其属性。 对象的额外内存 StringBuilder 会动态分配，直到达到属性定义的值 StringBuilder.MaxCapacity 。 达到最大容量时，不能为该对象分配更多的内存 StringBuilder ，尝试添加字符或将其扩展到超出其最大容量后，会引发 ArgumentOutOfRangeException 或 OutOfMemoryException 例外。&lt;/p&gt;
&lt;p&gt;使用append()方法在字符串后面追加东西的时候，如果长度超过了该字符串存储空间大小了就需要进行扩容：构建新的存储空间更大的字符串，将久的复制过去；&lt;/p&gt;
&lt;p&gt;再进行字符串append添加的时候，会先计算添加后字符串大小，先检查是否需要扩容。需要扩容就尝试将新容量扩为大小变成2倍，容量如果还不够，直接扩充到需要的容量大小。&lt;/p&gt;
&lt;p&gt;发生扩容时就可能非常浪费内存，所以在创建时要考虑好字符串的长度，避免扩容的发生。&lt;/p&gt;
&lt;h5 id=&#34;修改-stringbuilder-字符串&#34;&gt;修改 StringBuilder 字符串&lt;/h5&gt;
&lt;p&gt;下表列出了可以用来修改 StringBuilder 的内容的方法。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;StringBuilder.Append   将信息追加到当前   StringBuilder   的结尾。 将根据需要自动分配空间    
StringBuilder.AppendFormat   用带格式文本替换字符串中传递的格式说明符。     
StringBuilder.Insert   将字符串或对象插入到当前   StringBuilder   对象的指定索引处。     
StringBuilder.Remove   从当前   StringBuilder   对象中移除指定数量的字符。     
StringBuilder.Replace   替换指定索引处的指定字符。     
&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;
&lt;h3 id=&#34;析构函数&#34;&gt;析构函数&lt;/h3&gt;
&lt;h4 id=&#34;using-的本质&#34;&gt;using 的本质&lt;/h4&gt;
&lt;p&gt;using 语句可确保调用 Dispose 或 DisposeAsync，即使 using 块中发生异常也是如此。 通过将对象放入 try 块中，然后调用 finally 块中的 Dispose（或 DisposeAsync），可以实现相同的结果；实际上，这就是编译器转换 using 语句的方式。&lt;/p&gt;
&lt;h4 id=&#34;托管代码和非托管代码unmanaged-code&#34;&gt;托管代码和非托管代码(unmanaged code)&lt;/h4&gt;
&lt;p&gt;简而言之，托管代码就是执行过程交由运行时管理的代码。 在这种情况下，相关的运行时称为公共语言运行时 (CLR)，不管使用的是哪种实现（例如 &lt;a href=&#34;https://www.mono-project.com/&#34;&gt;Mono&lt;/a&gt;、.NET Framework 或 .NET Core/.NET 5+）。 CLR 负责提取托管代码、将其编译成机器代码，然后执行它。 除此之外，运行时还提供多个重要服务，例如自动内存管理、安全边界、类型安全，等等。&lt;/p&gt;
&lt;p&gt;相反，如果运行 C/C++ 程序，则运行的代码也称为“非托管代码”。 在非托管环境中，程序员需要亲自负责处理相当多的事情。 实际的程序在本质上是操作系统 (OS) 载入内存，然后启动的二进制代码。 其他任何工作 - 从内存管理到安全考虑因素 - 对于程序员来说是一个不小的负担。&lt;/p&gt;
&lt;p&gt;非托管代码必须提供自己的垃圾回收、类型检查、安全支持等服务，它与托管代码不同，后者从公共语言运行库中获得这些服务，而非托管代码是在运行库之外运行的代码。例如COM 组件、ActiveX 接口和 Win32 API 函数都是非托管代码的示例。C#可以使用非托管数据结构例如指针（在代码中使用unsafe关键字的内容）。该部分内容也不被CLR托管。&lt;/p&gt;
&lt;p&gt;托管代码是使用可在 .NET 上运行的一种高级语言（例如 C#、Visual Basic、F# 等）编写的。 使用相应的编译器编译以这些语言编写的代码时，无法获得机器代码， 而是获得中间语言代码，然后运行时会对其进行编译并将其执行。 C++ 是这条规则的一个例外，因为它也能够生成可在 Windows 上运行的本机非托管二进制代码。&lt;/p&gt;
&lt;h4 id=&#34;析构函数finalizers-dispose-和-idisposable区别&#34;&gt;析构函数Finalizers Dispose 和 IDisposable区别&lt;/h4&gt;
&lt;p&gt;析构函数(destructor，Finalizers)与构造函数相反，当对象结束其生命周期，如对象所在的函数已调用完毕时，系统自动执行析构函数。 析构函数往往用来做“清理善后” 的工作（例如在建立对象时用new开辟了一片内存空间，delete会自动调用析构函数后释放内存）。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;无法在结构中定义终结器。 它们仅用于类。&lt;/li&gt;
&lt;li&gt;一个类只能有一个终结器。&lt;/li&gt;
&lt;li&gt;不能继承或重载终结器。&lt;/li&gt;
&lt;li&gt;不能手动调用终结器。 可以自动调用它们。&lt;/li&gt;
&lt;li&gt;终结器不使用修饰符或参数。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Finalize方法（C#中是析构函数，以下称析构函数）是用于释放非托管资源的，而托管资源会由GC自动回收。所以，我们也可以这样来区分 托管和非托管资源。所有会由GC自动回收的资源，就是托管的资源，而不能由GC自动回收的资源，就是非托管资源。在我们的类中直接使用非托管资源的情况很 少，所以基本上不用我们写析构函数。&lt;/p&gt;
&lt;p&gt;大部分的非托管资源会给系统带来很多负面影响，例如数据库连接不被释放就可能导致连接池中的可用数据库连接用尽。文件不关闭会导致其它进程无法读写这个文件等等。&lt;/p&gt;
&lt;p&gt;实现模型：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;由于大多数的非托管资源都要求可以手动释放，所以，我们应该专门为释放非托管资源公开一个方法。实现IDispose接口的Dispose方法是最好的模型，因为C#支持using语句块，可以在离开语句块时自动调用Dispose方法。&lt;/li&gt;
&lt;li&gt;虽然可以手动释放非托管资源，我们仍然要在析构函数中释放非托管资源，这样才是安全的应用程序。否则如果因为程序员的疏忽忘记了手动释放非托管资源，那么就会带来灾难性的后果。所以说在析构函数中释放非托管资源，是一种补救的措施，至少对于大多数类来说是如此。&lt;/li&gt;
&lt;li&gt;由于析构函数的调用将导致GC对对象回收的效率降低，所以如果已经完成了析构函数该干的事情（例如释放非托管资源），就应当使用SuppressFinalize方法告诉GC不需要再执行某个对象的析构函数。&lt;/li&gt;
&lt;li&gt;析构函数中只能释放非托管资源而不能对任何托管的对象/资源进行操作。因为你无法预测析构函数的运行时机，所以，当析构函数被执行的时候，也许你进行操作的托管资源已经被释放了。这样将导致严重的后果。&lt;/li&gt;
&lt;li&gt;（这是一个规则）如果一个类拥有一个实现了IDispose接口类型的成员，并创建（注意是创建，而不是接收，必须是由类自己创建）它的实例对象，则这个类也应该实现IDispose接口，并在Dispose方法中调用所有实现了IDispose接口的成员的Dispose方法。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;.NET 垃圾回收器不会分配或释放非托管内存，实现 Dispose 方法主要用于释放非托管资源（Dispose释放托管和非托管资源）。 处理 IDisposable 实现的实例成员时，通常会级联 Dispose 调用。 实现 Dispose 有其他原因，例如，为了释放已分配的内存、删除已添加到集合中的项，或发出释放已获取的锁的信号。&lt;/p&gt;
&lt;p&gt;IDisposable接口提供了一种机制，允许类的用户控制释放资源的时间，但需要确保执行Dispose()&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;reflection&#34;&gt;Reflection&lt;/h3&gt;
&lt;h4 id=&#34;用处与优缺点&#34;&gt;用处与优缺点&lt;/h4&gt;
&lt;p&gt;反射在以下情况下很有用：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;需要访问程序元数据中的特性时。&lt;/li&gt;
&lt;li&gt;检查和实例化程序集中的类型。&lt;/li&gt;
&lt;li&gt;在运行时构建新类型。 使用 System.Reflection.Emit 中的类。&lt;/li&gt;
&lt;li&gt;执行后期绑定，访问在运行时创建的类型上的方法。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;优点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;反射提高了程序的灵活性和扩展性。&lt;/li&gt;
&lt;li&gt;降低耦合性，提高自适应能力。&lt;/li&gt;
&lt;li&gt;它允许程序创建和控制任何类的对象，无需提前硬编码目标类。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;缺点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;性能问题：使用反射基本上是一种解释操作，用于字段和方法接入时要远慢于直接代码。因此反射机制主要应用在对灵活性和拓展性要求很高的系统框架上，普通程序不建议使用。&lt;/li&gt;
&lt;li&gt;使用反射会模糊程序内部逻辑；程序员希望在源代码中看到程序的逻辑，反射却绕过了源代码的技术，因而会带来维护的问题，反射代码比相应的直接代码更复杂。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;如何优化&#34;&gt;如何优化&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;利用反射读取attribute的时候可以使用静态变量对读取内容进行缓存，减少反射使用次数&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;项目更新方式&#34;&gt;项目更新方式&lt;/h3&gt;
&lt;h4 id=&#34;蓝绿部署&#34;&gt;蓝绿部署&lt;/h4&gt;
&lt;p&gt;蓝绿部署涉及两个生产环境：蓝色环境指代正在使用的生产环境。绿色环境则将发布一个新版本。&lt;/p&gt;
&lt;p&gt;以下是蓝绿部署的一些优点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;可在绿色环境下进行测试，而不会中断蓝色环境。&lt;/li&gt;
&lt;li&gt;切换到绿色环境不需要停机，只需要重定向用户流量。&lt;/li&gt;
&lt;li&gt;问题发生时，可很方便地从绿色环境回滚到蓝色环境，只要将流量重定向回蓝色环境即可，而无需重新构建。&lt;/li&gt;
&lt;li&gt;需要变更时，利用不可变基础设施原则初始化新的实例，避免实例配置产生不一致性。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;滚动发布&#34;&gt;滚动发布&lt;/h4&gt;
&lt;p&gt;滚动发布能够解决掉蓝绿部署时对硬件要求增倍的问题。&lt;/p&gt;
&lt;p&gt;先将几台机器从集群中隔离，将流量打到其它机器上。然后升级隔离的机器，进行发布和验证，验证通过后将流量接回。然后循环这个过程，直到集群中所有机器都升级完毕&lt;/p&gt;
&lt;h4 id=&#34;灰度发布金丝雀发布&#34;&gt;灰度发布（金丝雀发布）&lt;/h4&gt;
&lt;p&gt;在灰度发布开始后，先启动一个新版本应用，但是并不直接将流量切过来，而是测试人员对新版本进行线上测试，启动的这个新版本应用，就是我们的金丝雀。如果没有问题，那么可以将少量的用户流量导入到新版本上，然后再对新版本做运行状态观察，收集各种运行时数据，如果此时对新旧版本做各种数据对比，就是所谓的A/B测试。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;多线程异步并发的区别&#34;&gt;多线程/异步/并发的区别&lt;/h3&gt;
&lt;h4 id=&#34;多线程&#34;&gt;多线程&lt;/h4&gt;
&lt;p&gt;多线程是对cpu剩余劳动力的压榨，是一种技术，强调的是并发（想想web server 需要处理大量并发请求的场景）。多线程是程序设计的逻辑层概念，它是进程中并发运行的一段代码。多线程可以实现线程间的切换执行。&lt;/p&gt;
&lt;h4 id=&#34;异步&#34;&gt;异步&lt;/h4&gt;
&lt;p&gt;异步强调的是非阻塞，是一种编程模式（pattern），主要解决了UI响应被阻塞的问题，可借助线程技术或者硬件本身的计算能力解决。&lt;/p&gt;
&lt;p&gt;异步和同步是相对的，同步就是顺序执行，执行完一个再执行下一个，需要等待、协调运行。异步就是彼此独立,在等待某事件的过程中继续做自己的事，不需要等待这一事件完成后再工作。线程就是实现异步的一个方式。异步是让调用方法的主线程不需要同步等待另一线程的完成，从而可以让主线程干其它的事情。&lt;/p&gt;
&lt;p&gt;异步和多线程并不是一个同等关系,异步是最终目的,多线程只是我们实现异步的一种手段。异步是当一个调用请求发送给被调用者,而调用者不用等待其结果的返回而可以做其它的事情。实现异步可以采用多线程技术或则交给另外的进程来处理。&lt;/p&gt;
&lt;p&gt;异步和同步的区别， 在io等待的时候，同步不会切走，浪费了时间。&lt;/p&gt;
&lt;p&gt;多线程的好处，比较容易的实现了异步切换的思想， 因为异步的程序很难写的。多线程本身程还是以同步完成，但是应该说比效率是比不上异步的。 而且多线很容易写， 相对效率也高。&lt;/p&gt;
&lt;h5 id=&#34;异步原理&#34;&gt;异步原理&lt;/h5&gt;
&lt;p&gt;await修饰的方法返回的是一个Task，而这个Task其实就是一个异步句柄，注册一个回调方法在异步操作完成后继续&lt;/p&gt;
&lt;p&gt;限制&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;应用程序的Main方法不能转变成异步函数&lt;/li&gt;
&lt;li&gt;构造函数、属性、事件不能转变成异步函数&lt;/li&gt;
&lt;li&gt;不能在catch、finally、unsafe块中使用await操作符&lt;/li&gt;
&lt;li&gt;不能在支持线程锁中使用await操作符&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Linq中，只能在from子句的第一个集合表达式或join子句的集合表达式中使用await操作符。&lt;/p&gt;
&lt;h4 id=&#34;并发&#34;&gt;并发&lt;/h4&gt;
&lt;p&gt;并行虽然同样也是对cpu剩余劳动力的压榨，且基于多线程技术，但它强调的是高效完成计算任务，而不是并发数量。&lt;/p&gt;
&lt;p&gt;在操作系统中，是指一个时间段中有几个程序都处于已启动运行到运行完毕之间，且这几个程序都是在同一个处理机上运行。其中两种并发关系分别是同步和互斥。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;互斥&lt;/strong&gt;：进程间相互排斥的使用临界资源的现象，就叫互斥。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;同步&lt;/strong&gt;：进程之间的关系不是相互排斥临界资源的关系，而是相互依赖的关系。进一步的说明：就是前一个进程的输出作为后一个进程的输入，当第一个进程没有输出时第二个进程必须等待。具有同步关系的一组并发进程相互发送的信息称为消息或事件。&lt;/p&gt;
&lt;p&gt;其中并发又有伪并发和真并发，伪并发是指单核处理器的并发，真并发是指多核处理器的并发。&lt;/p&gt;
&lt;p&gt;在单处理器中多道程序设计系统中，进程被交替执行，表现出一种并发的外部特种；在多处理器系统中，进程不仅可以交替执行，而且可以重叠执行。在多处理器上的程序才可实现并行处理。从而可知，并行是针对多处理器而言的。并行是同时发生的多个并发事件，具有并发的含义，但并发不一定并行，也亦是说并发事件之间不一定要同一时刻发生。&lt;/p&gt;
&lt;p&gt;在CSAPP中并发编程一章讲到，现代操作系统提供了三种基本的构造并发程序的方法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;进程，每个逻辑控制流都是一个进程，由内核调度和维护，进程有独立的虚拟地址空间，要想共享数据，必须显示的IPC机制&lt;/li&gt;
&lt;li&gt;I/O多路复用，应用程序在一个进程的上下文中显示地调度它们自己的逻辑流，因为程序是一个单独的进程，所有的流共享同一个地址空间&lt;/li&gt;
&lt;li&gt;线程，由内核进行调度，可以看做是以上两种方式的混合体&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;并发问题：&lt;/p&gt;
&lt;p&gt;当一个函数被多个线程反复地调用时，它会一直产生正确的结果，这个函数是线程安全的。反之，该函数是线程不安全的。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;四个线程不安全函数类：
1、不保护共享变量的函数
2、保持跨越多个调用的状态的函数
3、返回指向静态变量的指针的函数
4、调用线程不安全函数的函数&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;线程安全函数：
可重入函数：当它们被多个线程调用时，不会引用任何共享数据。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;死锁：一组线程被阻塞了，等待一个永远不可能为真的条件。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;规避死锁：给定所有互斥操作的一个全序，如果每个线程都是以一种顺序获得互斥锁并以相反的顺序释放，那么这个程序就是无死锁的。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;sessioncookieapplicationcache&#34;&gt;Session/Cookie/Application/Cache&lt;/h3&gt;
&lt;h4 id=&#34;session&#34;&gt;Session&lt;/h4&gt;
&lt;p&gt;session值是保存在服务器内存上,那么,可以肯定,大量的使用session将导致服务器负担加重. 而viewstate由于只是将数据存入到页面隐藏控件里,不再占用服务器资源,因此, 我们可以将一些需要服务器&amp;quot;记住&amp;quot;的变量和对象保存到viewstate里面. 而sesson则只应该应用在需要跨页面且与每个访问用户相关的变量和对象存储上.&lt;/p&gt;
&lt;p&gt;session在默认情况下20分钟就过期,而viewstate则永远不会过期.&lt;/p&gt;
&lt;p&gt;但viewstate并不是能存储所有的.net类型数据,它仅仅支持String、Integer、Boolean、Array、ArrayList、Hashtable 以及自定义的一些类型。&lt;/p&gt;
&lt;h5 id=&#34;session是如何实现区分用户&#34;&gt;session是如何实现区分用户&lt;/h5&gt;
&lt;p&gt;在服务器端有一个session池，用来存储每个用户提交session中的数据，Session对于每一个客户端（或者说浏览器实例）是“人手一份”，用户首次与Web服务器建立连接的时候，服务器会给用户分发一个SessionID作为标识。SessionID是一个由24个字符组成的随机字符串。用户每次提交页面，浏览器都会把这个SessionID包含在HTTP头中提交给Web服务器，这样Web服务器就能区分当前请求页面的是哪一个客户端,而这个SessionID是一cookie的方式保存的在客户端的内存中的，如果想要得到Session池中的数据，服务器就会根据客户端提交的唯一SessionID标识给出相应的数据返回。&lt;/p&gt;
&lt;p&gt;如果说&lt;strong&gt;Cookie机制是通过检查客户身上的“通行证”来确定客户身份的话，那么Session机制就是通过检查服务器上的“客户明细表”来确认客户身份。Session相当于程序在服务器上建立的一份客户档案，客户来访的时候只需要查询客户档案表就可以了。&lt;/strong&gt;&lt;/p&gt;
&lt;h5 id=&#34;生命周期&#34;&gt;生命周期&lt;/h5&gt;
&lt;p&gt;Session保存在服务器端。&lt;strong&gt;为了获得更高的存取速度，服务器一般把Session放在内存里。每个用户都会有一个独立的Session。如果Session内容过于复杂，当大量客户访问服务器时可能会导致内存溢出。因此，Session里的信息应该尽量精简。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Session在用户第一次访问服务器的时候自动创建&lt;/strong&gt;。需要注意只有访问JSP、Servlet等程序时才会创建Session，只访问HTML、IMAGE等静态资源并不会创建Session。如果尚未生成Session，也可以使用request.getSession(true)强制生成Session。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Session生成后，只要用户继续访问，服务器就会更新Session的最后访问时间，并维护该Session&lt;/strong&gt;。用户每访问服务器一次，无论是否读写Session，服务器都认为该用户的Session“活跃（active）”了一次。&lt;/p&gt;
&lt;h4 id=&#34;cookies&#34;&gt;Cookies&lt;/h4&gt;
&lt;p&gt;HTTP协议下的一种方式,通过该方式,服务器或脚本能够在客户机上维护状态信息；&lt;/p&gt;
&lt;p&gt;就是在客户端保存客户端单独使用的数据的一种方式；&lt;/p&gt;
&lt;p&gt;String格式存放。&lt;/p&gt;
&lt;h4 id=&#34;application全局对象&#34;&gt;Application（全局对象）&lt;/h4&gt;
&lt;p&gt;Application对象生存期和Web应用程序生存期一样长，生存期从Web应用程序网页被访问开始，HttpApplication类对象Application被自动创建，直到没有一个网页被访问时结束，Application对象被自动撤销。因此Application对象中的变量也有相同生存期，并且变量可以被Web应用程序中的所有网页访问。因此，可以在Application对象中建立一些全局的公用变量，由于存储在Application对象中的数值可以被应用程序的所有网页读取，所以Application对象的属性也适合在应用程序的网页之间传递信息。Application对象主要有以下用途：&lt;/p&gt;
&lt;p&gt;​        ● 存储记录在线人数或访问网站总人数的变量。&lt;/p&gt;
&lt;p&gt;​        ● 存储网站共用最新消息，供所有网页更新。&lt;/p&gt;
&lt;p&gt;​        ● 记录网站中个网页同一条广告被点击的次数或时间。&lt;/p&gt;
&lt;p&gt;​        ● 存储供所有网页使用的数据库数据。&lt;/p&gt;
&lt;p&gt;​        ● 不同用之间通讯，例如多用户聊天室，多用户游戏等&lt;/p&gt;
&lt;h4 id=&#34;cache&#34;&gt;Cache&lt;/h4&gt;
&lt;p&gt;​    吃Server記憶體。&lt;/p&gt;
&lt;p&gt;​    可設定時間、hit rate或先進先出來當作條件。&lt;/p&gt;
&lt;p&gt;​    通常應用在靜態網頁快取。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;mvc原理&#34;&gt;MVC原理&lt;/h3&gt;
&lt;p&gt;request-》Controller-》提取数据并完成数据处理工作-》将数据或处理结果呈现给用户-》response&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Convention over Configuration&lt;/strong&gt; (&lt;!-- raw HTML omitted --&gt;约定优先于配置&lt;!-- raw HTML omitted --&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;控制器的名字以Controller结束，但在URL中不需要写出&amp;quot;Controller&amp;quot;&lt;/li&gt;
&lt;li&gt;所有的Controller默认情况下放到名为&amp;quot;Controllers&amp;quot;的文件夹中。&lt;/li&gt;
&lt;li&gt;所有视图放到名为&amp;quot;Views&amp;quot;的文件夹中。每个Controller对应一个与其同名的视图文件夹。&lt;/li&gt;
&lt;li&gt;每个视图文件与对应的Controller中的Action方法同名。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;net-core&#34;&gt;.net core&lt;/h4&gt;
&lt;p&gt;​    1. ASP.NET Core 在运行时首先加载 Program 类下面的 Main 方法，在 Main 方法中指定托管服务器，并调用 Startup 类中的 Configure 和 ConfigureServices 方法等完成初始化；&lt;/p&gt;
&lt;p&gt;​    2.在 ASP.NET Core 中 HTTP 请求是以中间件管道的形式进行处理，每个中间件都可以在 HTTP 请求开始和结束对它进行处理；&lt;/p&gt;
&lt;p&gt;​    3.ASP.NET Core 可以构建跨平台应用，服务运行在 Http.Sys（仅适用于Windows平台）和 Kestrel 上，不需要用IIS进行托管，所以相比传统 ASP.NET 来说性能更高效也更加灵活。&lt;/p&gt;
&lt;h4 id=&#34;net-mvc&#34;&gt;.net mvc&lt;/h4&gt;
&lt;p&gt;​    请求被UrlRoutingModule部件拦截&lt;/p&gt;
&lt;p&gt;​    封装请求上下文HttpContext，成为HttpContextWrapper对象。&lt;/p&gt;
&lt;p&gt;​    根据当前的HttpContext，从Routes集合中得到与当前请求URL相符合的RouteData对象。&lt;/p&gt;
&lt;p&gt;​    将RouteData与HttpContext请求封装成一个RequestContext对象。&lt;/p&gt;
&lt;p&gt;​    根据RequestContext对象，从RouteData的RouteHandler中获取IHttpHandler（MVC里面会有一个IHttpHandler的实现类MvcHandler）。&lt;/p&gt;
&lt;p&gt;​    执行IHttpHandler（MvcHandler），然后就是通过反射激活具体的controller，执行具体的action。&lt;/p&gt;
&lt;p&gt;​    整个过程有两个核心的组件：UrlRoutingModule和MvcHandler，上文提到的各个过程都和两个组件有紧密的联系。而这两个组件分别继承至IHttpModule和IHttpHandler接口，这两个接口在管道事件里面这两个接口扮演着重要角色。&lt;/p&gt;
&lt;p&gt;​        1.UrlRoutingModule的作用可以理解为通过一系列的与路由相关的组件去解析当前请求的Controller与Action名称，其实简单点理解，比如我们请求http://localhost:8080/Home/Index这个url的时候，UrlRoutingModule拦截到这个请求，然后通过一系列的方式得到这里的“Home”和“Index”，这样理解有没有简单一点呢。&lt;/p&gt;
&lt;p&gt;​        2.MvcHandler的作用就更加直接，上述通过拦截组件得到了请求的Controller和Action的名称，MvcHandler组件将当前请求的Controller名称反射得到对应的控制器对象，然后执行对应的Action方法。比如还是上述http://localhost:8080/Home/Index这个请求，通过字符串“Home”反射成为Home这个类型的控制器对象，然后调用这个对象的Index()方法。&lt;/p&gt;
&lt;p&gt;​    综上，联合这两个组件来理解，UrlRoutingMudule组件的主要作用是解析当前的Controller与Action名称，MvcHandler的作用是将得到的Controller名称激活，得到具体的Controller对象，然后执行对应的Action方法。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;js闭包httpsdevelopermozillaorgzh-cndocswebjavascriptclosures&#34;&gt;&lt;a href=&#34;https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Closures&#34;&gt;JS闭包&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个函数和对其周围状态（&lt;strong&gt;lexical environment，词法环境&lt;/strong&gt;）的引用捆绑在一起（或者说函数被引用包围），这样的组合就是&lt;strong&gt;闭包&lt;/strong&gt;（&lt;strong&gt;closure&lt;/strong&gt;）。也就是说，闭包让你可以在一个内层函数中访问到其外层函数的作用域。在 JavaScript 中，每当创建一个函数，闭包就会在函数创建的同时被创建出来。&lt;/p&gt;
&lt;p&gt;闭包是由函数以及声明该函数的词法环境组合而成的。该环境包含了这个闭包创建时作用域内的任何局部变量。&lt;/p&gt;
&lt;p&gt;闭包很有用，因为它允许将函数与其所操作的某些数据（环境）关联起来。这显然类似于面向对象编程。在面向对象编程中，对象允许我们将某些数据（对象的属性）与一个或者多个方法相关联。&lt;/p&gt;
&lt;p&gt;因此，通常你使用只有一个方法的对象的地方，都可以使用闭包。&lt;/p&gt;
&lt;p&gt;在 Web 中，你想要这样做的情况特别常见。大部分我们所写的 JavaScript 代码都是基于事件的 — 定义某种行为，然后将其添加到用户触发的事件之上（比如点击或者按键）。我们的代码通常作为回调：为响应事件而执行的函数。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.ruanyifeng.com/blog/2009/08/learning_javascript_closures.html&#34;&gt;阮一峰&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;css盒子模型&#34;&gt;CSS盒子模型&lt;/h3&gt;
&lt;p&gt;所有HTML元素可以看作盒子，在CSS中，&amp;ldquo;box model&amp;quot;这一术语是用来设计和布局时使用。CSS盒模型本质上是一个盒子，封装周围的HTML元素，它包括：边距，边框，填充，和实际内容。盒模型允许我们在其它元素和周围元素边框之间的空间放置元素。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Margin(外边距)&lt;/strong&gt; - 清除边框外的区域，外边距是透明的。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Border(边框)&lt;/strong&gt; - 围绕在内边距和内容外的边框。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Padding(内边距)&lt;/strong&gt; - 清除内容周围的区域，内边距是透明的。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Content(内容)&lt;/strong&gt; - 盒子的内容，显示文本和图像。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;浏览器的兼容性问题&#34;&gt;浏览器的兼容性问题&lt;/h4&gt;
&lt;p&gt;一旦为页面设置了恰当的 DTD，大多数浏览器都会按照上面的图示来呈现内容。然而 IE 5 和 6 的呈现却是不正确的。根据 W3C 的规范，元素内容占据的空间是由 width 属性设置的，而内容周围的 padding 和 border 值是另外计算的。不幸的是，IE5.X 和 6 在怪异模式中使用自己的非标准模型。这些浏览器的 width 属性不是内容的宽度，而是内容、内边距和边框的宽度的总和。&lt;/p&gt;
&lt;p&gt;虽然有方法解决这个问题。但是目前最好的解决方案是回避这个问题。也就是，不要给元素添加具有指定宽度的内边距，而是尝试将内边距或外边距添加到元素的父元素和子元素。&lt;/p&gt;
&lt;p&gt;IE8 及更早IE版本不支持设置填充的宽度和边框的宽度属性。&lt;/p&gt;
&lt;p&gt;解决IE8及更早版本不兼容问题可以在HTML页面声明 &lt;!-- raw HTML omitted --&gt;即可。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://developer.mozilla.org/zh-CN/docs/Web/CSS/CSS_Box_Model/Introduction_to_the_CSS_box_model&#34;&gt;MDN&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;性能监控&#34;&gt;性能监控&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;这个问题遇到过好几次，但之前的工作里面确实没用过性能监控 2020-10-27 18:24:23&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;OneAPM 通过自动探知 Web 端用户、关键应用、数据库请求、外部调用等各层级应用组件，绘制全局拓扑，直观展示组件性能及相互调用时间，其中包括网络耗时。可以实时了解哪些环节成为了系统的性能瓶颈，做出有针对性的优化&lt;/p&gt;
&lt;p&gt;百度应用性能监测中心(&lt;a href=&#34;http://developer.baidu.com/apm/&#34;&gt;http://developer.baidu.com/apm/&lt;/a&gt;)&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;实现用户验证区分角色根据不同的角色访问不同的页面&#34;&gt;实现用户验证/区分角色/根据不同的角色访问不同的页面&lt;/h3&gt;
&lt;p&gt;传统的aspx 在pageload方法中判断session&lt;/p&gt;
&lt;p&gt;MVC razor 直接重写IViewLocationExpander 分权限去不同路径寻找对应views / 如果是前台后台中台 直接使用区域路由 两套多套各自实现各自逻辑&lt;/p&gt;
&lt;p&gt;前后端分离 第一次请求api返回权限，前端控制能否显示，后端控制能否访问 axios ajax&lt;/p&gt;
&lt;p&gt;页面拦截 控制直接浏览器输入访问非本权限页面&lt;/p&gt;
&lt;p&gt;不存有静态页面，将用户对应的form在初始时存到数据库，用户登录完成根据用户权限在用户打开对应form的时候加载数据库中的form到iframe中&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;documentready和onload&#34;&gt;document.ready和onload&lt;/h3&gt;
&lt;p&gt;JavaScript文档加载完成事件&lt;/p&gt;
&lt;p&gt;页面加载完成有两种事件：&lt;/p&gt;
&lt;p&gt;一是ready，表示文档结构已经加载完成（不包含图片等非文字媒体文件）；&lt;/p&gt;
&lt;p&gt;二是onload，指示页面包含图片等文件在内的所有元素都加载完成。&lt;/p&gt;
&lt;p&gt;Dom Ready是在dom加载完成后就可以直接对dom进行操作，比如一张图片只要&lt;!-- raw HTML omitted --&gt;标签完成，不用等这个图片加载完成，就可以设置图片的宽高的属性或样式等；&lt;/p&gt;
&lt;p&gt;Dom Load是在整个document文档（包括了加载图片等其他信息）加载完成后就可以直接对dom进行操作，比如一张图片要等这个图标加载完成之后才能设置图片的宽高的属性或样式等；&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;设计模式&#34;&gt;设计模式&lt;/h3&gt;
&lt;h4 id=&#34;简单工厂工厂方法抽象工厂的区别&#34;&gt;简单工厂/工厂方法/抽象工厂的区别&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;简单工厂&lt;/strong&gt; &lt;!-- raw HTML omitted --&gt;描述了一个类， 它拥有一个包含大量条件语句的构建方法， 可根据方法的参数来选择对何种产品进行初始化并将其返回。&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;人们通常会将简单工厂与普通的工厂或其它创建型设计模式混淆。 在绝大多数情况下， 简单工厂是引入工厂方法或抽象工厂模式时的一个中间步骤。&lt;/p&gt;
&lt;p&gt;简单工厂通常没有子类。 但当从一个简单工厂中抽取出子类后， 它看上去就会更像经典的工厂方法模式了。顺便提一句， 如果你将一个简单工厂声明为 abstract类型， 它并不会神奇地变成抽象工厂模式。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;工厂方法&lt;/strong&gt; &lt;!-- raw HTML omitted --&gt;是一种创建型设计模式， 其在父类中提供一个创建对象的方法， 允许子类决定实例化对象的类型。&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;如果在基类及其扩展的子类中都有一个构建方法的话， 那它可能就是工厂方法。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;抽象工厂&lt;/strong&gt;  &lt;!-- raw HTML omitted --&gt;是一种创建型设计模式， 它能创建一系列相关或相互依赖的对象， 而无需指定其具体类。&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;什么是 “系列对象”？ 例如有这样一组的对象：  运输工具+ 引擎+ 控制器 。 它可能会有几个变体：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;汽车+ 内燃机+ 方向盘&lt;/li&gt;
&lt;li&gt;飞机+ 喷气式发动机+ 操纵杆&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;如果你的程序中并不涉及产品系列的话， 那就不需要抽象工厂。再次重申， 许多人分不清抽象工厂模式和声明为 abstract 的简单工厂。 不要犯这个错误！&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;排序&#34;&gt;排序&lt;/h3&gt;
&lt;p&gt;每一次排序之后都能确定至少一个元素位置的排序方法包括：&lt;/p&gt;
&lt;p&gt;1.选择排序：每次将最大的数放到最后。所以最大的数排一次序后位置就确定了。&lt;/p&gt;
&lt;p&gt;2.冒泡排序：同选择排序。每一次排序最大的值位置确定。&lt;/p&gt;
&lt;p&gt;3.快排：每一次排序pivot的位置确定。&lt;/p&gt;
&lt;p&gt;4.堆排序：每一次排序时，都是将堆顶的元素和最后一个节点互换，然后调整堆，再将堆大小减1。所以每一次排序堆顶元素确定。&lt;/p&gt;
&lt;p&gt;不能至少确定一个元素的位置的方法包括：&lt;/p&gt;
&lt;p&gt;1.插入排序：不到最后一步求的都是相对位置。&lt;/p&gt;
&lt;p&gt;2.shell排序：对简单插入排序的改进。不到最后一步，是无法确定每个元素位置的。&lt;/p&gt;
&lt;p&gt;3.归并排序：局部有序，并不能确定任一元素在全局的位置。&lt;/p&gt;
&lt;p&gt;4.基数排序，计数排序：利用桶排序的思路，不是基于比较的排序，也无法在一次排序中确定某个元素的位置。因为每一次排序都是整体处理。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;webservicewcfwebapi&#34;&gt;WebService/WCF/WebAPI&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Web Service&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​    它是基于SOAP协议的，数据格式是XML&lt;/p&gt;
&lt;p&gt;​    只支持HTTP协议&lt;/p&gt;
&lt;p&gt;​    它不是开源的，但可以被任意一个了解XML的人使用&lt;/p&gt;
&lt;p&gt;​    它只能部署在IIS上&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;WCF&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​    这个也是基于SOAP的，数据格式是XML&lt;/p&gt;
&lt;p&gt;​    这个是Web Service（ASMX）的进化版，可以支持各种各样的协议，像TCP，HTTP，HTTPS，Named Pipes, MSMQ.&lt;/p&gt;
&lt;p&gt;​    WCF的主要问题是，它配置起来特别的繁琐&lt;/p&gt;
&lt;p&gt;​    它不是开源的，但可以被任意一个了解XML的人使用&lt;/p&gt;
&lt;p&gt;​    它可以部署应用程序中或者IIS上或者Windows服务中&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;WCF Rest&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​    想使用WCF Rest service，你必须在WCF中使用webHttpBindings&lt;/p&gt;
&lt;p&gt;​    它分别用[WebGet]和[WebInvoke]属性，实现了HTTP的GET和POST动词&lt;/p&gt;
&lt;p&gt;​    要想使用其他的HTTP动词，你需要在IIS中做一些配置，使.svc文件可以接受这些动词的请求&lt;/p&gt;
&lt;p&gt;​    使用WebGet通过参数传输数据，也需要配置。而且必须指定UriTemplate&lt;/p&gt;
&lt;p&gt;​    它支持XML、JSON以及ATOM这些数据格式&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Web API&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​    这是一个简单的构建HTTP服务的新框架&lt;/p&gt;
&lt;p&gt;​    在.net平台上Web API 是一个开源的、理想的、构建REST-ful 服务的技术&lt;/p&gt;
&lt;p&gt;​    不像WCF REST Service.它可以使用HTTP的全部特点（比如URIs、request/response头，缓存，版本控制，多种内容格式）&lt;/p&gt;
&lt;p&gt;​    它也支持MVC的特征，像路由、控制器、action、filter、模型绑定、控制反转（IOC）或依赖注入（DI），单元测试。这些可以使程序更简单、更健壮&lt;/p&gt;
&lt;p&gt;​    它可以部署在应用程序和IIS上&lt;/p&gt;
&lt;p&gt;​    这是一个轻量级的框架，并且对限制带宽的设备，比如智能手机等支持的很好&lt;/p&gt;
&lt;p&gt;​    Response可以被Web API的MediaTypeFormatter转换成Json、XML 或者任何你想转换的格式。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;WCF和WEB API我该选择哪个？&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;当你想创建一个支持消息、消息队列、双工通信的服务时，你应该选择WCF&lt;/li&gt;
&lt;li&gt;当你想创建一个服务，可以用更快速的传输通道时，像TCP、Named Pipes或者甚至是UDP（在WCF4.5中）,在其他传输通道不可用的时候也可以支持HTTP。&lt;/li&gt;
&lt;li&gt;当你想创建一个基于HTTP的面向资源的服务并且可以使用HTTP的全部特征时（比如URIs、request/response头，缓存，版本控制，多种内容格式），你应该选择Web API&lt;/li&gt;
&lt;li&gt;当你想让你的服务用于浏览器、手机、iPhone和平板电脑时，你应该选择Web API&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;ajax-httprequest过程&#34;&gt;AJAX HttpRequest过程&lt;/h3&gt;
&lt;p&gt;创建XMLHttpRequest&lt;/p&gt;
&lt;p&gt;连接服务器&lt;/p&gt;
&lt;p&gt;发送请求&lt;/p&gt;
&lt;p&gt;服务器做出响应&lt;/p&gt;
&lt;p&gt;接收响应数据&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;容灾&#34;&gt;容灾&lt;/h3&gt;
&lt;p&gt;软件复制：应用高可用、应用负载均衡、应用配置文件同步、VMware HA&lt;/p&gt;
&lt;p&gt;数据库复制：Oracle DG、MySQL 主从、MSSQL 镜像、日志同步；&lt;/p&gt;
&lt;p&gt;存储复制：EMC Vplex 、IBM SVC、NetAPP MetroCluster。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;aspnet页面生命周期&#34;&gt;ASP.Net页面生命周期&lt;/h3&gt;
&lt;p&gt;每个页面的生命周期为用户的每一次访问，也就是说每一次客户端与服务器之间的一个往返过程.全局变量的生命周期在此之间.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Page_Init();&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Load ViewState and Postback data;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Page_Load();&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Handle control events;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Page_PreRender();&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Page_Render();&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Unload event;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Dispose method called;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id=&#34;sql防注入&#34;&gt;SQL防注入&lt;/h3&gt;
&lt;p&gt;使用orm框架/预编译(参数化查询)&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;缓存和db之间怎么保证数据一致性&#34;&gt;缓存和DB之间怎么保证数据一致性&lt;/h3&gt;
&lt;p&gt;缓存预留模式&lt;/p&gt;
&lt;p&gt;​    读操作：先读缓存，缓存没有的话读DB，然后取出数据放入缓存，最后响应数据&lt;/p&gt;
&lt;p&gt;​    写操作：先更新DB，再删除缓存&lt;/p&gt;
&lt;p&gt;为什么是删除而不是更新呢？&lt;/p&gt;
&lt;p&gt;​    原因很简单，复杂场景下缓存不单单是DB中直接取出来的值，此外更新缓存的代价是很高的，频繁更新的缓存到底会不会被频繁访问到？可能更新到缓存里面的数据都是冷数据，频繁失效，所以一般用到再去加载缓存，lazy加载的思想&lt;/p&gt;
&lt;p&gt;先更新DB，再删除缓存的问题，如果更新DB成功，删除缓存失败会导致数据不一致&lt;/p&gt;
&lt;p&gt;​    所以一般是先删除缓存，再更新DB&lt;/p&gt;
&lt;p&gt;还是有问题，A先删除了缓存，但还没更新DB，这时B过来请求数据，发现缓存没有，去请求DB拿到旧数据，然后再写到缓存，等A更新完了DB之后就会出现缓存和DB数据不一致的情况了&lt;/p&gt;
&lt;p&gt;​    更新数据时，根据数据的唯一标识路由到队列中，读取数据时，如果发现数据不再缓存中，那么把读取数据+更新缓存的操作，根据唯一标识路由之后，也发送到相应队列中。一个队列对应一个工作线程，线程串行拿到队列里的操作一一执行&lt;/p&gt;
&lt;p&gt;带来的新问题：&lt;/p&gt;
&lt;p&gt;​    可能数据更新频繁，导致队列中积压了大量的更新操作，读请求长时间阻塞，所以要压测&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;关键字&#34;&gt;关键字&lt;/h3&gt;
&lt;h4 id=&#34;constreadonly&#34;&gt;const/readonly&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.microsoft.com/zh-cn/dotnet/csharp/language-reference/keywords/readonly&#34;&gt;readonly&lt;/a&gt; 关键字与 &lt;code&gt;const&lt;/code&gt; 关键字不同。 &lt;code&gt;const&lt;/code&gt; 字段只能在该字段的声明中初始化。 字段可以在声明或构造函数中初始化。 因此，根据所使用的构造函数，&lt;code&gt;readonly&lt;/code&gt; 字段可能具有不同的值。 另外，虽然 &lt;code&gt;const&lt;/code&gt; 字段是编译时常量，但 &lt;code&gt;readonly&lt;/code&gt; 字段可用于运行时常量。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;访问修饰符&#34;&gt;访问修饰符&lt;/h3&gt;
&lt;p&gt;public：同一程序集中的任何其他代码或引用该程序集的其他程序集都可以访问该类型或成员。
private：只有同一 class 或 struct 中的代码可以访问该类型或成员。
protected：只有同一 class 或者从该 class 派生的 class 中的代码可以访问该类型或成员。
internal：同一程序集中的任何代码都可以访问该类型或成员，但其他程序集中的代码不可以。
protected internal：该类型或成员可由对其进行声明的程序集或另一程序集中的派生 class 中的任何代码访问。
private protected：只有在其声明程序集内，通过相同 class 中的代码或派生自该 class 的类型，才能访问类型或成员。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;浏览器输入网址enter之后发生了什么&#34;&gt;浏览器输入网址，Enter之后发生了什么？&lt;/h3&gt;
&lt;p&gt;输入网址后DNS(域名解析协议)将网址转换成对应的IP，然后网络在路由表中查找最适合一条路由连接到对应的服务器ip，也就是刚刚转换的ip。此时，传输层tcp经过三次握手后简历连接，服务器收到http请求(get/post)等后，进行相应的处理并把结果数据返回到浏览器上，此时输入网址后对应的信息就会显示出来。&lt;/p&gt;
&lt;hr&gt;
- https://www.openheart.icu/dotnet/dot-net-interview/ - ALL RIGHTS RESERVED KRIS NIE</description>
        </item>
    
    
  </channel>
</rss> 